/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:28:49 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      ClassWriter classWriter1 = new ClassWriter(24117248);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter1, 1, "RuntimeVisibleParameterAnnotations", "AnnotationDefault", (String) null, (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-268435456));
      classWriter0.visitInnerClass("wIc(6QYr}$ vr%\"2>_", "wIc(6QYr}$ vr%\"2>_", "", (-268435456));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "_a", "wIc(6QYr}$ vr%\"2>_", "wIc(6QYr}$ vr%\"2>_", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int[] intArray0 = new int[18];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 1);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-2997), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2997
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-268435456));
      classWriter0.visitInnerClass("$v(oC", "_a", "", (-268435456));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "_a", "_a", "_a", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-2154);
      intArray0[2] = 24;
      intArray0[3] = (-268435456);
      MethodWriter.getNewOffset(intArray0, intArray0, (-1868), 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-268435456));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -268435456
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&", "\"73K|~)pQJ", "&", stringArray0, true, true);
      methodWriter0.visitFieldInsn(0, "\"73K|~)pQJ", "&", "&");
      Label label0 = new Label();
      label0.getFirst();
      byte byte0 = (byte)3;
      classWriter0.toByteArray();
      methodWriter0.visitMethodInsn((byte)3, "&", "&", "zm[");
      // Undeclared exception!
      try { 
        label0.getOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Label offset position has not been resolved yet
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1414);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2322), "_a", "_a", "&", stringArray0, false, false);
      classWriter0.newUTF8("3=3c+%Jx");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte((-2527));
      ByteVector byteVector2 = byteVector1.putShort(2);
      methodWriter0.put(byteVector2);
      methodWriter0.visitIincInsn(1777, (-195));
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1423);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1840700267), "jW|^eLI", "FH4D6)", "qOw@KZUPVi58TSD", stringArray0, false, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 182, (-1868));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      int int0 = Member.DECLARED;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-3009), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3009
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048576));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\"73K|~)ppQJ";
      stringArray0[1] = "\"73K|~)ppQJ";
      stringArray0[2] = "0wwF2ai6.jXul<%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)ppQJ", "\"73K|~)ppQJ", "0wwF2ai6.jXul<%", stringArray0, true, false);
      Attribute attribute0 = new Attribute("\"73K|~)ppQJ");
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[3] = 95;
      ClassWriter classWriter0 = new ClassWriter(95);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681264), "Vd=:X *G_4;:&QX_", "<init>", "<init>", stringArray0, false, false);
      methodWriter0.visitIincInsn((-2073681264), 1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "8Z", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681245));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3096, "]VO=oCIO 6", "]VO=oCIO 6", "`M", (String[]) null, false, false);
      methodWriter0.visitMethodInsn(1, "]VO=oCIO 6", "`M", "org.objectweb.asm.jip.ClassReader");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "j";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleAnnotations", "", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitLdcInsn("");
      methodWriter0.visitInsn(4);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1414);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "<init>", "qOw@KZUPVi58TSD", "<init>", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, (-1696));
      Label label0 = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("jW|^eLI", (String) null, "java/lang/Throwable", (Label) null, (Label) null, 25165824);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(257);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "6h2IB=.-t@8b", "6h2IB=.-t@8b", ",.([J`rE/[B7Z#AcY", stringArray0, false, false);
      methodWriter0.getSize();
      Label label0 = new Label();
      label0.info = (Object) ",.([J`rE/[B7Z#AcY";
      Label label1 = label0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitIincInsn((-1518), (-1518));
      Attribute attribute0 = new Attribute("Exceptions");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMultiANewArrayInsn("Exceptions", 1);
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "Exceptions");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Exceptions", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "57i*kZZ5d}nx2^jqs");
      ClassWriter classWriter0 = new ClassWriter((-2073681275));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=)c,[^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3422), "eKQfS`8+25l^7m0k@", "=)c,[^", "eKQfS`8+25l^7m0k@", stringArray0, false, false);
      Integer integer0 = new Integer((-3422));
      Integer integer1 = new Integer((-2073681275));
      methodWriter0.getSize();
      methodWriter0.visitMultiANewArrayInsn("StackMapTable", 2);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3854));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "'tac1M10", "'tac1M10", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, ".class", "<init>", "'tac1M10");
      methodWriter0.visitIntInsn((byte)12, 1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("<init>");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitIincInsn((-1518), (-1518));
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label1;
      labelArray0[1] = label1;
      labelArray0[2] = label1;
      labelArray0[3] = label0;
      labelArray0[4] = label1;
      methodWriter0.classReaderLength = 2;
      methodWriter0.visitTableSwitchInsn((-310), 0, label1, labelArray0);
      methodWriter0.visitLabel(label0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String string0 = "qOw@KZUPVi58TSD";
      String string1 = "\"73K|~)pQJ";
      String string2 = "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE";
      String[] stringArray0 = null;
      boolean boolean0 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2798), "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", (String[]) null, true, true);
      methodWriter0.visitIincInsn(1011, 1011);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(186, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = (-2152);
      intArray0[3] = (-2152);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("<iXit");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "oea";
      stringArray0[1] = "-jtOm}P:(BU$";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "\"73K|~)pQJ", "\"73K|~)pQJ", "oea", stringArray0, true, false);
      classWriter0.toByteArray();
      methodWriter0.visitMultiANewArrayInsn("\"73K|~)pQJ", 653);
      methodWriter0.visitIntInsn(2610, (-2152));
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2702, "nds\"", "H>E)1,fv$#B` 8vuF", "<init>", stringArray0, true, false);
      methodWriter0.visitIntInsn(1535, (byte) (-11));
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("pb@)06zn.4<z/AH{", true);
      String string0 = "Y)VB7$&2%\"_-\\uG<";
      methodWriter0.visitMethodInsn(4980, string0, "pb@)06zn.4<z/AH{", "pb@)06zn.4<z/AH{");
      methodWriter0.visitFrame(4980, (-65), stringArray0, (byte)13, stringArray0);
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFuLoZe$I1=}F", "\"73K|~)pQJ", "rkN_t0+", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 285212681);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(1011, "|$VLH' 1-2d!@Bs", "|$VLH' 1-2d!@Bs", "|$VLH' 1-2d!@Bs");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(187, "AU$=xFuLoZe$I1=}F", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&", "\"73K|~)pQJ", "&", stringArray0, false, true);
      methodWriter0.visitFieldInsn((-2073681264), "\"73K|~)pQJ", "&", "t$m99L_C7`|y\f>");
      Label label0 = new Label();
      int[] intArray0 = new int[0];
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 1079);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EnclosingMethod");
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      methodWriter0.classReaderLength = 285212675;
      classWriter0.invalidFrames = false;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 285212675, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitFrame(0, (-1344), stringArray0, 0, stringArray0);
      Label label1 = label0.getFirst();
      Label label2 = new Label();
      methodWriter0.visitLocalVariable("o", "Exceptions", (String) null, label2, label1, (-1000));
      methodWriter0.visitLabel(label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\"73K|~)pQJ";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "2$TcDq";
      stringArray0[3] = "2$TcDq";
      stringArray0[4] = "2$TcDq";
      stringArray0[5] = "2$TcDq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"73K|~)pQJ", "\"73K|~)pQJ", "\"73K|~)pQJ", stringArray0, true, true);
      Label label0 = new Label();
      label0.position = (-2073681264);
      methodWriter0.visitJumpInsn(167, label0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitFrame(1, 180, stringArray0, (-1191), stringArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitInsn(16);
      Label label0 = new Label();
      int[] intArray0 = new int[3];
      intArray0[0] = 16;
      intArray0[1] = 76;
      intArray0[2] = (-1561);
      Label[] labelArray0 = new Label[2];
      Label label1 = new Label();
      labelArray0[0] = label1;
      labelArray0[1] = label0;
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitMethodInsn((-362), "java/lang/Throwable", "<init>", "<init>");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048576));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "0wwF2ai6.jXul<%";
      stringArray0[1] = "\"73K|~)ppQJ";
      stringArray0[2] = "0wwF2ai6.jXul<%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)ppQJ", "\"73K|~)ppQJ", "0wwF2ai6.jXul<%", stringArray0, true, false);
      Attribute attribute0 = new Attribute("\"73K|~)ppQJ");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("LvA+5U]7^/e", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&", "\"73K|~)pQJ", "&", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-2073681264), "\"73K|~)pQJ", "&", "t$m99L_C7`|y\f>");
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLabel(label0);
      Label label2 = new Label();
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 1079);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitIincInsn((-1518), (-1518));
      methodWriter0.classReaderLength = 2;
      methodWriter0.visitLabel(label1);
      methodWriter0.visitVarInsn(1, (-310));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(\"Qm'{'Ijw#";
      stringArray0[1] = "qw@KZUPVKi58TSD";
      stringArray0[2] = "qw@KZUPVKi58TSD";
      stringArray0[3] = "qw@KZUPVKi58TSD";
      stringArray0[4] = "qw@KZUPVKi58TSD";
      stringArray0[5] = "qw@KZUPVKi58TSD";
      classWriter0.index = 1011;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "qw@KZUPVKi58TSD", "qw@KZUPVKi58TSD", "(\"Qm'{'Ijw#", stringArray0, false, false);
      methodWriter0.visitIntInsn(5266, 244);
      methodWriter0.visitLdcInsn("qw@KZUPVKi58TSD");
      methodWriter0.visitVarInsn(25, 244);
      methodWriter0.visitInsn(1016);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$=xFLoZye+I1=}F";
      stringArray0[1] = "qOw@KZUPVi58TSD";
      stringArray0[2] = "qOw@KZUPVi58TSD";
      stringArray0[3] = "qOw@KZUPVi58TSD";
      stringArray0[4] = "-jtOm}P{:(qBU$";
      stringArray0[5] = "qOw@KZUPVi58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      classWriter0.toByteArray();
      methodWriter0.visitVarInsn(74, 1351);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(187, "$U$=xFLoZye+I1=}F", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2702, "nds\"", "H>E)1,fv$#B` 8vuF", "nds\"", stringArray0, true, false);
      methodWriter0.visitIntInsn(1535, (byte) (-11));
      classWriter0.visitAnnotation("pb@)06zn.4<z/AH{", true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitFieldInsn(1535, "H>E)1,fv$#B` 8vuF", "pb@)06zn.4<z/AH{", "nds\"");
      methodWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putByte(3);
      methodWriter0.put(byteVector1);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&", "\"73K|~)pQJ", "&", stringArray0, true, true);
      methodWriter0.visitTypeInsn((-2378), "org.objectweb.asm.jip.Frame");
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitInsn(1);
      methodWriter0.visitTypeInsn((-2378), "\"73K|~)pQJ");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3098));
      int int0 = 1011;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFuLoZe$I1=}F", "\"73K|~)pQJ", "rkN_t0+", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, (-3098));
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(1011, "|$VLH' 1-2d!@Bs", "zcKS'JMRy^7TyF`w87I", "|$VLH' 1-2d!@Bs");
      methodWriter0.visitJumpInsn(70, label0);
      methodWriter0.visitTypeInsn(187, "nC5gE6");
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(1418);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1418
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(40);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1812), "eKQf8@25l^7m0k@", "<init>", "eKQf8@25l^7m0k@", stringArray0, false, false);
      Attribute attribute0 = new Attribute("<init>");
      byte[] byteArray0 = new byte[0];
      attribute0.value = byteArray0;
      methodWriter0.visitAttribute(attribute0);
      Integer integer0 = Integer.valueOf(1);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitFrame(255, 54, stringArray0, (-1812), stringArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      methodWriter0.visitFieldInsn((-1561), "<init>", "<init>", "<init>");
      Label label0 = new Label();
      Label label1 = new Label();
      classWriter0.toByteArray();
      label0.toString();
      label1.successor = label0;
      Label label2 = new Label();
      methodWriter0.visitMaxs(1943, 1943);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681286));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"73K|~)pQi");
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.lastField = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2632), "X)gq[?\"oR&_A", "X)gq[?\"oR&_A", "X)gq[?\"oR&_A", (String[]) null, true, false);
      methodWriter0.visitFieldInsn(107, "X)gq[?\"oR&_A", "X)gq[?\"oR&_A", "L<2P2`Q;");
      methodWriter0.visitIincInsn((-2073681286), 2);
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter((ClassReader) null, (-2632));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = (-2073681264);
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFLoZe$I1=}F", "\"73K|~)pQJ", "&", stringArray0, true, true);
      methodWriter0.visitMethodInsn((-2378), "d)}~ntw", "-hlMapS2", "-hlMapS2");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2378), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3098));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFuLoZe$I1=}F", "\"73K|~)pQJ", "rkN_t0+", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 1);
      Label label0 = new Label();
      methodWriter0.visitFieldInsn(1, "LocalVariableTable", "\"73K|~)pQJ", "|$VLH' 1-2d!@Bs");
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-3098), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3098
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "p'6cwAb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 167, "RuntimeVisibleParameterAnnotations", "RuntimeInvisibleAnnotations", "", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-414), "p'6cwAb", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048576));
      String string0 = "\"73K|~)ppQJ";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\"73K|~)ppQJ";
      stringArray0[1] = "\"73K|~)ppQJ";
      stringArray0[2] = "0wwF2ai6.jXul<%";
      classWriter0.newClassItem("P#");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)ppQJ", "\"73K|~)ppQJ", "0wwF2ai6.jXul<%", stringArray0, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-2073681246), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2073681246
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681293));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\"73K|~)pQJ";
      stringArray0[1] = "\"73K|~)pQJ";
      stringArray0[2] = "\"73K|~)pQJ";
      stringArray0[3] = "qOw@KZUPVi58TSD";
      stringArray0[4] = "qOw@KZUPVi58TSD";
      stringArray0[5] = "qOw@KZUPVi58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681293), "\"73K|~)pQJ", "\"73K|~)pQJ", "qOw@KZUPVi58TSD", stringArray0, false, false);
      methodWriter0.visitIntInsn((-2073681293), (-2073681293));
      methodWriter0.visitLdcInsn("\"73K|~)pQJ");
      stringArray0[5] = "qOw@KZUPVi58TSD";
      classWriter0.addUninitializedType("StackMapTable", 2);
      Object[] objectArray0 = new Object[18];
      objectArray0[2] = (Object) "\"73K|~)pQJ";
      methodWriter0.visitVarInsn(2338, 26);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-2073681275));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=)c,[^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1778), "eKQfS`8+25l^7m0k@", "=)c,[^", "eKQfS`8+25l^7m0k@", stringArray0, false, false);
      Integer integer0 = new Integer((-1778));
      Integer.compare(22, 186);
      Integer integer1 = new Integer((-2073681275));
      Integer.compare((-1778), (-2073681275));
      methodWriter0.visitInsn(22);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "LocalVariableTypeTable", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "\"73K|~)pQJ", "", stringArray0, false, false);
      methodWriter0.visitFieldInsn((-2073681264), "\"73K|~)pQJ", "", "t$m99L_C7`|y\f>");
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLabel(label0);
      Label label2 = new Label();
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 1079);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      methodWriter0.visitFieldInsn(0, "<init>", "<init>", "<init>");
      Label label0 = new Label();
      Label label1 = new Label();
      label0.successor = label1;
      classWriter0.toByteArray();
      label0.toString();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitLineNumber(1, label1);
      methodWriter1.getSize();
      Frame frame0 = new Frame();
      Label label2 = frame0.owner;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$=xFLoZye+I1=}F";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "qOw@KZUPVi/58TSD";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-1358), "qOw@KZUPVi/58TSD", "qOw@KZUPVi/58TSD", "<init>");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = 1011;
      String[] stringArray0 = new String[6];
      Item item0 = classWriter0.newInteger((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[0] = "$U$=xFLoZye+I1=}F";
      stringArray0[1] = "qOw@KZUPVi58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi58TSD";
      stringArray0[4] = "-jtOm}P{:(qBU$";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      methodWriter0.visitVarInsn(74, (-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2073681264), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2073681264
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFieldInsn(0, "Ljava/lang/Synthetic;", ".jar", ".jar");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("<init>", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label1, label2);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitIincInsn(1, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "&", "\"73K|~)pQJ", "&", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681264), "\"73K|~)pQJ", "&", "&");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      methodWriter0.visitFrame((-2073681264), 184, stringArray0, 851, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFuLoZe$I1=}F", "\"73K|~)pQJ", "rkN_t0+", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(1011, 285212681);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFieldInsn(1011, "|$VLH' 1-2d!@Bs", "zcKS'JMRy^7TyF `w87I", "|$VLH' 1-2d!@Bs");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(187, "yp5sN6");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(187, "AU$=xFuLoZe$I1=}F", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681292));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      Item item0 = classWriter0.newMethodItem("\"73K|~)pQJ", "zm=v@q7v9j9ZLUWrFF", "zm=v@q7v9j9ZLUWrFF", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      stringArray0[0] = "zm=v@q7v9j9ZLUWrFF";
      stringArray0[1] = "\"73K|~)pQJ";
      stringArray0[2] = "\"73K|~)pQJ";
      stringArray0[3] = "zm=v@q7v9j9ZLUWrFF";
      stringArray0[4] = "zm=v@q7v9j9ZLUWrFF";
      stringArray0[5] = "\"73K|~)pQJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)pQJ", "\"73K|~)pQJ", "zm=v@q7v9j9ZLUWrFF", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      Item item1 = classWriter0.newClassItem("zm=v@q7v9j9ZLUWrFF");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFrame(2, (-2073681292), stringArray0, 256, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("\"73K|~)pQJ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("zm=v@q7v9j9ZLUWrFF", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(\"Qm'{'Ijw#";
      stringArray0[1] = "qw@KZU~VBi-58TSD";
      stringArray0[2] = "qw@KZU~VBi-58TSD";
      stringArray0[3] = "qw@KZU~VBi-58TSD";
      stringArray0[4] = "qw@KZU~VBi-58TSD";
      stringArray0[5] = "qw@KZU~VBi-58TSD";
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      classWriter0.index = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681264), "\"3KO)p", "\"3KO)p", "(\"Qm'{'Ijw#", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(0, "qw@KZU~VBi-58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(5266, 244);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(244, "qw@KZU~VBi-58TSD", "\"3KO)p", "qw@KZU~VBi-58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("qw@KZU~VBi-58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(0, 244);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "nds\"", "\"73K|~)pQJ", "nds\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681228), "\"73K|~)pQJ", "nds\"", "t$m99L_C7`|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-117);
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)57, 3627);
      assertEquals((-40), byteArrayInputStream0.available());
      assertNotNull(byteArrayInputStream0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMultiANewArrayInsn("nds\"", 1079);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "nds\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((byte)57, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(15, (byte)57);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681228), "nds\"", "X)gq[?\"oR&_A", "nds\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681228), "X)gq[?\"oR&_A", "nds\"", "t$m99L_C7`|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(186, (-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass("{'\"CG-#B)A<b!g", "t$m99L_C7`|y\f>", "{'\"CG-#B)A<b!g", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      int[] intArray0 = new int[8];
      intArray0[2] = 186;
      intArray0[7] = 1;
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitVarInsn(172, 334);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "(\"Qm'{'Ijw#";
      stringArray0[1] = "qw@KZUPVKi58TSD";
      stringArray0[2] = "qw@KZUPVKi58TSD";
      stringArray0[3] = "qw@KZUPVKi58TSD";
      stringArray0[4] = "qw@KZUPVKi58TSD";
      stringArray0[5] = "qw@KZUPVKi58TSD";
      classWriter0.index = 1011;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"3KO)p", "\"3KO)p", "(\"Qm'{'Ijw#", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newClassItem("(\"Qm'{'Ijw#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      methodWriter0.visitTypeInsn(280, "qw@KZUPVKi58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = null;
      methodWriter0.visitVarInsn(25, 280);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-1802275305));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitIincInsn((-1518), (-1518));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertSame(label0, label2);
      assertSame(label0, label1);
      assertSame(label2, label0);
      assertSame(label2, label1);
      
      methodWriter0.visitLocalVariable("Exceptions", "Exceptions", "Exceptions", label2, label2, (-1518));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label2);
      assertSame(label0, label1);
      assertSame(label2, label0);
      assertSame(label2, label1);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      methodWriter0.visitIntInsn((-1518), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn((-1518), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitJumpInsn(1, label2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label2);
      assertSame(label0, label1);
      assertSame(label2, label0);
      assertSame(label2, label1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label3 = new Label();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label2));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      
      Label label4 = label1.successor;
      assertNull(label4);
      
      Label label5 = label0.getFirst();
      assertNotNull(label5);
      assertSame(label5, label2);
      assertNotSame(label5, label3);
      assertSame(label5, label0);
      assertSame(label5, label1);
      assertNotSame(label0, label3);
      assertSame(label0, label5);
      assertSame(label0, label2);
      assertSame(label0, label1);
      assertFalse(label5.equals((Object)label3));
      assertFalse(label0.equals((Object)label3));
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      Label label6 = edge0.successor;
      assertNull(label6);
      
      Frame frame0 = label2.frame;
      assertNull(frame0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",+[");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-1348));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "qw@KZUPi/N58TSD";
      stringArray0[1] = "qw@KZUPi/N58TSD";
      stringArray0[2] = "qw@KZUPi/N58TSD";
      stringArray0[3] = "qw@KZUPi/N58TSD";
      stringArray0[4] = "qw@KZUPi/N58TSD";
      stringArray0[5] = "qw@KZUPi/N58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"K|~)pQJ", "\"K|~)pQJ", ",+[", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      methodWriter0.visitTypeInsn(1, "qw@KZUPi/N58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(191, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.info = (Object) 1255;
      methodWriter0.visitMaxs(191, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label2 = label1.getFirst();
      assertNotNull(label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLineNumber(2853, label2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label1.equals((Object)label0));
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn(1305, 2769);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1305
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681293));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\"73K|~)pQJ";
      stringArray0[1] = "\"73K|~)pQJ";
      stringArray0[2] = "\"73K|~)pQJ";
      stringArray0[3] = "qOw@KZUPVi58TSD";
      stringArray0[4] = "qOw@KZUPVi58TSD";
      stringArray0[5] = "qOw@KZUPVi58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681293), "\"73K|~)pQJ", "\"73K|~)pQJ", "qOw@KZUPVi58TSD", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn((-2073681293), (-2073681293));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("\"73K|~)pQJ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[5] = "qOw@KZUPVi58TSD";
      int int0 = classWriter0.addUninitializedType("StackMapTable", 2);
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[18];
      objectArray0[2] = (Object) "\"73K|~)pQJ";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-2073681293), stringArray0, 4, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "byt";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "2$TcDq";
      stringArray0[3] = "2$TcDq";
      stringArray0[4] = "2$TcDq";
      stringArray0[5] = "2$TcDq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"73K|~)pQJ", "\"73K|~)pQJ", "byt", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(701, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitIntInsn(774, 169);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AU$=xFLoZe$I1=}F", "\"73K|~)pQJ", "&", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681264), "~-j@a?4~^]", "&", "t$m99L_C7`|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "lXnds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "lXnds\"", "\"73K|~)ppQJ", "lXnds\"", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMultiANewArrayInsn("lXnds\"", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn((byte)98, ")jv");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.visitSubroutine(label0, 1, (byte)98);
      methodWriter0.visitLocalVariable("RuntimeInvsibeParameterAnnotation", "CLx F[", "\"73K|~)ppQJ", label0, label0, (byte)98);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      methodWriter0.visitInsn((byte)98);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681228));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "nds\"", "\"73K|~)pQJ", "nds\"", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681228), "\"73K|~)pQJ", "nds\"", "t$m99L_C7`|y\f>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("{'\"*GX#B)A<b!g'", "t$m99L_C7`|y\f>", "{'\"*GX#B)A<b!g'", 1324);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("nds\"", "[V5xvv>S #3j]0", "{'\"*GX#B)A<b!g'", label0, label0, (-2073681228));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter0.visitVarInsn(1, 1776);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "nds\"", "\"73K|~)pQJ", "nds\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681264), "\"73K|~)pQJ", "nds\"", "t$m99L_7S|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label0.outputStackMax = 2;
      label1.addToSubroutine(2, 1);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      
      label1.line = (-2073681264);
      label1.status = (-1448);
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label2, label0, "nds\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      methodWriter0.visitIincInsn(16, (-46));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(16, 247);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-2073681292);
      ClassWriter classWriter0 = new ClassWriter((-2073681292));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[5];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "\"73K|~)pQJ";
      stringArray1[1] = "\"73K|~)pQJ";
      stringArray1[2] = "8";
      stringArray1[3] = "\"73K|~)pQJ";
      stringArray1[4] = "\"73K|~)pQJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 125, "\"73K|~)pQJ", "\"73K|~)pQJ", "\"73K|~)pQJ", stringArray1, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      methodWriter0.visitIntInsn(125, 125);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      classWriter0.visitOuterClass("8", "nds\"", "\"73K|~)pQJ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("\"73K|~)pQJ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray1, stringArray0);
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      int int1 = 3359;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      label0.info = null;
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      Object object2 = label1.info;
      assertNull(object2);
      
      label1.info = (Object) "\"73K|~)pQJ";
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertFalse(boolean0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(68, 1234, label1, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label1, label0);
      assertNotSame(stringArray1, stringArray0);
      assertSame(label0, label1);
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(3359, 4009);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1341));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.visitOuterClass("0C@", "0C@", "0C@");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "qw@KZUPi/N58TSD";
      stringArray0[1] = "qw@KZUPi/N58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "]y\"K|~)pQJ";
      stringArray0[4] = "<init>";
      stringArray0[5] = "qw@KZUPi/N58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "]y\"K|~)pQJ", "]y\"K|~)pQJ", "<init>", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = "java/lang/Throwable";
      methodWriter0.visitFieldInsn(2, "qw@KZUPi/N58TSD", "java/lang/Throwable", "qw@KZUPi/N58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitTableSwitchInsn(1, 2, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("]y\"K|~)pQJ", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFieldInsn(0, ")ni", "qw@KZUPi/N58TSD", "3y&h)a*U/DN\"W}9");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(0, " +I?W5d'p", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = 1011;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$=xFLoZye+I1=}F";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "qOw@KZUPVi/58TSD";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter0.visitTypeInsn(132, "qOw@KZUPVi/58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "eKQf8+25l^7m0k@");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1011, 1011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1341));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "qw@KZUPi/N58TSD";
      stringArray0[1] = "qw@KZUPi/N58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qw@KZUPi/N58TSD";
      stringArray0[4] = "<init>";
      stringArray0[5] = "qw@KZUPi/N58TSD";
      int int0 = classWriter0.newField("v&H`cNXJ-", "<init>", "qw@KZUPi/N58TSD");
      assertEquals(6, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"K|~)pQJ", "\"K|~)pQJ", "<init>", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.classReaderOffset = 67;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-59);
      label0.info = (Object) (-1341);
      methodWriter0.visitVarInsn(1, 67);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(6, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(int1 == int0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("@y2|s*qV");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderLength = 0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFieldInsn(0, "Ljava/lang/Synthetic;", ".jar", ".jar");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("<init>", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      
      Label label3 = new Label();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label2));
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label0, label3);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label3));
      
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label0, label3);
      assertNotSame(label1, label3);
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label3));
      assertFalse(label1.equals((Object)label3));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      
      methodWriter0.visitIincInsn(1, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label2, label3, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label0, label3);
      assertNotSame(label2, label1);
      assertNotSame(label2, label3);
      assertNotSame(label2, label0);
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      assertNotSame(label3, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label3));
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label3));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label3.equals((Object)label2));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681228), "nds\"", "X)gq[?\"oR&_A", "nds\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681228), "X)gq[?\"oR&_A", "nds\"", "t$m99L_C7`|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(186, (-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass("{'\"CG-#B)A<b!g", "t$m99L_C7`|y\f>", "{'\"CG-#B)A<b!g", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L22", string0);
      assertNotNull(string0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "nds\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      int[] intArray0 = new int[8];
      intArray0[2] = 186;
      intArray0[6] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0, 186, 0, 0, 0, 2, 0}, intArray0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      classWriter0.firstMethod.visitLineNumber((-2073681228), label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681286));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "<init>";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "-jtOm}P{:(qBU$";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      methodWriter0.visitTypeInsn(132, "qOw@KZUPVi/58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "eKQf8+25l^7m0k@");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitMaxs(1011, 1011);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("eKQf8+25l^7m0k@", (String) null, "$U$=xFLoZye+I1=}F", label1, label1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"7A3K|+)pQi");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"7A3K|+)pQi");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, "\"7A3K|+)pQi", "\"7A3K|+)pQi", "\"7A3K|+)pQi", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "\"7A3K|+)pQi", "\"7A3K|+)pQi", "L<2P2`Q;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("L<2P2`Q;");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T5cM6;#N-c=td8");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = ClassReader.FRAMES;
      assertTrue(boolean3);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = 2;
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 2;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new int[] {1, 2}, intArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "byte";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "2$TcDq";
      stringArray0[3] = "2$TcDq";
      stringArray0[4] = "2$TcDq";
      stringArray0[5] = "2$TcDq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"73K|~)pQJ", "\"73K|~)pQJ", "byte", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 180, stringArray0, (-1188), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681286));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "<init>";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "-jtOm}P{:(qBU$";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter0.visitTypeInsn(1, "qOw@KZUPVi/58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.exceptionCount = 2;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(187, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2005789996), "qOw@KZUPVi/58TSD", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)1}, byteArray0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$=xFLoZye+I1=}*";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "<init>";
      stringArray0[3] = "2$TcDq";
      stringArray0[4] = "<init>";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}*", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTypeInsn(2879, "2$TcDq");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(22, 22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      Item item0 = classWriter0.newClassItem("LAU$=xFuL]oZ$I1=}F");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      int int1 = classWriter0.addType("LAU$=xFuL]oZ$I1=}F");
      assertEquals(1, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LAU$=xFuL]oZ$I1=}F";
      stringArray0[1] = "LAU$=xFuL]oZ$I1=}F";
      stringArray0[2] = "$U$=xFLoZye+I1=}F";
      stringArray0[3] = "$U$=xFLoZye+I1=}F";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 538, "$U$=xFLoZye+I1=}F", "$U$=xFLoZye+I1=}F", "oOedi%htT<Hq!A|A", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.MethodWriter");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      classWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn((-1929));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1, (-1690), stringArray0, (-1690), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs((-3540), (-3223));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-jtOm}P{:(qBU$";
      stringArray0[1] = "\"3xK)QJ";
      stringArray0[2] = "$U$=xFLoZye+I1=}F";
      stringArray0[3] = "$U$=xFLoZye+I1=}F";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-568), "-jtOm}P{:(qBU$", "-jtOm}P{:(qBU$", "oOedi%htT<Hq!A|A", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn((-568), "$U$=xFLoZye+I1=}F", "\"3xK)QJ", "Osk?;t$-jt");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "$U$=xFLoZye+I1=}F", "L$vEH9=6JneA-wx", "L$vEH9=6JneA-wx");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681292));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      Item item0 = classWriter0.newClassItem("q0w@KZUPV/{8TS");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      stringArray0[0] = "q0w@KZUPV/{8TS";
      stringArray0[1] = "\"73K|~)pQJ";
      stringArray0[2] = "\"73K|~)pQJ";
      stringArray0[3] = "q0w@KZUPV/{8TS";
      stringArray0[4] = "q0w@KZUPV/{8TS";
      stringArray0[5] = "\"73K|~)pQJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)pQJ", "\"73K|~)pQJ", "q0w@KZUPV/{8TS", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      Item item1 = classWriter0.newClassItem("q0w@KZUPV/{8TS");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertSame(item1, item0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFrame((-2073681292), 2, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, (-2073681292), stringArray0, 256, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-1561), "5.jar", "<init>", "5.jar");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      classWriter0.visit(124, 74, "RuntimeInvisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "s.>$", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("RuntimeInvisibleParameterAnnotations", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMaxs((-1561), (-1561));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(4, (-1561), stringArray0, 74, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.thisName = "LAU$=xvuL]oZ$I1=}F";
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      Item item0 = classWriter0.newClassItem("LAU$=xvuL]oZ$I1=}F");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LAU$=xvuL]oZ$I1=}F";
      stringArray0[1] = "LAU$=xvuL]oZ$I1=}F";
      stringArray0[2] = "LAU$=xvuL]oZ$I1=}F";
      int int1 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertEquals(8388608, int1);
      assertFalse(int1 == int0);
      
      classWriter0.version = 20;
      stringArray0[3] = "LAU$=xvuL]oZ$I1=}F";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 533, "$U$=xFLoZye+I1=}F", "$U$=xFLoZye+I1=}F", "oOedi%htTsHq!A|A", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      methodWriter0.visitInsn(58);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = 24;
      methodWriter0.visitFrame((-2), 58, stringArray0, 24, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int3 = methodWriter0.getSize();
      assertEquals(65, int3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-2), 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681286));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "qOw@KZUPVi/58TSD";
      String[] stringArray0 = new String[6];
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      stringArray0[0] = "qOw@KZUPVi/58TSD";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "r";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)pQJ", "\"73K|~)pQJ", "qOw@KZUPVi/58TSD", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      Item item1 = classWriter0.newClassItem("qOw@KZUPVi/58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      methodWriter0.visitTypeInsn(132, "qOw@KZUPVi/58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "Deprecated");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      assertNotSame(label0, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label0.equals((Object)label1));
      
      String string1 = "LocalVariableTypeTable";
      label0.inputStackTop = 2;
      // Undeclared exception!
      try { 
        label0.addToSubroutine(829L, (-2073681286));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.index = 2;
      classWriter0.thisName = "LAU$=xvuL]oTZ$I1=}F";
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      Item item0 = classWriter0.newClassItem("LAU$=xvuL]oTZ$I1=}F");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LAU$=xvuL]oTZ$I1=}F";
      stringArray0[1] = "oOedi%htTsHq!A|A";
      stringArray0[2] = "oOedi%htTsHq!A|A";
      classWriter0.version = (-30);
      stringArray0[3] = "LAU$=xvuL]oTZ$I1=}F";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 533, "$U$=xFLoZye+I1=}F", "$U$=xFLoZye+I1=}F", "oOedi%htTsHq!A|A", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.index = 533;
      classWriter0.index = (-3);
      methodWriter0.visitFieldInsn(817, "2Gh,b$", "$U$=xFLoZye+I1=}F", "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2, stringArray0, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("2Gh,b$", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter0.visitFieldInsn(179, "#^QX:8<9:On", "#^QX:8<9:On", "LAU$=xvuL]oTZ$I1=}F");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1358));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = 1011;
      Item item0 = classWriter0.newFloat((-703.5718F));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$=xFLoZye+I1=}F";
      stringArray0[1] = "qOw@KZUPVi/58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qOw@KZUPVi/58TSD";
      stringArray0[4] = "qOw@KZUPVi/58TSD";
      stringArray0[5] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1011, "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$=xFLoZye+I1=}F", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      methodWriter0.classReaderLength = (-793);
      methodWriter0.visitTypeInsn(120, "qOw@KZUPVi/58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.inputStackTop = 1247;
      label1.status = 1011;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(191, "2%)2bv", "$U$=xFLoZye+I1=}F", "qOw@KZUPVi/58TSD");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "eKQf8+25l^7m0k@");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label1, label0);
      assertNotSame(label0, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label0.equals((Object)label1));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1011, 1011);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.index = 2;
      classWriter0.thisName = "LAU$=xvuL]oTZ$I1=}F";
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LAU$=xvuL]oTZ$I1=}F";
      stringArray0[1] = "LAU$=xvuL]oTZ$I1=}F";
      stringArray0[2] = "LAU$=xvuL]oTZ$I1=}F";
      int int1 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertEquals(8388608, int1);
      assertFalse(int1 == int0);
      
      classWriter0.version = (-30);
      stringArray0[3] = "LAU$=xvuL]oTZ$I1=}F";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 533, "$U$=xFLoZye+I1=}F", "$U$=xFLoZye+I1=}F", "oOedi%htTsHq!A|A", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-30), "LAU$=xvuL]oTZ$I1=}F", "LAU$=xvuL]oTZ$I1=}F", "LAU$=xvuL]oTZ$I1=}F");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.key2;
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      methodWriter0.visitFrame((-30), 1292, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(186, "?r#?-%id'Q^", "LAU$=xvuL]oTZ$I1=}F", "oOedi%htTsHq!A|A");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "57i*kZZ5d}nx2^jqs");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-2073681275));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=)c,[^";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2919), "=)c,[^", ",", "57i*kZZ5d}nx2^jqs", "=)c,[^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(fieldWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3406), "57i*kZZ5d}nx2^jqs", "=)c,[^", "57i*kZZ5d}nx2^jqs", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Integer integer0 = new Integer((-3406));
      assertEquals((-3406), (int)integer0);
      assertNotNull(integer0);
      
      classWriter0.visitSource("=)c,[^", "StackMapTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer1 = new Integer((-2073681275));
      assertEquals((-2073681275), (int)integer1);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      
      classWriter0.visit((-2919), 292552704, "java/lang/Throwable", ",", "cf", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(32, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      assertNotNull(fileSystemHandling2);
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling0));
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling1));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "57i*kZZ5d}nx2^jqs", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.version = 67;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Jm?uP]%P1q";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[3] = "CyO4=jq^";
      stringArray0[4] = "2$TcDq";
      stringArray0[5] = "<init>";
      stringArray0[6] = "2$TcDq";
      stringArray0[7] = "<init>";
      stringArray0[8] = "2$TcDq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4096, "2$TcDq", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(185, (-109), stringArray0, 185, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2, "<init>", "<init>", "2$TcDq");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.successors = null;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitMaxs(4096, 70);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1019, 1036);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = (-2154);
      intArray0[3] = (-2154);
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Vd=:X *G_4;:&QX_";
      stringArray0[1] = "<iXit";
      stringArray0[2] = "Vd=:X *G_4;:&QX_";
      stringArray0[3] = "<iXit";
      stringArray0[4] = "Vd=:X *G_4;:&QX_";
      stringArray0[5] = "Vd=:X *G_4;:&QX_";
      stringArray0[6] = "Vd=:X *G_4;:&QX_";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Vd=:X *G_4;:&QX_", "Vd=:X *G_4;:&QX_", "<iXit", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitIincInsn((-2154), (-2153));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(62, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(0, "SignatFre", "3=3c+%Jx", "Vd=:X *G_4;:&QX_");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-2153), "I];LM=rESjo]", "Vd=:X *G_4;:&QX_", "Vd=:X *G_4;:&QX_");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = classWriter0.newClass("<iXit");
      assertEquals(4, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitIntInsn((-2154), (-2154));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label1);
      assertArrayEquals(new int[] {0, (-2154), 0, (-2154), 0, 0, 0, 0}, intArray0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      MethodWriter.getNewOffset(intArray0, (int[]) null, label1);
      assertArrayEquals(new int[] {0, (-2154), 0, (-2154), 0, 0, 0, 0}, intArray0);
      assertSame(label0, label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EnclosingMethod");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", "<init>", "<init>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(0, 0, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-1561), "5.jar", "<init>", "5.jar");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.visitOuterClass("<init>", "A>Z[PoRqi42AAf:&/Q", "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.threshold = 90;
      classWriter0.visitSource("5.jar", "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("Signature", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMaxs((-1561), (-1561));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(82, (-1561), stringArray0, 90, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("Signature", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("<init>", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(90);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("5.jar");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.put(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t#");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-2073681257));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "t#";
      stringArray0[1] = "t#";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray0[2] = "\"73K|~)pQJ";
      stringArray0[3] = "\"73K|~)pQJ";
      int int0 = Frame.BASE_KIND;
      assertEquals(267386880, int0);
      
      stringArray0[4] = "\"73K|~)pQJ";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      stringArray0[5] = "\"73K|~)pQJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681257), "\"73K|~)pQJ", "\"73K|~)pQJ", "t#", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("t#", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      methodWriter0.visitFieldInsn((-1710), "t#", "\"73K|~)pQJ", "Z26Wvos?A.Vz1");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(77, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681274));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\"73_K|~)pPJ";
      Item item0 = classWriter0.newFloat(1.0F);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[1] = "qOxw@KZUPVi58T!D";
      stringArray0[2] = "qOxw@KZUPVi58T!D";
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[3] = "qOxw@KZUPVi58T!D";
      stringArray0[4] = "qOxw@KZUPVi58T!D";
      stringArray0[5] = "qOxw@KZUPVi58T!D";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 984, "\"73_K|~)pPJ", "\"73_K|~)pPJ", "qOxw@KZUPVi58T!D", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray1);
      assertNotSame(byteArray1, byteArray0);
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      methodWriter0.visitVarInsn(55, (-2073681274));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("qOxw@KZUPVi58T!D", "]@:M#pQeVZ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitIntInsn(984, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(132, "jW|^eLI", "\"73_K|~)pPJ", "\"73_K|~)pPJ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(174, "qOxw@KZUPVi58T!D", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681245));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "$U$xFLoZye+1=}";
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$U$xFLoZye+1=}");
      assertFalse(boolean0);
      
      stringArray0[1] = "$U$xFLoZye+1=}";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray0[2] = "$U$xFLoZye+1=}";
      stringArray0[3] = "qOw@K:UVi58TS|";
      stringArray0[4] = "$U$xFLoZye+1=}";
      stringArray0[5] = "qOw@K:UVi58TS|";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681245), "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$xFLoZye+1=}", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(187);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(187);
      assertEquals(187, (int)integer0);
      assertNotNull(integer0);
      
      int int0 = Integer.min(2, 187);
      assertEquals(2, int0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(63, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      classWriter0.visitSource("\"K|~)pQJ", "$U$xFLoZye+1=}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2077, "\"73K|~)pQJ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[2];
      int int2 = classWriter0.addUninitializedType("$U$xFLoZye+1=}", 187);
      assertEquals(1, int2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      intArray0[1] = (-2073681245);
      methodWriter0.visitInsn(177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2077);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("\"73K|~)pQJ", 177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681264));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Lef?{jnvd";
      stringArray0[1] = "2$TcDq";
      stringArray0[2] = "2$TcDq";
      stringArray0[3] = "2$TcDq";
      stringArray0[4] = "2$TcDq";
      stringArray0[5] = "2$TcDq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "K73|~)pQJ", "K73|~)pQJ", "Lef?{jnvd", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(701, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.classReaderOffset = 2;
      methodWriter0.visitMaxs(4, 540);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitVarInsn(248, 385);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      methodWriter0.visitLineNumber(1, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label1, label0);
      assertSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      
      methodWriter1.visitVarInsn(2959, 701);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1353));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "qw@KZUPi/N58TSD";
      stringArray0[1] = "qw@KZUPi/N58TSD";
      stringArray0[2] = "<init>";
      stringArray0[3] = "qw@KZUPi/N58TSD";
      stringArray0[4] = "qw@KZUPi/N58TSD";
      stringArray0[5] = "qw@KZUPi/N58TSD";
      int int0 = classWriter0.newField("v&H`cNXJ-", "<init>", "qw@KZUPi/N58TSD");
      assertEquals(6, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"K|~)pQJ", "\"K|~)pQJ", "<init>", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "qw@KZUPi/N58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) (-1353);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(178, "2%)2b~v", "\"K|~)pQJ", "qw@KZUPi/N58TSD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(60, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      int int0 = Frame.UNINITIALIZED;
      assertEquals(25165824, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "nds\"", "\"73K|~)pQJ", "nds\"", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.status = 1;
      byte[] byteArray0 = new byte[6];
      Item item0 = classWriter0.newLong(25165824);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitMultiANewArrayInsn("Z`q8lm&Iv5I", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      label2.visitSubroutine(label0, 1, (byte)57);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      methodWriter0.visitJumpInsn((byte)0, label2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      int[] intArray0 = new int[9];
      label1.info = (Object) 1;
      intArray0[8] = (int) (byte)57;
      methodWriter0.visitLocalVariable("\"7A3K|+)pQi", "CLx F[", "\"73K|~)pQJ", label1, label0, (byte)57);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertNotSame(label1, label2);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLabel(label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label2);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 24117248);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24117248
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681228));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ndcs\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681228), "ndcs\"", "X)gq[?\"oR&_A", "ndcs\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681228), "X)gq[?\"oR&_A", "ndcs\"", "t$m99L_C7`|y\f>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass("{'\"CG-#B)A<b!g", "t$m99L_C7`|y\f>", "{'\"CG-#B)A<b!g", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 1392510721;
      label0.inputStackTop = 1138;
      String string0 = label0.toString();
      assertEquals("L22", string0);
      assertNotNull(string0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "ndcs\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      classWriter0.firstMethod = methodWriter0;
      Attribute attribute0 = new Attribute("X)gq[?\"oR&_A");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      classWriter0.firstMethod.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = (-2073681292);
      ClassWriter classWriter0 = new ClassWriter((-2073681292));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      stringArray0[0] = "q0w@KZUPV/{8TS";
      stringArray0[1] = "\"73K|~)pQJ";
      stringArray0[2] = "q0w@KZUPV/{8TS";
      stringArray0[3] = "q0w@KZUPV/{8TS";
      stringArray0[4] = "q0w@KZUPV/{8TS";
      stringArray0[5] = "\"73K|~)pQJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"73K|~)pQJ", "\"73K|~)pQJ", "q0w@KZUPV/{8TS", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(188, (-2073681292));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = (-1459433118);
      int int2 = 686;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-90);
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)53;
      byteArray0[7] = (byte) (-84);
      byteArray0[8] = (byte) (-106);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)53, (byte)35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 61
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681268));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}HlL2:<]@u)qyY.p#";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "}HlL2:<]@u)qyY.p#", "\"73K|~)ppQJ", "}HlL2:<]@u)qyY.p#", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitLocalVariable("\"73K|~)ppQJ", "RuntimeInvisibleParameterAnnotations", "", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(50, "}HlL2:<]@u)qyY.p#", "", "}HlL2:<]@u)qyY.p#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((byte)125, ")jv");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitLocalVariable("RuntimeInvsibeParameterAnnotation", "}HlL2:<]@u)qyY.p#", "\"73K|~)ppQJ", label0, label0, (byte)125);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      edge0.successor = label0;
      Edge edge1 = new Edge();
      assertNotNull(edge1);
      assertFalse(edge1.equals((Object)edge0));
      
      edge1.successor = label0;
      edge1.successor = label0;
      edge0.next = edge1;
      Edge edge2 = edge0.next;
      assertNotNull(edge2);
      assertSame(edge2, edge1);
      assertNotSame(edge2, edge0);
      assertFalse(edge2.equals((Object)edge0));
      
      methodWriter0.visitVarInsn((byte)125, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[12];
      labelArray0[1] = labelArray0[0];
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681216));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ndcs\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681216), "ndcs\"", "X)gq[?\"oR&_A", "ndcs\"", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn((-2073681216), "X)gq[?\"oR&_A", "ndcs\"", "tm99L_7`|\ff");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String string0 = label0.toString();
      assertEquals("L18", string0);
      assertNotNull(string0);
      
      Attribute attribute0 = new Attribute("X)gq[?\"oR&_A");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(1, 180);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMaxs((-2582), (-1146724330));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-2582));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nds\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2702, "nds\"", "H>E)1,fv$#B` 8vuF", "nds\"", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1535, (byte) (-4));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("pb@)06zn.4<z/AH{", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(1535, "H>E)1,fv$#B` 8vuF", "pb@)06zn.4<z/AH{", "nds\"");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      Attribute attribute0 = new Attribute("nds\"");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector1 = byteVector0.putByte(3);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681216));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nZc3\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681216), "nZc3\"", "X)gq[?\"oR&_A", "nZc3\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn((-2073681216), "X)gq[?\"oR&_A", "nZc3\"", "nZc3\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      label0.frame = frame0;
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      String string0 = label0.toString();
      assertEquals("L17", string0);
      assertNotNull(string0);
      
      classWriter0.version = 180;
      classWriter0.firstMethod = methodWriter0;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(1, 180);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMaxs(180, (-1146724330));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitLdcInsn("nZc3\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs((-2073681216), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681282));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}HlL2:<]@u)qyY.p#";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "}HlL2:<]@u)qyY.p#", "\"73K|~)ppQJ", "}HlL2:<]@u)qyY.p#", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      String string0 = label0.toString();
      assertEquals("L13", string0);
      assertNotNull(string0);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      String string1 = "Exceptions";
      int int0 = 17;
      methodWriter1.visitIntInsn(17, (-3454));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(180, (-1144));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"7A3K|+)pQi");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"7A3K|+)pQi");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, "\"7A3K|+)pQi", "\"7A3K|+)pQi", "\"7A3K|+)pQi", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "\"7A3K|+)pQi", "\"7A3K|+)pQi", "L<2P2`Q;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("L<2P2`Q;");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T5cM6;#N-c=td8");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = ClassReader.FRAMES;
      assertTrue(boolean3);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = 2;
      Label label0 = new Label();
      assertNotNull(label0);
      
      ClassWriter classWriter1 = new ClassWriter(185);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      FieldWriter fieldWriter0 = classWriter1.lastField;
      assertNull(fieldWriter0);
      
      methodWriter1.visitFrame(3, 16777222, (Object[]) null, 185, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter1.visitMultiANewArrayInsn("L<2P2`Q;", 16777225);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681216));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "nZc3\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681216), "nZc3\"", "X)gq[?\"oR&_A", "nZc3\"", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      label0.frame = frame0;
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = label0.toString();
      assertEquals("L13", string0);
      assertNotNull(string0);
      
      methodWriter0.visitTypeInsn(191, "nZc3\"");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = 180;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(1, 180);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitInsn(13);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitLdcInsn("\"m'{'8Ijp#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681247));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      Item item0 = classWriter0.newInteger((-2073681247));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-1803), "RuntimeInvisiblePar^meterAnnotations", "RuntimeInvisiblePar^meterAnnotations", "aVo", "aVo");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(fieldVisitor0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\"73_K|~)pPJ";
      stringArray0[1] = "aAb`Ippht&!3'+j?";
      stringArray0[2] = "aAb`Ippht&!3'+j?";
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[3] = "aAb`Ippht&!3'+j?";
      stringArray0[4] = "aAb`Ippht&!3'+j?";
      stringArray0[5] = "aAb`Ippht&!3'+j?";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 984, "\"73_K|~)pPJ", "\"73_K|~)pPJ", "aAb`Ippht&!3'+j?", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("aAb`Ippht&!3'+j?", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray1);
      assertNotSame(byteArray1, byteArray0);
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, (-2073681247));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "aAb`Ippht&!3'+j?";
      methodWriter0.visitIincInsn((-110), 247);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("aAb`Ippht&!3'+j?", "F@:M#KQeV,");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(179, "aAb`Ippht&!3'+j?", "aAb`Ippht&!3'+j?", "F@:M#KQeV,");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2073681245));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Frame.FLOAT;
      assertEquals(16777218, int0);
      
      String[] stringArray0 = new String[6];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)9;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte) (-123), (byte)85, (byte) (-10), (byte)69, (byte)9}, byteArray0);
      
      stringArray0[0] = "$U$xFLoZye+1=}";
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$U$xFLoZye+1=}");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      stringArray0[1] = "$U$xFLoZye+1=}";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray0[2] = "$U$xFLoZye+1=}";
      stringArray0[3] = "$U$xFLoZye+1=}";
      stringArray0[4] = "$U$xFLoZye+1=}";
      stringArray0[5] = "qw@KZUPi/N58TSD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2073681245), "\"73K|~)pQJ", "\"73K|~)pQJ", "$U$xFLoZye+1=}", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(187);
      assertEquals(187, (int)integer0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      
      int int1 = Integer.min(2, 187);
      assertEquals(2, int1);
      assertFalse(int1 == int0);
      
      int int2 = methodWriter0.getSize();
      assertEquals(63, int2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      classWriter0.visitSource("\"K|~)pQJ", "$U$xFLoZye+1=}");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(2077, "\"73K|~)pQJ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[2];
      int int3 = Type.VOID;
      assertEquals(0, int3);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      intArray0[1] = (-2073681245);
      methodWriter0.visitInsn(191);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(64);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn((-162));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }
}
