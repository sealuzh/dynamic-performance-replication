/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 22:10:27 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-356);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-356));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -356
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "AMQ7OgA>6`k", "<init>", "$", stringArray0, false, false);
      methodWriter0.visitIincInsn(1504, 2);
      int[] intArray0 = new int[1];
      intArray0[0] = 1504;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1954));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@tM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "@tM", "@tM", "@tM", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitIincInsn(132, (-830));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Code";
      stringArray0[1] = "\"T(YgG|dSb";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "Code", "Code", "\"T(YgG|dSb", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "ZS", "ZS", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(170, (-1565));
      Label label0 = new Label();
      Object object0 = label0.info;
      methodWriter0.visitFrame(170, 186, stringArray0, 2, stringArray0);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
      methodWriter0.visitLocalVariable("", "I/hzy19u]oV6I5hf<", "v'QlFht=xo+2{.AbPn]", label0, label0, (-1019));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      methodWriter0.signature = ")1L/3K[-NUWO?c=";
      methodWriter0.visitEnd();
      Label label0 = new Label();
      int[] intArray0 = new int[5];
      intArray0[0] = 7;
      intArray0[1] = 7;
      intArray0[2] = 7;
      intArray0[3] = 7;
      intArray0[4] = 1;
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-1437847809), "Signature", "", ")1L/3K[-NUWO?c=", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "<init>", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      MethodWriter methodWriter1 = methodWriter0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1019), "TADu>G[@3", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-28);
      byteArray0[8] = (byte) (-53);
      MethodWriter.readShort(byteArray0, (byte)0);
      ClassWriter classWriter0 = new ClassWriter((byte) (-72));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "float";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2701), "", "", "", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11((byte) (-28), (byte)20);
      methodWriter0.visitTypeInsn((byte) (-72), "");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "float";
      objectArray0[1] = (Object) "";
      methodWriter0.visitFrame((short) (-72), 2, stringArray0, (byte) (-53), objectArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitVarInsn(170, 1);
      methodWriter0.visitFrame(170, 170, stringArray0, (-1019), stringArray0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(167);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "[u4DS-\"";
      stringArray0[2] = "0L[7nNakRO/:A%F'X";
      stringArray0[3] = "[u4DS-\"";
      stringArray0[4] = "0L[7nNakRO/:A%F'X";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 167, "[u4DS-\"", "}xABu)", "0L[7nNakRO/:A%F'X", stringArray0, false, false);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector(66);
      ByteVector byteVector1 = byteVector0.putLong(3494L);
      ByteVector byteVector2 = byteVector0.putByte(167);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(158);
      ClassWriter classWriter1 = new ClassWriter(1048575);
      ClassWriter classWriter2 = new ClassWriter((-908));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "float";
      stringArray0[1] = "float";
      MethodWriter methodWriter0 = new MethodWriter(classWriter2, 2124, "", "", "float", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(1, (-1497));
      MethodWriter methodWriter1 = classWriter2.firstMethod;
      methodWriter1.put(byteVector1);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("", "Signature", "$\",{jNM1kazs*Eh^", label0, label0, 1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)20;
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-28);
      byteArray0[8] = (byte) (-53);
      MethodWriter.readShort(byteArray0, (byte)0);
      ClassWriter classWriter0 = new ClassWriter((byte) (-1));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "float";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2701), "", "", "", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put11((byte) (-28), (byte)20);
      methodWriter0.visitTypeInsn((byte) (-1), "");
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "float";
      objectArray0[1] = (Object) "";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((short) (-1), 2, stringArray0, (byte) (-53), objectArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)122;
      byteArray0[3] = (byte)122;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)122;
      short short0 = ObjectStreamConstants.STREAM_VERSION;
      ClassWriter classWriter1 = new ClassWriter(1284);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "float";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "gw(!GOdqeiZ'G", "LineNumberTable", "Signature", stringArray0, false, false);
      ByteVector byteVector0 = classWriter1.pool;
      byteVector0.put11(140, 7);
      ByteVector byteVector1 = new ByteVector(1284);
      methodWriter0.visitFrame(1, (byte)0, stringArray0, 266, stringArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Zwa&/?9=%+", "_", "_", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "AMQ7OgA>6`k", "<init>", ".", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn(".", 1);
      methodWriter0.visitInsn(1504);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitTypeInsn(2, "wa&/=%+");
      methodWriter0.visitMethodInsn(1, "OrcP", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDE0DDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDC1FFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "wa&/=%+");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = 1493;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1493, "<init>", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1493, "Signature", "<init>", "char");
      MethodWriter methodWriter1 = methodWriter0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1019), "<init>", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitVarInsn(170, 1);
      methodWriter0.visitFieldInsn((-1019), "Signature", "Signature", "wa&/=%+");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitTypeInsn(2, "wa&/=%+");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1019), "wa&/=%+", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "AMQ7OgA>6`k", "<init>", "", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 1);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2345));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2345), "E!xceptions", "E!xceptions", "E!xceptions", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitLdcInsn("E!xceptions");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1493, "<init>", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1493, "Signature", "<init>", "ch,Q");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(2, 2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector1 = new ByteVector();
      methodWriter1.put(byteVector1);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("Wrwp4Yma;WBl!l|6", "AnnotationDefault", "org.objectweb.asm.jip.Edge", label0, label0, (-1668));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte) (-90);
      MethodWriter.writeShort(byteArray0, 1, 86);
      assertArrayEquals(new byte[] {(byte) (-59), (byte)0, (byte)86, (byte) (-90)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, "", "", "W-xp[G:Y<+;V5\"VN", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, "", "LineNumberTable", "");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort((-3));
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Code";
      stringArray0[1] = "\"T(YgG|dSb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3714), "Code", "jlvf+[EN/ljj", "jlvf+[EN/ljj", stringArray0, false, false);
      methodWriter0.exceptionCount = (-3714);
      methodWriter0.visitMultiANewArrayInsn("LocalVariableTypeTable", (-3714));
      methodWriter0.visitLdcInsn("\"T(YgG|dSb");
      methodWriter0.visitMaxs((-3714), (-3714));
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", stringArray0, false, false);
      methodWriter0.visitMaxs(4518, 4518);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "AMQ7OgA>6`k", "<init>", "", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Edge", 1);
      methodWriter0.visitFieldInsn(1, "<init>", "org.objectweb.asm.jip.Edge", "<init>");
      methodWriter0.visitIntInsn((-2393), 33554432);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2345));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2345), "E!xcef!ptons", "E!xcef!ptons", "E!xcef!ptons", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2, (-2345));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "|i):87>W=lbMv[";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(7);
      ByteVector byteVector1 = byteVector0.putInt((-94));
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 0, 2071);
      byteVector0.putInt(1976);
      byteVector2.putUTF8("D'`&TmOnu;=>FBeV");
      byteVector2.putByte((-94));
      methodWriter0.put(byteVector2);
      methodWriter0.visitFieldInsn((-94), "|i):87>W=lbMv[", ".class", ".class");
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1976);
      methodWriter0.visitLdcInsn(integer0);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "ntbr>#T}\"");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      int[] intArray0 = new int[6];
      intArray0[0] = (-94);
      intArray0[1] = 2;
      intArray0[2] = (-94);
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 7;
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(386, "", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(1, 9, label0, labelArray0);
      methodWriter0.visitVarInsn(170, 1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1954));
      classWriter0.newFloat((-1954));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "@tM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 283, "@tM", "@tM", "@tM", stringArray0, false, false);
      methodWriter0.visitLdcInsn(2);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 46, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3719));
      classWriter0.newNameType("?l\u0002%#", "7||Z/9DC=QU].aV");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2045977740), "ZhpnpR9#yKGFb", "ZhpnpR9#yKGFb", "double", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-93), "org.objectweb.asm.jip.MethodWriter", "double", "ztf");
      methodWriter0.visitFrame(0, (-3719), stringArray0, (-758), stringArray0);
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "|i):87>W=lbMv[";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(7);
      ByteVector byteVector1 = byteVector0.putInt((-94));
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 0, 2071);
      byteVector0.putInt(1976);
      byteVector2.putUTF8("D'`&TmOnu;=>FBeV");
      byteVector2.putByte((-94));
      methodWriter0.put(byteVector2);
      methodWriter0.visitFieldInsn((-94), "|i):87>W=lbMv[", ".class", ".class");
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1976);
      methodWriter0.visitLdcInsn(integer0);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "ntbr>#T}\"");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 7, stringArray0, (-94), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1915));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "Bacrw?{9Y.3s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 289, "", "", "6/<L", stringArray0, false, false);
      methodWriter0.visitVarInsn(1220, 750);
      methodWriter0.visitFrame(289, 191, stringArray0, 185, stringArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitVarInsn((-1019), 425);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitAnnotation("wa&/=%+", false);
      methodWriter0.visitVarInsn(170, 1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wa&/=%+", "wa&/=%+", "wa&/=%+", stringArray0, false, false);
      methodWriter0.visitTypeInsn(2, "wa&/=%+");
      int int0 = methodWriter0.getSize();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[0];
      ClassWriter classWriter0 = new ClassWriter(1504);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "%~>.t%Kg>", "", "/QJ'", stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 1504);
      methodWriter0.visitFrame(1504, 1504, stringArray0, (-2070), stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 7;
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "|i):87>W=lbMv[";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.putInt(7);
      int int1 = 1976;
      byteVector0.putInt(1976);
      methodWriter0.visitFieldInsn(2, "|i):87>W=lbMv[", ".class", ".class");
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1976);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.getSize();
      int int2 = 0;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, 2, stringArray0, 7, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1493, "", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1493, "Signature", "", "ch,Q");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(2, 2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(2, "", "", "org.objectweb.asm.jip.Edge");
      ByteVector byteVector1 = new ByteVector();
      methodWriter1.visitVarInsn(750, 1493);
      methodWriter0.visitFrame(2, 1493, stringArray0, 1, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, (-113), stringArray0, 2062, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "ZS", "ZS", stringArray0, false, false);
      methodWriter0.visitVarInsn(170, (-1565));
      Label label0 = new Label();
      Object object0 = label0.info;
      methodWriter0.visitFrame(170, 186, stringArray0, 2, stringArray0);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1019), 1048575, stringArray0, 2153, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1493, "", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1493, "Signature", "", "ch,Q");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(2, 2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(2, "", "", "org.objectweb.asm.jip.Edge");
      ByteVector byteVector1 = new ByteVector();
      methodWriter1.visitVarInsn(750, 1493);
      methodWriter0.visitFrame(2, 1493, stringArray0, 1, (Object[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitVarInsn(50, (-1800331834));
      methodWriter0.visitFrame(1, (-113), stringArray0, 2062, stringArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1504, "<init>", "", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.visitFrame(Integer.MAX_VALUE, 1914, stringArray0, 1914, stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(73);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "6/<L";
      stringArray0[2] = "Bacrw?{9Y.3s";
      stringArray0[3] = "Bacrw?{9Y.3s";
      stringArray0[4] = "6/<L";
      stringArray0[5] = "Bacrw?{9Y.3s";
      stringArray0[6] = "6/<L";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 73, "6/<L", "<init>", "Bacrw?{9Y.3s", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, 170);
      methodWriter0.visitFrame(170, (-268435456), stringArray0, Integer.MAX_VALUE, stringArray0);
      methodWriter0.getSize();
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitVarInsn(91, 170);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, " )|#gt??RK", " )|#gt??RK", "=YcO=+n!peO4mzo_xf$", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2345));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2345), "E!xceptions", "E!xceptions", "E!xceptions", (String[]) null, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3298));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2033), "E!xceptions", "E!xceptions", "E!xceptions", (String[]) null, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute("B+a#q]0P");
      methodWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(2, (-666), label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt?RK", " )|#gt?RK", (String[]) null, true, true);
      Attribute attribute0 = new Attribute(" )|#gt?RK");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, " )|#gt?RK", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2267);
      intArray0[1] = (-3714);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte) (-116);
      ByteVector byteVector0 = new ByteVector();
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      int[] intArray1 = new int[7];
      intArray1[0] = (int) (byte) (-116);
      intArray1[1] = (int) (byte) (-74);
      intArray1[2] = (int) (byte) (-74);
      intArray1[3] = (-576);
      intArray1[4] = (int) (byte)27;
      intArray1[5] = (-23);
      intArray1[6] = (int) (byte) (-74);
      MethodWriter.getNewOffset(intArray0, intArray1, label0);
      assertFalse(intArray0.equals((Object)intArray1));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[5];
      methodWriter0.classReaderLength = (-3714);
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLocalVariable("B+a#q]0P", "B+a#q]0P", (String) null, label0, label0, 63);
      methodWriter0.visitVarInsn(805, 1);
      methodWriter0.visitFrame((-30), 1, (Object[]) null, 0, stringArray0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "aCb(6");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, false, false);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      ByteVector byteVector0 = new ByteVector(1);
      methodWriter0.visitVarInsn(1, 7);
      methodWriter0.visitFrame(4, 4, stringArray0, (-1787), stringArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1915));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "Bacrw?{9Y.3s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 289, "", "", "6/<L", stringArray0, false, false);
      Integer integer0 = new Integer(2025);
      methodWriter0.visitLdcInsn(integer0);
      Label label0 = new Label();
      String[] stringArray1 = new String[7];
      stringArray1[0] = "StackMapTable";
      stringArray1[1] = "<init>";
      stringArray1[2] = ".|?co=8xz^Z*'Y";
      stringArray1[3] = "6/<L";
      stringArray1[4] = "8bm  I?2;J3V3)z:5x";
      stringArray1[5] = "";
      stringArray1[6] = "";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "j-a[", "8bm  I?2;J3V3)z:5x", "}", stringArray1, false, false);
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "ZS", "java/lang/dyn/Dynamic", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(170, (-1565));
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitTryCatchBlock(label0, label0, label0, "ZS");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 7;
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "|i):87>W=lbMv[";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "ntbr>#T}\"", "gw(!GOdqeiZ'G", "Signature", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(7);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)116;
      byteVector0.data = byteArray0;
      byteVector0.putInt(7);
      int int1 = 1976;
      byteVector0.putInt(1976);
      methodWriter0.visitFieldInsn(2, "|i):87>W=lbMv[", ".class", ".class");
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1976);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(2, 2);
      int int2 = 0;
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(164, label0);
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, 2, stringArray0, 7, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = (-3714);
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      methodWriter0.visitIincInsn(2, 32767);
      labelArray0[1] = label0;
      labelArray0[0] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn((-1198130090), 32767, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, " )|#gt??RK", " )|#gt??RK", "dv2Pm<m8?8(=", (String[]) null, true, true);
      methodWriter0.visitIincInsn(5, 5);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "ntbr>#T}\"";
      stringArray0[2] = "ntbr>#T}\"";
      stringArray0[3] = "ntbr>#T}\"";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "ntbr>#T}\"", "ntbr>#T}\"", "Signature", stringArray0, false, false);
      methodWriter0.visitFieldInsn(4, "", "ntbr>#T}\"", "Signature");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitVarInsn(5162, 7);
      methodWriter0.visitFrame(4, 4, stringArray0, (-1793), stringArray0);
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = (-94);
      intArray0[2] = (-94);
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 4;
      intArray0[6] = 4;
      intArray0[7] = 4;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 4, 2);
      assertEquals((-14), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "ZS", "ZS", stringArray0, false, false);
      methodWriter0.visitMaxs(170, (-1019));
      methodWriter0.visitVarInsn(170, (-1565));
      Label label0 = new Label();
      Object object0 = label0.info;
      methodWriter0.visitFrame(170, 186, stringArray0, 2, stringArray0);
      methodWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(371);
      ByteVector byteVector1 = byteVector0.putByte(43);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(2, 1);
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      methodWriter0.visitTableSwitchInsn((-1198130090), 1, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1915));
      ClassWriter classWriter1 = new ClassWriter(289);
      String string0 = "|i):87>W=lbMv[";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<init>";
      classWriter1.visitMethod(3126, "<init>", "|i):87>W=lbMv[", "=u", stringArray0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2947, "=u", "|i):87>W=lbMv[", "|i):87>W=lbMv[", stringArray0, true, true);
      MethodWriter methodWriter1 = methodWriter0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "U>[|L1Q)o", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 770, "B+a#q]0P", "B+a#q]0P", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(33554432, 58);
      int[] intArray0 = new int[6];
      intArray0[0] = 58;
      intArray0[1] = 172;
      intArray0[2] = (-1114);
      intArray0[3] = 33554432;
      intArray0[4] = 770;
      intArray0[5] = 7;
      int[] intArray1 = new int[2];
      intArray1[0] = 172;
      intArray1[1] = 2;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray1, 7, 183);
      assertEquals(350, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1915));
      String[] stringArray0 = new String[2];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "Code";
      stringArray1[1] = "AMQ7OgA>6`k";
      stringArray1[2] = "AMQ7OgA>6`k";
      stringArray1[3] = "<init>";
      stringArray1[4] = "<init>";
      stringArray1[5] = "";
      stringArray1[6] = "AMQ7OgA>6`k";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1915), "6/<L", "<init>", "AMQ7OgA>6`k", stringArray1, false, false);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putInt((-1623227873));
      methodWriter0.visitFieldInsn(1024, "Code", "AMQ7OgA>6`k", "");
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1024);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 50, stringArray0, 33554432, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, false);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = label0.getFirst();
      Label label2 = new Label();
      methodWriter0.visitMaxs(1, 2);
      Edge edge0 = new Edge();
      Label label3 = edge0.successor;
      methodWriter0.visitTryCatchBlock(label2, label1, (Label) null, "double");
      methodWriter0.getSize();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) edge0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) frame0;
      objectArray0[3] = (Object) "!n)4M-Cc{K+]^*";
      objectArray0[4] = (Object) label2;
      objectArray0[5] = (Object) "!n)4M-Cc{K+]^*";
      objectArray0[6] = (Object) "!n)4M-Cc{K+]^*";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, objectArray0, 2113, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.Edge cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3714), "B+a#q]0P", "\"^)suQ0y</xtDSv", "\"^)suQ0y</xtDSv", stringArray0, true, true);
      Integer integer0 = new Integer((-3714));
      Object object0 = new Object();
      Label label1 = new Label();
      methodWriter1.visitLocalVariable("\"^)suQ0y</xtDSv", "SourceFile", "B+a#q]0P", label0, label0, (-398));
      assertFalse(label0.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLocalVariable("9U\t'Z}5(", ";", "double", label1, label1, (-897));
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, " )|#gt??RK", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2045977740));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "[", "j`wD6OMG)Q^'<k", "[", stringArray0, true, false);
      methodWriter0.visitVarInsn(1, 2);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt?RK", " )|#gt?RK", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(2, "a", " )|#gt?RK", " )|#gt?RK");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitLdcInsn(" )|#gt??RK");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -CRc{K+]^^", "n)4 -CRc{K+]^^", "Synthetic", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(7, "n)4 -CRc{K+]^^", ">5&!K>E|", "n)4 -CRc{K+]^^");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("n)4 -CRc{K+]^^", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-532), " )|#g9?`?|7", " )|#g9?`?|7", " )|#g9?`?|7", (String[]) null, true, true);
      methodWriter0.getSize();
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(28, (-8), label0, labelArray0);
      methodWriter0.visitIntInsn(192, 2);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3714), "B+a#q]0P", "\"^)suQ0y</xtDSv", "\"^)suQ0y</xtDSv", stringArray0, true, true);
      Integer integer0 = new Integer((-3714));
      Object object0 = new Object();
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.visitVarInsn(0, 1141048066);
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter1.visitTableSwitchInsn(2, 4459, label0, labelArray0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 131072, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "Synthetic", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(131072, "n)4 -Cc{K+]^^", ">5&!K>E|", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(2, "JPx5F", "JPx5F", ">5&!K>E|");
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 131072, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "Synthetic", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(131072, "n)4 -Cc{K+]^^", ">5&!K>E|", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(179, "Synthetic", "Synthetic", ">5&!K>E|");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(7, 65535);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-128), "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "5SS`a5");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-520), " )|#gt??RK", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn("Uc", 252);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3714), "B+a#q]0P", "\"^)suQ0y</xtDSv", "\"^)suQ0y</xtDSv", stringArray0, true, true);
      Integer integer0 = new Integer((-3714));
      Object object0 = new Object();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitMethodInsn(2, "l3p1=g=N ", "r/szj;CRq", "B+a#q]0P");
      methodWriter0.visitVarInsn((-203), 0);
      methodWriter0.visitInsn(1);
      methodWriter1.visitIincInsn(0, (-1971433150));
      methodWriter1.visitMultiANewArrayInsn("\"^)suQ0y</xtDSv", (-3020));
      methodWriter0.visitVarInsn((-3020), 0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt?RK", " )|#gt?RK", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn((-2), (-8));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, " )|#gt??RK", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitJumpInsn(175, label1);
      int int0 = methodWriter0.getSize();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 528, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(196);
      byteVector0.putInt(1976);
      methodWriter0.visitEnd();
      Integer integer0 = new Integer(1976);
      methodWriter1.visitFrame(2, 184, stringArray0, (-1463), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-1897));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1897
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3714), "B+a#q]0P", "\"^)suQ0y</xtDSv", "\"^)suQ0y</xtDSv", stringArray0, true, true);
      Integer integer0 = new Integer((-3714));
      methodWriter1.visitInsn(1);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitInsn(7);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2318));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "uuU[)Nf=uW@54dq";
      stringArray0[1] = "uuU[)Nf=uW@54dq";
      stringArray0[2] = "Bacrw?{9Y.3s";
      stringArray0[3] = "<init>";
      stringArray0[4] = "8@=A^\"B7`dfH~'cU[f";
      stringArray0[5] = "8@=A^\"B7`dfH~'cU[f";
      stringArray0[6] = "<init>";
      stringArray0[7] = "uuU[)Nf=uW@54dq";
      stringArray0[8] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 260, "<init>", "uuU[)Nf=uW@54dq", "8@=A^\"B7`dfH~'cU[f", stringArray0, true, false);
      methodWriter0.visitIincInsn((-2898), 191);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.put(byteVector1);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      ByteVector byteVector2 = new ByteVector(1);
      methodWriter0.visitVarInsn(1, 7);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 57, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "AY$", stringArray0, true, true);
      Integer integer0 = new Integer(57);
      methodWriter0.visitIntInsn((-615), (-5));
      methodWriter0.visitAnnotationDefault();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte) (-22);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)124);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 124
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 131072, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitIntInsn(187, 2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-3714));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "B+a#q]0P";
      stringArray0[1] = "B+a#q]0P";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "B+a#q]0P", "B+a#q]0P", "B+a#q]0P", stringArray0, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3714), "B+a#q]0P", "\"^)suQ0y</xtDSv", "\"^)suQ0y</xtDSv", stringArray0, true, true);
      Integer integer0 = new Integer((-3714));
      Object object0 = new Object();
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.visitVarInsn(1, (-3714));
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      Label label1 = label0.next;
      labelArray0[3] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(74, 4459, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.put(byteVector1);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      Object object0 = new Object();
      ByteVector byteVector2 = new ByteVector();
      methodWriter0.visitMethodInsn(0, "ztf", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      int int0 = 275;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(275, (-1201));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 275
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.put(byteVector1);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 57, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "AY$", stringArray0, true, true);
      Integer integer0 = new Integer(57);
      methodWriter0.visitIntInsn((-615), (-5));
      methodWriter0.visitAnnotationDefault();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-22);
      byteArray0[3] = (byte) (-22);
      methodWriter0.visitMultiANewArrayInsn("char", 7);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      int int0 = (-1201);
      methodWriter0.visitTypeInsn(166, "Wu-Q2}q] %9+");
      byteVector1.putByte((-1201));
      methodWriter0.put(byteVector1);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      Object object0 = new Object();
      ByteVector byteVector2 = new ByteVector();
      int int1 = 0;
      String string0 = "ztf";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-111);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 939, 166);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 947
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      ClassWriter classWriter1 = new ClassWriter((-471));
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", (String) null, (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitTypeInsn(2, "wo/x");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, " )|#gt??RK", " )|#gt??RK", "9U\t'Z}5(", (String[]) null, false, true);
      Label label0 = new Label();
      methodWriter0.visitTypeInsn((-2001), "RuntimeVisibleParameterAnnotations");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(224, 224);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "m$*4mt,'", " )|#gt??RK", " )|#gt??RK", (String[]) null, false, true);
      methodWriter0.visitVarInsn(115, 980);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.put(byteVector1);
      methodWriter0.visitVarInsn(1, 7);
      Integer integer0 = new Integer(57);
      methodWriter0.visitIntInsn((-615), (-5));
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitMaxs(57, (-1117));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 131101, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "Synthetic", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Synthetic");
      methodWriter0.visitMaxs(7, 131101);
      Edge edge0 = new Edge();
      Label label1 = edge0.successor;
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter1.visitLineNumber((-519), label0);
      ByteVector byteVector1 = new ByteVector();
      byteVector1.put12(184, 7);
      methodWriter0.put(byteVector1);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2195), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2195
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector(7);
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      methodWriter0.put(byteVector1);
      int int0 = 4;
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      ByteVector byteVector2 = new ByteVector(1);
      methodWriter0.visitVarInsn(1, 7);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 285212674, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "t-}YOl&iX:HdtIS", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Integer integer0 = new Integer((-3518));
      methodWriter0.visitInsn(16);
      MethodWriter methodWriter2 = null;
      try {
        methodWriter2 = new MethodWriter(classWriter0, 1, "t-}YOl&iX:HdtIS", "oY8[:E6FG", "3AAoMdZkKR", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-275), "e~~", "n)4 -Cc{K+]^^", (String) null, stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(7, label0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      byteVector1.put12(224, 184);
      methodWriter0.put(byteVector0);
      methodWriter0.visitJumpInsn(2, label0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      methodWriter0.visitLdcInsn("!n)4M-Cc{K+]^^");
      int int0 = methodWriter0.getSize();
      assertEquals(52, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "n)4 -Cc{K+]^^";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-94), "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(7, 65535);
      methodWriter0.signature = "o9`";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitLdcInsn("n)4 -Cc{K+]^^");
      int int0 = methodWriter0.getSize();
      assertEquals(71, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(184, label0);
      methodWriter0.visitAnnotationDefault();
      classWriter0.visit(184, 184, "!n)4M-Cc{K+]^*", "+*t", "!n)4M-Cc{K+]^*", stringArray0);
      methodWriter0.visitMaxs(2066, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.putShort(8);
      byteVector0.length = 2;
      byteVector0.putLong((-495L));
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-424), "value ", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(180, label0);
      methodWriter1.visitAnnotationDefault();
      methodWriter0.visitMaxs(7, (-2702));
      Attribute attribute0 = new Attribute("n)4 -Cc{K+]^^");
      Attribute attribute1 = attribute0.next;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("=YcO=+n!peO4mzo_xf$");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      methodWriter0.visitFieldInsn(168, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      ByteVector byteVector2 = new ByteVector();
      methodWriter0.visitMethodInsn(0, "ztf", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(24, (-1565));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3719));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2045977740), "Exceptions", "Exceptions", "double", stringArray0, false, false);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label1, label0, "double");
      label0.resolve(methodWriter0, (-2045977740), (byte[]) null);
      methodWriter0.visitJumpInsn(1595, label0);
      methodWriter0.visitJumpInsn(2, label1);
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      ByteVector byteVector1 = byteVector0.putLong(1);
      byteVector0.putUTF8("Wu-Q2}q] %9+");
      methodWriter0.visitTypeInsn(170, "Wu-Q2}q] %9+");
      byteVector1.putByte((-1213));
      methodWriter0.put(byteVector1);
      methodWriter0.visitVarInsn(1, 7);
      Object object0 = new Object();
      byteVector0.putInt((-1213));
      Frame frame0 = new Frame();
      Label label0 = new Label();
      label0.resolve(methodWriter0, (-157), (byte[]) null);
      methodWriter0.visitJumpInsn(7, label0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      boolean boolean0 = ClassReader.RESIZE;
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-138), "LineNumberTable", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, true);
      Integer integer0 = new Integer(2);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("9U\t'Z}5(", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", label0, label0, (-1470416084));
      methodWriter0.visitMaxs(1048575, 267386880);
      methodWriter0.visitMaxs(1410, 2);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.length = 2;
      classWriter0.visitSource("n)4 -Cc{K+]^^", (String) null);
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putUTF8("Synthetic");
      byteVector1.putByte((-1201));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "AY$", stringArray0, true, true);
      Integer integer0 = new Integer(57);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("5prm", "5prm", "Synthetic", label0, label0, 4);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-22);
      methodWriter0.visitMaxs((-1470416084), 32);
      methodWriter0.put(byteVector0);
      methodWriter0.visitMaxs((-1470416084), (-4229));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "9U\t'Z}5(", " )|#gt??RK", " )|#gt??RK", (String[]) null, true, true);
      methodWriter0.visitVarInsn(55, 1);
      methodWriter0.visitIincInsn(3, 7);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, " )|#gt??RK", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putLong((-17));
      Integer integer0 = new Integer((-17));
      Label label0 = new Label();
      methodWriter0.classReaderOffset = 1;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(1, (-17), label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.putShort(8);
      byteVector0.length = 2;
      byteVector0.putLong((-519L));
      Label label0 = new Label();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 8;
      intArray0[2] = 3919;
      intArray0[3] = 10;
      intArray0[4] = 8;
      intArray0[5] = 7;
      intArray0[6] = 2;
      intArray0[7] = 7;
      intArray0[8] = 8;
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      Label label1 = new Label();
      methodWriter0.visitJumpInsn(262144, label1);
      label1.outputStackMax = 262144;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitMaxs(Integer.MAX_VALUE, Integer.MAX_VALUE);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("!n)4M-Cc{K+]^^");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      classWriter0.newDouble(1);
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitAnnotationDefault();
      methodWriter1.visitJumpInsn(168, label0);
      methodWriter1.getSize();
      methodWriter1.visitMaxs(168, 168);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      classWriter0.newDouble(1);
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      classWriter0.newClassItem("!lx");
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitAnnotationDefault();
      methodWriter1.visitJumpInsn(168, label0);
      methodWriter1.visitLabel(label0);
      methodWriter1.getSize();
      methodWriter1.visitMaxs(168, 168);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector(7);
      byteVector0.putLong(4432L);
      Integer integer0 = new Integer(8);
      Label label0 = new Label();
      byteVector0.put12(1, 59);
      methodWriter0.visitLocalVariable("!n)4M-Cc{K+]^^", "M>g'~szA^P[!@G``", "M>g'~szA^P[!@G``", label0, label0, 2);
      methodWriter0.visitMaxs(2, 8);
      methodWriter0.put(byteVector0);
      methodWriter0.visitLdcInsn("!n)4M-Cc{K+]^^");
      methodWriter0.visitFrame(191, 251, stringArray0, 1705, stringArray0);
      methodWriter0.visitLocalVariable("RuntimeInvisibleAnnotations", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", label0, label0, 188);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)82;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      boolean boolean0 = ClassReader.FRAMES;
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(7, label0);
      methodWriter0.visitAnnotationDefault();
      classWriter0.visit(7, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(7, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[3] = "n)4 -Cc{K+]^^";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", (String) null, stringArray0, true, true);
      int int0 = 6;
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(6, label0);
      classWriter0.visit(1576, (-1234), "<init>", "6SJ<aX}+!s7tdpb", " x1}oi??y b`qfkQg", stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2801);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      classWriter0.newDouble(7);
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      ByteVector byteVector0 = new ByteVector(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 41, "!n)4M-Cc{K+]^^", "", (String) null, stringArray0, false, false);
      methodWriter0.visitLdcInsn("!n)4M-Cc{K+]^^");
      int int0 = methodWriter0.getSize();
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1019));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "&", "ZS", "ZS", stringArray0, false, false);
      methodWriter0.visitVarInsn(140, (-1565));
      methodWriter0.visitMethodInsn(255, " aTWK5@wY", "Synthetic", "5e=qO\"lV8Z<0--:");
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "&");
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "Ljava/lang/Synthetic;");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(179, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(168, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putLong((-519L));
      byteVector1.putByte((-1201));
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      ByteVector byteVector2 = new ByteVector();
      methodWriter0.visitMethodInsn(0, "ztf", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFrame(4, 1964, stringArray0, 1578, stringArray0);
      methodWriter0.visitVarInsn(22, 17);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3719));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2045977740), "Exceptions", "Exceptions", "Exceptions", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(169, label0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitMaxs(7, 255);
      methodWriter0.visitCode();
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitTypeInsn(2, "!n)4M-Cc{K+]^^");
      methodWriter0.visitInsn(179);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "3+{xXo>b)cQhr%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(1560, "53^cL,AFRp.ES*CL5U", "Exceptions", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(179, "{2>i+SpwnhzIs~\"5I", "3+{xXo>b)cQhr%", "JPx5F");
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 2, " )|#gt??CK", "GPPbm<q", "n)4 -Cc{K+]^^", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(175, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(175, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      byteVector0.length = 2;
      ByteVector byteVector1 = byteVector0.putUTF8("n)4 -Cc{K+]^^");
      byteVector1.putByte((-1216));
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      ByteVector byteVector2 = new ByteVector();
      classWriter0.visitOuterClass("org.objectweb.asm.jip.Label", "n)4 -Cc{K+]^^", "org.objectweb.asm.jip.Label");
      methodWriter0.visitMethodInsn(0, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFrame(4, 1964, stringArray0, 1578, stringArray0);
      methodWriter0.visitInsn(56);
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleParameterAnnotations", (-349573434));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2943, " )|#g9?`?|7", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, true);
      Integer integer0 = new Integer(1679);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("n)4 -Cc{K+]^^", " )|#g9?`?|7", "n)4 -Cc{K+]^^", label0, label0, (-88));
      classWriter0.visit(1070, (-1470416084), "n)4 -Cc{K+]^^", "9U#'Z}5(", "", stringArray0);
      methodWriter0.visitMaxs(1070, (-532));
      methodWriter0.visitMaxs((-88), 1070);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2929, " N1Q&]|iNxT", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, true);
      Integer integer0 = new Integer(1679);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("n)4 -Cc{K+]^^", " N1Q&]|iNxT", "n)4 -Cc{K+]^^", label0, label0, (-88));
      classWriter0.visit(1070, (-1470416084), "n)4 -Cc{K+]^^", "9U\t'Z}5(", "P,", stringArray0);
      methodWriter0.visitMaxs(1070, (-532));
      methodWriter0.visitMaxs((-88), 1070);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      classWriter0.newDouble(1);
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      methodWriter0.visitFieldInsn(7, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^");
      methodWriter0.visitMaxs(1092, 29);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      Label label0 = new Label();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3163), "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "<init>", stringArray0, true, false);
      methodWriter0.visitJumpInsn(7, label0);
      label0.getFirst();
      methodWriter0.visitAnnotationDefault();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitAnnotationDefault();
      classWriter0.visit(2023, 7, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "iz^TJ>p$-Tn", stringArray0);
      methodWriter0.visitMaxs(2, 7);
      int int0 = methodWriter1.getSize();
      assertEquals(65, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(175, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(175, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      byteVector0.length = 2;
      byteVector0.putUTF8("n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(4, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitVarInsn(1, 7);
      ByteVector byteVector1 = new ByteVector();
      classWriter0.visitOuterClass("org.objectweb.asm.jip.Label", "n)4 -Cc{K+]^^", "org.objectweb.asm.jip.Label");
      methodWriter0.visitTypeInsn((-1078), "FvJB%TSu8x,4QCK");
      methodWriter0.visitInsn(175);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "n)4 -Cc{K+]^^";
      stringArray0[1] = "n)4 -Cc{K+]^^";
      stringArray0[2] = "n)4 -Cc{K+]^^";
      stringArray0[3] = "n)4 -Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(179, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      methodWriter0.visitFieldInsn(179, "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^", "n)4 -Cc{K+]^^");
      Label label0 = new Label();
      methodWriter0.visitTypeInsn(2, "y?Q`x7");
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, false);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = label0.getFirst();
      Label label2 = frame0.owner;
      methodWriter0.visitTryCatchBlock(label1, (Label) null, label0, "!n)4M-Cc{K+]^*");
      methodWriter0.visitMaxs(1, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String string0 = "!n)4M-Cc{K+]^*";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, true);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = label0.getFirst();
      Label label2 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label2, label0, "!n)4M-Cc{K+]^*");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, true);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = label0.getFirst();
      Label label2 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label2, label0, "!n)4M-Cc{K+]^*");
      String string0 = "double";
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^^";
      stringArray0[1] = "!n)4M-Cc{K+]^^";
      stringArray0[2] = "!n)4M-Cc{K+]^^";
      stringArray0[3] = "!n)4M-Cc{K+]^^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", stringArray0, true, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(7, "!n)4M-Cc{K+]^^", "!n)4M-Cc{K+]^^", "Code");
      methodWriter0.visitFieldInsn(7, "!n)4M-Cc{K+]^^", "Code", "Deprecated");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(7, "!n)4M-Cc{K+]^^", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      String string0 = "!n)4M-Cc{K+]^*";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n)4M-Cc{K+]^*";
      stringArray0[1] = "!n)4M-Cc{K+]^*";
      stringArray0[2] = "!n)4M-Cc{K+]^*";
      stringArray0[3] = "!n)4M-Cc{K+]^*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", "!n)4M-Cc{K+]^*", stringArray0, true, true);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      Label label1 = label0.getFirst();
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "!n)4M-Cc{K+]^*");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }
}
