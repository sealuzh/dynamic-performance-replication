/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:47:40 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)25;
      byteArray0[4] = (byte)25;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (byte)25, fieldTypeRational0, 6148L, 339L, byteArray0, byteOrder0, 50255);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12, tiffField0.getTag());
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(339, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)25;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (byte)25, fieldTypeRational0, 6148L, 339L, byteArray0, byteOrder0, 50255);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(339, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0, 2L, (-2620L), byteArray0, byteOrder0, 3);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-2620), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 878, fieldTypeRational0, 40094, 40094, byteArray0, byteOrder0, 878);
      String string0 = tiffField0.toString();
      assertEquals(878, tiffField0.getDirectoryType());
      assertEquals(878, tiffField0.getSortHint());
      assertEquals("40094 (0x9c9e: XPKeywords): Invalid value: Text field not encoded as bytes. (40094 Rational)", string0);
      assertEquals(40094, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(22, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2787), 406, fieldTypeByte0.RATIONAL, 0L, (byte)112, byteArray0, byteOrder0, (-1376));
      String string0 = tiffField0.getValueDescription();
      assertEquals(406, tiffField0.getDirectoryType());
      assertEquals((-2787), tiffField0.getTag());
      assertEquals(112, tiffField0.getOffset());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-1376), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2895), "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-202), 4, fieldTypeDouble0, 65535, 65535, byteArray0, (ByteOrder) null, (-2895));
      tiffField0.getValue();
      assertEquals((-202), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-2895), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(27, (-349), fieldTypeShort0, (-894L), 829L, byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(829, tiffField0.getOffset());
      assertEquals((-349), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 5, fieldTypeShort0, 1L, 5, byteArray0, byteOrder0, (-622));
      int int0 = tiffField0.getTag();
      assertEquals(5, tiffField0.getOffset());
      assertEquals((-622), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1591), 0, (FieldType) null, 3021L, (-1591), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-1591), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1591), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-61), "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-61), 920, fieldTypeAscii0, 920, 920, byteArray0, byteOrder0, (byte)8);
      String string0 = tiffField0.getStringValue();
      assertEquals((-61), tiffField0.getTag());
      assertEquals(920, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(920, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2089443549, 34859, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2089443549, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(34859, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2787), 406, fieldTypeByte0.RATIONAL, 0L, (byte)112, byteArray0, byteOrder0, (-1376));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2787), tiffField0.getTag());
      assertEquals(406, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getOffset());
      assertEquals((-1376), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 565, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (-2146746945));
      tiffField0.getOffset();
      assertEquals(565, tiffField0.getDirectoryType());
      assertEquals((-2146746945), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(592, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 592, 3, byteArray0, byteOrder0, 7);
      int int0 = tiffField0.getOffset();
      assertEquals(3, int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)40, (-1840700268), fieldTypeByte0.SSHORT, (byte)40, (-210L), byteArray0, byteOrder0, 2398);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2398, tiffField0.getSortHint());
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals(40, int0);
      assertEquals((-210), tiffField0.getOffset());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-99);
      TiffField tiffField0 = new TiffField((-1522), (-313), fieldTypeShort0, (-1840700268), 65535, byteArray0, byteOrder0, 65535);
      assertEquals(613566760, tiffField0.getBytesLength());
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-313), tiffField0.getDirectoryType());
      assertEquals((-25344), int0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-1522), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2467), 10, fieldTypeAscii0.LONG, 1L, 207L, byteArray0, byteOrder0, 2255);
      tiffField0.getIntValue();
      assertEquals(2255, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals((-2467), tiffField0.getTag());
      assertEquals(207, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(491, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)108;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 1L, (-5672L), byteArray0, byteOrder0, 24);
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals((-5672), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-5);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(856, 856, fieldTypeByte0, 1L, 856, byteArray0, byteOrder0, (-690));
      tiffField0.getIntValue();
      assertEquals(856, tiffField0.getOffset());
      assertEquals((-690), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(856, tiffField0.getTag());
      assertEquals(856, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(511, (String) null);
      TiffField tiffField0 = new TiffField(305, 80, fieldTypeLong0, 29296L, 50964, byteArray0, byteOrder0, 50964);
      tiffField0.getFieldTypeName();
      assertEquals(50964, tiffField0.getOffset());
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getTag());
      assertEquals(50964, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(592, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 592, 3, byteArray0, byteOrder0, 7);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (-2781), fieldTypeRational0, 0, (-2015L), byteArray0, (ByteOrder) null, (byte) (-82));
      tiffField0.getFieldType();
      assertEquals((-2015), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2781), tiffField0.getDirectoryType());
      assertEquals((-82), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1408), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-650), (-650), fieldTypeByte0, 1973L, (-1832L), byteArray0, byteOrder0, (byte)54);
      tiffField0.getFieldType();
      assertEquals(54, tiffField0.getSortHint());
      assertEquals((-650), tiffField0.getTag());
      assertEquals((-1832), tiffField0.getOffset());
      assertEquals((-650), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(592, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3, 4027, fieldTypeLong0, 592, 3, byteArray0, byteOrder0, 532);
      tiffField0.getFieldType();
      assertEquals(3, tiffField0.getOffset());
      assertEquals(4027, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(532, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146221905), (byte)21, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, (-2146993465));
      tiffField0.getDoubleValue();
      assertEquals((-2146221905), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-2146993465), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)62;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 4231, fieldTypeShort0, 1L, (byte)62, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(62, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4231, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3, "O=@_6H8!");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-20);
      TiffField tiffField0 = new TiffField(2146771145, 3, fieldTypeLong0, 1L, (-985L), byteArray0, byteOrder0, (byte)102);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-985), tiffField0.getOffset());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(2146771145, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      tiffField0.getDoubleArrayValue();
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getOffset());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(22, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1370), "K");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4055), 0, fieldTypeShort0, (-4055), 0L, byteArray0, byteOrder0, 157);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4055), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(157, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(56, (-1717986917), fieldTypeShort0, (byte)0, (-2656L), byteArray0, (ByteOrder) null, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(56, tiffField0.getTag());
      assertEquals((-1717986917), int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2656), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1687, 1, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(1687, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3091), (-655), (FieldType) null, (-655), (-1717986917), byteArray0, byteOrder0, 33451);
      long long0 = tiffField0.getCount();
      assertEquals((-3091), tiffField0.getTag());
      assertEquals(33451, tiffField0.getSortHint());
      assertEquals((-655L), long0);
      assertEquals((-655), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2895), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(521, 50, fieldTypeDouble0, (byte)0, (-1217L), byteArray0, byteOrder0, 521);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1217), tiffField0.getOffset());
      assertEquals(521, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(521, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(737, 737, fieldTypeByte0, 4L, (-1086L), byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getBytesLength();
      assertEquals(737, tiffField0.getTag());
      assertEquals(737, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals((-1086), tiffField0.getOffset());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2895), "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-202), 4, fieldTypeDouble0, 65535, 65535, byteArray0, (ByteOrder) null, (-2895));
      tiffField0.getByteOrder();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-202), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2895), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1106, 0, fieldTypeShort0, 41L, 0, byteArray0, byteOrder0, 2537);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2537, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getBytesLength());
      assertEquals(1106, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (-2781), fieldTypeRational0, 0, (-2015L), byteArray0, (ByteOrder) null, (byte) (-82));
      tiffField0.getByteArrayValue();
      assertEquals((-2015), tiffField0.getOffset());
      assertEquals((-2781), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-858), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeAscii0, (-843L), 0L, byteArray0, byteOrder0, 2915);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)40, 5, fieldTypeDouble0, 5, (byte)40, byteArray0, byteOrder0, (byte)40);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("# kxw`-Q9r");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(40, tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(40, tiffField0.getTag());
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(900, 900, fieldTypeRational0, 900, 900, (byte[]) null, byteOrder0, 900);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-42), (-42), fieldTypeShort0, (-42), (-42), byteArray0, byteOrder0, (-42));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-378L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2843, 2843, (FieldType) null, 2843, (-1L), byteArray0, (ByteOrder) null, 2843);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeShort0, (-15), (-15), byteArray0, byteOrder0, (-15));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1L, 1, byteArray0, byteOrder0, 818);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(27, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1093), fieldTypeRational0, 27, (-1093), byteArray0, byteOrder0, (-1093));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, (-288L), (-288L), byteArray0, byteOrder0, 2789);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 1L, 1366L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 45, fieldTypeShort0, 45, 16, (byte[]) null, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-9), (-9), fieldTypeRational0, (-9), (-9), byteArray0, byteOrder0, (-9));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-378L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, (FieldType) null, 2, 0L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, (FieldType) null, 13, 13, byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 878, fieldTypeRational0, 40094, 40094, byteArray0, byteOrder0, 878);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-18), (-18), fieldTypeRational0, (-18), (-18), byteArray0, byteOrder0, (-18));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 249L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[301];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-52), (-52), fieldTypeRational0, 1L, 867, byteArray0, byteOrder0, 867);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, (-1717986917), (-1717986917), (byte[]) null, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-24), (-24), fieldTypeRational0, (-24), (-24), byteArray0, byteOrder0, (-24));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(48139, 1, (FieldType) null, 28, 13648L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 878, fieldTypeRational0, 40094, 40094, byteArray0, byteOrder0, 878);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(898, 898, (FieldType) null, 898, 898, byteArray0, byteOrder0, 898);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeRational0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-16), (-16), fieldTypeRational0, (-16), (-16), byteArray0, byteOrder0, (-16));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-806), (-806), fieldTypeShort0, (-1L), (-806), byteArray0, byteOrder0, (-806));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(425, 3020, fieldTypeShort0, (-1336L), 255L, byteArray0, byteOrder0, 425);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Emhv");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Emhv");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50974, 50974, fieldTypeLong0, (-4569L), (-4569L), byteArray0, byteOrder0, 50974);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1411, 1, fieldTypeShort0.DOUBLE, 1, 0L, byteArray0, (ByteOrder) null, 1411);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(987, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(999, 0, fieldTypeAscii0.IFD, 4L, 0, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4231, 1660, fieldTypeByte0, 40L, 1660, byteArray0, (ByteOrder) null, (byte)20);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(1660, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(4231, tiffField0.getTag());
      assertEquals(1660, tiffField0.getDirectoryType());
      assertEquals(40L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3840), "\r:.'#% )^MaNMfX");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, 0, fieldTypeAscii0, (-411L), 745L, byteArray0, byteOrder0, 351);
      tiffField0.getByteOrder();
      assertEquals(351, tiffField0.getSortHint());
      assertEquals(745, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(41492, tiffField0.getTag());
      assertEquals((-411), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34732, 34732, fieldTypeByte0, 34732, 34732, (byte[]) null, byteOrder0, 34732);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, (FieldType) null, (-400L), (-2840L), byteArray0, byteOrder0, 13);
      tiffField0.getFieldType();
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-2840), tiffField0.getOffset());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals((-400L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeShort0, 28, 28, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeByte0, 20, 20, (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(917, 917, fieldTypeRational0, 917, 917, (byte[]) null, byteOrder0, 917);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(56, (-1717986917), fieldTypeShort0, (byte)0, (-2656L), byteArray0, (ByteOrder) null, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2656), int0);
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), (-1), fieldTypeByte0, (-544L), (-1), byteArray0, byteOrder0, 4231);
      tiffField0.getTagInfo();
      assertEquals((-1279), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-544L), tiffField0.getCount());
      assertEquals(4231, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(592, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(592, 7, fieldTypeShort0, 32, 10L, byteArray0, byteOrder0, 108);
      int int0 = tiffField0.getTag();
      assertEquals(10, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(592, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-858), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2082, 513, fieldTypeAscii0, 4231L, (byte)7, byteArray0, byteOrder0, 2082);
      long long0 = tiffField0.getCount();
      assertEquals(7, tiffField0.getOffset());
      assertEquals(2082, tiffField0.getTag());
      assertEquals(513, tiffField0.getDirectoryType());
      assertEquals(4231L, long0);
      assertEquals(2082, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-67), (byte) (-124), fieldTypeByte0, (-132L), 1L, byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-67), tiffField0.getTag());
      assertEquals((-132), int0);
      assertEquals((-124), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-110), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2128, 2128, fieldTypeDouble0, 2128, 2128, byteArray0, byteOrder0, 2128);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@23445781 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(48144, 48144, fieldTypeLong0, 48144, 48144, byteArray0, byteOrder0, 48144);
      tiffField0.getIntValueOrArraySum();
      assertEquals(48144L, tiffField0.getCount());
      assertEquals(192576, tiffField0.getBytesLength());
      assertEquals(48144, tiffField0.getDirectoryType());
      assertEquals(48144, tiffField0.getTag());
      assertEquals(48144, tiffField0.getOffset());
      assertEquals(48144, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1972, 1972, fieldTypeRational0, 1972, 1972, byteArray0, byteOrder0, 1972);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6b455954 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(944, 944, fieldTypeFloat0, 944, 944, byteArray0, byteOrder0, 944);
      tiffField0.getDoubleArrayValue();
      assertEquals(944, tiffField0.getSortHint());
      assertEquals(944, tiffField0.getOffset());
      assertEquals(944, tiffField0.getTag());
      assertEquals(944L, tiffField0.getCount());
      assertEquals(3776, tiffField0.getBytesLength());
      assertEquals(944, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(40, doubleArray0.length);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 5, 5, byteArray0, byteOrder0, 5);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, doubleArray0.length);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, byteArray0, byteOrder0, 8);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2127, 2127, fieldTypeDouble0, 2127, 2127, byteArray0, byteOrder0, 2127);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@72fe6deb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      tiffField0.getIntArrayValue();
      assertEquals(13L, tiffField0.getCount());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.ASCII, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@15fd8fc1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      String string0 = tiffField0.getTagName();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xd)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[288];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1201, 1201, fieldTypeFloat0, 1201, 1201, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(1201, tiffField0.getOffset());
      assertEquals(1201, tiffField0.getDirectoryType());
      assertEquals(4804, tiffField0.getBytesLength());
      assertEquals("1201 (0x4b1: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (72) (1201 Float)", string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeByte0, 30, 30, byteArray0, byteOrder0, 30);
      String string0 = tiffField0.toString();
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals("30 (0x1e: Unknown Tag): 0, 0, 0, 0 (30 Undefined)", string0);
      assertEquals(30, tiffField0.getOffset());
      assertEquals(30, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1272, 1272, fieldTypeFloat0, 1272, 1272, byteArray0, byteOrder0, 1272);
      String string0 = tiffField0.toString();
      assertEquals(1272, tiffField0.getDirectoryType());
      assertEquals(1272, tiffField0.getSortHint());
      assertEquals(1272, tiffField0.getOffset());
      assertEquals(5088, tiffField0.getBytesLength());
      assertEquals("1272 (0x4f8: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1272 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1056, 1056, fieldTypeDouble0, 1056, 1056, byteArray0, byteOrder0, 1056);
      String string0 = tiffField0.toString();
      assertEquals(1056, tiffField0.getSortHint());
      assertEquals(1056, tiffField0.getDirectoryType());
      assertEquals(8448, tiffField0.getBytesLength());
      assertEquals("1056 (0x420: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1056 Double)", string0);
      assertEquals(1056, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2127, 2127, fieldTypeDouble0, 2127, 2127, byteArray0, byteOrder0, 2127);
      tiffField0.dump();
      assertEquals(2127, tiffField0.getOffset());
      assertEquals(2127, tiffField0.getTag());
      assertEquals(2127, tiffField0.getSortHint());
      assertEquals(2127L, tiffField0.getCount());
      assertEquals(17016, tiffField0.getBytesLength());
      assertEquals(2127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50974, 50974, fieldTypeLong0, 50974, 50974, byteArray0, byteOrder0, 50974);
      String string0 = tiffField0.toString();
      assertEquals(50974, tiffField0.getSortHint());
      assertEquals(50974, tiffField0.getDirectoryType());
      assertEquals(203896, tiffField0.getBytesLength());
      assertEquals("50974 (0xc71e: SubTileBlockSize): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (50974 SLong)", string0);
      assertEquals(50974, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(387, 128, fieldTypeByte0, 128, 128, byteArray0, byteOrder0, 69);
      String string0 = tiffField0.toString();
      assertEquals(128, tiffField0.getDirectoryType());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getOffset());
      assertEquals("387 (0x183: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (128) (128 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[399];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2723, 2723, fieldTypeShort0, 2723, 2723, byteArray0, byteOrder0, 2723);
      String string0 = tiffField0.toString();
      assertEquals(5446, tiffField0.getBytesLength());
      assertEquals(2723, tiffField0.getSortHint());
      assertEquals(2723, tiffField0.getOffset());
      assertEquals("2723 (0xaa3: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (199) (2723 SShort)", string0);
      assertEquals(2723, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[399];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2723, 4708, fieldTypeShort0.ASCII, 4708, 4708, byteArray0, byteOrder0, 2723);
      tiffField0.toString();
      assertEquals(4708, tiffField0.getOffset());
      assertEquals(4708, tiffField0.getDirectoryType());
      assertEquals(4708L, tiffField0.getCount());
      assertEquals(4708, tiffField0.getBytesLength());
      assertEquals(2723, tiffField0.getSortHint());
      assertEquals(2723, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[399];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1976, 4365, fieldTypeAscii0, 4365, 1976, byteArray0, byteOrder0, 4365);
      tiffField0.dump();
      assertEquals(1976, tiffField0.getOffset());
      assertEquals(1976, tiffField0.getTag());
      assertEquals(4365, tiffField0.getBytesLength());
      assertEquals(4365, tiffField0.getSortHint());
      assertEquals(4365L, tiffField0.getCount());
      assertEquals(4365, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0, 3, 3, byteArray0, byteOrder0, 3);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50341, 50341);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), (-1), fieldTypeByte0, (-544L), (-1), byteArray0, byteOrder0, 4231);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1279), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(4231, tiffField0.getSortHint());
      assertEquals((-544L), tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(592, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 5, fieldTypeShort0, (-1L), (-1717986917), byteArray0, (ByteOrder) null, 56);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-1L), tiffField0.getCount());
      assertTrue(boolean0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getFieldTypeName();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 802, fieldTypeShort0, 802, 2201L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2201, tiffField0.getOffset());
      assertEquals(802L, tiffField0.getCount());
      assertEquals(802, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0, 3, 3, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getSortHint();
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, int0);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals("22 (0x16: Unknown Tag): ", string0);
      assertEquals(22, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 4, (-10996L), (byte[]) null, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2895), "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 558, 255L, byteArray0, (ByteOrder) null, (-1614));
      tiffField0.getDoubleArrayValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(4464, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(558L, tiffField0.getCount());
      assertEquals((-1614), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(13L, tiffElement0.offset);
      assertEquals(13, tiffField0.getTag());
  }
}
