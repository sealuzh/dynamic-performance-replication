/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 11:10:50 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-44);
      byteArray0[4] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-506), 24, fieldTypeRational0, 24, 24, byteArray0, byteOrder0, 682);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals((-506), tiffField0.getTag());
      assertEquals(8, int0);
      assertEquals(24, tiffField0.getOffset());
      assertEquals(682, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-506), 24, fieldTypeRational0, 24, 24, byteArray0, byteOrder0, 682);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getOffset());
      assertEquals((-506), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(682, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4703), 150, fieldTypeLong0.FLOAT, 0L, 1011L, byteArray0, byteOrder0, 3007);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1011, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-4703), tiffField0.getTag());
      assertEquals(3007, tiffField0.getSortHint());
      assertEquals(150, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 206, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 53);
      int int0 = tiffField0.getTag();
      assertEquals(1, int0);
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(206, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1745), 50, fieldTypeDouble0, 809, (-1338), byteArray0, byteOrder0, 1175);
      int int0 = tiffField0.getTag();
      assertEquals((-1745), int0);
      assertEquals(1175, tiffField0.getSortHint());
      assertEquals((-1338), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1715), fieldTypeAscii0, 715L, 4L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1715), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1715), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1715), fieldTypeAscii0, 715L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1715), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3351, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 468L, 1548L, byteArray0, byteOrder0, (-1171));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1171), int0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1548, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(102, 0, fieldTypeDouble0, 908L, 908L, byteArray0, byteOrder0, 102);
      int int0 = tiffField0.getOffset();
      assertEquals(908, int0);
      assertEquals(102, tiffField0.getTag());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 50, fieldTypeLong0, 2020L, (-388L), byteArray0, byteOrder0, (-863));
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-863), tiffField0.getSortHint());
      assertEquals((-388), int0);
      assertEquals(206, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4162, (byte) (-59), fieldTypeShort0, (byte)38, (-435), byteArray0, byteOrder0, (-1265));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals(38, int0);
      assertEquals((-435), tiffField0.getOffset());
      assertEquals(4162, tiffField0.getTag());
      assertEquals((-1265), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(71, 3917, fieldTypeByte0.IFD, 3917, 3917, byteArray0, byteOrder0, 1854);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3917, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getTag());
      assertEquals(1854, tiffField0.getSortHint());
      assertEquals(3917, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      TiffField tiffField0 = new TiffField((-2003), 40093, fieldTypeDouble0.SBYTE, 1L, 1L, byteArray0, byteOrder0, (byte) (-25));
      tiffField0.getIntValue();
      assertEquals((-2003), tiffField0.getTag());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(40093, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-55);
      TiffField tiffField0 = new TiffField(0, 150, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 1063);
      tiffField0.getIntValue();
      assertEquals(1063, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(150, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1715), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1715), fieldTypeAscii0, 715L, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1715), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(120, 3938, fieldTypeDouble0, 120, 120, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(3938, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getTag());
      assertEquals(120, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "... (");
      TiffField tiffField0 = new TiffField(0, (-1807), fieldTypeShort0, 0, 1L, byteArray0, byteOrder0, (byte)95);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1807), tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-119), "... (");
      TiffField tiffField0 = new TiffField(0, (-1807), fieldTypeShort0, 0, 1L, byteArray0, byteOrder0, (byte)95);
      tiffField0.getFieldType();
      assertEquals((-1807), tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1112), (-1112), fieldTypeLong0.SRATIONAL, 0L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1112), tiffField0.getTag());
      assertEquals((-1112), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50973, (-2146358721), fieldTypeFloat0.LONG, 1L, 20, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(50973, tiffField0.getTag());
      assertEquals((-2146358721), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-57);
      TiffField tiffField0 = new TiffField(4, 1153, fieldTypeDouble0.FLOAT, 1, (-2365L), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleValue();
      assertEquals((-2365), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(1153, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-55);
      TiffField tiffField0 = new TiffField(0, 150, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 1063);
      tiffField0.getDoubleValue();
      assertEquals(1063, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(150, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, (-1L), 583L, byteArray0, byteOrder0, (-4700));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, int0);
      assertEquals((-4700), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(583, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-456), (-2408), (FieldType) null, 1L, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-456), tiffField0.getTag());
      assertEquals((-2408), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3166, 0, (FieldType) null, 1762L, (-1529L), byteArray0, byteOrder0, (byte)124);
      tiffField0.getCount();
      assertEquals(3166, tiffField0.getTag());
      assertEquals((-1529), tiffField0.getOffset());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1950), (-1329), fieldTypeShort0, (-2456L), 4L, byteArray0, byteOrder0, 63);
      tiffField0.getCount();
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1950), tiffField0.getTag());
      assertEquals((-1329), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4703), 150, fieldTypeLong0.FLOAT, 0L, 1011L, byteArray0, byteOrder0, 3007);
      tiffField0.getBytesLength();
      assertEquals(150, tiffField0.getDirectoryType());
      assertEquals((-4703), tiffField0.getTag());
      assertEquals(1011, tiffField0.getOffset());
      assertEquals(3007, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2394, 2394, fieldTypeLong0, (-391L), 1110L, byteArray0, byteOrder0, 129);
      tiffField0.getBytesLength();
      assertEquals(129, tiffField0.getSortHint());
      assertEquals(1110, tiffField0.getOffset());
      assertEquals(2394, tiffField0.getTag());
      assertEquals(2394, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1715), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1715), fieldTypeAscii0, 715L, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1715), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-2608L), byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getByteArrayValue();
      assertEquals((-2608), tiffField0.getOffset());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(923, 993, fieldTypeFloat0, 993, (-2021L), byteArray0, byteOrder0, 923);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "923 (0x39b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0 (993 Float)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1680), "ImageDescription");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2342), 0, fieldTypeLong0, 2665L, 0L, byteArray0, byteOrder0, (byte)0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2342), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3389), "COI/!HzWfy");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(112, 61, fieldTypeLong0, (-3389), 112, byteArray0, byteOrder0, (byte)41);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-318), (-318), fieldTypeDouble0, (-913L), (-913L), byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 3142);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1228), (-1228), fieldTypeShort0, (-1228), (-1228), byteArray0, byteOrder0, (byte) (-5));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(559, 0, fieldTypeLong0.SRATIONAL, (-1), 0L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, 607L, 1L, byteArray0, byteOrder0, (byte) (-13));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, (-238), fieldTypeDouble0, 2147401004, 1L, byteArray0, byteOrder0, 36867);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(1881);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-280), (-280), (FieldType) null, 772L, 26L, byteArray0, byteOrder0, (-1112));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(150, (-299), fieldTypeLong0, (-2081L), 4L, byteArray0, byteOrder0, (-1));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ax>Vmu@sTi");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(50, 2763, fieldTypeLong0, 1L, 2763, byteArray0, (ByteOrder) null, 4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(2763, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(2763, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 50, fieldTypeLong0, 2020L, (-388L), byteArray0, byteOrder0, (-863));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(206, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-388), tiffField0.getOffset());
      assertEquals((-863), tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2141787403), (-2141787403), fieldTypeAscii0.DOUBLE, 48129, 48129, byteArray0, (ByteOrder) null, 621);
      tiffField0.getByteOrder();
      assertEquals((-2141787403), tiffField0.getDirectoryType());
      assertEquals(621, tiffField0.getSortHint());
      assertEquals(48129, tiffField0.getOffset());
      assertEquals((-2141787403), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 206, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 53);
      tiffField0.getByteArrayValue();
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(206, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-761), 0, (FieldType) null, 259, 0, byteArray0, byteOrder0, 259);
      tiffField0.getFieldType();
      assertEquals((-761), tiffField0.getTag());
      assertEquals(259, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1680), "ImageDescription");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2342), 0, fieldTypeLong0, 2689L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-2342), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65538, 65538, fieldTypeShort0, 2275L, 1119L, byteArray0, byteOrder0, (byte)91);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-435), (-435), fieldTypeDouble0.SHORT, 150, 150, byteArray0, byteOrder0, 150);
      tiffField0.getValue();
      assertEquals((-435), tiffField0.getDirectoryType());
      assertEquals((-435), tiffField0.getTag());
      assertEquals(150, tiffField0.getOffset());
      assertEquals(150, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1965), (FieldType) null, (byte)0, 0L, byteArray0, byteOrder0, (-33));
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1965), tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 206, fieldTypeLong0, 448L, 21L, byteArray0, byteOrder0, 48132);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(48132, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(206, tiffField0.getTag());
      assertEquals(206, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 2147401004, fieldTypeRational0, 8, 1471L, byteArray0, byteOrder0, 2147401004);
      int int0 = tiffField0.getTag();
      assertEquals(2147401004, tiffField0.getDirectoryType());
      assertEquals(2147401004, tiffField0.getSortHint());
      assertEquals(1471, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-244), 0, fieldTypeDouble0.SRATIONAL, 0, (-244), byteArray0, byteOrder0, (-244));
      tiffField0.getCount();
      assertEquals((-244), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-244), tiffField0.getSortHint());
      assertEquals((-244), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(483, 483, fieldTypeDouble0, 1863L, 4L, byteArray0, byteOrder0, 129);
      tiffField0.getBytesLength();
      assertEquals(129, tiffField0.getSortHint());
      assertEquals(483, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(483, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeLong0, 70, 70, byteArray0, byteOrder0, 70);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 806L, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3351, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3161), 3351, fieldTypeDouble0, 1810L, (-3161), byteArray0, byteOrder0, (byte)14);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1248e41e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-245), 50740, fieldTypeDouble0, 1L, (-245), byteArray0, byteOrder0, (-245));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals((-245), tiffField0.getOffset());
      assertEquals((-245), tiffField0.getTag());
      assertEquals((-245), tiffField0.getSortHint());
      assertEquals(50740, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(41453, 8, fieldTypeRational0, 41453, (-4281L), byteArray0, byteOrder0, (-2141787403));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(315, "");
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeAscii0, 1, (-2275L), byteArray0, byteOrder0, (byte)53);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(150, 2147401004, fieldTypeDouble0.FLOAT, 150, 150, byteArray0, byteOrder0, 4321);
      tiffField0.getDoubleArrayValue();
      assertEquals(150L, tiffField0.getCount());
      assertEquals(150, tiffField0.getOffset());
      assertEquals(4321, tiffField0.getSortHint());
      assertEquals(150, tiffField0.getTag());
      assertEquals(2147401004, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(483, 0, fieldTypeDouble0.FLOAT, 4L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(483, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 150, (-3437L), byteArray0, byteOrder0, 150);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3437), tiffField0.getOffset());
      assertEquals(150, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(150L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(154, 65, fieldTypeShort0, 154, 154, byteArray0, byteOrder0, (-5));
      tiffField0.getDoubleArrayValue();
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(154, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(154, tiffField0.getTag());
      assertEquals(154L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65517, 65517, fieldTypeLong0.RATIONAL, 680L, 2634L, byteArray0, byteOrder0, 65517);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2634, tiffField0.getOffset());
      assertEquals(65517, tiffField0.getSortHint());
      assertEquals(65517, tiffField0.getDirectoryType());
      assertEquals(65517, tiffField0.getTag());
      assertEquals(680L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)107, (byte)0, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 6);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(107, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-28), 50, fieldTypeDouble0, 182L, 364L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-28), tiffField0.getTag());
      assertEquals(364, tiffField0.getOffset());
      assertEquals(182L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1715), (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1715), 1, fieldTypeAscii0, (byte)1, (byte)50, byteArray0, (ByteOrder) null, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-736), fieldTypeShort0, (byte)91, (-418L), byteArray0, byteOrder0, (byte)91);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(91L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals((-736), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals((-418), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-736), fieldTypeShort0, (byte)91, (-1562L), byteArray0, byteOrder0, (byte)91);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals((-736), tiffField0.getDirectoryType());
      assertEquals((-1562), tiffField0.getOffset());
      assertEquals(91L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65517, 65517, fieldTypeLong0.SRATIONAL, 680L, 2634L, byteArray0, byteOrder0, 1681);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeShort0.RATIONAL, (-2147483648L), (-692L), byteArray0, byteOrder0, 0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-692), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50973, (-2146358721), fieldTypeFloat0.SLONG, 1L, 20, byteArray0, byteOrder0, (-1));
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals((-2146358721), tiffField0.getDirectoryType());
      assertEquals(50973, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(206, 206, fieldTypeLong0, 448L, 21L, byteArray0, byteOrder0, 48132);
      tiffField0.getIntArrayValue();
      assertEquals(206, tiffField0.getDirectoryType());
      assertEquals(1792, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(448L, tiffField0.getCount());
      assertEquals(48132, tiffField0.getSortHint());
      assertEquals(206, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, 1153, fieldTypeDouble0.FLOAT, 1, (-2365L), byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(56, "{I4");
      TiffField tiffField0 = new TiffField(9, 1283, fieldTypeAscii0, 0L, 2247L, byteArray0, byteOrder0, (-4010));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(9, tiffField0.getTag());
      assertEquals((-4010), tiffField0.getSortHint());
      assertEquals(2247, tiffField0.getOffset());
      assertEquals(1283, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-3682), 72, fieldTypeByte0, 3109L, 6464L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffff19e)", string0);
      assertEquals(6464, tiffField0.getOffset());
      assertEquals(72, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, (-238), fieldTypeDouble0, 2147401004, 1L, byteArray0, byteOrder0, 36867);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSSpeed", string0);
      assertEquals(36867, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-238), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65542, 45, fieldTypeFloat0, 65542, 45, byteArray0, byteOrder0, 65542);
      String string0 = tiffField0.toString();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(65542, tiffField0.getSortHint());
      assertEquals(262168, tiffField0.getBytesLength());
      assertEquals("65542 (0x10006: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65542 Float)", string0);
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-3682), 72, fieldTypeByte0, 3109L, 6464L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3109, tiffField0.getBytesLength());
      assertEquals(6464, tiffField0.getOffset());
      assertEquals((-3682), tiffField0.getTag());
      assertEquals(3109L, tiffField0.getCount());
      assertEquals(72, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-93), (-2599), fieldTypeByte0, 63L, (-1), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(63, tiffField0.getBytesLength());
      assertEquals("-93 (0xffffffa3: Unknown Tag): 0, 0, 0 (63 Byte)", string0);
      assertEquals((-2599), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(120, 3938, fieldTypeDouble0, 120, 120, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(960, tiffField0.getBytesLength());
      assertEquals("120 (0x78: Unknown Tag): 0.0, 0.0 (120 )", string0);
      assertEquals(3938, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeLong0, 70, 70, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.toString();
      assertEquals(70, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals("70 (0x46: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (70 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeShort0, 62, 62, byteArray0, byteOrder0, 62);
      String string0 = tiffField0.toString();
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getOffset());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals("62 (0x3e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (62 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeFloat0.ASCII, 1732L, 72, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(1732, tiffField0.getBytesLength());
      assertEquals(72, tiffField0.getTag());
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(1732L, tiffField0.getCount());
      assertEquals(72, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1715), (String) null);
      byte[] byteArray0 = new byte[2];
      MockFile mockFile0 = new MockFile("Unexpected EOF", "");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      TiffField tiffField0 = new TiffField((-1715), 1, fieldTypeAscii0, (byte)1, (byte)50, byteArray0, (ByteOrder) null, (-1));
      tiffField0.dump((PrintWriter) mockPrintWriter0, "ExposureTime");
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(86L, mockFile0.length());
      assertEquals((-1715), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-2608L), byteArray0, byteOrder0, (byte) (-111));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-2608), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-736), fieldTypeShort0, (byte)91, (-1562L), byteArray0, byteOrder0, (byte)91);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)91, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-736), tiffField0.getDirectoryType());
      assertEquals((-1562), tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1228), (-1228), fieldTypeShort0, (-1228), (-1228), byteArray0, byteOrder0, (byte) (-5));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1228), (byte)91);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals((-1228), tiffField0.getTag());
      assertEquals((-1228), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals((-1228), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-93), (byte) (-93), fieldTypeLong0, (byte) (-93), 0L, byteArray0, byteOrder0, 129);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-93), tiffField0.getDirectoryType());
      assertEquals(129, tiffField0.getSortHint());
      assertEquals((-93), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "org.apache.commons.imaging.formats.tiff.constants.GdalLibraryTagConstants");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4364, 4364, fieldTypeLong0, 4364, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4364, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4364, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-236), fieldTypeDouble0, 1941L, 8, byteArray0, byteOrder0, (-1639));
      tiffField0.dump();
      assertEquals((-236), tiffField0.getDirectoryType());
      assertEquals((-1639), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(1941L, tiffField0.getCount());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(239, 239, fieldTypeLong0, 239, (-1L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, int0);
      assertEquals(239, tiffField0.getTag());
      assertEquals(239, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-93), (byte) (-93), fieldTypeLong0, (byte) (-93), 0L, byteArray0, byteOrder0, 129);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(129, tiffField0.getSortHint());
      assertEquals("-93 (0xffffffa3: Unknown Tag): ", string0);
      assertEquals((-93), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(41453, 8, fieldTypeRational0, 41453, (-4281L), byteArray0, byteOrder0, (-2141787403));
      tiffField0.dump();
      assertEquals(331624, tiffField0.getBytesLength());
      assertEquals(41453L, tiffField0.getCount());
      assertEquals((-2141787403), tiffField0.getSortHint());
      assertEquals((-4281), tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(41453, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(129, (-807), fieldTypeLong0, 6497L, 6497L, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(129, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(6497L, tiffElement0.offset);
      assertEquals((-807), tiffField0.getDirectoryType());
  }
}
