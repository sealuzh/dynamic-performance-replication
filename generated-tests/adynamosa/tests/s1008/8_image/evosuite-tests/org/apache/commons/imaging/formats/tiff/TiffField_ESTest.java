/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 09:19:04 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 0, fieldTypeShort0, 8, 22464L, byteArray0, byteOrder0, (byte)9);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(22464, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1101, ")");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40093, 735, fieldTypeFloat0, (byte) (-10), 368L, byteArray0, (ByteOrder) null, 40963);
      String string0 = tiffField0.getValueDescription();
      assertEquals(735, tiffField0.getDirectoryType());
      assertEquals(40093, tiffField0.getTag());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(40963, tiffField0.getSortHint());
      assertEquals(368, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2376), "[short[]: ");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33429, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(33429, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34665, 34665, fieldTypeRational0, 34665, 876L, byteArray0, (ByteOrder) null, 2671);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34665, tiffField0.getTag());
      assertEquals(876, tiffField0.getOffset());
      assertEquals(34665, tiffField0.getDirectoryType());
      assertEquals(2671, tiffField0.getSortHint());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1847, (byte)52, fieldTypeFloat0, (byte)0, 3154L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(1847, int0);
      assertEquals(3154, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), (byte) (-62), fieldTypeShort0, 0, (-14L), byteArray0, byteOrder0, (-836));
      int int0 = tiffField0.getTag();
      assertEquals((-62), int0);
      assertEquals((-836), tiffField0.getSortHint());
      assertEquals((-14), tiffField0.getOffset());
      assertEquals((-62), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-1), fieldTypeAscii0, 3, 644L, byteArray0, byteOrder0, (-1687));
      String string0 = tiffField0.getStringValue();
      assertEquals(3, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1687), tiffField0.getSortHint());
      assertEquals(644, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(4, 1, fieldTypeRational0, (byte)0, 1867L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1867, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(713, 0, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).ASCII).UNDEFINED, (-414L), 713, byteArray0, byteOrder0, (-1143));
      int int0 = tiffField0.getSortHint();
      assertEquals(713, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1143), int0);
      assertEquals(713, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1024, 3, fieldTypeRational0, (-2512L), (byte)0, byteArray0, (ByteOrder) null, 4);
      int int0 = tiffField0.getOffset();
      assertEquals(1024, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-380), 120, fieldTypeFloat0, 1L, (-380), byteArray0, byteOrder0, (-2874));
      int int0 = tiffField0.getOffset();
      assertEquals((-2874), tiffField0.getSortHint());
      assertEquals((-380), tiffField0.getTag());
      assertEquals((-380), int0);
      assertEquals(120, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)16;
      byteArray0[4] = (byte) (-124);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeFloat0.SRATIONAL, 3239, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(31, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1109), (byte)54, fieldTypeByte0, 1L, (-557L), byteArray0, byteOrder0, 850);
      tiffField0.getIntValueOrArraySum();
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals((-1109), tiffField0.getTag());
      assertEquals(850, tiffField0.getSortHint());
      assertEquals((-557), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, 48323, fieldTypeByte0.IFD, 1L, (-1L), byteArray0, byteOrder0, (-745));
      tiffField0.getIntValue();
      assertEquals(48323, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-745), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (byte)1, 3928L, byteArray0, byteOrder0, (-1634));
      tiffField0.getIntValue();
      assertEquals((-1634), tiffField0.getSortHint());
      assertEquals(3928, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-33);
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeLong0, 1L, (-1886L), byteArray0, (ByteOrder) null, 2790);
      tiffField0.getIntValue();
      assertEquals((-1886), tiffField0.getOffset());
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(341, tiffField0.getTag());
      assertEquals(2790, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1717986917), (String) null);
      TiffField tiffField0 = new TiffField(192, 192, fieldTypeAscii0, (-296L), (-2314L), byteArray0, byteOrder0, (-2820));
      tiffField0.getFieldTypeName();
      assertEquals(192, tiffField0.getTag());
      assertEquals(192, tiffField0.getDirectoryType());
      assertEquals((-2820), tiffField0.getSortHint());
      assertEquals((-2314), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)125, "");
      TiffField tiffField0 = new TiffField(2147192858, 459, fieldTypeAscii0, 255L, (byte)125, byteArray0, byteOrder0, 979);
      tiffField0.getFieldTypeName();
      assertEquals(125, tiffField0.getOffset());
      assertEquals(2147192858, tiffField0.getTag());
      assertEquals(979, tiffField0.getSortHint());
      assertEquals(459, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(669);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(513, 2093796556, (FieldType) null, 513, 1063L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(2093796556, tiffField0.getDirectoryType());
      assertEquals(513, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1063, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "=0=VO%R>^XH{w#=");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-550), 24, fieldTypeShort0, 0L, (byte)0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals((-550), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1717986917), (String) null);
      TiffField tiffField0 = new TiffField(2073432487, (-1322), fieldTypeAscii0, 179712L, 179712L, byteArray0, byteOrder0, 2062);
      tiffField0.getFieldType();
      assertEquals(179712, tiffField0.getOffset());
      assertEquals(2073432487, tiffField0.getTag());
      assertEquals((-1322), tiffField0.getDirectoryType());
      assertEquals(2062, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)9, 50, fieldTypeShort0, 1L, (byte) (-117), byteArray0, byteOrder0, 27);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals((-117), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-33);
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeLong0, 1L, (-1886L), byteArray0, (ByteOrder) null, 2790);
      tiffField0.getDoubleValue();
      assertEquals((-1886), tiffField0.getOffset());
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(2790, tiffField0.getSortHint());
      assertEquals(341, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2376), "[short[]: ");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33429, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(33429, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)3, (-6521), fieldTypeRational0.LONG, 50, (byte)95, byteArray0, (ByteOrder) null, (-6521));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(95, tiffField0.getOffset());
      assertEquals((-6521), tiffField0.getSortHint());
      assertEquals((-6521), int0);
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), (byte) (-62), fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, (-836));
      tiffField0.getCount();
      assertEquals((-62), tiffField0.getTag());
      assertEquals((-836), tiffField0.getSortHint());
      assertEquals((-62), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1066), 2394, fieldTypeFloat0.LONG, (byte)16, (-2636L), byteArray0, byteOrder0, (byte)16);
      tiffField0.getCount();
      assertEquals(2394, tiffField0.getDirectoryType());
      assertEquals((-2636), tiffField0.getOffset());
      assertEquals((-1066), tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-66), (byte)116, fieldTypeLong0, (byte)0, 4L, byteArray0, byteOrder0, (-4368));
      tiffField0.getBytesLength();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getTag());
      assertEquals(116, tiffField0.getDirectoryType());
      assertEquals((-4368), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4653, (-2210), fieldTypeLong0, 3931L, 0L, (byte[]) null, byteOrder0, (-3176));
      tiffField0.getBytesLength();
      assertEquals(4653, tiffField0.getTag());
      assertEquals((-2210), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3176), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-821), fieldTypeLong0, (byte)0, (-2414L), byteArray0, (ByteOrder) null, (byte)116);
      tiffField0.getByteOrder();
      assertEquals(116, tiffField0.getSortHint());
      assertEquals((-821), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-2414), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1109), (byte)54, fieldTypeByte0, 1L, (-557L), byteArray0, byteOrder0, 850);
      tiffField0.getByteArrayValue();
      assertEquals((-1109), tiffField0.getTag());
      assertEquals((-557), tiffField0.getOffset());
      assertEquals(850, tiffField0.getSortHint());
      assertEquals(54, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), (byte) (-62), fieldTypeShort0, 0, (-14L), byteArray0, byteOrder0, (-836));
      tiffField0.getByteArrayValue();
      assertEquals((-836), tiffField0.getSortHint());
      assertEquals((-62), tiffField0.getTag());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals((-14), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-380), 120, fieldTypeFloat0, 1L, (-380), byteArray0, byteOrder0, (-2874));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "-380 (0xfffffe84: Unknown Tag): java.lang.Float@0000000003 (1 Float)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(897, (-1873), (FieldType) null, 897, 897, (byte[]) null, byteOrder0, (-1544));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1908874353, 2061584302, fieldTypeDouble0, (byte) (-48), 2884, byteArray0, byteOrder0, (byte) (-47));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, (-467L), (-2268L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(192, 192, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).LONG).ASCII, (-296L), (-2314L), byteArray0, byteOrder0, (-2820));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(669);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(513, 2093796556, (FieldType) null, 513, 1063L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-30), 514, fieldTypeLong0.DOUBLE, (-6474), 2147483647L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1101, ")");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40093, 735, fieldTypeFloat0, (byte) (-10), 368L, byteArray0, (ByteOrder) null, 40963);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeFloat0.RATIONAL, 3239, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-1L), (-4778L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50974, 0, (FieldType) null, 50974, 0, byteArray0, byteOrder0, (byte) (-55));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("2W OWU");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0.BYTE, (-1L), 4L, byteArray0, byteOrder0, 1883);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3540), 1128, fieldTypeRational0, (-690L), (-1879L), byteArray0, byteOrder0, (-3540));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2319, 41987, fieldTypeByte0.IFD, 41987, 2319, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-821), fieldTypeLong0, (byte)0, (-2414L), byteArray0, (ByteOrder) null, (byte)116);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-821), tiffField0.getDirectoryType());
      assertEquals((-2414), tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(116, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1), fieldTypeFloat0, (byte)52, 3154L, byteArray0, byteOrder0, 1847);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1847, tiffField0.getSortHint());
      assertEquals(3154, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-380), 120, fieldTypeFloat0, 1L, (-380), byteArray0, byteOrder0, (-2874));
      tiffField0.getByteOrder();
      assertEquals((-380), tiffField0.getOffset());
      assertEquals((-380), tiffField0.getTag());
      assertEquals((-2874), tiffField0.getSortHint());
      assertEquals(120, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-1), fieldTypeAscii0, 3, 644L, byteArray0, byteOrder0, (-1687));
      tiffField0.getFieldType();
      assertEquals((-1687), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(644, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2376), "[short[]: ");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33429, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)8);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("33429 (0x8295: Unknown Tag):  (0 [short[]: )\n", charArrayWriter0.toString());
      assertEquals(45, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Gamma");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3554), 1419, fieldTypeAscii0, 0L, 1032L, byteArray0, byteOrder0, 24);
      tiffField0.getValue();
      assertEquals(1032, tiffField0.getOffset());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-3554), tiffField0.getTag());
      assertEquals(1419, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 50936, fieldTypeByte0, 50936, 50936, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50936, int0);
      assertEquals(50936, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-97L), 1253L, byteArray0, byteOrder0, (byte)85);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1253, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ";)hD0B*?8D7J|o");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-1236));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-1236), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 1982292598, fieldTypeByte0, (-350L), 2, byteArray0, byteOrder0, (byte)44);
      tiffField0.getCount();
      assertEquals(2, tiffField0.getTag());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(1982292598, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146576388, (-57), fieldTypeDouble0, (-57), 1L, byteArray0, byteOrder0, (byte)125);
      tiffField0.getBytesLength();
      assertEquals((-57), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(125, tiffField0.getSortHint());
      assertEquals(2146576388, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1066), fieldTypeFloat0, 1L, (-344L), byteArray0, byteOrder0, 961);
      tiffField0.getDoubleValue();
      assertEquals((-344), tiffField0.getOffset());
      assertEquals((-1066), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(961, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1854), 2319, fieldTypeByte0.SLONG, (byte)50, 1L, byteArray0, byteOrder0, (-745));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4873, 4873, fieldTypeLong0, 450L, (-2960L), byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2960), tiffField0.getOffset());
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(4873, tiffField0.getDirectoryType());
      assertEquals(4873, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 2147192858, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).IFD.ASCII).RATIONAL, 6, (-831L), byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1575, fieldTypeByte0, 0, 1L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6f4ba98d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-117), (byte) (-117), fieldTypeFloat0.DOUBLE, 92L, 40965L, byteArray0, byteOrder0, 65557);
      tiffField0.getDoubleArrayValue();
      assertEquals(65557, tiffField0.getSortHint());
      assertEquals((-117), tiffField0.getTag());
      assertEquals((-117), tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-293), (-1717986917), fieldTypeFloat0, 897L, (-1L), byteArray0, byteOrder0, (byte) (-69));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-293), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-69), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-27), (-293), fieldTypeLong0, 50, 2147483647L, byteArray0, byteOrder0, (-380));
      tiffField0.getDoubleArrayValue();
      assertEquals((-293), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-380), tiffField0.getSortHint());
      assertEquals((-27), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)45, 3807, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, (byte) (-62));
      tiffField0.getDoubleArrayValue();
      assertEquals((-62), tiffField0.getSortHint());
      assertEquals(3807, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 0, fieldTypeShort0, 8, 22464L, byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(22464, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-165), 13, fieldTypeRational0, 4L, 13, byteArray0, byteOrder0, (byte) (-17));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals((-165), tiffField0.getTag());
      assertEquals((-17), tiffField0.getSortHint());
      assertEquals(13, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1066), fieldTypeFloat0, 1L, (-344L), byteArray0, byteOrder0, 961);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1066), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(961, tiffField0.getSortHint());
      assertEquals((-344), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 0L, 45L, byteArray0, byteOrder0, (-293));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6554456a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-27), (-293), fieldTypeLong0, 50, 2147483647L, byteArray0, byteOrder0, (-380));
      tiffField0.getIntArrayValue();
      assertEquals((-293), tiffField0.getDirectoryType());
      assertEquals((-380), tiffField0.getSortHint());
      assertEquals((-27), tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 0, fieldTypeShort0, 8, 22464L, byteArray0, byteOrder0, (byte)9);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(22464, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)16, "");
      TiffField tiffField0 = new TiffField((byte)125, (byte)16, fieldTypeRational0, (byte)16, (byte)16, byteArray0, byteOrder0, 2146936518);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1999, fieldTypeRational0, 4L, (-6764L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1999, tiffField0.getDirectoryType());
      assertEquals((-6764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1800), 8, fieldType0, 1L, 1, byteArray0, byteOrder0, 1748);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1800), tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(1748, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 7, fieldTypeFloat0, 7, 65535, byteArray0, byteOrder0, 2884);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@331c18a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 40965, fieldTypeByte0, 16L, 2556L, byteArray0, byteOrder0, 2147388038);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@52c42f3c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-1), fieldTypeAscii0, 3, 644L, byteArray0, byteOrder0, (-1687));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1687), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(644, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1024, 3, fieldTypeRational0, (-2512L), (byte)0, byteArray0, (ByteOrder) null, 4);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x400)", string0);
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-1627), fieldTypeLong0, 255L, (-716L), byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getTagName();
      assertEquals((-716), tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1627), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals("GPSAltitude", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-410), (-410), fieldTypeFloat0, 1660, 8, byteArray0, byteOrder0, (-207));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-207), tiffField0.getSortHint());
      assertEquals((-410), tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(1660L, tiffField0.getCount());
      assertEquals((-410), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1185, 348, fieldTypeLong0.SBYTE, 1497L, 4L, byteArray0, byteOrder0, 315);
      String string0 = tiffField0.toString();
      assertEquals(348, tiffField0.getDirectoryType());
      assertEquals(315, tiffField0.getSortHint());
      assertEquals("1185 (0x4a1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (1497 SByte)", string0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)15, (byte)0, fieldTypeByte0, 2147483647L, (byte)114, byteArray0, byteOrder0, (byte) (-99));
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      String string0 = tiffField0.toString();
      assertEquals((-99), tiffField0.getSortHint());
      assertEquals(114, tiffField0.getOffset());
      assertEquals("15 (0xf: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (2147483647 SByte)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65557, 61, fieldTypeFloat0, 61, 65557, byteArray0, byteOrder0, 65557);
      String string0 = tiffField0.toString();
      assertEquals(244, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(65557, tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getOffset());
      assertEquals("65557 (0x10015: Unknown Tag): 0.0, 0.0, 0.0 (61 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Integer integer0 = new Integer(740);
      TiffField tiffField0 = new TiffField(740, 740, fieldTypeLong0.DOUBLE, 740, (-1627), byteArray0, byteOrder0, (int) integer0);
      String string0 = tiffField0.toString();
      assertEquals(740, tiffField0.getSortHint());
      assertEquals(740, tiffField0.getDirectoryType());
      assertEquals("740 (0x2e4: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (740 Double)", string0);
      assertEquals((-1627), tiffField0.getOffset());
      assertEquals(5920, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-117), (byte) (-117), fieldTypeFloat0.DOUBLE, 92L, 40965L, byteArray0, byteOrder0, 65557);
      String string0 = tiffField0.toString();
      assertEquals(65557, tiffField0.getSortHint());
      assertEquals(736, tiffField0.getBytesLength());
      assertEquals(40965, tiffField0.getOffset());
      assertEquals((-117), tiffField0.getDirectoryType());
      assertEquals("-117 (0xffffff8b: Unknown Tag): 0.0 (92 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2242), 772, fieldTypeLong0, 772, (-2787L), byteArray0, byteOrder0, 772);
      String string0 = tiffField0.toString();
      assertEquals(3088, tiffField0.getBytesLength());
      assertEquals(772, tiffField0.getSortHint());
      assertEquals(772, tiffField0.getDirectoryType());
      assertEquals("-2242 (0xfffff73e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (772 SLong)", string0);
      assertEquals((-2787), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 40965, fieldTypeByte0, 16L, 2556L, byteArray0, byteOrder0, 2147388038);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(2556, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2147388038, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-547), 248, fieldTypeLong0.SHORT, 248, (-86L), byteArray0, byteOrder0, (-5115));
      String string0 = tiffField0.toString();
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(248, tiffField0.getDirectoryType());
      assertEquals("-547 (0xfffffddd: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (248 Short)", string0);
      assertEquals((-5115), tiffField0.getSortHint());
      assertEquals((-86), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 0, fieldTypeShort0, 8, 22464L, byteArray0, byteOrder0, (byte)9);
      String string0 = tiffField0.toString();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(22464, tiffField0.getOffset());
      assertEquals("8 (0x8: Unknown Tag): 0, 0 (8 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1717986912), 2147473085, fieldTypeLong0.ASCII, 418L, (-1174), byteArray0, byteOrder0, 286);
      tiffField0.toString();
      assertEquals(418, tiffField0.getBytesLength());
      assertEquals(286, tiffField0.getSortHint());
      assertEquals(418L, tiffField0.getCount());
      assertEquals((-1717986912), tiffField0.getTag());
      assertEquals(2147473085, tiffField0.getDirectoryType());
      assertEquals((-1174), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147192858, 2147192858, fieldTypeFloat0.ASCII, 65535, 2508L, byteArray0, byteOrder0, 2147192858);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2508, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147192858, tiffField0.getSortHint());
      assertEquals(2147192858, tiffField0.getDirectoryType());
      assertEquals(2147192858, tiffField0.getTag());
      assertEquals(65535, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(719, 2970, fieldTypeAscii0, 719, 719, byteArray0, byteOrder0, 719);
      tiffField0.dump();
      assertEquals(719L, tiffField0.getCount());
      assertEquals(719, tiffField0.getSortHint());
      assertEquals(719, tiffField0.getBytesLength());
      assertEquals(2970, tiffField0.getDirectoryType());
      assertEquals(719, tiffField0.getTag());
      assertEquals(719, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1066), fieldTypeFloat0, 1L, (-344L), byteArray0, byteOrder0, 961);
      tiffField0.toString();
      assertEquals((-344), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(961, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1066), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 0L, 1, byteArray0, byteOrder0, (-1191));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-738));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1191), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2093796556, (byte) (-62), fieldTypeLong0, (-659L), 2093796556, byteArray0, (ByteOrder) null, 2020);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1717986917), (byte) (-5));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(2093796556, tiffField0.getTag());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(2020, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2093796556, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string0);
      assertEquals((-2636), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeLong0, 1L, (-1886L), byteArray0, (ByteOrder) null, 2790);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals((-1886), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertNull(tiffElement0);
      assertEquals(2790, tiffField0.getSortHint());
      assertEquals(341, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1854), 2319, fieldTypeByte0.LONG, (byte)50, 1L, byteArray0, byteOrder0, (-745));
      tiffField0.getFieldTypeName();
      assertEquals(2319, tiffField0.getDirectoryType());
      assertEquals((-1854), tiffField0.getTag());
      assertEquals((-745), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 40965, fieldTypeByte0, 16L, 2556L, byteArray0, byteOrder0, 2147388038);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(2147388038, tiffField0.getSortHint());
      assertEquals(2556L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 1982292598, fieldTypeByte0, (-350L), 2, byteArray0, byteOrder0, (byte)44);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1982292598, int0);
      assertEquals((-350L), tiffField0.getCount());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeByte0.ASCII, 2069L, 3160L, byteArray0, byteOrder0, 80);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(80, int0);
      assertEquals(2069, tiffField0.getBytesLength());
      assertEquals(3160, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-1), fieldTypeAscii0, 3, 644L, byteArray0, byteOrder0, (-1687));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("3 (0x3: GPSLongitudeRef): ", string0);
      assertEquals(3L, tiffField0.getCount());
      assertEquals((-1687), tiffField0.getSortHint());
      assertEquals(644, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }
}
