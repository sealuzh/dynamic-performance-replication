/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 14:16:11 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Utils.isalnum(3696);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byte byte0 = (byte)65;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte) (-58);
      Utils.indexOf(byteArray0, byteArray0, (byte)65);
      Utils.runeToString((byte)65);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "A");
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(502);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 502
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utils.isalnum(130);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 130);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utils.emptyOpContext(119, 119);
      Utils.emptyOpContext(32, 32);
      Utils.isalnum(32);
      Utils.emptyOpContext((-4339), 119);
      Utils.runeToString(0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-17);
      Utils.indexOf(byteArray0, byteArray0, 9);
      StringBuilder stringBuilder0 = new StringBuilder("");
      // Undeclared exception!
      try { 
        stringBuilder0.deleteCharAt(685);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 685
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append('w');
      Utils.escapeRune(stringBuilder0, 129);
      assertEquals("w\\x81", stringBuilder0.toString());
      
      boolean boolean0 = Utils.isWordRune(129);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 845;
      int[] intArray1 = Utils.subarray(intArray0, 845, 845);
      assertArrayEquals(new int[] {}, intArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-4));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte) (-4);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte) (-4));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-65);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte) (-65));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Utils.isalnum((-426));
      byte[] byteArray1 = new byte[1];
      int int0 = Utils.indexOf(byteArray1, byteArray0, (-85));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune((-1451));
      assertFalse(boolean0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = (-1451);
      intArray0[1] = (-1451);
      intArray0[2] = (-1451);
      intArray0[3] = (-1743);
      intArray0[4] = (-1451);
      Utils.subarray(intArray0, (-1451), (-1451));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)0;
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-1451));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utils.unhex(0);
      String string0 = "\\t";
      int[] intArray0 = Utils.stringToRunes("\t");
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, (-1), (-1713));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)2);
      assertEquals(0, int0);
      
      int[] intArray0 = Utils.stringToRunes("");
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utils.isalnum((-1075));
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utils.unhex(1912);
      Utils.stringToRunes("C}o");
      Utils.unhex(0);
      Utils.unhex(0);
      Utils.isWordRune(1912);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = Utils.subarray(byteArray0, (-3339), (-3339));
      Utils.indexOf(byteArray0, byteArray1, (-1));
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utils.runeToString((-1));
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (-1), 1131);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Utils.isalnum((-1075));
      int int0 = 256;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 256);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)34;
      Utils.indexOf(byteArray0, byteArray0, (-1486));
      int int0 = Utils.indexOf(byteArray0, byteArray0, 0);
      assertEquals(0, int0);
      
      Utils.unhex((byte)34);
      int int1 = Utils.emptyOpContext((-5054), (-2670));
      assertEquals(47, int1);
      
      Utils.runeToString((-1));
      String string0 = Utils.runeToString((-777));
      assertEquals("\uFCF7", string0);
      
      Utils.stringToRunes("[dXTLi\"c");
      int int2 = Utils.emptyOpContext((-1452), 0);
      assertEquals(37, int2);
      
      int[] intArray0 = Utils.stringToRunes("Kannada");
      assertArrayEquals(new int[] {75, 97, 110, 110, 97, 100, 97}, intArray0);
      
      Utils.stringToRunes("\uFFFF");
      boolean boolean0 = Utils.isWordRune((byte)34);
      assertFalse(boolean0);
      
      Utils.stringToRunes("PQ%mh");
      Utils.stringToRunes("\uFFFF");
      int int3 = Utils.emptyOpContext(321, 70);
      assertEquals(16, int3);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 1561;
      Utils.isWordRune(1561);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, (byte)3);
      Utils.isWordRune((byte)107);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, (byte)107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, 2301);
      Utils.isalnum(48);
      Utils.stringToRunes("L[#");
      Utils.emptyOpContext((-64), 295);
      Utils.unhex(2479);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)34;
      Utils.indexOf(byteArray0, byteArray0, (-1486));
      Utils.indexOf(byteArray0, byteArray0, 0);
      Utils.unhex((byte)34);
      Utils.emptyOpContext((-5054), (-2670));
      Utils.runeToString((-1));
      Utils.runeToString((-777));
      int[] intArray0 = Utils.stringToRunes("[dXTLi\"c");
      assertArrayEquals(new int[] {91, 100, 88, 84, 76, 105, 34, 99}, intArray0);
      
      Utils.emptyOpContext((-1452), 0);
      Utils.stringToRunes("Kannada");
      StringBuilder stringBuilder0 = new StringBuilder("|.-*F:=h!{eg0hB");
      stringBuilder0.deleteCharAt(0);
      Utils.escapeRune(stringBuilder0, 2227);
      assertEquals(".-*F:=h!{eg0hB\\x{8b3}", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byte byte0 = (byte)3;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte) (-66);
      byteArray1[2] = (byte) (-66);
      Utils.indexOf(byteArray0, byteArray1, (byte) (-66));
      Utils.isWordRune(65);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, (-3539));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(29);
      StringBuilder stringBuilder1 = stringBuilder0.append((float) 29);
      StringBuilder stringBuilder2 = stringBuilder0.append((CharSequence) stringBuilder1);
      Utils.escapeRune(stringBuilder2, 130);
      assertEquals("29.029.0\\x82", stringBuilder2.toString());
      assertEquals("29.029.0\\x82", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, 2301);
      Utils.isalnum(48);
      Utils.stringToRunes("L[#");
      int int0 = 295;
      Utils.emptyOpContext((-64), 295);
      Utils.unhex(2479);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 29);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-70);
      int int1 = Utils.indexOf(byteArray0, byteArray1, (byte) (-70));
      assertTrue(int1 == int0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)1;
      byte byte0 = (byte) (-23);
      byteArray1[3] = (byte) (-23);
      byteArray1[4] = (byte)1;
      byteArray1[5] = (byte)0;
      Utils.indexOf(byteArray1, byteArray0, (byte) (-23));
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((byte) (-23));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = Utils.isalnum((byte) (-66));
      assertFalse(boolean0);
      
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte) (-66);
      byteArray1[3] = (byte) (-66);
      byteArray1[4] = (byte) (-66);
      int int0 = Utils.indexOf(byteArray1, byteArray0, (byte) (-66));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      int int0 = Utils.indexOf(byteArray0, byteArray0, 2301);
      boolean boolean0 = Utils.isalnum(48);
      int[] intArray0 = Utils.stringToRunes("L[#");
      assertArrayEquals(new int[] {76, 91, 35}, intArray0);
      
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-66);
      int int1 = Utils.indexOf(byteArray0, byteArray1, (byte)0);
      assertTrue(int1 == int0);
      
      boolean boolean1 = Utils.isWordRune(48);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-66);
      byteArray0[6] = (byte) (-66);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, (byte) (-66));
      Utils.isalnum((byte)77);
      int[] intArray0 = Utils.EMPTY_INTS;
      Utils.emptyOpContext((byte) (-66), (byte) (-66));
      Utils.unhex((byte)0);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Utils.isalnum((-1075));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      Utils.stringToRunes("");
      Utils.emptyOpContext((-812), 32);
      Utils.unhex(32);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = new byte[15];
      byteArray1[0] = (byte) (-23);
      byteArray1[1] = (byte)50;
      byteArray1[2] = (byte)1;
      Utils.indexOf(byteArray0, byteArray1, 34);
      StringBuilder stringBuilder0 = new StringBuilder((byte)0);
      StringBuilder stringBuilder1 = stringBuilder0.append(5);
      Utils.escapeRune(stringBuilder1, (byte) (-23));
      assertEquals("5\\xffffffe9", stringBuilder1.toString());
      assertEquals("5\\xffffffe9", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)1;
      byte byte0 = (byte) (-23);
      byteArray1[5] = (byte) (-4);
      Utils.indexOf(byteArray1, byteArray0, (byte) (-23));
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((byte) (-23));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Utils.isalnum(2301);
      Utils.stringToRunes("L[#");
      int int0 = (-64);
      Utils.emptyOpContext((-64), 2301);
      Utils.unhex(37);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Utils.isalnum((-1075));
      StringBuilder stringBuilder0 = new StringBuilder(3);
      StringBuilder stringBuilder1 = stringBuilder0.append((-1431L));
      StringBuilder stringBuilder2 = stringBuilder1.insert(3, 3);
      StringBuilder stringBuilder3 = stringBuilder2.reverse();
      Utils.escapeRune(stringBuilder3, (-1480));
      Utils.unhex(99);
      Utils.escapeRune(stringBuilder3, 12);
      assertEquals("13341-\\xfffffa38\\f", stringBuilder3.toString());
      assertEquals("13341-\\xfffffa38\\f", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Utils.isalnum((-1075));
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }
}
