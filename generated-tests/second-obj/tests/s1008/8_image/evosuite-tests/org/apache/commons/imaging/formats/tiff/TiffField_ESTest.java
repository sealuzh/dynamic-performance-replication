/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:51:20 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeLong0, 11, 11, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[219];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)85, (-1956), fieldTypeFloat0, (byte)85, (byte)85, byteArray0, byteOrder1, (-2559));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1956), tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(340, tiffField0.getBytesLength());
      assertEquals(85L, tiffField0.getCount());
      assertEquals(85, tiffField0.getTag());
      assertEquals((-2559), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1078, 1078, fieldTypeLong0, 1078, 1078, byteArray0, (ByteOrder) null, 1078);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1078 (0x436: Unknown Tag): ", string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1078, tiffField0.getOffset());
      assertEquals(4312, tiffField0.getBytesLength());
      assertEquals(1078, tiffField0.getDirectoryType());
      assertEquals(1078, tiffField0.getSortHint());
      assertEquals(1078L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)15;
      byteArray0[3] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-924), 2331, fieldTypeByte0, 2331, (-570L), byteArray0, byteOrder0, 520);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5cb2c596 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(766, 76, fieldTypeShort0, (byte)6, (byte)7, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0", string0);
      assertEquals(766, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1312, 1312, fieldTypeLong0, 1312, 1312, byteArray0, byteOrder0, 1312);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x520)", string0);
      assertEquals(1312, tiffField0.getDirectoryType());
      assertEquals(1312, tiffField0.getOffset());
      assertEquals(1312, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1312, 1312, fieldTypeLong0, 1312, 1312, byteArray0, byteOrder0, 1312);
      tiffField0.getDoubleArrayValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1312, tiffField0.getSortHint());
      assertEquals(1312, tiffField0.getDirectoryType());
      assertEquals(5248, tiffField0.getBytesLength());
      assertEquals(1312, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(1312L, tiffField0.getCount());
      assertEquals(1312L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[22];
      byteArray0[1] = (byte)12;
      byteArray0[5] = (byte)71;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(878, 878, fieldTypeDouble0, 878, 878, byteArray0, byteOrder0, (byte)12);
      String string0 = File.pathSeparator;
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)71, 1);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(878, tiffField0.getOffset());
      assertEquals(878, tiffField0.getDirectoryType());
      assertNotNull(string1);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(878, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4425), (-4425), fieldTypeShort0, 3306L, 3306L, byteArray0, byteOrder0, (-4425));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-4425), tiffField0.getSortHint());
      assertEquals((-4425), tiffField0.getTag());
      assertEquals((-4425), int0);
      assertEquals(3306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 2932L, byteArray0, (ByteOrder) null, (byte) (-106));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2932, tiffField0.getOffset());
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)32;
      TiffField tiffField0 = new TiffField((-949), (-949), fieldTypeByte0, 2130L, 2130L, byteArray0, (ByteOrder) null, (byte)32);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4a713218 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = null;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      long long0 = 4L;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(2143837665, 65535, fieldTypeRational0, 4L, 2143837665, byteArray0, (ByteOrder) null, 2143837665);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, (String) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)126;
      byteArray0[5] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 5924L, 480L, byteArray0, byteOrder0, (byte)87);
      tiffField0.getIntArrayValue();
      assertEquals(5924L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(480, tiffField0.getOffset());
      assertEquals(47392, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)117, 50696, fieldTypeLong0, (byte)117, (byte)117, byteArray0, byteOrder0, 50696);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@5719f639
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, (-2633L), 6, (byte[]) null, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "ClipPath");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, (-2575));
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2575), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1084, 1084, fieldTypeLong0, (-2859L), (-2859L), byteArray0, (ByteOrder) null, 1084);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2859), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1084, tiffField0.getSortHint());
      assertEquals(1084, tiffField0.getDirectoryType());
      assertEquals(1084, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, (-2501L), 255L, byteArray0, byteOrder0, 1472);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147483641), 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1472, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-2501L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1181, (-2903), fieldTypeDouble0.SHORT, 1181, 1181, byteArray0, (ByteOrder) null, 1181);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      int int1 = tiffField0.getBytesLength();
      assertEquals(1181, tiffField0.getSortHint());
      assertEquals(1181, tiffField0.getTag());
      assertEquals(2362, int1);
      assertEquals(1181, tiffField0.getOffset());
      assertEquals((-2903), tiffField0.getDirectoryType());
      assertEquals(1181L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte) (-112);
      byteArray0[4] = (byte)56;
      byteArray0[6] = (byte) (-111);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4096, 4096, fieldTypeShort0, 4096, 4096, byteArray0, byteOrder0, (byte)18);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(4096L, tiffField0.getCount());
      assertEquals(4096, tiffField0.getOffset());
      assertEquals(4096, tiffField0.getTag());
      assertArrayEquals(new int[] {62975, 36882, 56}, intArray0);
      assertEquals(8192, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(4096, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte) (-103);
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0, 12, 4084L, byteArray0, (ByteOrder) null, 598);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(4084, tiffField0.getOffset());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(598, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2143837653, (byte)0, fieldTypeRational0.DOUBLE, 65535, (-1746L), byteArray0, (ByteOrder) null, 4);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-1746), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2143837653, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@b133101 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)69;
      byteArray0[5] = (byte)24;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5051, 5051, fieldTypeShort0, 5051, 5051, byteArray0, byteOrder0, 344);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5051, tiffField0.getOffset());
      assertEquals(5051, tiffField0.getDirectoryType());
      assertEquals(5051L, tiffField0.getCount());
      assertEquals(5051, tiffField0.getTag());
      assertEquals(344, tiffField0.getSortHint());
      assertEquals(10102, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {(-6345.0), 23861.0, 17688.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)48;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 1457, fieldTypeLong0, 1140L, 1457, byteArray0, byteOrder0, (byte)48);
      tiffField0.getIntArrayValue();
      assertEquals(1457, tiffField0.getOffset());
      assertEquals(1457, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(4560, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getTag());
      assertEquals(1140L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0, 26, 26, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(26L, tiffField0.getCount());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 1271, 1271, byteArray0, byteOrder0, 2143837665);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1271L, tiffField0.getCount());
      assertEquals(2143837665, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(10168, tiffField0.getBytesLength());
      assertEquals(1271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, (byte)27, fieldTypeFloat0, (byte)100, (byte)27, byteArray0, byteOrder0, (-426));
      tiffField0.getDoubleArrayValue();
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals((-426), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(100L, tiffField0.getCount());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(345, 345, fieldTypeShort0, 345, 1516L, (byte[]) null, byteOrder0, 345);
      String string0 = tiffField0.getTagName();
      assertEquals(345, tiffField0.getDirectoryType());
      assertEquals("YClipPathUnits", string0);
      assertEquals(1516, tiffField0.getOffset());
      assertEquals(345, tiffField0.getTag());
      assertEquals(345, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = null;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      long long0 = 7L;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField(2143837665, 65535, fieldTypeRational0, 7L, 2143837665, byteArray0, (ByteOrder) null, 2143837665);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      byteArray0[2] = (byte)0;
      TiffField tiffField0 = new TiffField((byte)0, 41986, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, 37396);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(37396, tiffField0.getSortHint());
      assertEquals(41986, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[30];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField((byte) (-79), 65535, fieldTypeRational0, 4L, (byte) (-79), byteArray0, (ByteOrder) null, (byte) (-79));
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      tiffField0.getDoubleArrayValue();
      tiffField0.getFieldTypeName();
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      try { 
        fieldTypeRational0.BYTE.writeData((Object) null, (ByteOrder) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: null (null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[401];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2073), 8, fieldTypeFloat0, 8, 1431L, byteArray0, byteOrder2, (-2073));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1431, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals((-2073), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2073), tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-887), "sc]D3X");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-887), (-887), fieldTypeAscii0, 1710L, (-887), byteArray0, byteOrder0, 5);
      tiffField0.toString();
      assertEquals(1710, tiffField0.getBytesLength());
      assertEquals((-887), tiffField0.getDirectoryType());
      assertEquals((-887), tiffField0.getTag());
      assertEquals((-887), tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(1710L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[159];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeLong0, 4L, (-70L), byteArray0, byteOrder0, (-741));
      tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getTag());
      assertEquals((-741), tiffField0.getSortHint());
      assertEquals((-70), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, " for: ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeLong0, 1, 743L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      Object object0 = new Object();
      try { 
        FieldType.getFieldType(559);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 559 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2292);
      byteBuffer0.putFloat((float) 1559);
      byteBuffer0.duplicate();
      byteBuffer0.order();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)8;
      byteArray0[5] = (byte)118;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-90);
      TiffField tiffField0 = new TiffField((-1584), (-1584), fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1584), tiffField0.getDirectoryType());
      assertEquals((-1584), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-29), (-29), fieldTypeFloat0.DOUBLE, 1524, 1524, byteArray0, byteOrder0, (-29));
      tiffField0.getValueDescription();
      byteOrder0.toString();
      Integer integer0 = new Integer(1524);
      ByteOrder.nativeOrder();
      try { 
        FieldType.getFieldType(1524);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 1524 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeFloat0.BYTE, 794L, 0, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertNotNull(string1);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(794, tiffField0.getBytesLength());
      assertEquals(794L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(99, 32844, fieldTypeAscii0, 22L, 5952L, byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getStringValue();
      assertEquals(22, tiffField0.getBytesLength());
      assertEquals(5952, tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32844, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(99, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[197];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(402, 3779, fieldTypeAscii0, 3779, 402, byteArray0, byteOrder0, 402);
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getValueDescription();
      tiffField0.getCount();
      try { 
        FieldType.getFieldType(1135);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 1135 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldType.getFieldType(11);
      TiffField tiffField0 = new TiffField(65084, 65084, fieldTypeShort0, 1481, (-1150L), byteArray0, byteOrder1, 1481);
      tiffField0.getValueDescription();
      int int0 = Short.SIZE;
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      Integer integer0 = new Integer((-23));
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-2934), 1537, fieldTypeLong0, 11272L, 1810L, byteArray0, byteOrder1, 1537);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      ByteOrder.nativeOrder();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1537, tiffField0.getDirectoryType());
      assertEquals(1537, tiffField0.getSortHint());
      assertEquals(45088, tiffField0.getBytesLength());
      assertNotNull(tiffElement0);
      assertEquals(11272L, tiffField0.getCount());
      assertEquals((-2934), tiffField0.getTag());
      assertEquals(1810L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[417];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0.DOUBLE, 1435, 1435, byteArray0, byteOrder0, 1);
      String string0 = File.separator;
      TiffField tiffField1 = new TiffField(65535, (byte)97, fieldTypeFloat0, 4L, (-1592L), byteArray0, byteOrder0, 50968);
      tiffField1.dump();
      tiffField0.dump();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Pattern.CASE_INSENSITIVE;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField2 = new TiffField(3, 50968, fieldTypeByte0, (-1L), 65535, byteArray0, byteOrder0, 65535);
      tiffField2.getTagInfo();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
