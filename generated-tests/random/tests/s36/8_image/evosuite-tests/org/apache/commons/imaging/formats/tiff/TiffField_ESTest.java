/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:40:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1668, 1668, fieldTypeShort0, 1668, 1668, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1668, tiffField0.getOffset());
      assertEquals((-5888), int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1668, tiffField0.getTag());
      assertEquals(1668, tiffField0.getDirectoryType());
      assertEquals(1668L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(9, (-3085), fieldTypeDouble0, 479L, 479L, byteArray0, (ByteOrder) null, 653);
      String string0 = tiffField0.getValueDescription();
      assertEquals(9, tiffField0.getTag());
      assertEquals(479, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(653, tiffField0.getSortHint());
      assertEquals(479L, tiffField0.getCount());
      assertEquals((-3085), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 330, fieldTypeByte0, 330, (-1623L), byteArray0, byteOrder0, (-417));
      int int0 = tiffField0.getSortHint();
      assertEquals((-417), int0);
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals((-1623), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(716, (-3966), fieldTypeLong0, 716, 0L, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(716, tiffField0.getTag());
      assertEquals((-3966), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(716L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-4917), fieldTypeRational0, 50, 559L, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(559, tiffField0.getOffset());
      assertEquals((-4917), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      tiffField0.getCount();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-912), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-768), "OpcodeList2");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-768), 65535, fieldTypeShort0, 636L, (-2421L), byteArray0, byteOrder0, 33421);
      long long0 = tiffField0.getCount();
      assertEquals(33421, tiffField0.getSortHint());
      assertEquals((-768), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(636L, long0);
      assertEquals((-2421), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1668, 1668, fieldTypeShort0, 1668, 1668, byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1668, tiffField0.getDirectoryType());
      assertEquals(1668, tiffField0.getOffset());
      assertEquals(1668, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-400), "OtherImageStart");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 65535, fieldTypeAscii0, 65535, (-400), byteArray0, byteOrder0, (byte)29);
      tiffField0.getByteArrayValue();
      assertEquals((-400), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      tiffField0.getByteArrayValue();
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-912), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-67), (byte) (-67), fieldTypeFloat0, (byte) (-67), 1L, byteArray0, byteOrder0, 50217);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1138, "tw$d`AP6ST@");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48257, 1138, fieldTypeByte0, 48257, 48257, (byte[]) null, byteOrder0, (-1480));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1431655764), (-1431655764), (FieldType) null, (-1431655764), (-1L), byteArray0, (ByteOrder) null, (byte) (-87));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1138, "tw$d`AP6ST@");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1138, 48257, fieldTypeByte0, 1138, 167984L, byteArray0, byteOrder0, (byte)71);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1138, tiffField0.getTag());
      assertEquals(48257, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(167984, tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, (-2315), fieldTypeLong0, 2822, 4552L, byteArray0, byteOrder0, (-720));
      tiffField0.getFieldType();
      assertEquals((-2315), tiffField0.getDirectoryType());
      assertEquals((-720), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4552, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-400), "OtherImageStart");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 65535, fieldTypeAscii0, 65535, (-400), byteArray0, byteOrder0, (byte)29);
      tiffField0.getValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getTag());
      assertEquals((-400), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2063, "*XWFA]K/'=34,O*8");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 2063, 3005L, byteArray0, byteOrder0, 37380);
      int int0 = tiffField0.getOffset();
      assertEquals(37380, tiffField0.getSortHint());
      assertEquals(3005, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2293, "");
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 173L, 173L, byteArray0, byteOrder0, (byte)87);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(173, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(716, (-3966), fieldTypeLong0, 716, 0L, byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3966), tiffField0.getDirectoryType());
      assertEquals(716, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "n");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 167984L, byteArray0, byteOrder0, (byte)108);
      tiffField0.getBytesLength();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(167984, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(512, 2, fieldTypeShort0, 0L, (-3469L), byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-768), "OpcodeList2");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-768), 65535, fieldTypeShort0, 636L, (-2421L), byteArray0, byteOrder0, 33421);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(716, (-3966), fieldTypeLong0, 716, 0L, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(716, tiffField0.getTag());
      assertEquals((-3966), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(716L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-2791), fieldTypeAscii0, 3, (-2791), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@15ce82dc for: 3 (0x3: GPSLongitudeRef): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)103;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32898, 32898, fieldTypeRational0, 4064L, 2028L, byteArray0, byteOrder0, (byte)39);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2028, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(32898, tiffField0.getDirectoryType());
      assertEquals(32898, tiffField0.getTag());
      assertEquals(4064L, tiffField0.getCount());
      assertEquals(39, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-1231L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(356, 356, fieldTypeByte0, 0L, (-136L), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@552eae28 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "k=U!lp`:[qDc");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(129, 129, fieldTypeFloat0, 129, 327696L, byteArray0, byteOrder0, (byte)98);
      tiffField0.getDoubleArrayValue();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(327696, tiffField0.getOffset());
      assertEquals(129, tiffField0.getDirectoryType());
      assertEquals(129, tiffField0.getTag());
      assertEquals(129L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147483646, "/?lcQYo0#Q");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147483646, (-2931), fieldTypeDouble0, 1518L, 1518L, byteArray0, byteOrder0, (-2931));
      tiffField0.getDoubleArrayValue();
      assertEquals(1518L, tiffField0.getCount());
      assertEquals((-2931), tiffField0.getDirectoryType());
      assertEquals(1518, tiffField0.getOffset());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals((-2931), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, (-2315), fieldTypeLong0, 2822, 4552L, byteArray0, byteOrder0, (-720));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2315), tiffField0.getDirectoryType());
      assertEquals(2822L, tiffField0.getCount());
      assertEquals(4552, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-720), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32898, 32898, fieldTypeRational0, 4064L, 2028L, byteArray0, byteOrder0, (byte)39);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(2028, tiffField0.getOffset());
      assertEquals(32898, tiffField0.getDirectoryType());
      assertEquals(4064L, tiffField0.getCount());
      assertEquals(32898, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-1231L), byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1231), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1668, 1668, fieldTypeShort0, 1668, 1668, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1668L, tiffField0.getCount());
      assertEquals(1668, tiffField0.getDirectoryType());
      assertEquals(1668, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1668, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, (-2315), fieldTypeLong0, 2822, 4552L, byteArray0, byteOrder0, (-720));
      tiffField0.getIntArrayValue();
      assertEquals((-720), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4552, tiffField0.getOffset());
      assertEquals(2822L, tiffField0.getCount());
      assertEquals((-2315), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34856, 34856, fieldTypeShort0, 34856, (-1773L), byteArray0, byteOrder0, 1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(34856, tiffField0.getDirectoryType());
      assertEquals(34856, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals((-1773), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(34856L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1197, fieldTypeRational0, 4064L, (byte)26, byteArray0, byteOrder0, 819);
      tiffField0.getIntArrayValue();
      assertEquals(819, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(1197, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4064L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-1231L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1717986917), "2}<#[== `q");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(124, 124, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-400), "OtherImageStart");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)29;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 65535, fieldTypeAscii0, 65535, (-400), byteArray0, byteOrder0, (byte)29);
      String string0 = tiffField0.getStringValue();
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getTag());
      assertEquals((-400), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-400), "OtherImageStart");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 65535, fieldTypeAscii0, 65535, (-400), byteArray0, byteOrder0, (byte)29);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@7e83bccb
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1668, 1668, fieldTypeShort0, 1668, 1668, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(1668, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x684)", string0);
      assertEquals(1668, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 446, fieldTypeByte0, 330, 446, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals("SubIFDs", string0);
      assertEquals(446, tiffField0.getDirectoryType());
      assertEquals(446, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1717986917), "`=#b");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 178, fieldTypeFloat0, (-1717986917), (-1796L), byteArray0, byteOrder0, (-1717986917));
      assertEquals(1717986924, tiffField0.getBytesLength());
      
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "`=#b");
      assertEquals(178, tiffField0.getDirectoryType());
      assertEquals((-1717986917L), tiffField0.getCount());
      assertEquals((-1796), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(937, 1798, fieldTypeFloat0, 1798, 1798, byteArray0, byteOrder0, (byte) (-67));
      String string0 = tiffField0.toString();
      assertEquals(7192, tiffField0.getBytesLength());
      assertEquals(1798, tiffField0.getOffset());
      assertEquals("937 (0x3a9: Unknown Tag): 0.0, 0.0 (1798 Float)", string0);
      assertEquals(1798, tiffField0.getDirectoryType());
      assertEquals((-67), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2145791383, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50981, fieldTypeFloat0, 1573L, 2147483647L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50981, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1573L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(6292, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "Copyright");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Copyright");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 3064L, 3064L, byteArray0, byteOrder0, (byte)78);
      tiffField0.dump();
      assertEquals(3064, tiffField0.getOffset());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(3064, tiffField0.getBytesLength());
      assertEquals(3064L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40961, 40961, fieldTypeLong0, 40961, 1L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals("40961 (0xa001: Unknown Tag): 0, 0 (40961 Long)", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(163844, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(40961, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1668, 1668, fieldTypeShort0, 1668, 1668, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(1668, tiffField0.getOffset());
      assertEquals("1668 (0x684: Unknown Tag): 0, 0, 0 (1668 Short)", string0);
      assertEquals(1668, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3336, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1095), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 3695L, (-1L), byteArray0, byteOrder0, 133);
      String string0 = tiffField0.getValueDescription();
      assertEquals(133, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(3695, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1717986917), "2}<#[== `q");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(124, 124, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(124, tiffField0.getTag());
      assertEquals(124, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "n");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 167984L, byteArray0, byteOrder0, (byte)108);
      tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(167984, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-13), (byte)1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-912), tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
      assertNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals((-912), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1197, fieldTypeRational0, 4064L, (byte)26, byteArray0, byteOrder0, 819);
      tiffField0.getFieldTypeName();
      assertEquals(819, tiffField0.getSortHint());
      assertEquals(1197, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4064L, tiffField0.getCount());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-4917), fieldTypeRational0, 50, 559L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertNotNull(tiffElement0);
      assertEquals(559L, tiffElement0.offset);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-4917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-912), int0);
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2293, "");
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 173L, 173L, byteArray0, byteOrder0, (byte)87);
      int int0 = tiffField0.getSortHint();
      assertEquals(173, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(87, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-912), fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, (byte) (-13));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("0 (0x0: GPSVersionID): ", string0);
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals((-912), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2293, "");
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 173L, 173L, byteArray0, byteOrder0, (byte)87);
      String string0 = tiffField0.getValueDescription();
      assertEquals(173L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1384, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(173, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(87, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2293, "");
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 173L, 173L, byteArray0, byteOrder0, (byte)87);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1888), (byte)22);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(87, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(173, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(173L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
  }
}
