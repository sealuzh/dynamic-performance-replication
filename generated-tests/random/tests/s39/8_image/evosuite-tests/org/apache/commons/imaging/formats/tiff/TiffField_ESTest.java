/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 23:52:12 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-30), 1037, fieldTypeShort0, 1037, 1037, byteArray0, byteOrder0, (-1972));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1037, tiffField0.getOffset());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals(1037, tiffField0.getDirectoryType());
      assertEquals((-1972), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)14;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146738251), (-2146738251), fieldTypeRational0, (-2146738251), (-2146738251), byteArray0, byteOrder0, 376);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2146738251), tiffField0.getDirectoryType());
      assertEquals((-2146738251), tiffField0.getTag());
      assertEquals((-2146738251), tiffField0.getOffset());
      assertEquals(376, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-214), "#7Q\"X4X} Mh)'A&JIE");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-3), 2195, fieldTypeFloat0, (-1L), 2856L, byteArray0, byteOrder0, 790);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-3), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(2856, tiffField0.getOffset());
      assertEquals(790, tiffField0.getSortHint());
      assertEquals(2195, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-477), 65000, fieldTypeRational0, 65000, (-477), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-477), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65000, tiffField0.getDirectoryType());
      assertEquals((-477), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), (-1), fieldTypeShort0, 1786L, (-1010L), byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1440), tiffField0.getTag());
      assertEquals((-1010), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(42037, "*n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(216, 216, fieldTypeFloat0, 216, 42037, byteArray0, byteOrder0, (byte)124);
      int int0 = tiffField0.getOffset();
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(216, tiffField0.getDirectoryType());
      assertEquals(216, tiffField0.getTag());
      assertEquals(42037, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(95, "cj('r");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)66;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(453, 95, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)102);
      tiffField0.getIntValueOrArraySum();
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(453, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(102, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-112);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 534L, byteArray0, byteOrder0, (byte) (-112));
      tiffField0.getIntValue();
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(534, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)125;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals((-470), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(1175, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (-2837));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-2837), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, (-11453246112L), byteArray0, byteOrder0, (byte) (-34));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1431655776, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals((-34), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "?`]ej'ahsLnny115[<");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147065278), 2136, fieldTypeLong0, 255L, (-4405L), byteArray0, (ByteOrder) null, (-1));
      tiffField0.getByteOrder();
      assertEquals((-4405), tiffField0.getOffset());
      assertEquals((-2147065278), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2136, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147233328), (-2147233328), fieldTypeRational0, (-2147233328), 150L, byteArray0, byteOrder0, (-1610612735));
      tiffField0.getByteArrayValue();
      assertEquals(150, tiffField0.getOffset());
      assertEquals((-2147233328), tiffField0.getTag());
      assertEquals((-2147233328), tiffField0.getDirectoryType());
      assertEquals((-1610612735), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, ":");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 0L, (-1292L), byteArray0, (ByteOrder) null, (-3514));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "?`]ej'ahsLnny115[<");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147065278), 2136, fieldTypeLong0, 255L, (-4405L), byteArray0, (ByteOrder) null, (-1));
      fieldTypeLong0.getValue(tiffField0);
      assertEquals((-2147065278), tiffField0.getTag());
      assertEquals(2136, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-4405), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeByte0, 270, 4L, byteArray0, byteOrder0, 789);
      tiffField0.getFieldType();
      assertEquals(270, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(270, tiffField0.getDirectoryType());
      assertEquals(789, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1683, 37, fieldTypeRational0, 3233L, (-506L), byteArray0, byteOrder0, 37);
      tiffField0.getValue();
      assertEquals(1683, tiffField0.getTag());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals((-506), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-1489L), (-1489L), (byte[]) null, byteOrder0, (-275));
      int int0 = tiffField0.getOffset();
      assertEquals((-1489), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-275), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      tiffField0.getTagInfo();
      assertEquals((-470), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(1175, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(1594);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34735, 1167, fieldTypeFloat0, (-1L), 58L, byteArray0, byteOrder0, 69);
      int int0 = tiffField0.getTag();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(34735, int0);
      assertEquals(1167, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-470), tiffField0.getTag());
      assertEquals(1175, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1856), (-1), fieldTypeShort0, (byte)1, (-3004L), byteArray0, byteOrder0, (-1440));
      tiffField0.getBytesLength();
      assertEquals((-1856), tiffField0.getTag());
      assertEquals((-1440), tiffField0.getSortHint());
      assertEquals((-3004), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(42037, "*n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(216, 216, fieldTypeFloat0, 216, 42037, byteArray0, byteOrder0, (byte)124);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 534L, byteArray0, byteOrder0, (byte) (-112));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(534, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2144905635), (-2144905635), fieldTypeLong0, 630L, (-2144905635), byteArray0, byteOrder0, (byte)22);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2144905635), tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals((-2144905635), tiffField0.getTag());
      assertEquals((-2144905635), tiffField0.getDirectoryType());
      assertEquals(630L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)35);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4675, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, (byte)35);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@733f8ba for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(71, "SubIFDs");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeDouble0, 71, 71, byteArray0, byteOrder0, (byte) (-83));
      tiffField0.getDoubleArrayValue();
      assertEquals(71, tiffField0.getOffset());
      assertEquals(71L, tiffField0.getCount());
      assertEquals(71, tiffField0.getTag());
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals((-83), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeByte0, 270, 4L, byteArray0, byteOrder0, 789);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5b7e5403 for: 270 (0x10e: ImageDescription): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2147233328), (-2147233328), fieldTypeLong0, (-2147233328), (-2147233328), byteArray0, (ByteOrder) null, (-112));
      tiffField0.getDoubleArrayValue();
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-2147233328L), tiffField0.getCount());
      assertEquals((-2147233328), tiffField0.getDirectoryType());
      assertEquals((-2147233328), tiffField0.getTag());
      assertEquals((-2147233328), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(42037, "*n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(216, 216, fieldTypeFloat0, 216, 42037, byteArray0, byteOrder0, (byte)124);
      tiffField0.getDoubleArrayValue();
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(216, tiffField0.getDirectoryType());
      assertEquals(216, tiffField0.getTag());
      assertEquals(216L, tiffField0.getCount());
      assertEquals(42037, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147233328), (-2147233328), fieldTypeRational0, (-2147233328), 150L, byteArray0, byteOrder0, (-1610612735));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2147233328L), tiffField0.getCount());
      assertEquals((-2147233328), tiffField0.getTag());
      assertEquals((-2147233328), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(150, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 1L, 65535, byteArray0, byteOrder0, (byte) (-115));
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), (-1), fieldTypeShort0, 1786L, (-1010L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1010), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1440), tiffField0.getTag());
      assertEquals(1786L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 1954, fieldTypeFloat0, 1954, 1954, byteArray0, byteOrder0, (byte)87);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@164003ed for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), (-1), fieldTypeShort0, 1786L, (-1010L), byteArray0, byteOrder0, (byte)50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1010), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1440), tiffField0.getTag());
      assertEquals(1786L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147233328), (-2147233328), fieldTypeRational0, (-2147233328), 150L, byteArray0, byteOrder0, (-1610612735));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147233328), (-2147233328), fieldTypeRational0, (-2147233328), 150L, byteArray0, byteOrder0, (-1610612735));
      assertEquals(2002560, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2147233328), tiffField0.getDirectoryType());
      assertEquals((-2147233328L), tiffField0.getCount());
      assertEquals((-2147233328), tiffField0.getTag());
      assertEquals(150, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1175, tiffField0.getOffset());
      assertEquals((-470), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3112), (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)48;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-3112), fieldTypeAscii0, 50, (-3112), byteArray0, byteOrder0, 2147479518);
      String string0 = tiffField0.getStringValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(2147479518, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-3112), tiffField0.getDirectoryType());
      assertEquals((-3112), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 312L, 0, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@386a8ffa
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "?`]ej'ahsLnny115[<");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147065278), 2136, fieldTypeLong0, 255L, (-4405L), byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(2136, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-4405), tiffField0.getOffset());
      assertEquals("Unknown Tag (0x80066242)", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(1594);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34735, 1167, fieldTypeFloat0, (-1L), 58L, byteArray0, byteOrder0, 69);
      String string0 = tiffField0.getTagName();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(1167, tiffField0.getDirectoryType());
      assertEquals(34735, tiffField0.getTag());
      assertEquals(58, tiffField0.getOffset());
      assertEquals("GeoKeyDirectoryTag", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1115, fieldTypeRational0, (-11453246112L), (-15648L), byteArray0, byteOrder0, 65535);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("entry.directoryType: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "entry.directoryType: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "null");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2146881943, fieldTypeByte0, 2146881943, 2146881943, byteArray0, byteOrder0, (-3080));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2146881943, tiffField0.getDirectoryType());
      assertEquals(2146881943, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2146881943, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2146881943L, tiffField0.getCount());
      assertEquals((-3080), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3535), (-3535), fieldTypeDouble0, 982L, 1655L, byteArray0, byteOrder0, (-3535));
      String string0 = tiffField0.getValueDescription();
      assertEquals(982L, tiffField0.getCount());
      assertEquals((-3535), tiffField0.getSortHint());
      assertEquals(7856, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-3535), tiffField0.getTag());
      assertEquals(1655, tiffField0.getOffset());
      assertEquals((-3535), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3857, 3857, fieldTypeLong0, 3857, (-828L), byteArray0, byteOrder0, (-3274));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(293);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("3857 (0xf11: Unknown Tag): 0, 0 (3857 Long)\n", byteArrayOutputStream0.toString());
      assertEquals(3857, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(42037, "*n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(216, 216, fieldTypeFloat0, 216, 42037, byteArray0, byteOrder0, (byte)124);
      String string0 = tiffField0.getValueDescription();
      assertEquals(42037, tiffField0.getOffset());
      assertEquals(216L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(864, tiffField0.getBytesLength());
      assertEquals(216, tiffField0.getTag());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(216, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "?`]ej'ahsLnny115[<");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147065278), 2136, fieldTypeLong0, 255L, (-4405L), byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4405), tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2147065278), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2136, tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 321, fieldTypeAscii0, 321, 321, byteArray0, byteOrder0, (byte)35);
      tiffField0.toString();
      assertEquals(321L, tiffField0.getCount());
      assertEquals(321, tiffField0.getTag());
      assertEquals(321, tiffField0.getOffset());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(321, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4581, 4581, fieldTypeAscii0, 4581, (-341L), byteArray0, byteOrder0, 4581);
      tiffField0.toString();
      assertEquals(4581, tiffField0.getBytesLength());
      assertEquals(4581, tiffField0.getTag());
      assertEquals(4581, tiffField0.getSortHint());
      assertEquals(4581L, tiffField0.getCount());
      assertEquals((-341), tiffField0.getOffset());
      assertEquals(4581, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), (-1), fieldTypeShort0, 1786L, (-1010L), byteArray0, byteOrder0, (byte)50);
      tiffField0.dump();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1786L, tiffField0.getCount());
      assertEquals((-1440), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3572, tiffField0.getBytesLength());
      assertEquals((-1010), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-30), 1037, fieldTypeShort0, 1037, 1037, byteArray0, byteOrder0, (-1972));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(34713, (byte)105);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(1037, tiffField0.getOffset());
      assertEquals((-1972), tiffField0.getSortHint());
      assertEquals(1037, tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-470), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(1175, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "ohY");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-470), 4, fieldTypeLong0, 1L, 1175L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1175, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-470), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), (-1), fieldTypeShort0, 1786L, (-1010L), byteArray0, byteOrder0, (byte)50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1440), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1010L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2207), (-2207), fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2207), tiffField0.getTag());
      assertEquals((-2207), int0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1856), (-1), fieldTypeShort0, (byte)1, (-3004L), byteArray0, byteOrder0, (-1440));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1440), int0);
      assertEquals((-1856), tiffField0.getTag());
      assertEquals((-3004), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(42037, "*n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(216, 216, fieldTypeFloat0, 216, 42037, byteArray0, byteOrder0, (byte)124);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("216 (0xd8: Unknown Tag): ", string0);
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(42037, tiffField0.getOffset());
      assertEquals(216, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1856), (-1), fieldTypeShort0, (byte)1, (-3004L), byteArray0, byteOrder0, (-1440));
      tiffField0.dump();
      assertEquals((-3004), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1440), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1856), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(337, 337, fieldTypeLong0, 337, (-2901L), byteArray0, byteOrder0, (-1718));
      tiffField0.getIntArrayValue();
      assertEquals(337, tiffField0.getTag());
      assertEquals((-2901), tiffField0.getOffset());
      assertEquals(337, tiffField0.getDirectoryType());
      assertEquals((-1718), tiffField0.getSortHint());
      assertEquals(1348, tiffField0.getBytesLength());
      assertEquals(337L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(337, 337, fieldTypeLong0, 337, (-2901L), byteArray0, byteOrder0, (-1718));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)86, 2214);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(337, tiffField0.getDirectoryType());
      assertEquals(337L, tiffField0.getCount());
      assertEquals(337, tiffField0.getTag());
      assertNull(string0);
      assertEquals((-2901), tiffField0.getOffset());
      assertEquals((-1718), tiffField0.getSortHint());
  }
}
