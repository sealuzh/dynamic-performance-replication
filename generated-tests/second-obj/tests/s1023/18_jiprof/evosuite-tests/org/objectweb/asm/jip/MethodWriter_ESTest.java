/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:03:19 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1469));
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "u!~{H[Uv:[F*iq*", "u!~{H[Uv:[F*iq*", "u!~{H[Uv:[F*iq*", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = MethodWriter.readUnsignedShort(byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wzXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CY) z|wzXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      String string0 = "org.objectweb.asm.jip.Frame";
      methodWriter0.visitFrame(256, 2, stringArray0, 2789, stringArray0);
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, 128);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1114), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "{99rDAU.5W!D-;==V", stringArray1, false, false);
      methodWriter0.visitMultiANewArrayInsn("uFvvDU;H$Q`3", (-1228));
      methodWriter0.visitAnnotation("[ZTY=^R;cjKc_/Y;YXv", true);
      int int0 = methodWriter0.getSize();
      assertEquals(72, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2739);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2739, "RuntimeInvisibleAnnotations", "Cgi4)bz|]wzXLU", "Cgi4)bz|]wzXLU", stringArray0, false, false);
      classWriter0.visitAnnotation("Cgi4)bz|]wzXLU", false);
      methodWriter0.visitMaxs(2, 0);
      int int0 = Type.OBJECT;
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleAnnotations", 1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 2);
      methodWriter0.visitVarInsn(1, 13);
      int int0 = methodWriter0.getSize();
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1114), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (-1114);
      intArray0[2] = (-1114);
      methodWriter0.getSize();
      Label label1 = new Label();
      Label label2 = label0.getFirst();
      assertSame(label0, label2);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1256));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "5PHR3fUW";
      stringArray0[1] = "{99rDAU.5W!D-;==V";
      stringArray0[2] = "5PHR3fUW";
      stringArray0[3] = "{99rDAU.5W!D-;==V";
      stringArray0[4] = "{99rDAU.5W!D-;==V";
      stringArray0[5] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2200, "5PHR3fUW", "{99rDAU.5W!D-;==V", "{99rDAU.5W!D-;==V", stringArray0, false, false);
      methodWriter0.classReaderLength = 634;
      methodWriter0.visitAnnotation("5PHR3fUW", false);
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(14, "org.objectweb.asm.jip.MethodWriter", "Co*e", "", (String[]) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/Ls";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 24, "/Ls", "/Ls", "/Ls", stringArray0, false, false);
      assertFalse(methodWriter0.equals((Object)methodVisitor0));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter(2788);
      boolean boolean1 = classWriter0.invalidFrames;
      classWriter0.newNameTypeItem(".JAR", ".JAR");
      byte[] byteArray0 = ClassWriter.TYPE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2788, "LocalVarbleTypeTble", "LocalVarbleTypeTble", "Aun/7V%&n>LlLPG", (String[]) null, false, false);
      methodWriter0.getSize();
      methodWriter0.visitVarInsn(2, 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "LocalVarbleTypeTble", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-303);
      intArray0[1] = 64;
      intArray0[2] = (-1);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-2699), (-303));
      assertEquals(2093, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-2109);
      intArray0[1] = 1817;
      intArray0[2] = 2;
      intArray0[3] = (-3175);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, 8);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      classWriter0.newUTF8("`e[&(0U.,QYJ:{g");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1114), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[5];
      methodWriter0.visitIntInsn(435, 0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(200, "`e[&(0U.,QYJ:{g", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      String string0 = "{99rDAU.5W!D-;==V";
      String string1 = "CY\\) z|wXLW";
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      methodWriter0.visitIincInsn(1224736769, 1);
      int int0 = 298;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1224736769, 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      classWriter0.addType("HU&X~");
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "Code", "Code", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(2, 1);
      methodWriter0.visitVarInsn(3700, 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3700, "Code", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1228), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (-1228);
      intArray0[2] = (-1114);
      intArray0[3] = (-1228);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("`e[&(0U.,QYJ:{g", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1469));
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      intArray0[1] = (-1469);
      intArray0[2] = (-1469);
      intArray0[3] = (-1469);
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 83, (-1469));
      assertEquals((-1558), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      int int0 = Frame.TOP_IF_LONG_OR_DOUBLE;
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(2, 8388608);
      methodWriter0.visitVarInsn(3689, 8388608);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3689, "LocalVariableTypeTble", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1127));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Synthetic", "^tut%X", "", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("`e[&(0U.,QYJ:{g", 16777219);
      methodWriter0.visitAnnotation("`e[&(0U.,QYJ:{g", false);
      int int0 = Frame.VALUE;
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = label0.frame;
      Label label1 = label0.getFirst();
      methodWriter0.visitLineNumber(2, label1);
      Label label2 = label1.getFirst();
      methodWriter0.visitLineNumber(16777219, label2);
      assertSame(label1, label2);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2785);
      classWriter0.addUninitializedType(" (mwf^sXXX3Ba", 2);
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = " (mwf^sXXX3Ba";
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      boolean boolean0 = ClassReader.RESIZE;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2785, " (mwf^sXXX3Ba", "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", stringArray0, true, false);
      int int0 = Type.BOOLEAN;
      methodWriter1.visitCode();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wzXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CY) z|wzXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      methodWriter0.visitMethodInsn(256, "CY) z|wzXLW", "CY) z|wzXLW", "CY) z|wzXLW");
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTypeInsn(244, "{99rDAU.5W!D-;==V");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(244, 12);
      methodWriter0.visitFrame(1434, 197, stringArray0, 2, stringArray0);
      methodWriter0.visitLdcInsn("CY) z|wzXLW");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "Code", "Code", "Code", (String[]) null, false, false);
      classWriter0.newNameTypeItem("Code", "Code");
      methodWriter0.visitFrame(2, 2780, (Object[]) null, 2, (Object[]) null);
      methodWriter0.visitIincInsn(132, 2);
      methodWriter0.visitFrame(3, 22, (Object[]) null, 1, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      String[] stringArray0 = new String[10];
      int int0 = Edge.NORMAL;
      stringArray0[0] = "C+iTz4)bz|]wzXLU";
      String[] stringArray1 = new String[1];
      stringArray1[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "C+iTz4)bz|]wzXLU", stringArray0[1], stringArray1, true, false);
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      classWriter0.firstMethod.visitMaxs(184, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray1, 0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newDouble(2734.6965324643);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "LocalVariableTypeTable", "LocalVariableTypeTable", "Code", (String[]) null, false, false);
      methodWriter0.visitFrame(2, 2780, (Object[]) null, 2, (Object[]) null);
      methodWriter0.visitIincInsn(139, 2);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.getSize();
      methodWriter0.visitVarInsn((-296), 139);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "LocalVariableTypeTable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      classWriter0.addType("HU&X~");
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(2, 1);
      methodWriter0.visitVarInsn(3689, 1);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(2779, 7, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, false, false);
      methodWriter0.visitMethodInsn(256, "CY) z|wXLW", "CY) z|wXLW", "CY) z|wXLW");
      methodWriter0.visitTypeInsn(256, "{99rDAU.5W!D-;==V");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("{99rDAU.5W!D-;==V");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      classWriter0.addType("CYi4)bz|wzXLU");
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, ".s.IFJDCS", "Code", "HU&X~", (String[]) null, false, false);
      methodWriter0.visitIincInsn((-1347), (-1347));
      methodWriter0.visitVarInsn(2, (-611));
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "LocalVariableTypeTble", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-1114);
      intArray1[2] = (-1995993474);
      MethodWriter.getNewOffset(intArray0, intArray1, label0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, (-1995993474));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 2784;
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter(2784);
      boolean boolean1 = classWriter0.invalidFrames;
      byte[] byteArray0 = ClassWriter.TYPE;
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2784, "LocalVarbleTypeTbe", "LocalVarbleTypeTbe", "Aun/7V%&n>LlLPG", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitInsn(1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "LocalVarbleTypeTbe", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "`e[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", stringArray0, false, true);
      methodWriter0.visitFieldInsn(3, "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", "'M8kZ^");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2755);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2755, "RuntimeInvisibleAnnotations", "D`-B)#g", "D`-B)#g", stringArray0, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2755, "RuntimeInvisibleAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "{99rDAU.5W!D-;==V", "CYi4)bz|]wzXLU", "Code", stringArray0, false, true);
      methodWriter0.visitFieldInsn(3, "Code", "CYi4)bz|]wzXLU", "'M8kZ^");
      methodWriter0.visitMultiANewArrayInsn("{99rDAU.5W!D-;==V", 220);
      int int0 = methodWriter0.getSize();
      assertEquals(51, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ZWVG8Y3XytUT";
      stringArray0[1] = "LocalVariableTypeTable";
      stringArray0[2] = "ZWVG8Y3XytUT";
      stringArray0[3] = "ZWVG8Y3XytUT";
      stringArray0[4] = "ZWVG8Y3XytUT";
      stringArray0[5] = "LocalVariableTypeTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1729), "LocalVariableTypeTable", "ZWVG8Y3XytUT", "LocalVariableTypeTable", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "LocalVariableTypeTable");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      classWriter0.newLong(2789);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CYi4)bz|wzXLU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      methodWriter0.visitAnnotation("{99rDAU.5W!D-;==V", false);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(256, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 256
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2780);
      classWriter0.newInteger(2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "`e[&(0r.,QYJ:{g", "CYi4)bz|]wzXLU", "StackMapTable", stringArray0, true, true);
      methodWriter0.visitMethodInsn(1, "StackMapTable", "{99rDAU.5W!D-;==V", "V{(iD3`}@z/)g-G]6");
      classWriter0.visitAnnotation("`e[&(0r.,QYJ:{g", false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Type.BYTE;
      Integer integer0 = new Integer(3027);
      methodWriter0.visitAnnotation("{99rDAU.5W!D-;==V", false);
      Integer integer1 = new Integer(3226);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1228), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      Frame frame0 = new Frame();
      Label label1 = frame0.owner;
      Label label2 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label2;
      methodWriter0.visitLookupSwitchInsn(label2, intArray0, labelArray0);
      Frame frame1 = new Frame();
      methodWriter0.visitIincInsn(515, 1);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("`e[&(0U.,QYJ:{g", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1114));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "vH+!s6[Qq6;6@?~T";
      stringArray1[1] = "`e[&(0U.,QYJ:{g";
      stringArray1[2] = "%6]*A9-L,";
      stringArray1[3] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "%6]*A9-L,", "CYi4)bz|]wzXLU", "`e[&(0U.,QYJ:{g", stringArray1, false, false);
      methodWriter0.visitFieldInsn((-1114), "LineNumberTable", "C/vHZip{7<]", "`e[&(0U.,QYJ:{g");
      methodWriter0.classReaderOffset = 2851;
      methodWriter0.visitMultiANewArrayInsn("vH+!s6[Qq6;6@?~T", 1224736769);
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter(2788);
      boolean boolean1 = classWriter0.invalidFrames;
      classWriter0.newNameTypeItem(".JAR", ".JAR");
      byte[] byteArray0 = ClassWriter.TYPE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2788, "LocalVarbleTypeTble", "LocalVarbleTypeTble", "Aun/7V%&n>LlLPG", (String[]) null, false, false);
      classWriter0.newLong(2788);
      Label label0 = new Label();
      label0.toString();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2718);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.lastMethod = null;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "5k99rDAU.5W!D-;==VC";
      classWriter0.threshold = (-4218);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2718, "5k99rDAU.5W!D-;==VC", "Cgi4)bz|]wzXLU", "5k99rDAU.5W!D-;==VC", stringArray0, false, true);
      methodWriter1.visitLdcInsn("Cgi4)bz|]wzXLU");
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(2, 2718);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDsU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "{99rDsU.5W!D-;==V", "CYi4)bz|]wzXLU", "{99rDsU.5W!D-;==V", stringArray0, true, true);
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitMethodInsn(1, "{99rDsU.5W!D-;==V", "{99rDsU.5W!D-;==V", "V{(iD3}@z/)g-G]6");
      classWriter0.thisName = "{99rDsU.5W!D-;==V";
      int int0 = Frame.BASE_KIND;
      // Undeclared exception!
      try { 
        MethodWriter.readInt((byte[]) null, (byte) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2777);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|6o";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2777, "|6o", "Cgi4)bz|]wzXLU", "|6o", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "OU ");
      Label label1 = label0.successor;
      methodWriter0.visitLocalVariable("|6o", "OU ", "OU ", label0, label0, 168);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4959));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ZWVG8Y3XytUT";
      int int0 = Frame.INTEGER;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4959), "ZWVG8Y3XytUT", "CYi4)bz|wzXLU", "ZWVG8Y3XytUT", stringArray0, true, false);
      classWriter0.thisName = "";
      methodWriter0.visitAnnotation("ZWVG8Y3XytUT", true);
      Label label0 = new Label();
      Label label1 = new Label();
      label1.visitSubroutine(label0, 157, 1);
      methodWriter0.visitJumpInsn(157, label0);
      methodWriter0.visitMethodInsn(1, "J2c)f=WznP?8[B=VJSs", "J2c)f=WznP?8[B=VJSs", "J2c)f=WznP?8[B=VJSs");
      methodWriter0.visitMaxs((-4959), 16777217);
      methodWriter0.visitIincInsn(2, 16777217);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "AnnotationDefault", "AnnotationDefault", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, 3689);
      methodWriter0.visitMaxs((-1926), 3689);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Synthetic";
      classWriter0.newConst("Synthetic");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Synthetic", "", "Synthetic", stringArray0, false, false);
      int int0 = 1260;
      methodWriter0.visitFrame(132, 1260, stringArray0, 67, stringArray0);
      methodWriter0.visitAnnotation("", false);
      Object[] objectArray0 = new Object[0];
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) "";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(67, 2, objectArray0, 0, objectArray1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2789, "Code", "CYi4)bz|wzXLU", "RuntimeInvisibleParameterAnotations", stringArray0, true, false);
      methodWriter1.visitMethodInsn((-109), "SourceDebugExtension", "CYi4)bz|wzXLU", "CYi4)bz|wzXLU");
      Label label0 = new Label();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter1.visitLabel(label0);
      methodWriter1.visitMaxs((-109), (-109));
      methodWriter2.visitVarInsn(1, 2789);
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 2757;
      ClassWriter classWriter0 = new ClassWriter(2757);
      int int1 = Edge.NORMAL;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "C+iTz4ng)bz|]wPXLU", "CYi4)bz|]wzXLU", "R.I#J6(en{1DG", stringArray0, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitFieldInsn(82, "CYi4)bz|]wzXLU", "C+iTz4ng)bz|]wPXLU", "CYi4)bz|]wzXLU");
      methodWriter0.visitVarInsn(0, 82);
      Attribute attribute0 = new Attribute("R.I#J6(en{1DG");
      methodWriter0.visitAttribute(attribute0);
      Edge edge0 = new Edge();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2328, "R.I#J6(en{1DG", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      String string0 = "{99rDAU.5W!D-;==V";
      String string1 = "CY\\) z|wXLW";
      classWriter0.visitSource("char", "RA;MGb");
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(2782);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2782
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2777);
      classWriter0.visitAnnotation(".6o", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".6o";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2777, ".6o", "Cgi4)bz|]wzXLU", ".6o", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "OU ");
      Label label1 = label0.successor;
      classWriter0.visitOuterClass(".6o", ".6o", ".6o");
      methodWriter0.visitMultiANewArrayInsn("<init>", 2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFrame(4421, 2777, stringArray0, 1, stringArray0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      classWriter0.addType("HU&X~");
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      methodWriter0.visitVarInsn(1, 13);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("Code", "LocalVariableTypeTble", "Code", label0, label0, 2779);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      String[] stringArray0 = new String[1];
      classWriter0.newNameTypeItem(".S^gY>gAWMe=.E548:|", ".S^gY>gAWMe=.E548:|");
      stringArray0[0] = ".S^gY>gAWMe=.E548:|";
      classWriter0.newConst("Synthtic");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4), ".S^gY>gAWMe=.E548:|", "_#/", "Synthtic", stringArray0, false, false);
      classWriter0.newInteger((-343));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitFrame(4, 1273, stringArray0, 1, stringArray0);
      classWriter0.newConstItem("_#/");
      methodWriter0.visitAnnotation("_#/", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "~K!x303", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      methodWriter0.visitIincInsn(1, 2);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(1, 13);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "LocalVariableTypeTble", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("oE\"s)Ct");
      methodWriter0.put(byteVector1);
      methodWriter0.visitMethodInsn(298, "CY) z|wXLW", "CY) z|wXLW", "CY) z|wXLW");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("{99rDAU.5W!D-;==V");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2779);
      int int0 = ObjectStreamConstants.baseWireHandle;
      classWriter0.toByteArray();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(24117248);
      ByteVector byteVector1 = byteVector0.putByte(90);
      methodWriter0.visitVarInsn(2779, 142);
      methodWriter0.visitAnnotation("Vl58Am", false);
      methodWriter0.put(byteVector1);
      methodWriter0.visitMaxs(7, 90);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(584);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1228), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-2821), label0);
      methodWriter0.visitIntInsn((-1228), (-1228));
      label0.info = (Object) (-1228);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int int0 = Type.BYTE;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitLineNumber(2, label0);
      methodWriter0.visitLabel(label0);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort((-1228));
      methodWriter2.put(byteVector1);
      methodWriter2.getSize();
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation((-1637), "`e[&(0U.,QYJ:{g", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2780);
      String[] stringArray0 = new String[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("`e[&(0U.,QYJ:{g", 220);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2780, stringArray0, (-1908), (Object[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2780);
      String[] stringArray0 = new String[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "`e[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      methodWriter0.visitFieldInsn(3, "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU");
      methodWriter0.visitMultiANewArrayInsn("`e[&(0U.,QYJ:{g", 220);
      methodWriter0.visitFrame(1, (-2830), stringArray0, (-1908), (Object[]) null);
      methodWriter0.visitEnd();
      methodWriter0.visitIincInsn((-2830), 2);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4931));
      Item item0 = classWriter0.key;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CYi4)bz|wzXLU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4931), "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      methodWriter0.visitAnnotation("{99rDAU.5W!D-;==V", false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.visitSubroutine(label0, 0L, (-479));
      methodWriter0.visitJumpInsn(189, label0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2753);
      classWriter0.visitSource("RuntimeInvisibleAnnotations", "Cgi4)bz|]wzXLU");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2753, "RuntimeInvisibleAnnotations", "Cgi4)bz|]wzXLU", "Cgi4)bz|]wzXLU", stringArray0, false, true);
      classWriter0.visitAnnotation("Cgi4)bz|]wzXLU", false);
      Label label0 = new Label();
      Edge edge0 = new Edge();
      edge0.info = 1;
      label0.successors = edge0;
      methodWriter0.visitLocalVariable("RuntimeInvisibleAnnotations", "PC Sy", "Cgi4)bz|]wzXLU", label0, label0, 1);
      methodWriter0.visitLabel(label0);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(1, 1, label0, labelArray0);
      methodWriter0.visitLineNumber(235, label0);
      methodWriter0.visitInsn(1);
      methodWriter0.visitMethodInsn(235, "RuntimeInvisibleAnnotations", ">U<hif", "Cgi4)bz|]wzXLU");
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2209));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)114;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F`=b1jh.w";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2209), "F`=b1jh.w", "CYi4)bz|]wzXLU", "F`=b1jh.w", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.Type");
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Type.CHAR;
      assertEquals(2, int1);
      assertFalse(int1 == int0);
      
      methodWriter0.visitFrame((-2209), 73, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 186;
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {2, 186}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertEquals(84, int2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(298, "CY) z|wXLW", "CY) z|wXLW", "CY) z|wXLW");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(298, "{99rDAU.5W!D-;==V");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("{99rDAU.5W!D-;==V");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2209));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)114;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F`=b1jh.w";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2209), "F`=b1jh.w", "CYi4)bz|]wzXLU", "F`=b1jh.w", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1, "F`=b1jh.w", "F`=b1jh.w", "Exceptions");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn((byte)114, "F`=b1jh.w");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitVarInsn((byte)114, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.inputStackTop = 1;
      Object object0 = label0.info;
      assertNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "Code", "CYi4)bz|wzXLU", "RuntimeInvisibleParameterAnotations", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("s;`Jfks!BYN0u", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-109), "SourceDebugExtension", "CYi4)bz|wzXLU", "CYi4)bz|wzXLU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.visitSubroutine(label0, 0L, 2);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(59, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn(283, 2789);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2755);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2755, "RuntimeInvisibleAnnotations", "D`-B)#g", "D`-B)#g", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("D`-B)#g", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("mk2.xoyUKYJ");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitFrame(251658240, 68, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(3107);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Code");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Code", "Code", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("M(ZW>zHYw", "M(ZW>zHYw");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "Code", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "`a[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("s;`Jfks!BYN0u", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.ARRAY;
      assertEquals(9, int0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.successor = label0;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitMultiANewArrayInsn("{99rDAU.5W!D-;==V", 2789);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(2789);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("CYi4)bz|]wzXLU", "q*@etfdLa", (String) null, label1, label0, 2789);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 355, 175);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 355
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CYi4)bz|]wzXLU";
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(n{1DG", "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      edge0.info = 1;
      methodWriter0.visitInsn(153);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(53, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Type.CHAR;
      assertEquals(2, int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newLong(2789);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      stringArray0[0] = "CYi4)bz|wzXLU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("{99rDAU.5W!D-;==V", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2780);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.thisName = "{99rDAU.5W!D-;==V";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      classWriter0.index = 2780;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "`e[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "Cod(e", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("CYi4)bz|]wzXLU", "h_xu-}^nO");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("h_xu-}^nO", 2780);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(192, 2787);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2780);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "LocalVariableTypeTable", "LocalVariableTypeTable", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-1543);
      methodWriter0.visitFrame(2, 2780, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(3, 22, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-3394), "LocalVariableTable", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2755);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "D`-B)#g";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2755, "RuntimeInvisibleAnnotations", "D`-B)#g", "D`-B)#g", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("D`-B)#g", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(2755, 64);
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("mk2.xoyUKYJ");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1539), "LocalVariableTypeTble", "Signature", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitVarInsn(25, 25);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(13, "ue-.k\"r.Ah@x", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2780);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "LocalVariableTypeTable", "LocalVariableTypeTable", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("M(ZWzHYw", "M(ZWzHYw");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-1543);
      methodWriter0.visitFrame(2, 2780, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2780, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-1543);
      Item item1 = classWriter0.newFieldItem("RuntimeInvisibleParameterAnnotations", "^q8iT", "M(ZWzHYw");
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      
      methodWriter0.visitFrame(3, 22, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(52, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2265);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1539), 1, (Object[]) null, 188, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, (-1421));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2780);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "LocalVariableTypeTable", "LocalVariableTypeTable", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("M(ZWzHYw", "M(ZWzHYw");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2780, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(139, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-296), 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "LocalVariableTypeTable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2794);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[2];
      stringArray0[1] = "`e[&(.,QYJ:{g";
      stringArray0[0] = "CYi4)|z|]wzXLU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2794, "`e[&(.,QYJ:{g", "CYi4)|z|]wzXLU", "CYi4)|z|]wzXLU", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.next = methodWriter0;
      AnnotationVisitor annotationVisitor0 = classWriter0.firstMethod.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("LineNumberTable", true);
      assertNotNull(annotationVisitor1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      classWriter0.firstMethod.visitTypeInsn(3739, "QNk6x]dcKiGA7F;R\"?b");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertEquals(55, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      methodWriter0.visitVarInsn(55, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      label0.inputStackTop = 55;
      label0.addToSubroutine(8, 8);
      classWriter0.firstMethod.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3739, 186);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3739
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 1901;
      ClassWriter classWriter0 = new ClassWriter(1901);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "q";
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.visitSource("q", "=o{6T");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Item item0 = classWriter0.newClassItem("q");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = (-1174351303);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1174351303), "<init>", "q", "q", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2780);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = 2780;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2780, "{99rDAU.5W!D-;==V", "CYi4)bz|]wzXLU", "Code", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(3, "Code", "CYi4)bz|]wzXLU", "Code");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(3, 1, stringArray0, (-1772), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-1772), 14);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(22, (-2358));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(22, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "Code", "CYi4)bz|wzXLU", "RuntimeInvisibleParameterAnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-109), "SourceDebugExtension", "CYi4)bz|wzXLU", "CYi4)bz|wzXLU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(47, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(2789, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2789
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2783);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)74;
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      stringArray0[0] = "(mwfsXXX1w3Ba";
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2783, "(mwfsXXX1w3Ba", "CYi4)bz|]wzXLU", "CYi4)bz|]wzXLU", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((byte)74, "RuntimeVisibleParameterAnnotations", "CYi4)bz|]wzXLU", "LocalVariableTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("CYi4)bz|]wzXLU", (byte)74);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "C+iTz4ng)bz|]wPXLU", "R.I#J6(en{1DG", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = "RuntimeInvisibleAnnotations";
      classWriter0.firstMethod.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitFieldInsn(184, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "C+iTz4ng)bz|]wPXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2757, 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.next.visitFrame(1, 2, stringArray0, 68, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-99), "|6o", "Cgi4)bz|]wzXLU", "[v%J-O5Rn", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "H%[\"6U|IsLIXuO$");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitLocalVariable("java/lang/Object", "BxQ1Hl%37)GKT~\"^bQ", "java/lang/Object", label0, label0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1458132363), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("`a[&(0U.,QYJ:{g", "0|B(l", "{99rDAU.5W!D-;==V");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "`a[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "org.objectweb.asm.jip.Type", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      int int0 = Frame.OBJECT;
      assertEquals(24117248, int0);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      label1.position = 915;
      label2.successor = label1;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Label label3 = label2.getFirst();
      assertNotNull(label3);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertSame(label2, label3);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertSame(label3, label2);
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      
      label3.next = label1;
      Label label4 = label3.getFirst();
      assertNotNull(label4);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label4.equals((Object)label1));
      assertFalse(label4.equals((Object)label0));
      assertSame(label2, label3);
      assertSame(label2, label4);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertSame(label3, label2);
      assertNotSame(label3, label1);
      assertSame(label3, label4);
      assertNotSame(label3, label0);
      assertSame(label4, label3);
      assertNotSame(label4, label1);
      assertSame(label4, label2);
      assertNotSame(label4, label0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn((-6), 2, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label4));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label3));
      assertNotSame(label0, label2);
      assertNotSame(label0, label4);
      assertNotSame(label0, label1);
      assertNotSame(label0, label3);
      
      methodWriter0.visitLineNumber(309, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label4));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label3));
      assertNotSame(label0, label2);
      assertNotSame(label0, label4);
      assertNotSame(label0, label1);
      assertNotSame(label0, label3);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("{99rDAU.5W!D-;==V", 2789);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2789, 2789);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CYi4)bz|wzXLU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitVarInsn(169, 1315);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("CYi4)bz|wzXLU", "StackMapTable", "", label0, label0, 262144);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2782);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("char", "RA;MGb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2782, "{99rDAU.5W!D-;==V", "CY) z|wXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = ":)~nSnze1[n";
      methodWriter0.visitLdcInsn("CY) z|wXLW");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(17, "CY) z|wXLW", "CY) z|wXLW", "CY) z|wXLW");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("{99rDAU.5W!D-;==V");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2753);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2753, "RuntimeInvisibleAnnotations", "Cgi4)bz|]wzXLU", "CoEe", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("LineNumberTable", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "RuntimeInvisibleAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      frame0.owner = null;
      frame0.inputLocals = null;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LineNumberTable");
      assertFalse(boolean0);
      
      methodWriter0.visitLdcInsn("Cgi4)bz|]wzXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("V\"!_TGoz;,wxTy", 2753);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "R.I#J6(n{1DG";
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)76;
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray1[0] = "ude-.k\"r.Ab@/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(n{1DG", "CYi4)bz|]wzXLU", stringArray0[1], stringArray1, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      methodWriter0.visitVarInsn(50, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(584);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`e[&(0U.,QYJ:{g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1370), "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((-1370), (-1370));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter1.visitVarInsn(188, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Item item0 = classWriter0.newNameTypeItem("`e[&(0U.,QYJ:{g", "`e[&(0U.,QYJ:{g");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.putShort(24);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(186, 2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      Integer integer0 = new Integer((-1619));
      assertNotNull(integer0);
      assertEquals((-1619), (int)integer0);
      
      methodWriter1.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn((-1370), (-3365));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn(188, "?Qv4G}o>!e");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(70, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wzXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CY) z|wzXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(256, "CY) z|wzXLW", "CY) z|wzXLW", "CY) z|wzXLW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(244, "{99rDAU.5W!D-;==V");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(244, 12);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1434, 197, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("CY) z|wzXLW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2768);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[6];
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "R|.IdJ6en.{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2768, "R|.IdJ6en.{1DG", "C+iTz4ng)bo|]wPXLU", stringArray0[1], stringArray1, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      int int0 = methodWriter0.getSize();
      assertEquals(18, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      classWriter0.version = (-2764);
      methodWriter0.visitMultiANewArrayInsn("R|.IdJ6en.{1DG", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitParameterAnnotation((-2764), "CYi4)bz|wzXLU", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(2779);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.addType("HU&X~");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(631);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitVarInsn(79, 160);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("')n9", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2777);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = ".6o";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2777, ".6o", "Cgi4)bz|]wzXLU", ".6o", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "OU ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      classWriter0.visitOuterClass(".6o", ".6o", ".6o");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2777, 177);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, ".6o");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn(1, "`5lAh");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2777);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|6o";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2777, "|6o", "Cgi4)bz|]wzXLU", "|6o", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "OU ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.successors = null;
      methodWriter0.visitIntInsn(17, (-128));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "OU ";
      objectArray0[1] = (Object) "|6o";
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(0L);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(57, 2777);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+|c");
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(8388607, (-47));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "`a[&(0U.,QYJ:{g", "CYi4)bz|]wzXLU", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("s;`Jfks!BYN0u", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLabel(label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      
      int int0 = Type.ARRAY;
      assertEquals(9, int0);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      label2.successor = label1;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Label label3 = label2.getFirst();
      assertNotNull(label3);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertSame(label2, label3);
      assertNotSame(label3, label1);
      assertSame(label3, label2);
      assertNotSame(label3, label0);
      
      Label label4 = label3.getFirst();
      assertNotNull(label4);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      assertFalse(label4.equals((Object)label0));
      assertFalse(label4.equals((Object)label1));
      assertNotSame(label2, label1);
      assertSame(label2, label4);
      assertNotSame(label2, label0);
      assertSame(label2, label3);
      assertNotSame(label3, label1);
      assertSame(label3, label2);
      assertSame(label3, label4);
      assertNotSame(label3, label0);
      assertNotSame(label4, label0);
      assertSame(label4, label3);
      assertNotSame(label4, label1);
      assertSame(label4, label2);
      
      methodWriter0.visitLineNumber(355, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label4));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label3));
      assertFalse(label0.equals((Object)label2));
      assertNotSame(label0, label4);
      assertNotSame(label0, label1);
      assertNotSame(label0, label3);
      assertNotSame(label0, label2);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("{99rDAU.5W!D-;==V", 2789);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderOffset = (-485);
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(1731);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "FC+iTz4ng)bz|]wPXLU", "R.I#J6(en{1DG", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitIincInsn(2757, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      classWriter0.firstMethod.visitFrame(6, (-484), stringArray0, 1578, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "R.I#J6(en{1DG");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      Label label2 = label0.successor;
      assertNull(label2);
      
      classWriter0.firstMethod.visitMaxs(6, (-484));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next.visitVarInsn(57, (-484));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(2779);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.addType("HU&X~");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2779, "LocalVariableTypeTble", "LocalVariableTypeTble", "Code", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("L");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-489), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(184);
      assertNotNull(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4931));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99PYrDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4931), "{99PYrDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99PYrDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter0.visitTryCatchBlock(label1, label1, label1, "CYi4)bz|wzXLU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      int int0 = classWriter0.addUninitializedType("{99PYrDAU.5W!D-;==V", (-4931));
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.threshold = 1;
      methodWriter0.visitFieldInsn((-4931), "{99PYrDAU.5W!D-;==V", "{99PYrDAU.5W!D-;==V", "CYi4)bz|wzXLU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(1, "CYi4)bz|wzXLU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMaxs((-128), (-2104));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(1, (-1088));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      String[] stringArray0 = new String[1];
      Item item0 = classWriter0.newNameTypeItem("{rC", "{rC");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "Snt>hc";
      int int1 = classWriter0.newConst("Snt>hc");
      assertEquals(4, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-30), "Snt>hc", "_", "Snt>hc", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visit(1268, 1268, "org.objectweb.asm.jip.ClassWriter", "{rC", "Snt>hc", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1268, "{rC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertEquals(53, int2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      methodWriter0.visitInsn((-2447));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-37);
      int int3 = methodWriter0.getSize();
      assertEquals(54, int3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      byteArray0[1] = (byte) (-37);
      int int4 = Frame.UNINITIALIZED;
      assertEquals(25165824, int4);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-3287), stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2785);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = 2785;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = Type.SHORT;
      assertEquals(4, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RDI#J6(en{1}G";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2785, "RDI#J6(en{1}G", "C+iT)4ng)bz|]wPXLU", "C+iT)4ng)bz|]wPXLU", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = classWriter0.firstMethod;
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("RDI#J6(en{1}G");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.next.visitFieldInsn((-2070), "RDI#J6(en{1}G", "C+iT)4ng)bz|]wPXLU", "7i%&k~5IAY. K");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitIntInsn(187, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFloat((-1.0F));
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.next.visitMaxs(183, (-2070));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0.next, methodWriter0);
      assertSame(methodWriter0.next, methodWriter1);
      
      methodWriter0.next.visitVarInsn(24, 263);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0.next, methodWriter0);
      assertSame(methodWriter0.next, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1539), "LocalVariableTypeTble", "Signature", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      classWriter0.visit((-1539), 2757, "Signature", "'_`[Q ]=@hj+ees~QH", "KXceS^v4DZZJO|L@/", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitVarInsn(25, 25);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFrame(25, 1557, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B=)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, "[v%J-O5Rn", "D`-B=)#g", "[v%J-O5Rn", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("[v%J-O5Rn", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = (-2605);
      methodWriter0.visitJumpInsn(169, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("EXtV).C@ (h", "Yy", "G|WlrV8Wp66x icc", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("[v%J-O5Rn", "[v%J-O5Rn", "D`-B=)#g", label0, label0, (-2605));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-2605), 1083);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("R6R");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2768);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[13];
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "R|.IdJ6en.{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2768, "R|.IdJ6en.{1DG", "C+iTz4ng)bo|]wPXLU", stringArray0[1], stringArray1, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMultiANewArrayInsn("R|.IdJ6en.{1DG", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      label0.successor = null;
      methodWriter2.visitIincInsn(2768, (-2147483647));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, 161, stringArray0, 2768, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[7];
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      stringArray0[0] = "C+iTz4ng)bz|]wPXLU";
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "w\"gz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "w\"gz", "C+iTz4ng)bz|]wPXLU", stringArray0[1], stringArray1, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      classWriter0.firstMethod = methodWriter0;
      int int1 = 184;
      methodWriter0.next = classWriter0.firstMethod;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      classWriter0.firstMethod.visitFieldInsn(184, "RuntimeInvisibleAnotations", "RuntimeInvisibleAnotations", "J2#n$|");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = (-2447);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-19));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)84;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)84}, byteArray0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`ai&(0U.,QYn:e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "`ai&(0U.,QYn:e", "CYi4)bz|]wzXLU", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitFieldInsn(1, "{99rDAU.5W!D-;==V", "`ai&(0U.,QYn:e", "CYi4)bz|]wzXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.firstMethod.visitTryCatchBlock(label0, label0, label0, "{99rDAU.5W!D-;==V");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 283;
      methodWriter0.visitIntInsn(202, 283);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitTypeInsn(202, "CYi4)bz|]wzXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(202);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((byte)84, "Exceptions", "Exceptions", "zFI_VjjvT<lcfSAX+C");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 584;
      ClassWriter classWriter0 = new ClassWriter(584);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "O/|t";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "O/|t", "O/|t", "O/|t", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.status = 41;
      methodWriter0.visitIntInsn(584, 584);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      int int1 = Frame.NULL;
      assertEquals(16777221, int1);
      assertFalse(int1 == int0);
      
      methodWriter1.visitMultiANewArrayInsn("O/|t", 244);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 16777221;
      intArray0[1] = 2;
      intArray0[3] = 2;
      methodWriter2.visitLocalVariable("O/|t", "O/|t", "O/|t", label0, label0, 54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Label[] labelArray0 = new Label[1];
      int int2 = methodWriter2.getSize();
      assertEquals(102, int2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      labelArray0[0] = label0;
      methodWriter2.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {16777221, 2, 0, 2}, intArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter0.visitVarInsn(16777221, 300);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      methodWriter1.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter1.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("O/|t");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2789);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "CY) z|wzXLW";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2789, "{99rDAU.5W!D-;==V", "CY) z|wzXLW", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(256, "CY) z|wzXLW", "CY) z|wzXLW", "CY) z|wzXLW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(256, "{99rDAU.5W!D-;==V");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.lastMethod = methodWriter0;
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      classWriter0.lastMethod.visitLocalVariable("CY) z|wzXLW", "JSR/RET are not supported with computeFrames option", "CY) z|wzXLW", label0, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.lastMethod.visitParameterAnnotation(16777214, "s h{0#MQ.b;F", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = 2757;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.lastField = null;
      classWriter0.visitSource("R.I#J6(en{1DG", "Y) z|wXLW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R.I#J6(en{1DG");
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "~94D6t&%BhT|";
      stringArray0[1] = "~94D6t&%BhT|";
      stringArray0[2] = "R.I#J6(en{1DG";
      stringArray0[3] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "~94D6t&%BhT|", "char", "char", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("Y) z|wXLW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 2764);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Edge.NORMAL;
      assertEquals(0, int0);
      
      String[] stringArray0 = new String[1];
      Item item0 = classWriter0.newNameTypeItem("{rC", "{rC");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "Snt>hc";
      int int1 = classWriter0.newConst("Snt>hc");
      assertEquals(4, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-30), "Snt>hc", "_/", "Snt>hc", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1268, "{rC");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn((-2447));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-37);
      int int2 = methodWriter0.getSize();
      assertEquals(60, int2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      byteArray0[1] = (byte) (-37);
      int int3 = Type.CHAR;
      assertEquals(2, int3);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-3287), stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2209));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)114;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "F`=b1jh.w";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2209), "F`=b1jh.w", "CYi4)bz|]wzXLU", "F`=b1jh.w", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(425, "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(22, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F`=b1jh.w");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn((byte)114, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = (-4931);
      ClassWriter classWriter0 = new ClassWriter((-4931));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4931), "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label1, label1, label1, "CYi4)bz|wzXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      methodWriter0.visitTypeInsn((-4931), "{99rDAU.5W!D-;==V");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-4931), (-962));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-4931), "CYi4)bz|wzXLU", "CYi4)bz|wzXLU", "RuntimeVisibleParameterAnnotations");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2777);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R6R";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2777, "R6R", "Cgi4)bz|]wzXLU", "R6R", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "R6R");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      label0.successors = null;
      Label label1 = label0.successor;
      assertNull(label1);
      
      label0.position = 1;
      classWriter0.visitOuterClass("R6R", "R6R", "R6R");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("R6R", "Cgi4)bz|]wzXLU", "`5lAh", label0, label0, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(3243, "'yJzA6fI)Y{~>F0>2Z/");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-4699), (-4090), stringArray0, (-1366), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label2 = label0.next;
      assertNull(label2);
      
      methodWriter0.visitVarInsn(191, (-306));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4931));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "{99rDAU.5W!D-;==V";
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "{99rDAU.5W!D-;==V";
      int int0 = classWriter0.newConst("{99rDAU.5W!D-;==V");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4931), "{99rDAU.5W!D-;==V", "CYi4)bz|wzXLU", "{99rDAU.5W!D-;==V", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(187, "{99rDAU.5W!D-;==V");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("CYi4)bz|wzXLU");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      int int0 = Type.SHORT;
      assertEquals(4, int0);
      
      stringArray0[0] = "R.I#J6(en{1DG";
      String[] stringArray1 = new String[1];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "C+iTz4ng)bz|]wPXLU", stringArray0[1], stringArray1, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitVarInsn(184, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      Attribute attribute0 = new Attribute("R.I#J6(en{1DG");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.next.visitFieldInsn(1, "", "R.I#J6(en{1DG", "7i%&k~5AY. P");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      classWriter0.firstMethod.visitIntInsn(187, 184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitTypeInsn(187, "R.I#J6(en{1DG");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      classWriter0.firstMethod.visitIntInsn(4, (-636));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.SHORT;
      assertEquals(4, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R.I#J6(en{1DG";
      classWriter0.threshold = 2931;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "C+iTz4ng)bz|]wPXLU", "R.I#J6(en{1DG", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      classWriter0.firstMethod.visitFieldInsn(184, "Y", "Y", "C+iTz4ng)bz|]wPXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = (-367);
      methodWriter0.next.visitFrame((-367), 2, stringArray0, 2931, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(267386880, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.next.getSize();
      assertEquals(55, int2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMethodInsn(184, "v", "v", "C+iTz4ng)bz|]wPXLU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitParameterAnnotation((-842), "C+iTz4ng)bz|]wPXLU", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "FC+iTz4ng)bz|]wPXLU", "R.I#J6(en{1DG", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitFieldInsn(1, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "R.I#J6(en{1DG", "R.I#J6(en{1DG");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(184, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.next.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitIincInsn(2757, (-1060));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      classWriter0.firstMethod.visitTryCatchBlock(label2, label1, label2, "R.I#J6(en{1DG");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      Label label3 = label1.successor;
      assertNull(label3);
      
      // Undeclared exception!
      try { 
        methodWriter0.next.visitMaxs((-1), 8388607);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2755);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2755, "RuntimeInvisibleAnnotations", "D`-B)#g", "D`-B)#g", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("D`-B)#g", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2755, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "D`-B)#g");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      label1.successor = label0;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      label1.successor = label0;
      Label label2 = label1.getFirst();
      assertNotNull(label2);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertSame(label2, label1);
      assertNotSame(label2, label0);
      
      methodWriter0.visitLocalVariable("Ljava/lang/Synthetic;", "D`-B)#g", "RuntimeInvisibleAnnotations", label0, label1, 2755);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(285212683, 1, stringArray0, 2758, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1459, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = true;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "O+Jw>2N&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "O+Jw>2N&", "D`-B=)#g", "O+Jw>2N&", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("O+Jw>2N&", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      methodWriter0.visitFieldInsn(180, "O+Jw>2N&", "O+Jw>2N&", "O+Jw>2N&");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "";
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putByte(2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      int int1 = 79;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((byte) (-99), 79);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -99
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B=)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, "[v%J-O5Rn", "D`-B=)#g", "[v%J-O5Rn", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("[v%J-O5Rn", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      methodWriter0.visitFieldInsn(180, "D`-B=)#g", "D`-B=)#g", "D`-B=)#g");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(24117248, "D`-B=)#g");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(90, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs((-4231), 167);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(2, 184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte) (-99), "D`-B=)#g", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[v%J-O5Rn";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[v%J-O5Rn", "D`-B=)#g", "[v%J-O5Rn", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("[v%J-O5Rn", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      methodWriter0.visitFieldInsn(180, "[v%J-O5Rn", "[v%J-O5Rn", "[v%J-O5Rn");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte) (-99), "[v%J-O5Rn", "r)x8n^ |k,~vLhRo", "SSynthetic", stringArray0, false, true);
      assertNotNull(methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter1.visitMaxs(747, (byte) (-99));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitIntInsn(2757, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[v%J-O5Rn";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "[v%J-O5Rn", "D`-B=)#g", "[v%J-O5Rn", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("[v%J-O5Rn", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      methodWriter0.visitFieldInsn(180, "[v%J-O5Rn", "[v%J-O5Rn", "[v%J-O5Rn");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte) (-99), "[v%J-O5Rn", "r)x8n^ |k,~vLhRo", "D`-B=)#g", stringArray0, false, true);
      assertNotNull(methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitMethodInsn((byte) (-99), "[v%J-O5Rn", "[v%J-O5Rn", "r)x8n^ |k,~vLhRo");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      
      label0.position = 248;
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "Synthetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(747, (byte) (-99));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(24117248, "aSmAqN/XPbbx", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(158);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[1];
      Item item0 = classWriter0.newClassItem("LcalVariableTypTable");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "LcalVariableTypTable";
      int int0 = Frame.UNINITIALIZED;
      assertEquals(25165824, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 158, "LcalVariableTypTable", "Snt5>hc", "LcalVariableTypTable", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-4231), 25165824);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-4231), stringArray0, 8, stringArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2755);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "D`-B)#g";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2755, "RuntimeInvisibleAnnotations", "D`-B)#g", "D`-B)#g", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("D`-B)#g", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 2;
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 2755, stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "D`-B)#g");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      label1.successor = label0;
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      methodWriter0.visitLocalVariable("+K", "D`-B)#g", "RuntimeInvisibleAnnotations", label0, label1, 2755);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      
      methodWriter0.visitTryCatchBlock(label1, label2, label1.successor, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertNotSame(label1, label0);
      assertNotSame(label1, label2);
      assertNotSame(label2, label0);
      assertNotSame(label2, label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2757);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R.I#J6(en{1DG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2757, "R.I#J6(en{1DG", "FC+iTz4ng)bz|]wPXLU", "R.I#J6(en{1DG", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.next = classWriter0.firstMethod;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitIincInsn(2757, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      int int0 = 6;
      classWriter0.firstMethod.visitFrame(6, 185, stringArray0, 1578, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)17;
      boolean boolean0 = label0.resolve(methodWriter0.next, 127, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)17}, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "R.I#J6(en{1DG");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      Label label2 = label0.successor;
      assertNull(label2);
      
      classWriter0.firstMethod.visitMaxs(6, 185);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.next.visitMethodInsn(185, "R.I#J6(en{1DG", "FC+iTz4ng)bz|]wPXLU", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-99));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D`-B=)#g";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, "~X6>L+o )", "D`-B=)#g", "~X6>L+o )", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("~X6>L+o )", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "D`-B=)#g";
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      label0.status = (-2605);
      methodWriter0.visitJumpInsn(169, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      byteVector0.length = 169;
      ByteVector byteVector1 = classWriter0.pool;
      assertNotNull(byteVector1);
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotSame(byteVector1, byteVector0);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte) (-99);
      Attribute attribute0 = new Attribute("D`-B=)#g");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.successors = edge0;
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      label0.successor = null;
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("[y=~HD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-2605), (byte) (-99));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }
}
