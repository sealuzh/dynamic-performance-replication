/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 18:53:34 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      classWriter0.index = (-2548);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4eK6=iGtG", "4eK6=iGtG", "4eK6=iGtG", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2564));
      classWriter0.index = (-5744);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4eV6=iGG", "4eV6=iGG", (String) null, "4eV6=iGG");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2284);
      classWriter0.index = (-1149);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2284, "55:ZI)UU=m7", "55:ZI)UU=m7", "55:ZI)UU=m7", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2577));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "4eKV6[=iGtG", "4eKV6[=iGtG", "4eKV6[=iGtG", "4eKV6[=iGtG");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1404));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3807, "(M0I!6H-&v", "RuntimeVisibleAnnotations", "1'@]", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", "F", "F");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117225);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "9>UEJ]EK4", "9>UEJ]EK4", "9>UEJ]EK4", "9>UEJ]EK4");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 183;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", "F", "F");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      byte[] byteArray0 = new byte[5];
      fieldWriter0.visitAttribute(attribute0);
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 49, "0", "0", "0", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2547));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2547), "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "F", "F", "F", "F");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(199);
      String[] stringArray0 = new String[0];
      classWriter0.visit(199, 2, "De&precated", "De&precated", "De&precated", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65494, "De&precated", "De&precated", "De&precated", "De&precated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(92);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "F", "F", "F", "F");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG");
      fieldWriter0.visitAnnotation("4eKV6=iGtG", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      String[] stringArray0 = new String[0];
      classWriter0.visit(115, 2, "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65520, "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2548), "4eKV6=iGtG", "4eKV6=iGtG", "4eKV6=iGtG", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4e6=i<GtG", "4e6=i<GtG", "4e6=i<GtG", "4e6=i<GtG");
      fieldWriter0.visitAnnotation("4e6=i<GtG", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "4eKV6=iGtG", "4eKV6=iGtG", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1237, "Insensitive", "Insensitive", (String) null, "Insensitive");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2548));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1404));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3807, "(M0I!6H-&v", "RuntimeVisibleAnnotations", "1'@]", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "GT~<CTu=&9FxO?ROf", "GT~<CTu=&9FxO?ROf", "GT~<CTu=&9FxO?ROf", "GT~<CTu=&9FxO?ROf");
      Attribute attribute0 = new Attribute("GT~<CTu=&9FxO?ROf");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
