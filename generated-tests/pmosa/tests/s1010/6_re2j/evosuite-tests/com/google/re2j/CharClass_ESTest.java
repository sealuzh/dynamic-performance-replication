/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 16:50:10 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-1937));
      CharClass charClass2 = charClass1.appendLiteral((-10), (-1937));
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray1, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(791, 791);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(2, 2);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 0);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      int int0 = 4193;
      intArray0[0] = 4193;
      charClass0.appendClassWithSign(intArray0, 4193);
      int int1 = 43045;
      intArray0[1] = 43045;
      intArray0[2] = 64257;
      int int2 = (-1715);
      intArray0[3] = (-1715);
      intArray0[4] = 0;
      int int3 = 120042;
      intArray0[5] = 120042;
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.negateClass();
      charClass2.negateClass();
      charClass2.appendFoldedRange((-2613), 43045);
      charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.appendFoldedRange(int2, intArray0[0]);
      charClass3.toString();
      int[] intArray1 = new int[3];
      int int4 = (-3026);
      intArray1[0] = int4;
      intArray1[1] = int3;
      intArray1[2] = int1;
      CharClass.charClassToString(intArray1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.toString();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(1114111, 1303);
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 66622;
      intArray0[2] = 66622;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      assertArrayEquals(new int[] {0, 66622, 66622, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[4];
      intArray1[0] = 6765;
      intArray1[3] = 6765;
      intArray0[0] = intArray1;
      charClass0.appendTableWithSign(intArray0, 6765);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][1];
      int[] intArray1 = new int[3];
      intArray1[0] = 1331;
      intArray1[1] = 358;
      intArray1[2] = (-1029);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = (-1029);
      intArray2[1] = 1331;
      intArray2[2] = 1331;
      intArray2[3] = 358;
      intArray2[4] = 358;
      intArray2[5] = (-1029);
      intArray2[6] = 1331;
      intArray2[7] = (-1029);
      intArray0[1] = intArray2;
      CharClass charClass1 = charClass0.appendTable(intArray0);
      CharClass charClass2 = charClass1.appendClass(intArray2);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray2, (-1029));
      CharClass charClass4 = charClass3.appendLiteral((-1950), (-1029));
      CharClass charClass5 = charClass4.cleanClass();
      CharClass charClass6 = charClass5.appendRange(0, 0);
      assertSame(charClass6, charClass5);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 0);
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[5][4];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      charClass1.appendLiteral(0, (-231));
      intArray2[5] = 0;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      CharClass charClass3 = charClass2.appendTableWithSign(intArray1, 65);
      charClass3.appendNegatedTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.appendTable(intArray1);
      CharClass charClass5 = charClass4.appendClass(intArray0);
      charClass5.cleanClass();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 4;
      int int0 = 970;
      intArray0[1] = 970;
      intArray0[2] = 1662;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[5][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = 1662;
      intArray2[1] = 1662;
      intArray2[2] = 970;
      intArray2[3] = 1662;
      intArray2[4] = 970;
      intArray2[5] = 0;
      intArray1[3] = intArray2;
      intArray1[4] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendLiteral(0, 1662);
      CharClass charClass3 = charClass2.cleanClass();
      int int1 = 0;
      CharClass charClass4 = charClass3.appendFoldedRange(int1, int0);
      CharClass charClass5 = charClass4.appendFoldedClass(intArray1[2]);
      charClass5.appendTableWithSign(intArray1, intArray2[4]);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 875;
      intArray0[2] = 0;
      intArray0[3] = 91;
      intArray0[4] = 1155;
      intArray0[5] = 3593;
      intArray0[6] = (-1387);
      intArray0[7] = (-2236);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(0, 0);
      CharClass charClass2 = charClass1.appendRange(0, 0);
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 65);
      CharClass charClass5 = charClass4.appendLiteral(4199, 875);
      charClass5.cleanClass();
      assertArrayEquals(new int[] {0, 875, 0, 91, 1155, 3593, (-1387), (-2236)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][6];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 1143);
      charClass0.cleanClass();
      charClass0.cleanClass();
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass0.appendLiteral((-515), 1);
      charClass0.appendNegatedTable(intArray1);
      charClass2.appendNegatedClass(intArray0);
      charClass2.appendFoldedRange(66639, 1500);
      assertArrayEquals(new int[] {0, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = (-603);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.appendFoldedRange((-602), (-2075));
      CharClass.charClassToString(intArray0, (-603));
      CharClass charClass2 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[0][1];
      CharClass charClass3 = charClass2.appendTableWithSign(intArray1, 0);
      CharClass charClass4 = charClass1.appendNegatedClass(intArray0);
      charClass4.negateClass();
      CharClass charClass5 = charClass3.appendLiteral(4, (-2));
      charClass5.appendFoldedRange(1550, (-2));
      CharClass charClass6 = charClass2.cleanClass();
      charClass6.negateClass();
      CharClass charClass7 = charClass3.appendTableWithSign(intArray1, 1550);
      int[] intArray2 = charClass7.toArray();
      assertArrayEquals(new int[] {}, intArray2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 66640;
      intArray0[1] = 66640;
      intArray0[2] = 3035;
      intArray0[3] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 8692;
      intArray2[1] = (-646);
      intArray2[2] = (-2954);
      intArray2[3] = 8692;
      intArray2[4] = (-646);
      intArray2[5] = 66640;
      intArray2[6] = 3035;
      intArray1[3] = intArray2;
      charClass0.appendNegatedTable(intArray1);
      int[] intArray3 = new int[0];
      CharClass charClass1 = charClass0.appendClass(intArray3);
      charClass1.appendClassWithSign(intArray0, 4);
      charClass1.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharGroup charGroup0 = null;
      boolean boolean0 = false;
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[3];
      intArray1[0] = 1114111;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 66640;
      intArray0[1] = 66640;
      intArray0[2] = 3018;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(1086479, (-3034));
      CharClass charClass2 = charClass1.cleanClass();
      charClass0.appendRange(1116660, (-394));
      CharClass charClass3 = charClass1.appendRange((-3034), (-2838));
      charClass3.appendClassWithSign(intArray0, 3018);
      CharClass charClass4 = new CharClass();
      charClass4.appendClass(intArray0);
      charClass2.toString();
      charClass2.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass2.appendClass(intArray0);
      CharClass charClass6 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass6.appendNegatedTable(intArray1);
      charClass5.appendNegatedTable(intArray1);
      CharClass charClass7 = charClass6.appendRange(1110623, 1086479);
      // Undeclared exception!
      try { 
        charClass7.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
