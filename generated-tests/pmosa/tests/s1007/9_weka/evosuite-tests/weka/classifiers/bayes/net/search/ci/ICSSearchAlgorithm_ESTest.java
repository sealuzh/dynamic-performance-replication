/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 10:42:10 GMT 2018
 */

package weka.classifiers.bayes.net.search.ci;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm;
import weka.core.Attribute;
import weka.core.Instances;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ICSSearchAlgorithm_ESTest extends ICSSearchAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality(10);
      boolean[][] booleanArray0 = new boolean[4][2];
      boolean[] booleanArray1 = new boolean[7];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray1[3] = false;
      booleanArray1[4] = false;
      booleanArray1[5] = false;
      booleanArray1[6] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[0];
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[4];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = false;
      booleanArray3[3] = false;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[4];
      booleanArray4[0] = false;
      booleanArray4[1] = false;
      booleanArray4[2] = false;
      booleanArray4[3] = false;
      booleanArray0[3] = booleanArray4;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(10, 0, 0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getScoreType();
      iCSSearchAlgorithm0.globalInfo();
      iCSSearchAlgorithm0.globalInfo();
      boolean[][] booleanArray0 = new boolean[8][1];
      boolean[] booleanArray1 = new boolean[0];
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[6];
      booleanArray2[0] = false;
      booleanArray2[1] = true;
      booleanArray2[2] = false;
      booleanArray2[3] = true;
      booleanArray2[4] = true;
      booleanArray2[5] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[2];
      booleanArray3[0] = true;
      booleanArray3[1] = true;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[4];
      booleanArray4[0] = true;
      booleanArray4[1] = true;
      booleanArray4[2] = true;
      booleanArray4[3] = true;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[7];
      booleanArray5[0] = true;
      booleanArray5[1] = true;
      booleanArray5[2] = true;
      booleanArray5[3] = true;
      booleanArray5[4] = true;
      booleanArray5[5] = true;
      booleanArray5[6] = true;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[6];
      booleanArray6[0] = true;
      booleanArray6[1] = false;
      booleanArray6[2] = true;
      booleanArray6[3] = true;
      booleanArray6[4] = true;
      booleanArray6[5] = true;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[8];
      booleanArray7[0] = true;
      booleanArray7[1] = true;
      booleanArray7[2] = true;
      booleanArray7[3] = true;
      booleanArray7[4] = false;
      booleanArray7[5] = true;
      booleanArray7[6] = true;
      booleanArray7[7] = true;
      booleanArray0[6] = booleanArray7;
      boolean[] booleanArray8 = new boolean[9];
      booleanArray8[0] = true;
      booleanArray8[1] = false;
      booleanArray8[2] = false;
      booleanArray8[3] = true;
      booleanArray8[4] = false;
      booleanArray8[5] = true;
      booleanArray8[6] = false;
      booleanArray8[7] = false;
      booleanArray8[8] = false;
      booleanArray0[7] = booleanArray8;
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[5][3];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[4];
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[0] = iCSSearchAlgorithm_SeparationSet0;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet1 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[1] = iCSSearchAlgorithm_SeparationSet1;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet2 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[2] = iCSSearchAlgorithm_SeparationSet2;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet3 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[3] = iCSSearchAlgorithm_SeparationSet3;
      iCSSearchAlgorithm_SeparationSetArray0[0] = iCSSearchAlgorithm_SeparationSetArray1;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray2 = new ICSSearchAlgorithm.SeparationSet[4];
      iCSSearchAlgorithm_SeparationSetArray2[0] = iCSSearchAlgorithm_SeparationSet2;
      ICSSearchAlgorithm iCSSearchAlgorithm1 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet4 = iCSSearchAlgorithm1.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray2[1] = iCSSearchAlgorithm_SeparationSet4;
      iCSSearchAlgorithm_SeparationSetArray2[2] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray2[3] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray0[1] = iCSSearchAlgorithm_SeparationSetArray2;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray3 = new ICSSearchAlgorithm.SeparationSet[8];
      iCSSearchAlgorithm_SeparationSetArray3[0] = iCSSearchAlgorithm_SeparationSet3;
      iCSSearchAlgorithm_SeparationSetArray3[1] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray3[2] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray3[3] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray3[4] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray3[5] = iCSSearchAlgorithm_SeparationSet4;
      iCSSearchAlgorithm_SeparationSetArray3[6] = iCSSearchAlgorithm_SeparationSet3;
      iCSSearchAlgorithm_SeparationSetArray3[7] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray0[2] = iCSSearchAlgorithm_SeparationSetArray3;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray4 = new ICSSearchAlgorithm.SeparationSet[5];
      iCSSearchAlgorithm_SeparationSetArray4[0] = iCSSearchAlgorithm_SeparationSet2;
      ICSSearchAlgorithm iCSSearchAlgorithm2 = new ICSSearchAlgorithm();
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm2.existsSepSet((-1106), 100, (-2522), booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2522
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getRevision();
      boolean[][] booleanArray0 = new boolean[9][5];
      boolean[] booleanArray1 = new boolean[9];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[6] = true;
      booleanArray1[7] = false;
      booleanArray1[8] = true;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[5];
      booleanArray2[0] = true;
      booleanArray2[1] = false;
      booleanArray2[2] = true;
      booleanArray2[3] = true;
      booleanArray2[4] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[8];
      booleanArray3[0] = true;
      booleanArray3[1] = true;
      booleanArray3[2] = true;
      booleanArray3[3] = false;
      booleanArray3[4] = false;
      booleanArray3[5] = false;
      booleanArray3[6] = true;
      booleanArray3[7] = true;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[2];
      booleanArray4[0] = true;
      booleanArray4[1] = true;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[0];
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[8];
      booleanArray6[0] = false;
      booleanArray6[1] = true;
      booleanArray6[2] = true;
      booleanArray6[3] = true;
      booleanArray6[4] = true;
      booleanArray6[5] = false;
      booleanArray6[6] = false;
      booleanArray6[7] = true;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[0];
      booleanArray0[6] = booleanArray7;
      boolean[] booleanArray8 = new boolean[7];
      booleanArray8[0] = true;
      booleanArray8[1] = false;
      booleanArray8[2] = true;
      booleanArray8[3] = false;
      booleanArray8[4] = true;
      booleanArray8[5] = false;
      booleanArray8[6] = true;
      booleanArray0[7] = booleanArray8;
      boolean[] booleanArray9 = new boolean[1];
      booleanArray9[0] = true;
      booleanArray0[8] = booleanArray9;
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[5][1];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[3];
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[0] = iCSSearchAlgorithm_SeparationSet0;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet1 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[1] = iCSSearchAlgorithm_SeparationSet1;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet2 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray1[2] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray0[0] = iCSSearchAlgorithm_SeparationSetArray1;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray2 = new ICSSearchAlgorithm.SeparationSet[3];
      iCSSearchAlgorithm_SeparationSetArray2[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[1] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray2[2] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray0[1] = iCSSearchAlgorithm_SeparationSetArray2;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray3 = new ICSSearchAlgorithm.SeparationSet[1];
      iCSSearchAlgorithm_SeparationSetArray3[0] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray0[2] = iCSSearchAlgorithm_SeparationSetArray3;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray4 = new ICSSearchAlgorithm.SeparationSet[1];
      iCSSearchAlgorithm_SeparationSetArray4[0] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray0[3] = iCSSearchAlgorithm_SeparationSetArray4;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray5 = new ICSSearchAlgorithm.SeparationSet[6];
      iCSSearchAlgorithm_SeparationSetArray5[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray5[1] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray5[2] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[3] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[4] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[5] = iCSSearchAlgorithm_SeparationSet2;
      iCSSearchAlgorithm_SeparationSetArray0[4] = iCSSearchAlgorithm_SeparationSetArray5;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.calcVeeNodes(booleanArray0, booleanArray0, iCSSearchAlgorithm_SeparationSetArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "{Hm`";
      stringArray0[1] = "";
      stringArray0[2] = "v}p>y?;$qb";
      stringArray0[3] = "]4r";
      stringArray0[4] = "go";
      stringArray0[5] = ":p'8l\"";
      stringArray0[6] = "} ,";
      stringArray0[7] = "faf";
      stringArray0[8] = "47-vUh^w";
      ICSSearchAlgorithm.main(stringArray0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String string0 = iCSSearchAlgorithm0.globalInfo();
      assertEquals("This Bayes Network learning algorithm uses conditional independence tests to find a skeleton, finds V-nodes and applies a set of rules to find the directions of the remaining arrows.", string0);
      
      iCSSearchAlgorithm0.getOptions();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getOptions();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.listOptions();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSet0.getRevision();
      int int0 = (-1);
      iCSSearchAlgorithm0.setMaxCardinality((-1));
      BayesNet bayesNet0 = new BayesNet();
      Instances instances0 = bayesNet0.m_Instances;
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, (Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.listOptions();
      int int0 = iCSSearchAlgorithm0.getMaxCardinality();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean[][] booleanArray0 = new boolean[1][6];
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setOptions((String[]) null);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[7];
      intArray0[0] = 3;
      intArray0[1] = 10;
      intArray0[2] = (-56);
      intArray0[3] = 1;
      intArray0[4] = 4049;
      intArray0[5] = (-368);
      intArray0[6] = 1;
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(10);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(0);
      assertTrue(boolean0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality((-3379));
      iCSSearchAlgorithm0.maxCardinalityTipText();
      assertEquals((-3379), iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[7];
      intArray0[1] = 10;
      intArray0[2] = (-56);
      intArray0[3] = 1;
      intArray0[4] = 4049;
      intArray0[6] = 1;
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(1);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = 1;
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains((-2782));
      assertFalse(boolean0);
      
      int int0 = iCSSearchAlgorithm0.getMaxCardinality();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality(0);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      assertEquals(0, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-859));
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      boolean[][] booleanArray0 = new boolean[3][0];
      boolean[] booleanArray1 = new boolean[9];
      booleanArray1[0] = true;
      booleanArray1[1] = true;
      booleanArray1[2] = true;
      booleanArray1[3] = true;
      booleanArray1[4] = true;
      booleanArray1[5] = true;
      booleanArray1[7] = true;
      booleanArray1[8] = true;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[9];
      booleanArray2[0] = true;
      booleanArray2[1] = true;
      booleanArray2[2] = true;
      booleanArray2[3] = true;
      booleanArray2[4] = true;
      booleanArray2[6] = true;
      booleanArray2[7] = true;
      booleanArray2[8] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[5];
      booleanArray3[0] = true;
      booleanArray3[1] = true;
      booleanArray3[2] = true;
      booleanArray3[3] = true;
      booleanArray3[4] = true;
      booleanArray0[2] = booleanArray3;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.next((-1214), 4, 344, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      BayesNet bayesNet0 = new BayesNet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("=wwc0whKLyQeg?", arrayList0, 0);
      instances0.stringFreeStructure();
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      boolean[][] booleanArray0 = new boolean[3][7];
      boolean[] booleanArray1 = new boolean[7];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      booleanArray1[3] = false;
      booleanArray1[4] = true;
      booleanArray1[6] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[4];
      booleanArray2[1] = false;
      booleanArray2[2] = false;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[7];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = true;
      booleanArray0[2] = booleanArray3;
      iCSSearchAlgorithm0.next(0, 0, 1069, booleanArray0);
      iCSSearchAlgorithm0.existsSepSet((-1352), 1069, 1, booleanArray0);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.name(1069);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1069, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality(0);
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      attribute0.name();
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = new BayesNet();
      iCSSearchAlgorithm0.setMaxCardinality((-241));
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-1));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-241));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("integer", arrayList0, 0);
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      arrayList0.add(attribute0);
      iCSSearchAlgorithm0.markovBlanketClassifierTipText();
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = new BayesNet();
      arrayList0.add(attribute0);
      iCSSearchAlgorithm0.setMaxCardinality((-241));
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }
}
