/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 23:42:05 GMT 2019
 */

package org.fixsuite.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.fixsuite.message.Library;
import org.fixsuite.message.info.DictionaryInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Library library0 = new Library();
      boolean boolean0 = library0.loadFromDirectory("");
      library0.loadFromDirectory("Loaded ");
      boolean boolean1 = library0.loadFromDirectory("/");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("1@XY&tvuy'");
      library0.loadFromDirectory("]R");
      library0.getDictionaries();
      library0.loadFromDirectory("]R");
      library0.loadFromDirectory("]R");
      library0.loadFromDirectory("J[0");
      library0.loadFromDirectory("J[0");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("]R");
      library0.getDictionaries();
      library0.loadFromDirectory("D'f$");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("}I{px\"");
      library0.loadFromDirectory("Unloading previous dictionaries");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("fk)}%#xhN");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Unloading previous dictionaries");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte) (-28);
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      library0.getDictionary("");
      library0.loadFromDirectory("}I{px\"");
      library0.getDictionaries();
      library0.loadFromDirectory("MsgType.xml");
      boolean boolean0 = library0.loadFromDirectory("");
      assertTrue(boolean0);
      
      boolean boolean1 = library0.loadFromDirectory("1@XY&tvuy'");
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      library0.getDictionaries();
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Library library0 = new Library();
      library0.loadFromDirectory("lS,;L&.ow`zL05|E~\"!");
      String string0 = "O\"l4jRF]RTB<Gw@";
      library0.loadFromDirectory("O\"l4jRF]RTB<Gw@");
      library0.loadFromDirectory("O\"l4jRF]RTB<Gw@");
      library0.getDictionary("Components.xml");
      String string1 = "";
      String string2 = "{,Y3AGGWNki %";
      library0.loadFromDirectory("{,Y3AGGWNki %");
      library0.getDictionaries();
      library0.loadFromDirectory("");
      library0.getDictionaries();
      library0.loadFromDirectory("org.fixsuite.message.info.ComponentInfo");
      library0.getDictionary("org.fixsuite.message.Library");
      library0.getDictionaries();
      library0.getDictionary("Components.xml");
      library0.getDictionaries();
      library0.getDictionaries();
      String string3 = " milliseconds.";
      library0.loadFromDirectory(" milliseconds.");
      library0.loadFromDirectory("");
      // Undeclared exception!
      try { 
        library0.getDictionary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionary("");
      boolean boolean0 = library0.loadFromDirectory("!w8veMv'0Avs ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionary("LT~*u>s,[$&7GHw3TD");
      library0.getDictionaries();
      library0.loadFromDirectory("LT~*u>s,[$&7GHw3TD");
      List<DictionaryInfo> list0 = library0.getDictionaries();
      List<DictionaryInfo> list1 = library0.getDictionaries();
      assertNotSame(list1, list0);
  }
}
