/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:28:15 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2878), 257, fieldTypeLong0, 257, (-2878), byteArray0, byteOrder0, (-2878));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(642, 1711, fieldTypeAscii0, 32845, 32845, byteArray0, byteOrder0, 32845);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1005), (-1005), fieldTypeAscii0, (-1005), (-1005), byteArray0, byteOrder0, 9);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1005), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1005), tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-1005), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, "\"c/7Yt.9P},^");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AsShotNeutral");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      fieldTypeAscii0.writeData("\"c/7Yt.9P},^", byteOrder0);
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 1894L, 1894L, byteArray0, byteOrder0, 41);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "\"c/7Yt.9P},^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[4] = (byte) (-86);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(882, 25, fieldTypeAscii0, 1L, 25, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(882, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 537L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 505);
      tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(537, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2710), (-1145), fieldTypeLong0, (-2710), (-2710), (byte[]) null, byteOrder0, (-2710));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-2710), tiffField0.getOffset());
      assertEquals((-2710), tiffField0.getSortHint());
      assertEquals("-2710 (0xfffff56a: Unknown Tag): ", string0);
      assertEquals((-1145), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1937, 50, fieldTypeDouble0, 1937, 1937, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1937, tiffField0.getTag());
      assertEquals(1937, tiffField0.getOffset());
      assertEquals(15496, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1937L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(190, 190, fieldTypeAscii0, 190, 0L, byteArray0, byteOrder0, 190);
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@27ee28cd for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41985, 41985, fieldTypeRational0, 41985, 41985, byteArray0, byteOrder0, (byte) (-9));
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@78b4baae
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      byteArray0[12] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41985, 41985, fieldTypeRational0, 41985, 41985, byteArray0, byteOrder0, (byte) (-9));
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = tiffField0.getValueDescription();
      assertEquals(41985, tiffField0.getOffset());
      assertEquals(335880, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(41985, tiffField0.getTag());
      assertEquals(41985, tiffField0.getDirectoryType());
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals(41985L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)29;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2315, 2315, fieldTypeByte0, 2315, 2315, byteArray0, byteOrder0, (byte)55);
      String string0 = tiffField0.getTagName();
      assertEquals(2315, tiffField0.getOffset());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(2315, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x90b)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)100;
      byteArray0[4] = (byte)45;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 18L, byteArray0, byteOrder0, 1982292598);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-97);
      byteArray0[4] = (byte)45;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-1L), byteArray0, byteOrder0, 1982292598);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-10);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2959), (-2959), fieldTypeAscii0, 1218, 677L, byteArray0, byteOrder0, 2146801040);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: f2\uFFFD for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)12;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 4015L, byteArray0, byteOrder0, (byte)12);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription(false);
      assertEquals(4015L, tiffElement0.offset);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[44];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int int0 = Short.BYTES;
      FieldTypeDouble fieldTypeDouble1 = FieldType.DOUBLE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FieldTypeDouble fieldTypeDouble2 = new FieldTypeDouble(8, "B]nE.J");
      TiffField tiffField0 = new TiffField((byte)18, 2, fieldTypeDouble2, (byte)18, 8, byteArray0, byteOrder0, 1141);
      ByteOrder.nativeOrder();
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertNotNull(string0);
      
      tiffField0.getByteOrder();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(1141, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(18L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)0;
      byteArray0[4] = (byte) (-112);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1401), fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, (-1401));
      tiffField0.getIntArrayValue();
      tiffField0.getByteOrder();
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1401), tiffField0.getSortHint());
      assertEquals("GPSVersionID", string0);
      assertEquals((-1401), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)12;
      byteArray0[6] = (byte)12;
      TiffField tiffField0 = new TiffField(2136904910, 2, fieldTypeShort0, (byte)40, 2136904910, byteArray0, byteOrder0, (byte)12);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(2136904910, tiffField0.getOffset());
      assertEquals(40L, tiffField0.getCount());
      assertEquals(2136904910, int0);
      assertEquals(80, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)25;
      byteArray0[2] = (byte)3;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-67), 41, fieldTypeByte0, (byte)3, (-5760L), byteArray0, byteOrder0, 50780);
      String string0 = tiffField0.getValueDescription();
      assertEquals("25, 0, 3", string0);
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3L, tiffField0.getCount());
      assertEquals(41, int0);
      assertEquals((-5760), tiffField0.getOffset());
      assertEquals(50780, tiffField0.getSortHint());
      assertEquals((-67), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1961, 1961, fieldTypeDouble0, 1961, (-1975L), byteArray0, byteOrder0, 1961);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2216c48b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, ":NH2]v.J0");
      TiffField tiffField0 = new TiffField((byte)0, 2147437930, fieldTypeLong0, 2839L, (byte)0, byteArray0, byteOrder1, 2147437930);
      tiffField0.getDoubleArrayValue();
      TiffField tiffField1 = new TiffField(2147437930, 2301, fieldTypeLong0, 2147437930, (byte)0, byteArray0, byteOrder1, (byte)0);
      assertEquals(2147437930, tiffField1.getTag());
      assertEquals(2301, tiffField1.getDirectoryType());
      assertEquals(0, tiffField1.getSortHint());
      
      tiffField0.isLocalValue();
      assertEquals(2147437930, tiffField0.getSortHint());
      assertEquals(2839L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(11356, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[194];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Float float0 = new Float((float) 48091);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(48091, (-3653), fieldTypeShort0, 3683L, 192472L, byteArray0, byteOrder0, 1845);
      tiffField0.getDoubleArrayValue();
      assertEquals(192472, tiffField0.getOffset());
      assertEquals(48091, tiffField0.getTag());
      assertEquals(7366, tiffField0.getBytesLength());
      assertEquals(3683L, tiffField0.getCount());
      assertEquals(1845, tiffField0.getSortHint());
      assertEquals((-3653), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(48129);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (byte)18, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).LONG, (byte)18, (byte)18, byteArray0, byteOrder0, 1);
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(48129);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 48129 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[290];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object1 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(48109, 422, fieldTypeShort0, 192384L, 192424L, byteArray0, byteOrder2, (-397));
      int int0 = tiffField0.getSortHint();
      assertEquals((-397), int0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int1);
      assertEquals(192424, tiffField0.getOffset());
      assertEquals(384768, tiffField0.getBytesLength());
      assertEquals(192384L, tiffField0.getCount());
      assertEquals(422, tiffField0.getDirectoryType());
      assertEquals(48109, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[183];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      Float float0 = new Float((float) 48091);
      TiffField tiffField0 = new TiffField(48091, 48091, fieldTypeShort0.IFD, 48091, 48091, byteArray0, byteOrder0, 48091);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        MockURI.resolve((URI) null, (URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)35;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 12, 12, byteArray0, byteOrder0, (byte)35);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(12, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {35}, intArray0);
      assertEquals(12, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2748), (-2748), fieldTypeByte0, 1L, (-737L), byteArray0, byteOrder0, 2437);
      tiffField0.dump();
      assertEquals((-737), tiffField0.getOffset());
      assertEquals((-2748), tiffField0.getDirectoryType());
      assertEquals((-2748), tiffField0.getTag());
      assertEquals(2437, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(48096, 48096, fieldTypeFloat0, 48096, 48096, byteArray0, byteOrder0, 48096);
      String string0 = tiffField0.getValueDescription();
      assertEquals(48096, tiffField0.getTag());
      assertEquals(48096, tiffField0.getSortHint());
      assertEquals(48096L, tiffField0.getCount());
      assertEquals(48096, tiffField0.getDirectoryType());
      assertEquals(48096, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(192384, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte) (-37);
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)41;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1850, 50935, fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, (byte)51);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50935, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(1850, tiffField0.getTag());
      assertArrayEquals(new int[] {2}, intArray0);
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System.setCurrentTimeMillis((-26L));
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)83;
      byteArray0[5] = (byte)82;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte)41;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeFloat0, 47, 47, byteArray0, byteOrder0, (byte)82);
      tiffField0.getDoubleArrayValue();
      assertEquals(47, tiffField0.getTag());
      assertEquals(47L, tiffField0.getCount());
      assertEquals(188, tiffField0.getBytesLength());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)29;
      byteArray0[4] = (byte)29;
      int int0 = (-218);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3219), 2147126270, fieldTypeShort0, 1L, (byte)29, byteArray0, byteOrder0, (-218));
      tiffField0.getIntValueOrArraySum();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147126270, "K3qp");
      TiffField tiffField1 = new TiffField(2, 621, fieldTypeShort0, 3497L, 1340L, byteArray0, byteOrder1, (-218));
      try { 
        Integer.decode("K3qp");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"K3qp\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2748), (-2748), fieldTypeByte0, 1L, (-737L), byteArray0, byteOrder0, 2437);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleArrayValue();
      assertEquals((-2748), tiffField0.getDirectoryType());
      assertEquals((-2748), tiffField0.getTag());
      assertEquals((-737), tiffField0.getOffset());
      assertEquals(2437, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "(;m%H!RWf}vWCW#Wd");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(219, (byte)25, fieldTypeRational0, 219, 1L, byteArray0, byteOrder0, (byte)25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(219, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(1752, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(642, 1671, fieldTypeAscii0, 4L, 1671, byteArray0, byteOrder0, 642);
      tiffField0.getStringValue();
      try { 
        FieldType.getFieldType(1671);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 1671 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[184];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(5872, "");
      TiffField tiffField0 = new TiffField((byte) (-5), (byte)36, fieldTypeByte0, 837L, (byte)36, byteArray0, byteOrder0, (-423));
      tiffField0.getValueDescription();
      tiffField0.getByteArrayValue();
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1361b7e0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[166];
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      Float float0 = new Float(1380.0F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wiQ&8S&[E1l&_:,jxE[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.KOREAN;
      ByteOrder.nativeOrder();
      locale0.getLanguage();
      Locale locale1 = Locale.CANADA_FRENCH;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2429), (-2255), fieldTypeAscii0, 2334L, 1L, byteArray0, byteOrder1, 128);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2255), tiffField0.getDirectoryType());
      assertEquals((-2429), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(128, tiffField0.getSortHint());
      assertEquals(2334, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[194];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48091, (-3653), fieldTypeShort0, 3683L, 192472L, byteArray0, byteOrder0, 1845);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1845, tiffField0.getSortHint());
      assertEquals(192472, tiffField0.getOffset());
      assertEquals((-3653), tiffField0.getDirectoryType());
      assertEquals(48091, tiffField0.getTag());
      assertEquals(7366, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[229];
      TiffField tiffField0 = new TiffField(48091, 48091, fieldTypeShort0.FLOAT, 48091, 48091, byteArray0, byteOrder0, 48091);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      ByteOrder.nativeOrder();
      byteOrder0.toString();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = tiffField0.getDirectoryType();
      assertEquals(192364, tiffField0.getBytesLength());
      assertEquals(48091, tiffField0.getOffset());
      assertEquals(48091, int0);
      assertEquals(48091, tiffField0.getSortHint());
      assertEquals(48091, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[214];
      FileSystemHandling.shouldAllThrowIOExceptions();
      Float float0 = new Float((float) 48079);
      byteOrder0.toString();
      TiffField tiffField0 = new TiffField(48079, 48079, fieldTypeShort0.IFD, 48079, 48079, byteArray0, byteOrder0, 48079);
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.dump();
      tiffField0.getFieldType();
      fieldTypeShort0.getValue(tiffField0);
      ByteOrder.nativeOrder();
      tiffField0.getFieldTypeName();
      tiffField0.getIntArrayValue();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
