/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 13:43:44 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)42;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(713, (-2636), fieldTypeShort0, 4L, 1L, byteArray0, byteOrder0, (byte)42);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2636), tiffField0.getDirectoryType());
      assertEquals(713, tiffField0.getTag());
      assertEquals(42, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(27, (byte) (-15), fieldTypeRational0.FLOAT, 17600L, 5572L, byteArray0, byteOrder0, (byte) (-15));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (17600 Float)", string0);
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(5572, tiffField0.getOffset());
      assertEquals((-15), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-250), "aKSC1Xme2");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1622), (-250), fieldTypeFloat0, 2655L, 2655L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1622), tiffField0.getTag());
      assertEquals(2655, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-250), tiffField0.getDirectoryType());
      assertEquals(10620, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)28, (-634), fieldTypeLong0, (byte)28, (-2L), byteArray0, byteOrder0, (-1643));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1643), tiffField0.getSortHint());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-634), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeByte0, 40965, 40965, byteArray0, byteOrder0, 2720);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(40965, tiffField0.getOffset());
      assertEquals(2720, tiffField0.getSortHint());
      assertEquals(40965, tagInfo0.tag);
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-79), fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-79), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-777), (-280), fieldTypeFloat0, (-424L), (-2147483648L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getTag();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-280), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-777), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte) (-53);
      byteArray0[3] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(515, 1851, fieldTypeAscii0, 76L, 4475L, byteArray0, byteOrder0, (-347));
      String string0 = tiffField0.getStringValue();
      assertEquals(515, tiffField0.getTag());
      assertEquals(4475, tiffField0.getOffset());
      assertEquals((-347), tiffField0.getSortHint());
      assertEquals(1851, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, (FieldType) null, 42, 604L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(42, tiffField0.getTag());
      assertEquals(604, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37379, "CellLength");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3868, (-3405), fieldTypeByte0.RATIONAL, 0, (-940L), byteArray0, byteOrder0, 1172);
      int int0 = tiffField0.getSortHint();
      assertEquals(3868, tiffField0.getTag());
      assertEquals((-940), tiffField0.getOffset());
      assertEquals((-3405), tiffField0.getDirectoryType());
      assertEquals(1172, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36867, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(36867, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36867, (-2206), fieldTypeShort0.SBYTE, (-2206), (-626L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-626), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2206), tiffField0.getDirectoryType());
      assertEquals(36867, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)65;
      TiffField tiffField0 = new TiffField(2146071758, (byte)65, fieldTypeByte0.IFD, 1L, 1973L, byteArray0, (ByteOrder) null, 1278);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2146071758, tiffField0.getTag());
      assertEquals(1973, tiffField0.getOffset());
      assertEquals(1278, tiffField0.getSortHint());
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)70;
      byteArray0[7] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, (-472), fieldTypeRational0, 317L, (-472), byteArray0, (ByteOrder) null, 2130303778);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-472), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-70), int0);
      assertEquals((-472), tiffField0.getDirectoryType());
      assertEquals(2536, tiffField0.getBytesLength());
      assertEquals(2130303778, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-36), (-234), fieldTypeShort0.FLOAT, (byte)1, (byte) (-101), byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals((-101), tiffField0.getOffset());
      assertEquals((-234), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-36), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-27);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeShort0, 1L, 257L, byteArray0, byteOrder0, (-945));
      tiffField0.getIntValue();
      assertEquals((-945), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(257, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50713, fieldTypeDouble0, 1L, (-2168L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50713, tiffField0.getDirectoryType());
      assertEquals((-2168), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50709, (String) null);
      TiffField tiffField0 = new TiffField((-2195), (-2395), fieldTypeLong0, 2933L, (-2395), byteArray0, byteOrder0, 33723);
      tiffField0.getFieldTypeName();
      assertEquals((-2395), tiffField0.getDirectoryType());
      assertEquals((-2195), tiffField0.getTag());
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals((-2395), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36867, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(36867, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(102, (-4425), (FieldType) null, 200L, 648L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-4425), tiffField0.getDirectoryType());
      assertEquals(648, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(102, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, " (");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1439), (-662), fieldTypeRational0, 510L, 1L, byteArray0, byteOrder0, (-662));
      tiffField0.getFieldType();
      assertEquals((-1439), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-662), tiffField0.getDirectoryType());
      assertEquals((-662), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1272), "org.apache.commons.imaging.formats.tiff.TiffField");
      TiffField tiffField0 = new TiffField((-1272), 2146071758, fieldTypeFloat0, 2146071758, (-1272), (byte[]) null, byteOrder0, 2146071758);
      tiffField0.getFieldType();
      assertEquals(2146071758, tiffField0.getDirectoryType());
      assertEquals(2146071758, tiffField0.getSortHint());
      assertEquals((-1272), tiffField0.getOffset());
      assertEquals((-1272), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-112);
      TiffField tiffField0 = new TiffField(0, 4, fieldTypeShort0.LONG, 1L, (-424L), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals((-424), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-8);
      TiffField tiffField0 = new TiffField(0, 4, fieldTypeShort0.SLONG, 1L, (-424L), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-424), tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)17, 0, fieldTypeDouble0, 5, 2884L, byteArray0, byteOrder0, (-514));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2884, tiffField0.getOffset());
      assertEquals((-514), tiffField0.getSortHint());
      assertEquals(17, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147383019), (-2147383019), fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, (-2147383019));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2147383019), int0);
      assertEquals((-2147383019), tiffField0.getTag());
      assertEquals((-2147383019), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1380), (-1380), fieldTypeFloat0, 0L, (-2190L), byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals((-2190), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1380), tiffField0.getDirectoryType());
      assertEquals((-1380), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, 1, 96, byteArray0, byteOrder0, 938);
      tiffField0.getCount();
      assertEquals(96, tiffField0.getOffset());
      assertEquals(938, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3, (-566), fieldTypeFloat0.DOUBLE, 0L, 2147483647L, byteArray0, byteOrder0, 439);
      int int0 = tiffField0.getBytesLength();
      assertEquals(439, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-566), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1532), fieldTypeLong0, 2178L, 773L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(773, tiffField0.getOffset());
      assertEquals(8712, int0);
      assertEquals((-1532), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1272), 2147475455, fieldTypeAscii0, 2147475455, (-1272), byteArray0, (ByteOrder) null, (byte) (-122));
      tiffField0.getByteOrder();
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals((-1272), tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals((-1272), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getByteOrder();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, " (");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1439), (-662), fieldTypeRational0, 510L, 1L, byteArray0, byteOrder0, (-662));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-662), tiffField0.getDirectoryType());
      assertEquals(4080, tiffField0.getBytesLength());
      assertEquals((-1439), tiffField0.getTag());
      assertEquals((-662), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      MockFile mockFile0 = new MockFile((File) null, "65535 (0xffff: Unknown Tag): ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "65535 (0xffff: Unknown Tag): ");
      assertEquals(75L, mockFile0.length());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-1), (-230), fieldTypeRational0, (byte) (-1), (byte)70, byteArray0, (ByteOrder) null, (-2627));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-1272), fieldTypeAscii0, (-1272), (-1272), (byte[]) null, byteOrder0, (-1272));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(668, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0, (-1886L), 668, byteArray0, byteOrder0, (byte)62);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(39, 50, fieldTypeDouble0, (-725L), 3449, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[96];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(3339, 3339, fieldTypeShort0, (-2256L), 2147483647L, byteArray0, byteOrder0, 3339);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-832), fieldTypeAscii0, (-1272), (-832), (byte[]) null, byteOrder0, (-1272));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1701), 2136582715, fieldTypeRational0, (-505L), (byte)42, byteArray0, byteOrder0, (-842));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1213), (-1213), fieldTypeLong0, 558L, (-1L), (byte[]) null, byteOrder0, (-1213));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, " (");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1439), (-662), fieldTypeRational0, 510L, 1L, byteArray0, byteOrder0, (-662));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37379, "CellLength");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 59933, fieldTypeByte0, 1L, (-3405), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37379, "CellLength");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3405), 37379, fieldTypeByte0, 277L, 277L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1278, 1093, (FieldType) null, (-1L), (-1L), (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2147098034, fieldTypeLong0, 1, (-759L), byteArray0, byteOrder0, (-2142477857));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2147098034, tiffField0.getDirectoryType());
      assertEquals((-2142477857), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-759), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(37394, 1, fieldTypeShort0, 2786L, (-2667L), byteArray0, byteOrder0, (-2147383019));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2147383019), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(37394, tiffField0.getTag());
      assertEquals((-2667), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2195), "!");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2195), 2147052166, fieldTypeRational0, 2172, 2147052166, byteArray0, byteOrder0, (-1340));
      tiffField0.getByteArrayValue();
      assertEquals((-1340), tiffField0.getSortHint());
      assertEquals(17376, tiffField0.getBytesLength());
      assertEquals(2147052166, tiffField0.getDirectoryType());
      assertEquals(2147052166, tiffField0.getOffset());
      assertEquals((-2195), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), 2146071758, fieldTypeAscii0.FLOAT, 2146071758, (-1272), (byte[]) null, byteOrder0, 2146071758);
      tiffField0.getFieldType();
      assertEquals(2146071758, tiffField0.getDirectoryType());
      assertEquals((-1272), tiffField0.getOffset());
      assertEquals((-1272), tiffField0.getTag());
      assertEquals(2146071758, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 1L, byteArray0, (ByteOrder) null, 2147052166);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(2147052166, tiffField0.getSortHint());
      assertEquals(50, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50713, fieldTypeDouble0, 1L, (-2168L), byteArray0, byteOrder0, (byte) (-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(61, byteArrayOutputStream0.size());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(9, 3, fieldTypeFloat0, 9, (-926L), byteArray0, byteOrder0, 439);
      tiffField0.getValue();
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(439, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals((-926), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, (FieldType) null, 42, 604L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(42, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(604, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-1272), fieldTypeAscii0, (-1272), (-1272), (byte[]) null, byteOrder0, (-1272));
      tiffField0.getCount();
      assertEquals((-1272), tiffField0.getTag());
      assertEquals((-1272), tiffField0.getOffset());
      assertEquals((-1272), tiffField0.getSortHint());
      assertEquals((-1272), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-1272), fieldTypeAscii0, (-1272), (-1272), (byte[]) null, byteOrder0, (-1272));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1272), tiffField0.getSortHint());
      assertEquals((-1272), tiffField0.getDirectoryType());
      assertEquals((-1272), int0);
      assertEquals((-1272), tiffField0.getTag());
      assertEquals((-1272), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-777), (-280), fieldTypeFloat0, (-424L), (-2147483648L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-777 (0xfffffcf7: Unknown Tag): ", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-280), tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)42, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 34310);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(34310, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2147483646), 289, fieldTypeAscii0, 2867L, (-2147483646), byteArray0, (ByteOrder) null, (-1272));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3338, 0, fieldTypeLong0, 3338, 3338, byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3338L, tiffField0.getCount());
      assertEquals(3338, tiffField0.getTag());
      assertEquals(3338, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(13352, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(203, 203, fieldTypeFloat0, 203, 203, byteArray0, byteOrder0, 203);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5d5fdab6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeByte0.DOUBLE, 277L, (byte)2, byteArray0, byteOrder0, 36867);
      tiffField0.getDoubleArrayValue();
      assertEquals(2216, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(36867, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(277L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-41), 2, fieldTypeFloat0, (byte)2, (byte)2, byteArray0, byteOrder0, (-2147256664));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2L, tiffField0.getCount());
      assertEquals((-2147256664), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, doubleArray0.length);
      assertEquals((-41), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1261), "qzxIA~ZnU0bWp'");
      TiffField tiffField0 = new TiffField(1, 3449, fieldTypeAscii0, 3449, 3206, byteArray0, byteOrder0, (-614));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6fc0464 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)42, (-594), fieldTypeShort0, (byte)42, (-10176L), byteArray0, byteOrder0, (-594));
      tiffField0.getDoubleArrayValue();
      assertEquals(42, tiffField0.getTag());
      assertEquals((-594), tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getBytesLength());
      assertEquals((-10176), tiffField0.getOffset());
      assertEquals(42L, tiffField0.getCount());
      assertEquals((-594), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36867, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, doubleArray0.length);
      assertEquals(36867, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 68, 50, byteArray0, byteOrder0, (byte)16);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(544, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(68L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2146071758, (byte)65, fieldTypeByte0.IFD, 1L, 1973L, byteArray0, (ByteOrder) null, 1278);
      tiffField0.getDoubleArrayValue();
      assertEquals(1973, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(1278, tiffField0.getSortHint());
      assertEquals(2146071758, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[190];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(74, 74, fieldTypeLong0, 74, 74, byteArray0, byteOrder0, 74);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getTag());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(74L, tiffField0.getCount());
      assertEquals(47, doubleArray0.length);
      assertEquals(74, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-131), "BcuZCNMf_ks]8I!?");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1206, 0, fieldTypeLong0, 0L, 1206, byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getIntArrayValue();
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(1206, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1206, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(37394, 1, fieldTypeShort0, 2786L, (-2667L), byteArray0, byteOrder0, (-2147383019));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2667), tiffField0.getOffset());
      assertEquals(5572, tiffField0.getBytesLength());
      assertEquals((-2147383019), tiffField0.getSortHint());
      assertEquals(2786L, tiffField0.getCount());
      assertEquals(37394, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-614), 2998, fieldTypeRational0, 1036L, 4L, byteArray0, byteOrder0, 1876);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-172), 32897, fieldTypeRational0, 1093L, 65535, byteArray0, byteOrder0, (-2145964917));
      tiffField0.getIntArrayValue();
      assertEquals(32897, tiffField0.getDirectoryType());
      assertEquals((-172), tiffField0.getTag());
      assertEquals(1093L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2145964917), tiffField0.getSortHint());
      assertEquals(8744, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2147098034, fieldTypeLong0, 1, (-759L), byteArray0, byteOrder0, (-2142477857));
      tiffField0.getIntArrayValue();
      assertEquals((-2142477857), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-759), tiffField0.getOffset());
      assertEquals(2147098034, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147383019), (-753), fieldTypeFloat0, (-2147383019), 1038L, byteArray0, byteOrder0, (-753));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@32cab1f0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2147098034, fieldTypeLong0, 50, 1L, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@6000593e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2147483646), 289, fieldTypeAscii0, 2867L, (-2147483646), byteArray0, (ByteOrder) null, (-1272));
      String string0 = tiffField0.getStringValue();
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(289, tiffField0.getDirectoryType());
      assertEquals(2867, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-2147483646), tiffField0.getOffset());
      assertEquals((-1272), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-832), fieldTypeAscii0, (-1272), (-832), (byte[]) null, byteOrder0, (-1272));
      String string0 = tiffField0.getTagName();
      assertEquals((-832), tiffField0.getDirectoryType());
      assertEquals((-1272), tiffField0.getSortHint());
      assertEquals((-832), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffffb08)", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(351, 351, fieldTypeRational0, 351, (-1197L), byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(351, tiffField0.getTag());
      assertEquals((-1197), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(351, tiffField0.getDirectoryType());
      assertEquals("OPIProxy", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-1272), fieldTypeAscii0, (-1272), (-1272), (byte[]) null, byteOrder0, (-1272));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(203, 203, fieldTypeFloat0, 203, 203, byteArray0, byteOrder0, 203);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55)", string0);
      assertEquals(203L, tiffField0.getCount());
      assertEquals(203, tiffField0.getDirectoryType());
      assertEquals(203, tiffField0.getTag());
      assertEquals(203, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(203, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(3497, 3497, fieldTypeByte0, 3653L, 1L, byteArray0, byteOrder0, 3497);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3497, tiffField0.getSortHint());
      assertEquals(3497, tiffField0.getDirectoryType());
      assertEquals(3653L, tiffField0.getCount());
      assertEquals(3653, tiffField0.getBytesLength());
      assertEquals(3497, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(697, 697, fieldTypeLong0, 697, 697, byteArray0, byteOrder0, 697);
      String string0 = tiffField0.getValueDescription();
      assertEquals(697, tiffField0.getOffset());
      assertEquals(2788, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(697, tiffField0.getTag());
      assertEquals(697, tiffField0.getSortHint());
      assertEquals(697, tiffField0.getDirectoryType());
      assertEquals(697L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[109];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1709, 1709, fieldTypeDouble0.SSHORT, 4210, 4210, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.toString();
      assertEquals(8420, tiffField0.getBytesLength());
      assertEquals(1709, tiffField0.getDirectoryType());
      assertEquals("1709 (0x6ad: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (4210 SShort)", string0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(4210, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65529, 65529, fieldTypeShort0, 65529, 65529, byteArray0, byteOrder0, 65529);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65529, tiffField0.getSortHint());
      assertEquals(65529, tiffField0.getTag());
      assertEquals(131058, tiffField0.getBytesLength());
      assertEquals(65529, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65529L, tiffField0.getCount());
      assertEquals(65529, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1261), "qzxIA~ZnU0bWp'");
      TiffField tiffField0 = new TiffField(1, 3449, fieldTypeAscii0, 3449, 3206, byteArray0, byteOrder0, (-614));
      tiffField0.toString();
      assertEquals(3449, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(3449, tiffField0.getDirectoryType());
      assertEquals((-614), tiffField0.getSortHint());
      assertEquals(3206, tiffField0.getOffset());
      assertEquals(3449L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2195), "!");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2195), 2147052166, fieldTypeRational0, 2172, 2147052166, byteArray0, byteOrder0, (-1340));
      String string0 = tiffField0.toString();
      assertEquals((-1340), tiffField0.getSortHint());
      assertEquals(17376, tiffField0.getBytesLength());
      assertEquals(2147052166, tiffField0.getDirectoryType());
      assertEquals("-2195 (0xfffff76d: Unknown Tag):  (2172 !)", string0);
      assertEquals(2147052166, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)94;
      TiffField tiffField0 = new TiffField((-1272), 2147475455, fieldTypeAscii0, 2147475455, (-1272), byteArray0, (ByteOrder) null, (byte) (-122));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals((-1272), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2147475455, tiffField0.getBytesLength());
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals((-1272), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1588), fieldTypeFloat0, 1582L, 352L, byteArray0, byteOrder0, (-494));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-1780));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: GPSVersionID, fieldType: Float", string0);
      assertEquals((-494), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(352, tiffField0.getOffset());
      assertEquals((-1588), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2147098034, fieldTypeLong0, 50, 1L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147098034, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1L, tiffElement0.offset);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1911, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1911, 1911, fieldTypeAscii0, (-1L), 1911, (byte[]) null, byteOrder0, 1911);
      tiffField0.getFieldTypeName();
      assertEquals(1911, tiffField0.getDirectoryType());
      assertEquals(1911, tiffField0.getTag());
      assertEquals(1911, tiffField0.getSortHint());
      assertEquals(1911, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2172, (-2195), fieldTypeShort0, 2172, 2933L, byteArray0, byteOrder0, 2172);
      int int0 = tiffField0.getOffset();
      assertEquals((-2195), tiffField0.getDirectoryType());
      assertEquals(2172, tiffField0.getSortHint());
      assertEquals(2172, tiffField0.getTag());
      assertEquals(2933, int0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1272), (-820), fieldTypeAscii0, (-1272), (-820), (byte[]) null, byteOrder0, (-1272));
      int int0 = tiffField0.getSortHint();
      assertEquals((-820), tiffField0.getOffset());
      assertEquals((-820), tiffField0.getDirectoryType());
      assertEquals((-1272), int0);
      assertEquals((-1272), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)28, (-634), fieldTypeLong0, (byte)28, (-2L), byteArray0, byteOrder0, (-1643));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(9, 3, fieldTypeFloat0, 9, (-926L), byteArray0, byteOrder0, 439);
      tiffField0.dump();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(439, tiffField0.getSortHint());
      assertEquals((-926), tiffField0.getOffset());
      assertEquals(9L, tiffField0.getCount());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = new byte[182];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeDouble0, 35, 35, byteArray0, byteOrder0, 35);
      String string0 = tiffField0.toString();
      assertEquals(35, tiffField0.getOffset());
      assertEquals(280, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals("35 (0x23: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (35 Double)", string0);
      assertEquals(35, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4650), 37390, fieldTypeByte0, (-4650), 37390, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 37390);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-4650), tiffField0.getTag());
      assertNull(string0);
      assertEquals(37390, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-4650L), tiffField0.getCount());
      assertEquals(37390, tiffField0.getOffset());
  }
}
