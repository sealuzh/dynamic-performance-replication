/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:05:21 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)31, (byte)31, byteArray0, (ByteOrder) null, (byte)31);
      tiffField0.dump();
      assertEquals(124, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2169, 2169, fieldTypeLong0.DOUBLE, 2169, 2169, byteArray0, byteOrder0, 2169);
      int int0 = tiffField0.getSortHint();
      assertEquals(2169, int0);
      assertEquals(2169, tiffField0.getOffset());
      assertEquals(2169, tiffField0.getTag());
      assertEquals(2169, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)45, (byte)45, byteArray0, (ByteOrder) null, (byte)45);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@684d74ae for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, fieldTypeShort0, (byte)71, (byte)71, byteArray0, (ByteOrder) null, (byte)71);
      String string0 = tiffField0.getValueDescription();
      assertEquals(71, tiffField0.getOffset());
      assertEquals(71, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (70)", string0);
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(71L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)72, (byte)72, fieldTypeShort0, 4944L, (byte)72, byteArray0, (ByteOrder) null, (byte)72);
      String string0 = tiffField0.getValueDescription();
      assertEquals(72, tiffField0.getTag());
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(9888, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(72, tiffField0.getOffset());
      assertEquals(4944L, tiffField0.getCount());
      assertEquals(72, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)50, (byte)50, byteArray0, (ByteOrder) null, (byte)50);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)53, (byte)53, byteArray0, (ByteOrder) null, (byte)53);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(53L, tiffElement0.offset);
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)53, (byte)53, byteArray0, (ByteOrder) null, (byte)53);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)53, 42);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(53, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeLong0, (byte)50, (byte)50, byteArray0, (ByteOrder) null, (byte)50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals("50 (0x32: Unknown Tag): 0, 0 (50 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[70];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4140, 4140, fieldTypeRational0, 4140, 4140, byteArray0, byteOrder0, 4140);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(851, 37386, fieldTypeRational0, 37386, 37386, byteArray0, byteOrder0, 37386);
      tiffField0.getIntArrayValue();
      tiffField0.getFieldTypeName();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      System.setCurrentTimeMillis(37386);
      tiffField0.getValueDescription();
      String string0 = tiffField0.toString();
      assertEquals("851 (0x353: Unknown Tag):  (37386 Rational)", string0);
      
      int int1 = tiffField0.getDirectoryType();
      assertEquals(37386, tiffField0.getSortHint());
      assertEquals(299088, tiffField0.getBytesLength());
      assertEquals(37386, tiffField0.getOffset());
      assertEquals(37386, int1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)25, (byte)25, fieldTypeLong0, (byte)25, (byte)25, byteArray0, (ByteOrder) null, (byte)25);
      tiffField0.getIntArrayValue();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65524, 65524, fieldTypeRational0, 65524, 65524, byteArray0, byteOrder0, 65524);
      tiffField0.getFieldTypeName();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(851, 2146688578, fieldTypeRational0, 37386, 37386, byteArray0, byteOrder0, 37386);
      tiffField0.getIntArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)50, (byte)50, byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getValueDescription();
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@25cf8b92 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)57, (byte)57, byteArray0, (ByteOrder) null, (byte)57);
      tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(228, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2158, 2158, fieldTypeLong0.DOUBLE, 2158, 2158, byteArray0, byteOrder0, 2158);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2158 (0x86e: Unknown Tag): ", string0);
      assertEquals(17264, tiffField0.getBytesLength());
      assertEquals(2158, tiffField0.getOffset());
      assertEquals(2158, tiffField0.getDirectoryType());
      assertEquals(2158, tiffField0.getSortHint());
      assertEquals(2158L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65528, 65528, fieldTypeByte0, 65528, 65528, byteArray0, byteOrder0, 65528);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4169323f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeRational0, 65520, 65520, byteArray0, byteOrder0, 65520);
      tiffField0.toString();
      assertEquals(65520L, tiffField0.getCount());
      assertEquals(65520, tiffField0.getDirectoryType());
      assertEquals(65520, tiffField0.getTag());
      assertEquals(65520, tiffField0.getSortHint());
      assertEquals(65520, tiffField0.getOffset());
      assertEquals(524160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "ImageLength");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0.FLOAT, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[363];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(283, 283, fieldTypeDouble0, 283, 283, byteArray0, byteOrder0, 283);
      String string0 = tiffField0.getTagName();
      assertEquals("YResolution", string0);
      
      tiffField0.dump();
      assertEquals(283L, tiffField0.getCount());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(283, tiffField0.getOffset());
      assertEquals(2264, tiffField0.getBytesLength());
      assertEquals(283, tiffField0.getTag());
      assertEquals(283, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4129, 4129, fieldTypeRational0, 4129, 4129, byteArray0, byteOrder0, 4129);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(33032, tiffField0.getBytesLength());
      assertEquals(4129, tiffField0.getDirectoryType());
      assertEquals(4129, tiffField0.getOffset());
      assertEquals(4129, tiffField0.getTag());
      assertEquals(4129, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(4129L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@2b5430c5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[81];
      TiffField tiffField0 = new TiffField((byte)62, (byte)62, fieldTypeRational0.IFD, (byte)62, (byte)62, byteArray0, (ByteOrder) null, (byte)62);
      tiffField0.getDoubleArrayValue();
      assertEquals(62L, tiffField0.getCount());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getOffset());
      assertEquals(248, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1336);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1336, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3067, 3067, fieldTypeRational0, 3067, (-322L), byteArray0, byteOrder0, 3067);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3067, 3067);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(3067, tiffField0.getSortHint());
      assertEquals((-322), tiffField0.getOffset());
      assertEquals(3067, tiffField0.getTag());
      assertEquals(3067, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(3067L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50241, 50241, fieldTypeShort0, 50241, 50241, byteArray0, byteOrder0, 50241);
      String string0 = tiffField0.getValueDescription();
      String string1 = tiffField0.getValueDescription();
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      
      tiffField0.getDoubleArrayValue();
      long long0 = tiffField0.getCount();
      assertEquals(50241, tiffField0.getSortHint());
      assertEquals(50241, tiffField0.getOffset());
      assertEquals(100482, tiffField0.getBytesLength());
      assertEquals(50241L, long0);
      assertEquals(50241, tiffField0.getTag());
      assertEquals(50241, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.ASCII, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)45, (byte)45, fieldTypeLong0, (byte)45, (byte)45, byteArray0, byteOrder0, (byte)45);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertNotNull(string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(45L, tiffField0.getCount());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getTag());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1260, 1260, fieldTypeDouble0, 1L, (-654L), byteArray0, (ByteOrder) null, 1260);
      tiffField0.getValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      assertEquals(1260, tiffField0.getDirectoryType());
      assertEquals((-654), tiffField0.getOffset());
      assertEquals(1260, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1260, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeLong0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, 2814);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2814, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[180];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)83, (byte)83, fieldTypeByte0, (byte)83, (byte)83, byteArray0, (ByteOrder) null, (byte)83);
      tiffField0.dump();
      assertEquals(83, tiffField0.getTag());
      assertEquals(83, tiffField0.getSortHint());
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(83L, tiffField0.getCount());
      assertEquals(83, tiffField0.getOffset());
      assertEquals(83, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(9, 95, fieldTypeAscii0, 95, 9, byteArray0, byteOrder0, 95);
      String string0 = tiffField0.getValueDescription();
      assertEquals(95, tiffField0.getBytesLength());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1), (-325), fieldTypeFloat0, 50733, (-325), byteArray0, byteOrder0, 50733);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50733, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(202932, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-325), tiffField0.getDirectoryType());
      assertEquals((-325), tiffField0.getOffset());
      assertEquals(50733L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[297];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(884, 884, fieldTypeLong0, 91L, 884, byteArray0, byteOrder0, 884);
      tiffField0.dump();
      assertEquals(91L, tiffField0.getCount());
      assertEquals(364, tiffField0.getBytesLength());
      assertEquals(884, tiffField0.getDirectoryType());
      assertEquals(884, tiffField0.getOffset());
      assertEquals(884, tiffField0.getTag());
      assertEquals(884, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(286, (-2410), fieldTypeDouble0, 2749L, 1L, byteArray0, (ByteOrder) null, (-2410));
      tiffField0.dump();
      assertEquals(21992, tiffField0.getBytesLength());
      assertEquals(286, tiffField0.getTag());
      assertEquals((-2410), tiffField0.getDirectoryType());
      assertEquals((-2410), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2749L, tiffField0.getCount());
  }
}
