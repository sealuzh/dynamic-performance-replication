/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 04:41:15 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, ";VO.ItMrQW-xN.,e");
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.registerOutParam(0, 0);
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, ";VO.ItMr2)W-s6.,e");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(0, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 6;
      int int1 = (-842);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-842), "HY002");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -842
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 345;
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("");
      fBProcedureCall0.addParam(345, "EXECUTE PROCEDURE null");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(345, "pX0wscM~(wt/*.I<u; ");
      Object object0 = new Object();
      try { 
        fBProcedureParam0.setValue(object0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      fBProcedureCall0.hashCode();
      fBProcedureCall0.hashCode();
      int int0 = (-1642);
      boolean boolean0 = false;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-1642), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-1775);
      boolean boolean0 = true;
      int int1 = 0;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParam(0);
      fBProcedureCall0.mapOutParamIndexToPosition((-1775), true);
      fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParam((-1775));
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-1775), (-1775));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1776
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(547, "ho");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(547, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(866);
      assertEquals(866, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, " not set and ");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(not set and)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(37, "HY105");
      fBProcedureCall0.getOutputParam((-1867));
      fBProcedureCall0.getSQL(true);
      int int0 = (-1);
      fBProcedureCall0.getOutputParam((-1));
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam((-1));
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(37);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1), "HY105");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-172);
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition((-172));
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-172));
      fBProcedureParam0.setType((-172));
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      int int1 = 37;
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(37);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(2461);
      fBProcedureParam1.setIndex(37);
      fBProcedureCall0.getSQL(true);
      fBProcedureParam1.setIndex((-172));
      boolean boolean0 = false;
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      try { 
        fBProcedureParam1.setValue(fBProcedureCall1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.clone();
      String string0 = null;
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1348), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("EXECUTE PROCEDURE null");
      fBProcedureCall0.getOutputParam((-867));
      fBProcedureCall0.getOutputParam(31);
      int int0 = 0;
      try { 
        fBProcedureCall0.registerOutParam(2328, 0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, ";VO.ItMrQW-xN.,e");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2747);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.setName("KHQ$ K7XjzE(");
      fBProcedureCall0.mapOutParamIndexToPosition(1382);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2995, "KHQ$ K7XjzE(");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      Object object0 = new Object();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.equals("EXECUTE PROCEDURE KHQ$ K7XjzE((null, null, KHQ$ K7XjzE()");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.hashCode();
      fBProcedureCall0.mapOutParamIndexToPosition(2995);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.clone();
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition((-928));
      fBProcedureCall0.getName();
      fBProcedureCall1.equals(object0);
      fBProcedureCall1.getName();
      fBProcedureCall0.getOutputParam(41);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.getInputParams();
      fBProcedureCall2.addParam(2958, "KHQ$ K7XjzE(");
      int int1 = fBProcedureCall1.hashCode();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(866);
      assertEquals((-172), fBProcedureParam0.getIndex());
      
      fBProcedureParam0.setIndex((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(866);
      fBProcedureCall0.clone();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(302);
      assertEquals(302, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.mapOutParamIndexToPosition(1737);
      fBProcedureCall0.getName();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.getName();
      fBProcedureCall1.getOutputParam((-4788));
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall1.getInputParams();
      fBProcedureCall1.addParam(2958, "GDS Exception. ");
      fBProcedureCall2.hashCode();
      assertFalse(fBProcedureCall2.equals((Object)fBProcedureCall1));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, ";VO.ItMrQW-xN.,e");
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(0, 0);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "hbO)^d>X/QNsi?Ah%\"");
      assertEquals(1, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(hbO)^d>X/QNsi?Ah%\")", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(552, "l%A7J?:]?");
      fBProcedureParam0.setIndex(3);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(l%A7J?:]?)", string0);
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getName();
      fBProcedureCall0.getName();
      assertTrue(fBProcedureCall0.equals((Object)object0));
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2502, "?{3Hf4.v(]");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(2502, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(?{3Hf4.v(])", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(552, "l%A7J?:]?");
      fBProcedureParam0.setIndex(3);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(13, ">c3h|?*oI");
      assertEquals(13, fBProcedureParam1.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(>c3h|?*oI, l%A7J?:]?)", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("/f");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall0);
      assertFalse(boolean0);
      
      fBProcedureCall1.hashCode();
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "IN>^Qzj.%!,Q%x&");
      assertEquals("IN>^Qzj.%!,Q%x&", fBProcedureParam0.getParamValue());
      assertEquals(0, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 3;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(3, "X[**P*?");
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(3);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(3, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(779, "?*W6%x5");
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.registerOutParam((-1), 779);
      fBProcedureCall0.getInputParams();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-128778031));
      assertEquals((-128778031), int0);
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-237701182));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(552, "l%A7J?:]?");
      fBProcedureParam1.setValue("l%A7J?:]?");
      fBProcedureParam1.clone();
      fBProcedureParam1.setIndex(3);
      assertEquals(552, fBProcedureParam1.getPosition());
      
      fBProcedureCall0.getInputParam(552);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null, null, l%A7J?:]?)", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(40, "w1NUize&?W|u");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam1.setValue(fBProcedureCall1);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.registerOutParam((-1), 3);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1052, "ouTb");
      fBProcedureCall0.mapOutParamIndexToPosition(18);
      try { 
        fBProcedureCall0.registerOutParam(927, 18);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }
}
