/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:27:46 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Excecutable;
import org.javathena.core.data.IParse;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login.setPASSWORDENC(27);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.ConfigurationManagement", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      UserManagement.setAccountIdCount(50);
      Login.mmo_auth_syncXML();
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      login0.setAuth_max(100000000);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Login.getDbManagemtType();
      Login login0 = new Login();
      int int0 = login0.check_ipmask((-2040249675), "amu\t:ZK");
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login login0 = new Login();
      login0.getLog_fp();
      int[] intArray0 = login0.getServer_fd();
      assertNotNull(intArray0);
      
      login0.getOut();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      ConfigurationManagement.setAccess_allownum(31046);
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("conf/subnet_athena.conf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigurationManagement.setAccess_allownum(873);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.getAuth_max();
      int int1 = login0.check_ipmask(31038, "org.javathena.login.Login");
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setDefault_codepage("conf/subnet_athena.conf");
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      assertEquals(0, login0.getAuth_max());
      
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Locale locale0 = Locale.CHINA;
      Locale locale1 = Locale.FRENCH;
      locale0.getDisplayCountry(locale1);
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      socket_data0.setRdata_tick(calendar0);
      Login.logUnknownPackets(socket_data0);
      int int0 = Login.getPASSWORDENC();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login.getPASSWORDENC();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FromAdmin fromAdmin0 = new FromAdmin();
      Login.login_log("");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.ConfigurationManagement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromAdmin0);
      Socket_data socket_data1 = new Socket_data(mockSocket0);
      socket_data1.cancel();
      Socket_data socket_data2 = new Socket_data(mockSocket0);
      socket_data2.setMaintenance((-5211));
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertNotNull(intArray0);
      
      MockFile mockFile0 = new MockFile("conf/subnet_athena.conf");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      Locale locale0 = Locale.ITALY;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) login0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) login0;
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) "  But, you refuse ALL IP!";
      Object object1 = new Object();
      objectArray0[6] = (Object) "  But, you refuse ALL IP!";
      login0.setOut(mockPrintWriter0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      // Undeclared exception!
      try { 
        Login.showTab((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      login0.do_initTXT();
      assertEquals(100000000, Login.END_ACCOUNT_NUM);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[6];
      intArray0[0] = 100000000;
      intArray0[1] = 2701;
      intArray0[2] = 2000000;
      intArray0[3] = 100000000;
      intArray0[4] = 2000000;
      login0.server_fd = intArray0;
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      login0.setAuth_max((-2110643301));
      login0.getServer_fd();
      assertEquals((-2110643301), login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.cancel();
      Socket_data socket_data1 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        login0.parse_admin(2, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)119;
      Login login0 = new Login();
      login0.check_ipmask(31032, "");
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)99;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)25;
      byteArray0[7] = (byte)41;
      byteArray0[8] = (byte) (-21);
      Login.showTab(byteArray0);
      assertArrayEquals(new byte[] {(byte)119, (byte)90, (byte)7, (byte)99, (byte)43, (byte)84, (byte)25, (byte)41, (byte) (-21)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login login0 = new Login();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data1 = new Socket_data((Socket) null, fromAdmin0);
      Login.getMd5Data(socket_data1);
      Socket_data socket_data2 = new Socket_data((Socket) null);
      socket_data0.getFunc_recv();
      socket_data0.setFunc_send((Excecutable) null);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      MockFile mockFile0 = new MockFile("2C(o;#/4^R\\c&");
      Login login0 = new Login();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data1 = new Socket_data(mockSocket0);
      login0.do_initTXT();
      Login login1 = new Login();
      login0.parse_console("conf/subnet_athena.conf");
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UserManagement.addUserTXT("RXKPYEBU(FOO\"GIMCH)J", "TXxgF8s8%K", "Vchgg$U,{Sq0W>;s1gf", 'O');
      MockFile mockFile0 = new MockFile("a.yD,Ir&", "2C(o;#/4^R\\c&");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "a.yD,Ir&");
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      Login.setPASSWORDENC(10005);
      login0.check_auth_sync();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "conf/subnet_athena.conf");
      MockSocket mockSocket1 = null;
      try {
        mockSocket1 = new MockSocket("O+P87 67tn", 1818, false);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@6b60e262
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UserManagement.addUserTXT("RXKPYEBU(FOO\"GIMCH)J", "admin", "2C(o;#/4^R\\c&", 'O');
      MockFile mockFile0 = new MockFile("warning_32", "TXxgF8s8%K");
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Socket socket0 = null;
      MockFile mockFile0 = new MockFile("", "- with no minimum level for connection.");
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      UserManagement.addUserTXT("TXxgF8s8%K", "ge7z'Xp", "2C(o;#/4^R\\c&", '?');
      MockFile mockFile0 = new MockFile("ge7z'Xp", "RXKEBU(FOO\"GIMCHF)J");
      Login login0 = new Login();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      Login.display_title();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login login0 = new Login();
      MockPrintStream mockPrintStream0 = new MockPrintStream("conf/subnet_athena.conf");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream("conf/subnet_athena.conf");
      mockPrintStream1.close();
      login0.do_initXML();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "conf/subnet_athena.conf");
      Login.setPASSWORDENC(30);
      Login login1 = new Login();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Login.ConnectionListener login_ConnectionListener0 = login1.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      login1.getServer_fd();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_console("shutdown");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      Login.setPASSWORDENC((-2582));
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_initTXT();
      login0.do_initXML();
      // Undeclared exception!
      try { 
        MySQLConfig.initConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("shutdown", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      MySQLConfig.setDefault_codepage("conf/subnet_athena.conf");
      UserManagement.addAccountIdCount();
      ConfigurationManagement.lesslessAuth_before_save_file();
      Login.auth_num = (-1);
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_initTXT();
      login0.do_initXML();
      // Undeclared exception!
      try { 
        MySQLConfig.initConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.setAuth_max(319);
      login0.yesNoOnOffToBoolean("ON");
      Login.setPASSWORDENC(83);
      Login login1 = new Login();
      MySQLConfig.setDefault_codepage((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MySQLConfig.setLogin_server_port((-3004));
      UserManagement.addAccountIdCount();
      int int0 = Calendar.HOUR_OF_DAY;
      ACO aCO0 = ACO.DENY_ALLOW;
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_initTXT();
      login1.do_initXML();
      // Undeclared exception!
      try { 
        MySQLConfig.initConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.addUserTXT("RXKPYEBU(FOO\"GIMCH)J", "- with the IP security order: 'allow,deny' (deny if not allow). You authorise ALL IP.", "admin", 'T');
      MockFile mockFile0 = new MockFile("alive", "5e(JHN= ]21D}8V/1Uy");
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login login1 = new Login();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      UserManagement.addUserTXT("RXKPYEBU(FOO\"GIMCH)J", "djMBE/y]O", "djMBE/y]O", 'S');
      MockFile mockFile0 = new MockFile("Configurable modification disallowed by SecurityContext", "Configurable modification disallowed by SecurityContext");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login login1 = new Login();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login1.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(";|K.Nqi=X!", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login0.do_initXML();
      Login.setPASSWORDENC(50);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      Login login1 = new Login();
      login1.getServer_fd();
      Login login2 = new Login();
      login1.parse_console("help");
      Login.mmo_auth_syncXML();
      try { 
        MockInetAddress.getByAddress("conf/login_athena.xml", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: []
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }
}
