/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:16:44 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("s^Z5RY");
      Component component0 = dynamicSelectModel1.getComponent();
      assertNull(component0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue(".`5I>n}/L");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression null evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("k~T[&h4(UD>ukuc=u");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("k~T[&h4(UD>ukuc=u");
      dynamicSelectModel1.validate();
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent((Component) null);
      StandaloneComponent standaloneComponent0 = dynamicSelectModel0.getTopLevelComponent();
      assertNull(standaloneComponent0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label(".6w_&'t{^D[8");
      dynamicSelectModel1.collection(".6w_&'t{^D[8");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.conversion.BigDecimalCH");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("org.mvel.conversion.BigDecimalCH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression org.mvel.conversion.BigDecimalCH evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] froO ");
      dynamicSelectModel1.translateValue("[] froO ");
      int int0 = dynamicSelectModel1.getOptionCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[] froO ");
      Object object0 = new Object();
      int int0 = dynamicSelectModel1.getOptionCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      dynamicSelectModel1.translateValue("[] from ");
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.empty(object0);
      String string0 = "";
      dynamicSelectModel1.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.translator("");
      Object object1 = new Object();
      Object object2 = new Object();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel2.label("I=");
      dynamicSelectModel3.enumeration("[] from ");
      dynamicSelectModel4.value("[] from ");
      Object object3 = new Object();
      dynamicSelectModel0.translateValue("[] from ");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      ElExpression elExpression0 = new ElExpression("");
      ElExpression elExpression1 = elExpression0.errorMessage("");
      ElExpression elExpression2 = elExpression1.errorMessage("");
      DynamicSelectModel dynamicSelectModel5 = null;
      try {
        dynamicSelectModel5 = new DynamicSelectModel(elExpression0, elExpression0, elExpression2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[] fr=Mom ");
      dynamicSelectModel2.value((String) null);
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.translator("<m");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.empty("[] fr=Mom ");
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      dynamicSelectModel3.label("org.mvel.util.FastList@0000000073");
      DynamicSelectModel dynamicSelectModel5 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel5.enumeration("toString()");
      DynamicSelectModel dynamicSelectModel7 = dynamicSelectModel1.value("toString()");
      dynamicSelectModel7.value("toString()");
      dynamicSelectModel6.value("org.mvel.util.FastList@0000000073");
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      Object object4 = new Object();
      MockJapaneseDate mockJapaneseDate1 = new MockJapaneseDate();
      ElExpression elExpression0 = new ElExpression("toString()");
      dynamicSelectModel4.translateValue("java.lang.String@0000000036");
      dynamicSelectModel7.collection("6^Q[62~??_HJjk");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[] fr=Mom ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value((String) null);
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.empty("[] fr=Mom ");
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      dynamicSelectModel0.label("org.mvel.util.FastList@0000000073");
      DynamicSelectModel dynamicSelectModel5 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel5.enumeration("toString()");
      DynamicSelectModel dynamicSelectModel7 = dynamicSelectModel1.value("toString()");
      dynamicSelectModel7.value("toString()");
      dynamicSelectModel6.value("org.mvel.util.FastList@0000000073");
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      Object object4 = new Object();
      dynamicSelectModel2.value("toString()");
      MockJapaneseDate mockJapaneseDate1 = new MockJapaneseDate();
      ElExpression elExpression0 = new ElExpression("toString()");
      dynamicSelectModel4.translateValue("java.lang.String@0000000036");
      dynamicSelectModel2.label((String) null);
      dynamicSelectModel3.label("[] fr=Mom ");
      StandaloneComponent standaloneComponent0 = dynamicSelectModel3.getTopLevelComponent();
      assertNull(standaloneComponent0);
  }
}
