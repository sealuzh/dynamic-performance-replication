/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:26:00 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.FileNotFoundException;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.UnsupportedEncodingException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam(">.+V+%KV8");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("UTF-8");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0, "UTF-8");
      IOUtils.close(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (-1735), (-1735));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '$';
      charArray0[1] = 'e';
      charArray0[2] = '-';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, (-1908874352), 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.encode("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.getChars(23, 1882, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1881
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars((int) (byte) (-5), (int) (byte) (-5), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.stringSize(36L);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 4;
      char char0 = 'T';
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0000';
      charArray0[2] = 'T';
      charArray0[3] = 'T';
      charArray0[4] = 'T';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 256, 256, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 256
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.decodeBase64("~jHmh", 1, 0);
      char[] charArray0 = new char[1];
      int int1 = IOUtils.decodeUTF8(byteArray0, 0, 0, charArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = IOUtils.stringSize(15);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('~');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = IOUtils.stringSize(343L);
      assertEquals(3, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("~jHmh", 3, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((-965L), 2113396605, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2113396604
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = null;
      char char0 = 'i';
      IOUtils.firstIdentifier('i');
      int int0 = 128;
      // Undeclared exception!
      try { 
        IOUtils.getChars(218L, 128, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars(14L, 53, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset charset0 = IOUtils.UTF8;
      charset0.newDecoder();
      charset0.encode("");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      boolean boolean0 = IOUtils.firstIdentifier('n');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      byte[] byteArray1 = IOUtils.specicalFlags_doubleQuotes;
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("9");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.isValidJsonpQueryParam("8.:)7KmR1{DX");
      IOUtils.decodeBase64("8.:)7KmR1{DX");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, (byte)15, 1, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("?E");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("?E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("U;wR-:=T");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-4), (byte)17, (byte) (-1), (byte) (-16), (byte)19}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.baseWireHandle;
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 8257536, 46, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("E");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      boolean boolean0 = IOUtils.isIdent(':');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOUtils.stringSize(2147483649L);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset charset0 = IOUtils.UTF8;
      charset0.newDecoder();
      String string0 = "oxLpyjw8[+";
      charset0.encode("oxLpyjw8[+");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      char[] charArray0 = new char[3];
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1L), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = '\u00C9';
      charArray0[5] = '\u00C9';
      byte[] byteArray0 = new byte[9];
      int int0 = IOUtils.encodeUTF8(charArray0, 3, 3, byteArray0);
      assertEquals(4, int0);
      
      int int1 = IOUtils.decodeUTF8(byteArray0, (byte)0, '\u0000', charArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-61), (byte) (-119), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '\u0090';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, (byte)0, '\u0090', byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("*k3xDySJ)");
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("*k3xDySJ)");
      assertArrayEquals(new byte[] {(byte) (-109), (byte)124, (byte)67, (byte) (-55), (byte)34}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.stringSize(343L);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("~jHmh", 3, 27);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.decodeBase64("l4r0I6_?NB+(>'Zd~", 6, 6);
      PipedReader pipedReader0 = new PipedReader();
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      assertEquals("fastjson.compatibleWithFieldName", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOUtils.isIdent('\\');
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)101, (int) (byte)101, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[3];
      IOUtils.getChars((byte)32, 2, charArray0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[19];
      IOUtils.getChars((-1789569705), 18, charArray0);
      IOUtils.stringSize((long) 18);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 3, (-1789569705));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1789569703
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[19];
      IOUtils.getChars(53, 18, charArray0);
      int int0 = IOUtils.stringSize((long) 18);
      assertEquals(2, int0);
      
      int int1 = IOUtils.stringSize((-107L));
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("_-y7&(kbXlL!");
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      ByteBuffer byteBuffer0 = charset0.encode("_-y7&(kbXlL!");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.decodeBase64("l4r0I6_?NB+(>'Zd~", 5, 5);
      PipedReader pipedReader0 = new PipedReader();
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      assertEquals("fastjson.compatibleWithFieldName", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      Charset charset0 = Charset.defaultCharset();
      charset0.newDecoder();
      uTF8Decoder0.reset();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 2);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, 2, 2, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(100000000000000L, 629, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 628
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset charset0 = IOUtils.UTF8;
      charset0.encode("fastjson.properties");
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.replaceChars, 1, 1);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      byte[] byteArray1 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 1, 1);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.DIGITS);
      IOUtils.readAll(charArrayReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 40);
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      int int1 = ObjectStreamConstants.baseWireHandle;
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      Charset charset0 = IOUtils.UTF8;
      charset0.newDecoder();
      uTF8Decoder0.reset();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 2);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, 2, 2, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.decodeBase64("~jHmh");
      byte byte0 = (byte) (-68);
      IOUtils iOUtils0 = new IOUtils();
      int int1 = 3;
      IOUtils.decodeUTF8(byteArray0, 1, 3, iOUtils0.DIGITS);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("fastjson.compatibleWithFieldName");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.decodeBase64("7'*]%A1y+=],");
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getStringProperty("fastjson.properties");
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.encodeUTF8(iOUtils0.CA, 4, 4, iOUtils0.specicalFlags_singleQuotes);
      IOUtils.getChars((byte) (-53), 4, iOUtils0.ASCII_CHARS);
      IOUtils.getChars(4, 4, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 40);
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fastjson.properties");
      IOUtils.decodeUTF8(byteArray0, 10, 10, iOUtils0.ASCII_CHARS);
      int int1 = ObjectStreamConstants.baseWireHandle;
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeBase64("T^(.%51G zAeK=|");
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset charset0 = IOUtils.UTF8;
      IOUtils.close((Closeable) null);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      byteBuffer0.putChar('j');
      byteBuffer0.compact();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 12);
      ByteBuffer.wrap(iOUtils0.specicalFlags_doubleQuotes);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.encodeUTF8(iOUtils0.CA, 2, 2, iOUtils0.specicalFlags_singleQuotes);
      IOUtils.decodeBase64("fastjson.properties");
      IOUtils.decodeUTF8(byteArray0, 2, 2, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      iOUtils0.UTF8.encode("fastjson.properties");
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, (int) 'M');
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean", 5, 1);
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(byteArray0, 6, 6, iOUtils0.ASCII_CHARS);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 1, 6, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      iOUtils0.UTF8.encode("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, (int) 'M');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1277
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.CA, 2823, (-32), iOUtils0.specicalFlags_singleQuotes);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset.defaultCharset();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      Charset charset1 = Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 1, 62);
      ByteBuffer.wrap(byteArray0);
      Charset.defaultCharset();
      IOUtils.decodeUTF8(byteArray0, 32, 62, iOUtils0.ASCII_CHARS);
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      charset1.encode("J8z+GJi.#");
      IOUtils.decodeBase64("");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset charset0 = IOUtils.UTF8;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.loadPropertiesFromFile();
      Charset charset1 = IOUtils.UTF8;
      iOUtils0.UTF8.encode("fastjson.properties");
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      iOUtils0.UTF8.decode(byteBuffer0);
      byteBuffer0.compact();
      ByteBuffer.allocate(1);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 62);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1277
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      String string0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/";
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 45, 2);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(iOUtils0.specicalFlags_doubleQuotes);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byteBuffer0.getLong(45);
      byteBuffer0.asFloatBuffer();
      byteBuffer0.rewind();
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/");
      IOUtils.decodeUTF8(byteArray0, 45, 2, iOUtils0.CA);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012G456789+/
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.isIdent('\u0108');
      Charset.defaultCharset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      char[] charArray0 = new char[10];
      charArray0[0] = '\u0108';
      charArray0[1] = '\u0108';
      charArray0[2] = '\u0108';
      charArray0[3] = '\\';
      charArray0[4] = '\u0108';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-20);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)69;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, '\u0108', 3678080, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 264
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = new byte[8];
      IOUtils.firstIdentifier('\u0124');
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      CharBuffer charBuffer1 = charBuffer0.compact();
      assertEquals(0, charBuffer1.remaining());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      IOUtils.loadPropertiesFromFile();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      iOUtils0.UTF8.decode(byteBuffer0);
      byteBuffer0.compact();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 1, 61);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fastjson.properties");
      Charset.defaultCharset();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      CharBuffer.wrap(iOUtils0.ASCII_CHARS);
      int int2 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeUTF8(byteArray0, 29, 115, iOUtils0.CA);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)33, (int) (byte) (-93), iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -94
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = '\u00AC';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)58;
      byte byte0 = (byte) (-63);
      byteArray0[3] = (byte) (-63);
      IOUtils.encodeUTF8(charArray0, 3, (-605), byteArray0);
      IOUtils.decodeUTF8(byteArray0, 0, 5, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 11, '\u00AC', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
