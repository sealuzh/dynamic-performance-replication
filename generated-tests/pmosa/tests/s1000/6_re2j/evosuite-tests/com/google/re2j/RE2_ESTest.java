/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 15:59:56 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.nio.CharBuffer;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("t4");
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-113);
      byteArray1[1] = (byte) (-113);
      rE2_0.findAllUTF8SubmatchIndex(byteArray1, (byte) (-113));
      byteArray1[2] = (byte) (-113);
      byteArray1[3] = (byte) (-113);
      byteArray1[4] = (byte) (-113);
      byteArray1[5] = (byte) (-113);
      byteArray1[6] = (byte) (-113);
      rE2_0.findUTF8SubmatchIndex(byteArray1);
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)0;
      rE2_0.findUTF8Index(byteArray0);
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = new RE2("b3");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-45);
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, (byte) (-45));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllSubmatch("", (-2480));
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = new RE2("f}4CE");
      rE2_0.replaceAll("UTF-8", "f}4CE");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("UTF-8", 256);
      assertNull(list0);
      
      String string0 = RE2.quoteMeta("f}4CE");
      assertEquals("f\\}4CE", string0);
      
      RE2 rE2_1 = RE2.compile("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)20;
      byteArray0[6] = (byte)7;
      rE2_0.findAllUTF8Submatch(byteArray0, 0);
      Machine machine0 = rE2_1.get();
      machine0.init(256);
      machine0.init(2814);
      rE2_0.put(machine0);
      int[] intArray0 = rE2_0.findIndex("");
      assertArrayEquals(new int[] {0, 0}, intArray0);
      
      List<int[]> list1 = rE2_0.findAllSubmatchIndex("f}4CE", 6);
      assertNotNull(list1);
      assertEquals(6, list1.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("UTF-8");
      String string0 = rE2_0.replaceFirst("UTF-8", "UTF-8");
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2.quoteMeta("#");
      int[] intArray0 = new int[0];
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", 898);
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, (byte)122);
      String string0 = RE2.quoteMeta("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      int[] intArray0 = rE2_0.findIndex("");
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = new RE2("UTF-8");
      rE2_0.toString();
      String[] stringArray0 = rE2_0.findSubmatch("UTF-8");
      assertNotNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("QUEST");
      rE2_0.findSubmatch("cA5V^BLjEE`{J");
      rE2_0.findIndex(".+*?()|[]{}^$");
      String string0 = null;
      // Undeclared exception!
      try { 
        rE2_0.findSubmatch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "xd*YdU";
      RE2 rE2_0 = RE2.compilePOSIX("xd*YdU");
      String string1 = "yl)ot/tF";
      rE2_0.prefix = "yl)ot/tF";
      String string2 = ":aYeGMkP&'";
      rE2_0.findAllSubmatch(":aYeGMkP&'", 811);
      int[] intArray0 = new int[1];
      intArray0[0] = 274;
      rE2_0.match("xd*YdU", 811, 92, 274, intArray0, 274);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)10;
      rE2_0.findUTF8SubmatchIndex(byteArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 274;
      intArray1[1] = 6;
      intArray1[2] = 92;
      intArray1[3] = 92;
      intArray1[4] = 811;
      intArray1[5] = (int) (byte)10;
      // Undeclared exception!
      try { 
        rE2_0.match(":aYeGMkP&'", (byte)10, 811, 212, intArray1, 811);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("rune1 ");
      rE2_0.reset();
      rE2_0.findAllIndex("~^$ox)wuMNk%'Of", 0);
      rE2_0.findAllIndex("rune1 ", 918);
      rE2_0.toString();
      rE2_0.findSubmatch("rune1 ");
      // Undeclared exception!
      try { 
        rE2_0.findAllUTF8Submatch((byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllIndex("", 29);
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceFirst("", "");
      // Undeclared exception!
      try { 
        rE2_0.findAllUTF8Submatch((byte[]) null, (byte)122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("UTF-8");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)0;
      rE2_0.findSubmatchIndex("");
      byteArray0[2] = (byte)7;
      rE2_0.matchUTF8(byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)94;
      rE2_0.findAllIndex("6_+j31Pc<&n66J78y;R", (byte) (-62));
      byteArray1[2] = (byte) (-64);
      rE2_0.findAllUTF8Submatch(byteArray1, (byte) (-62));
      rE2_0.findAllUTF8SubmatchIndex(byteArray1, 0);
      rE2_0.findAllSubmatch("UTF-8", (-1173));
      RE2 rE2_1 = RE2.compileImpl("6_+j31Pc<&n66J78y;R", 212, false);
      assertFalse(rE2_1.equals((Object)rE2_0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      RE2 rE2_0 = RE2.compilePOSIX("");
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.prefix = "";
      rE2_0.findAllIndex("Q\u0007,S$otdoF#9&,H,", 0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-33);
      rE2_0.findAllUTF8Index(byteArray0, (byte)64);
      rE2_0.findAll("", (-844));
      rE2_0.findAllSubmatch("", (byte)64);
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (byte)64;
      intArray0[1] = (-844);
      intArray0[2] = (int) (byte)64;
      intArray0[3] = (int) (byte)64;
      rE2_0.findUTF8Index(byteArray0);
      intArray0[4] = (int) (byte)0;
      intArray0[5] = 0;
      rE2_0.findAllUTF8(byteArray1, 0);
      intArray0[6] = (int) (byte)0;
      intArray0[7] = 0;
      rE2_0.match("", (byte)64, (-844), (byte)0, intArray0, 0);
      rE2_0.reset();
      rE2_0.find("piN%]ZmB");
      rE2_0.numberOfCapturingGroups();
      rE2_0.matchUTF8(byteArray0);
      rE2_0.reset();
      assertEquals("", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      List<int[]> list0 = rE2_0.findAllUTF8Index(byteArray0, 32);
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, 64449);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = RE2.match("Vp{D", "Vp{D");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("ALT");
      rE2_0.match("ALT");
      rE2_0.findSubmatch("!4oFuY#zHq]` %@");
      byte[] byteArray0 = new byte[4];
      rE2_0.replaceFirst("fail", "ALT");
      rE2_0.findAllIndex("uhb*xL7&\"x7h", 1664);
      rE2_0.findUTF8(byteArray0);
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte) (-68);
      rE2_0.findIndex("uhb*xL7&\"x7h");
      rE2_0.findAllUTF8Index(byteArray0, 0);
      rE2_0.reset();
      rE2_0.replaceFirst("ALT", "!4oFuY#zHq]` %@");
      RE2 rE2_1 = RE2.compilePOSIX("ALT");
      String string0 = "";
      rE2_1.replaceFirst("", "ALT");
      rE2_0.findAllIndex("", (byte)56);
      rE2_1.numberOfCapturingGroups();
      // Undeclared exception!
      try { 
        rE2_0.findSubmatch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = new RE2("35yI'C1DSvCJ2sgDD");
      rE2_0.reset();
      Machine machine0 = rE2_0.get();
      machine0.init(0);
      rE2_0.put(machine0);
      rE2_0.put(machine0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-44);
      rE2_0.matchUTF8(byteArray0);
      RE2 rE2_1 = RE2.compileImpl("35yI'C1DSvCJ2sgDD", (byte)1, false);
      int[] intArray0 = rE2_1.findIndex("35yI'C1DSvCJ2sgDD");
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)1);
      charBuffer0.chars();
      charBuffer0.mark();
      rE2_0.get();
      RE2.match("can't happen", charBuffer0);
      rE2_0.findSubmatchIndex("can't happen");
      RE2.quoteMeta("35yI'C1DSvCJ2sgDD");
      rE2_0.match("35yI'C1DSvCJ2sgDD", 1626, (-119), (byte)1, intArray0, (-119));
      rE2_0.findAllUTF8Index(byteArray0, 1626);
      RE2.quoteMeta("35yI'C1DSvCJ2sgDD");
      rE2_1.match("can't happen");
      rE2_1.replaceAll("35yI'C1DSvCJ2sgDD", "35yI'C1DSvCJ2sgDD");
      int[] intArray1 = rE2_1.findUTF8SubmatchIndex(byteArray0);
      assertNull(intArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[5];
      rE2_0.replaceFirst("", ",kTq~");
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-121);
      rE2_0.find("b^#ollptC;");
      rE2_0.get();
      byteArray0[2] = (byte)21;
      rE2_0.findAllIndex("", (byte)21);
      byteArray0[3] = (byte)46;
      rE2_0.findSubmatch("(?P<");
      rE2_0.find("KK0}TWEv");
      byteArray0[4] = (byte) (-40);
      rE2_0.findUTF8(byteArray0);
      rE2_0.findAllIndex("", 2842);
      rE2_0.findUTF8SubmatchIndex(byteArray0);
      rE2_0.findIndex("KK0}TWEv");
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 256);
      rE2_0.reset();
      rE2_0.toString();
      rE2_0.findAllUTF8Index(byteArray0, (byte)46);
      // Undeclared exception!
      try { 
        rE2_0.findSubmatch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String string0 = rE2_0.expr;
      byte[] byteArray0 = new byte[13];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.prefix = "";
      List<int[]> list0 = rE2_0.findAllIndex("Q\u0007,S$otdoF#9&,H,", 10);
      assertEquals(10, list0.size());
      
      List<String> list1 = rE2_0.findAll("", (-844));
      assertNotNull(list1);
      
      int[] intArray0 = new int[8];
      intArray0[1] = (-844);
      intArray0[2] = (int) (byte)64;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)64;
      List<byte[][]> list2 = rE2_0.findAllUTF8Submatch(byteArray0, 9186);
      assertNotNull(list2);
      assertEquals(7, list2.size());
      
      rE2_0.longest = false;
      String string0 = rE2_0.replaceAll("cU#'Yr10/C$/?n", "Q\u0007,S$otdoF#9&,H,");
      assertEquals("Q\u0007,S$otdoF#9&,H,cQ\u0007,S$otdoF#9&,H,UQ\u0007,S$otdoF#9&,H,#Q\u0007,S$otdoF#9&,H,'Q\u0007,S$otdoF#9&,H,YQ\u0007,S$otdoF#9&,H,rQ\u0007,S$otdoF#9&,H,1Q\u0007,S$otdoF#9&,H,0Q\u0007,S$otdoF#9&,H,/Q\u0007,S$otdoF#9&,H,CQ\u0007,S$otdoF#9&,H,$Q\u0007,S$otdoF#9&,H,/Q\u0007,S$otdoF#9&,H,?Q\u0007,S$otdoF#9&,H,nQ\u0007,S$otdoF#9&,H,", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[5];
      rE2_0.replaceFirst("", ",kTq~");
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-121);
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      rE2_0.findAllUTF8(byteArray0, 919);
      rE2_0.match(",kTq~", 66464, (byte)2, (-14), intArray0, (byte)23);
      rE2_0.reset();
      String string0 = rE2_0.find("b^#ollptC;");
      RE2 rE2_1 = new RE2("z45K<Y:BPpaC#");
      rE2_1.numberOfCapturingGroups();
      rE2_0.matchUTF8(byteArray0);
      rE2_0.reset();
      rE2_1.replaceFirst(".+*?()|[]{}^$", "");
      String string1 = rE2_0.replaceAll("com.google.re2j.RE2", "");
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.prefix = "";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-33);
      rE2_0.findAllUTF8Index(byteArray0, (byte)64);
      rE2_0.findAll("", (-844));
      rE2_0.findAllSubmatch("", (byte)64);
      int[] intArray0 = new int[8];
      intArray0[1] = (-844);
      intArray0[2] = (int) (byte)64;
      intArray0[3] = (int) (byte)64;
      rE2_0.findUTF8Index(byteArray0);
      intArray0[4] = (int) (byte)0;
      intArray0[6] = (int) (byte)0;
      rE2_0.prefixUTF8 = byteArray0;
      byte[][] byteArray2 = rE2_0.findUTF8Submatch(byteArray1);
      assertNotNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceFirst("", "");
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        rE2_0.match("", (-5490), (-5490), 0, intArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("A*");
      byte[] byteArray0 = new byte[2];
      Machine machine0 = rE2_0.get();
      rE2_0.put(machine0);
      RE2.compileImpl("A*", (-1949), false);
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)4;
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      RE2 rE2_1 = RE2.compile("A*");
      rE2_1.findAllSubmatch("A*", (byte)82);
      RE2 rE2_2 = RE2.compile("");
      String string0 = "";
      RE2.match("", "");
      rE2_2.findUTF8Index(byteArray1);
      rE2_0.findAllUTF8Submatch(byteArray1, (byte)82);
      rE2_0.replaceAll("", "A*");
      int[] intArray0 = new int[3];
      intArray0[0] = (-1949);
      rE2_2.findSubmatch("A*");
      intArray0[1] = (int) (byte)4;
      intArray0[2] = (int) (byte)4;
      // Undeclared exception!
      try { 
        rE2_2.match("", 12, 74, (-2877), intArray0, (-1616));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Machine", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = new RE2("P&Y1y'd|");
      List<String> list0 = rE2_0.findAll("Thai", 2147483645);
      assertEquals(5, list0.size());
      assertNotNull(list0);
      
      String string0 = rE2_0.replaceAll("P&Y1y'd|", "P&Y1y'd|");
      assertEquals("P&Y1y'd||P&Y1y'd|", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-28);
      rE2_0.findUTF8Index(byteArray0);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)114;
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 15);
      int[] intArray0 = new int[0];
      rE2_0.match((CharSequence) null, 0, 0, 0, (int[]) null, 0);
      Machine machine0 = rE2_0.get();
      rE2_0.put(machine0);
      assertEquals("", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("8\"kY.D4(#JqiSoB)y|");
      byte[] byteArray0 = new byte[4];
      String[] stringArray0 = rE2_0.findSubmatch("8\"kY.D4(#JqiSoB)y|");
      assertNotNull(stringArray0);
      
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, (-319));
      assertNotNull(list0);
      
      byteArray0[0] = (byte)77;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)77;
      List<byte[][]> list1 = rE2_0.findAllUTF8Submatch(byteArray0, 2340);
      assertEquals(5, list1.size());
      assertNotNull(list1);
      
      rE2_0.match("8\"kY.D4(#JqiSoB)y|");
      List<byte[]> list2 = rE2_0.findAllUTF8(byteArray0, 3493);
      assertEquals(5, list2.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("8\"kY.D4(#JqiSoB)y|");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte) (-44);
      rE2_0.findUTF8(byteArray0);
      byte[] byteArray1 = new byte[4];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray1, (-319));
      assertEquals(5, list0.size());
      assertNotNull(list0);
      
      byteArray1[0] = (byte)77;
      List<int[]> list1 = rE2_0.findAllUTF8Index(byteArray0, 18);
      assertNotNull(list1);
      assertEquals(2, list1.size());
      
      byteArray1[2] = (byte)55;
      byteArray1[3] = (byte)77;
      List<byte[][]> list2 = rE2_0.findAllUTF8Submatch(byteArray1, 2340);
      assertEquals(5, list2.size());
      
      rE2_0.match("8\"kY.D4(#JqiSoB)y|");
      rE2_0.reset();
      List<String[]> list3 = rE2_0.findAllSubmatch("1}.0dfv|", 2147483645);
      assertNotNull(list3);
      assertEquals(9, list3.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("8\"kY.D4(#JqiSoB)y|");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      byte[] byteArray1 = rE2_0.prefixUTF8;
      byte[] byteArray2 = new byte[4];
      rE2_0.findAllUTF8(byteArray2, (-319));
      byteArray2[0] = (byte)77;
      rE2_0.findAllUTF8Index(byteArray0, 18);
      byteArray2[2] = (byte)55;
      byteArray2[3] = (byte)77;
      rE2_0.findAllUTF8Submatch(byteArray2, 2340);
      rE2_0.match("8\"kY.D4(#JqiSoB)y|");
      rE2_0.reset();
      rE2_0.findAllSubmatch("1}.0dfv|", 2147483645);
      byte[][] byteArray3 = rE2_0.findUTF8Submatch(byteArray2);
      assertNotNull(byteArray3);
  }
}
