/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:47:27 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Class2HTML.referenceType("");
      assertEquals("<A HREF=\".html\" TARGET=_top></A>", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_methods.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n</FRAMESET></FRAMESET></HTML>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class2HTML.referenceType("short");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = Class2HTML.referenceType("x>&[ukij5Wd");
      assertEquals("<A HREF=\"x>&.html\" TARGET=_top>x>&[ukij5Wd</A>", string0);
      
      String string1 = Class2HTML.toHTML("<A HREF=\"x>&.html\" TARGET=_top>x>&[ukij5Wd</A>");
      assertEquals("&lt;A HREF=\"x&gt;&.html\" TARGET=_top&gt;x&gt;&[ukij5Wd&lt;/A&gt;", string1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setPackageAssertionStatus("-p`1'dSdA@J`Q", true);
      classLoader0.setClassAssertionStatus("-p`1'dSdA@J`Q", true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "[^*zo*1 ]+Ox%F5R/97";
      stringArray0[1] = "-p`1'dSdA@J`Q";
      stringArray0[2] = "-p`1'dSdA@J`Q";
      stringArray0[3] = "-p`1'dSdA@J`Q";
      ClassPath classPath0 = new ClassPath("-p`1'dSdA@J`Q");
      ClassPath classPath1 = new ClassPath(classPath0, "java.lang.String$1");
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      classPath1.equals(mockJapaneseDate0);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath1);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      syntheticRepository0.loadClass(class0);
      JavaClass javaClass0 = syntheticRepository0.loadClass("java.lang.String$1");
      classPath1.toString();
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "[^*zo*1 ]+Ox%F5R/97");
      Class2HTML.referenceType("-p`1'dSdA@J`Q");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass((byte)3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected class `CONSTANT_Class' at index 3 and got CONSTANT_Utf8[1](\"SourceFile\")
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = Class2HTML.referenceType(";vyozL");
      assertEquals("<A HREF=\";vyozL.html\" TARGET=_top>;vyozL</A>", string0);
      
      String string1 = Class2HTML.toHTML("<A HREF=\";vyozL.html\" TARGET=_top>;vyozL</A>");
      assertEquals("&lt;A HREF=\";vyozL.html\" TARGET=_top&gt;;vyozL&lt;/A&gt;", string1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class2HTML.toHTML(" entries\n");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      try { 
        syntheticRepository0.loadClass(" entries\n");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class  entries
         // : org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find:  entries
         // .class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{O*";
      stringArray0[1] = "Vr&#e'CrLu$%`IZ";
      stringArray0[2] = "sun.misc.JavaLangAccess";
      stringArray0[3] = "-d//";
      Class2HTML.toHTML("-d//");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-d";
      stringArray0[1] = "sun.reflect.generics.factory.CoreReflectionFactory";
      stringArray0[3] = "sun.reflect.generics.factory.CoreReflectionFactory";
      stringArray0[4] = "-d/";
      stringArray0[5] = "-d";
      stringArray0[6] = "-d/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.getClassPath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classLoaderRepository0.getClassPath();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "a]vBX)>rc0WF";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/a]vBX)>rc0WF");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "a]vBX)>rc0WF";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("7pNn:wH[");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader classLoader1 = classLoader0.getParent();
      java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classLoaderRepository0.getClassPath();
      String string0 = "d/";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "PeX;HsvFam0'\"m";
      stringArray0[1] = "-d";
      stringArray0[2] = "d/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "9\"m[G\"b\"StMs|G2P:";
      stringArray0[1] = "java.nio.ByteBuffer";
      stringArray0[2] = "-zip";
      stringArray0[3] = "p";
      stringArray0[4] = "ei[1\u0006{fzt`gb";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // p (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }
}
