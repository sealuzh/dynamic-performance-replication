/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 18:39:05 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(394, "m7pmr%XCeX#C");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-68);
      CharBuffer charBuffer0 = CharBuffer.allocate(525);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2404), (byte) (-99), fieldTypeShort0, (byte)4, 600L, byteArray0, byteOrder0, (byte) (-128));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-99), tiffField0.getDirectoryType());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals((-2404), tiffField0.getTag());
      assertEquals(188, int0);
      assertEquals(600, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(394, "m7pmr%XCeX#C");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(525);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(394, 394, fieldTypeShort0, 394, (-97L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals((-97), tiffField0.getOffset());
      assertEquals(394, tiffField0.getDirectoryType());
      assertEquals(394, int0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "&{R=fDYzsKk%");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(589, 0, fieldTypeLong0, 0, 1582L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(589, tiffField0.getTag());
      assertEquals(1582, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)15;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-40);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3569, 113, fieldTypeLong0, 3569, 5279L, byteArray0, byteOrder0, 113);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3569, tiffField0.getTag());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(5279, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2196, 50, fieldTypeRational0, 4L, 1, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2196, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1695, (-476), fieldTypeRational0, 1695, (-305L), byteArray0, byteOrder0, (-476));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1695, tiffField0.getTag());
      assertEquals((-476), int0);
      assertEquals((-305), tiffField0.getOffset());
      assertEquals((-476), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(394, "m7pmr%XCeX#C");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(525);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2404), (byte) (-99), fieldTypeShort0, (byte)4, 600L, byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getCount();
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals((-2404), tiffField0.getTag());
      assertEquals((-99), tiffField0.getDirectoryType());
      assertEquals(600, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2176, 2176, fieldTypeShort0, 152L, 152L, byteArray0, byteOrder0, (byte)30);
      tiffField0.getByteOrder();
      assertEquals(2176, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(152, tiffField0.getOffset());
      assertEquals(2176, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5355, 3312, fieldTypeLong0, 5355, 3312, byteArray0, byteOrder0, 2146614573);
      tiffField0.getByteArrayValue();
      assertEquals(5355, tiffField0.getTag());
      assertEquals(3312, tiffField0.getOffset());
      assertEquals(3312, tiffField0.getDirectoryType());
      assertEquals(2146614573, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1695, (-476), fieldTypeRational0, 1695, (-305L), byteArray0, byteOrder0, (-476));
      tiffField0.getByteArrayValue();
      assertEquals((-476), tiffField0.getDirectoryType());
      assertEquals(1695, tiffField0.getTag());
      assertEquals((-305), tiffField0.getOffset());
      assertEquals((-476), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(573, 4096, fieldTypeAscii0, 1946L, 2433L, byteArray0, byteOrder0, (byte)6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "'java.lang.String@0000000004'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "v)ydtY2eAc|\";*/m");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, (-1587), fieldTypeFloat0, (-1415L), 1L, byteArray0, (ByteOrder) null, (-368));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2164), (-2164), fieldTypeDouble0, (-2164), (-2164), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeDouble0, 50722, 0L, byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50722, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1449, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3409, 1449, fieldTypeAscii0, 1449, (-2245L), byteArray0, byteOrder0, 1449);
      tiffField0.getFieldType();
      assertEquals(1449, tiffField0.getSortHint());
      assertEquals(3409, tiffField0.getTag());
      assertEquals((-2245), tiffField0.getOffset());
      assertEquals(1449, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, 2, 2, byteArray0, byteOrder0, (-1840700268));
      tiffField0.getValue();
      assertEquals((-1840700268), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(394, "m7pmr%XCeX#C");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(525);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2404), (byte) (-99), fieldTypeShort0, (byte)4, 600L, byteArray0, byteOrder0, (byte) (-128));
      int int0 = tiffField0.getTag();
      assertEquals((-2404), int0);
      assertEquals(600, tiffField0.getOffset());
      assertEquals((-99), tiffField0.getDirectoryType());
      assertEquals((-128), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(198, "%K#.6?cPZ|Sf]:k]~K^");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2045222521, 2190, fieldTypeLong0, 32995, 2620L, byteArray0, byteOrder0, 88);
      tiffField0.getBytesLength();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(2190, tiffField0.getDirectoryType());
      assertEquals(2620, tiffField0.getOffset());
      assertEquals(2045222521, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, 2, 2, byteArray0, byteOrder0, (-1840700268));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3909), (-185), fieldTypeLong0, 3949L, (-3909), byteArray0, byteOrder0, 2144459023);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3569, 113, fieldTypeLong0, 3569, 5279L, byteArray0, byteOrder0, 113);
      tiffField0.getIntValueOrArraySum();
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(3569, tiffField0.getTag());
      assertEquals(5279, tiffField0.getOffset());
      assertEquals(113, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1717986917), "0;X:n?Rl");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeFloat0, (-1717986917), 4863L, byteArray0, byteOrder0, 3058);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@780f6e1d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2220), 75, fieldTypeRational0, 75, (-15940L), byteArray0, (ByteOrder) null, (byte)126);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals((-2220), tiffField0.getTag());
      assertEquals((-15940), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(41988, "nF");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-220), 3, fieldTypeAscii0, 65535, (-1185), byteArray0, byteOrder0, 517);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@19e63b5d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2144411425, 50, fieldTypeDouble0, 0L, (-818L), byteArray0, byteOrder0, 2144411425);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2144411425, tiffField0.getTag());
      assertEquals((-818), tiffField0.getOffset());
      assertEquals(2144411425, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0, 19, 19, byteArray0, byteOrder0, (byte)64);
      tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(5048, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5048, 5048, fieldTypeShort0, 5048, (-2036L), byteArray0, byteOrder0, (byte)14);
      tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(5048, tiffField0.getTag());
      assertEquals((-2036), tiffField0.getOffset());
      assertEquals(5048, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1717986917), "0;X:n?Rl");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeFloat0, (-1717986917), 4863L, byteArray0, byteOrder0, 3058);
      assertEquals(1717986924, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(3058, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(4863, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeByte0, 1, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 255L, (-3866L), byteArray0, byteOrder0, (-2673));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2673), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-3866), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2608), (-2608), fieldTypeDouble0, 4L, (-2608), byteArray0, byteOrder0, (-861));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@c85eb5b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2176, 2176, fieldTypeShort0, 152L, 152L, byteArray0, byteOrder0, (byte)30);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(2176, tiffField0.getDirectoryType());
      assertEquals(152, tiffField0.getOffset());
      assertEquals(304, tiffField0.getBytesLength());
      assertEquals(2176, tiffField0.getTag());
      assertEquals(30, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-27);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 255L, (-3866L), byteArray0, byteOrder0, (-2673));
      tiffField0.getIntArrayValue();
      assertEquals((-2673), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-3866), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-866), "d\"Io^}LU1Gok~");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2794), (-2794), fieldTypeFloat0, 1L, (-866), byteArray0, byteOrder0, (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2794), tiffField0.getTag());
      assertEquals((-866), tiffField0.getOffset());
      assertEquals((-2794), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(198, "%K#.6?cPZ|Sf]:k]~K^");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2045222521, 2190, fieldTypeLong0, 32995, 2620L, byteArray0, byteOrder0, 88);
      tiffField0.getIntArrayValue();
      assertEquals(32995L, tiffField0.getCount());
      assertEquals(2620, tiffField0.getOffset());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(2045222521, tiffField0.getTag());
      assertEquals(2190, tiffField0.getDirectoryType());
      assertEquals(131980, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1449, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3409, 1449, fieldTypeAscii0, 1449, (-2245L), byteArray0, byteOrder0, 1449);
      String string0 = tiffField0.getStringValue();
      assertEquals(1449, tiffField0.getSortHint());
      assertEquals(1449, tiffField0.getDirectoryType());
      assertEquals(1449, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(3409, tiffField0.getTag());
      assertEquals((-2245), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeDouble0, 50722, 0L, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(50722 (0xc622: ColorMatrix2): ): [D@96c8e72
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1449, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3409, 1449, fieldTypeAscii0, 1449, (-2245L), byteArray0, byteOrder0, 1449);
      String string0 = tiffField0.getTagName();
      assertEquals(1449, tiffField0.getSortHint());
      assertEquals((-2245), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xd51)", string0);
      assertEquals(1449, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(263, 263, fieldTypeLong0, 263, 263, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(263, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(263, tiffField0.getTag());
      assertEquals("Threshholding", string0);
      assertEquals(263, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1982292598, "cB0+;%|v+/N\t`%ND");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(655, 655, fieldTypeFloat0, 655, (-1341L), byteArray0, byteOrder0, (-2145059850));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3542), 2073432487, fieldTypeByte0, 2073432487, (-3542), byteArray0, byteOrder0, (byte)87);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(2073432487L, tiffField0.getCount());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals((-3542), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3542), tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, 2, 2, byteArray0, byteOrder0, (-1840700268));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(16, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1840700268), tiffField0.getSortHint());
      assertEquals(2L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1982292598, "cB0+;%|v+/N\t`%ND");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(655, 655, fieldTypeFloat0, 655, (-1341L), byteArray0, byteOrder0, (-2145059850));
      String string0 = tiffField0.toString();
      assertEquals(2620, tiffField0.getBytesLength());
      assertEquals("655 (0x28f: Unknown Tag): 0.0, 0.0 (655 cB0+;%|v+/N\t`%ND)", string0);
      assertEquals(655, tiffField0.getDirectoryType());
      assertEquals((-1341), tiffField0.getOffset());
      assertEquals((-2145059850), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5355, 3312, fieldTypeLong0, 5355, 3312, byteArray0, byteOrder0, 2146614573);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2146614573, tiffField0.getSortHint());
      assertEquals(21420, tiffField0.getBytesLength());
      assertEquals(3312, tiffField0.getDirectoryType());
      assertEquals(5355, tiffField0.getTag());
      assertEquals(5355L, tiffField0.getCount());
      assertEquals(3312, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(394, "m7pmr%XCeX#C");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(525);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2404), (byte) (-99), fieldTypeShort0, (byte)4, 600L, byteArray0, byteOrder0, (byte) (-128));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals((-99), tiffField0.getDirectoryType());
      assertEquals(600, tiffField0.getOffset());
      assertEquals((-2404), tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2176, 2176, fieldTypeShort0, 152L, 152L, byteArray0, byteOrder0, (byte)30);
      tiffField0.dump();
      assertEquals(2176, tiffField0.getDirectoryType());
      assertEquals(2176, tiffField0.getTag());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(304, tiffField0.getBytesLength());
      assertEquals(152L, tiffField0.getCount());
      assertEquals(152, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(913, 913, fieldTypeAscii0, 913, 913, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(913, tiffField0.getTag());
      assertEquals(913, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(913, tiffField0.getDirectoryType());
      assertEquals(913, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1449, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3409, 1449, fieldTypeAscii0, 1449, (-2245L), byteArray0, byteOrder0, 1449);
      tiffField0.dump();
      assertEquals(1449, tiffField0.getSortHint());
      assertEquals(1449, tiffField0.getDirectoryType());
      assertEquals(1449L, tiffField0.getCount());
      assertEquals(3409, tiffField0.getTag());
      assertEquals(1449, tiffField0.getBytesLength());
      assertEquals((-2245), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-866), "d\"Io^}LU1Gok~");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2794), (-2794), fieldTypeFloat0, 1L, (-866), byteArray0, byteOrder0, (-1));
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2794), tiffField0.getTag());
      assertEquals((-2794), tiffField0.getDirectoryType());
      assertEquals((-866), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1933), (-1933), fieldTypeShort0, (-1933), (-1933), byteArray0, byteOrder0, (byte)86);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1933), tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-1933), tiffField0.getTag());
      assertEquals((-1933), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2404), (-3134), (FieldType) null, (-1636L), (-2404), byteArray0, (ByteOrder) null, (-2180));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50727, (-2146175003));
      tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1636L), tiffField0.getCount());
      assertEquals((-3134), tiffField0.getDirectoryType());
      assertEquals((-2404), tiffField0.getTag());
      assertEquals((-2404), tiffField0.getOffset());
      assertEquals((-2180), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 265, fieldTypeLong0, 0L, 65535, byteArray0, byteOrder0, 265);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(265, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-866), "d\"Io^}LU1Gok~");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2794), (-2794), fieldTypeFloat0, 1L, (-866), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-866), tiffField0.getOffset());
      assertEquals((-2794), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2794), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2196, 50, fieldTypeRational0, 4L, 1, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2196, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeDouble0, 50722, 0L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, int0);
      assertEquals(405776, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 255L, (-3866L), byteArray0, byteOrder0, (-2673));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2673), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-3866), tiffField0.getOffset());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2176, 2176, fieldTypeShort0, 152L, 152L, byteArray0, byteOrder0, (byte)30);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2176 (0x880: Unknown Tag): ", string0);
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(152, tiffField0.getOffset());
      assertEquals(2176, tiffField0.getDirectoryType());
      assertEquals(152L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeDouble0, 50722, 0L, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1559), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50722, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: ColorMatrix2, fieldType: Double", string0);
      assertEquals(405776, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }
}
