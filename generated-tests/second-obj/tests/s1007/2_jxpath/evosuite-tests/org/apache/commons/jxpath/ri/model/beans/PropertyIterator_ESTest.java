/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:41:11 GMT 2018
 */

package org.apache.commons.jxpath.ri.model.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyIterator;
import org.apache.commons.jxpath.ri.model.beans.PropertyPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyIterator_ESTest extends PropertyIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((Locale) null, "<<unknown namespace>>");
      PropertyIterator propertyIterator0 = null;
      try {
        propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, nullPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      
      propertyIterator0.reset();
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, (QName) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      propertyIterator0.getNodePointer();
      boolean boolean0 = propertyIterator0.setPosition(Integer.MIN_VALUE);
      assertEquals(Integer.MIN_VALUE, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      propertyIterator0.getNodePointer();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      boolean boolean0 = propertyIterator0.setPosition(62);
      assertEquals(62, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      locale0.toLanguageTag();
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      propertyIterator0.getPosition();
      boolean boolean0 = propertyIterator0.setPosition(1306);
      assertEquals(1306, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      locale0.toLanguageTag();
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", false, propertyPointer0);
      propertyIterator0.getPosition();
      boolean boolean0 = propertyIterator0.setPosition(1306);
      assertEquals(1306, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      
      propertyIterator0.getPropertyPointer();
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.ROOT;
      NullPointer nullPointer0 = new NullPointer(locale0, "(");
      PropertyPointer propertyPointer0 = nullPointer0.getPropertyPointer();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "(", true, propertyPointer0);
      propertyIterator0.getNodePointer();
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      
      int int0 = propertyIterator0.getPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, (QName) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      variablePointer0.printPointerChain();
      propertyIterator0.setPosition(Integer.MIN_VALUE);
      propertyIterator0.getNodePointer();
      assertEquals(Integer.MIN_VALUE, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)25;
      byteArray0[4] = (byte)25;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer(locale0, "o(");
      QName qName0 = new QName("propertyNames");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, "o(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "parent", false, nullPropertyPointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "propertyNames");
      propertyIterator0.getNodePointer();
      NullPropertyPointer nullPropertyPointer1 = new NullPropertyPointer(beanPointer0);
      propertyIterator0.setPosition((byte)25);
      propertyIterator0.prepareForIndividualProperty("k5z{hJ^8");
      assertEquals(25, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer((NodePointer) null, jXPathBasicBeanInfo0);
      QName qName0 = beanPropertyPointer0.getName();
      Locale locale0 = new Locale("<<unknown namespace>>", "", "");
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.getNodePointer();
      assertEquals(1, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.US;
      NullPointer nullPointer0 = new NullPointer(locale0, "<t*b~hwJ");
      Class<Object> class0 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPointer0, jXPathBasicBeanInfo0);
      QName qName0 = beanPropertyPointer0.getName();
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      boolean boolean0 = beanAttributeIterator0.setPosition(Integer.MIN_VALUE);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cannot set value for xpath: ");
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
      Locale locale0 = Locale.US;
      BeanPointer beanPointer0 = new BeanPointer((QName) null, locale0, jXPathBasicBeanInfo0, locale0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(beanPointer0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, false, beanPropertyPointer0);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      beanPropertyPointer0.getName();
      beanPointer0.setIndex(Integer.MIN_VALUE);
      propertyIterator0.getPosition();
      // Undeclared exception!
      try { 
        nodePointer0.compareChildNodePointers(beanPointer0, beanPointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("<<unknown namespace>>");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      QName qName1 = variablePointer0.getName();
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
      Locale locale0 = new Locale("<<unknown namespace>>");
      BeanPointer beanPointer0 = new BeanPointer(qName1, qName1, jXPathBasicBeanInfo0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      boolean boolean0 = beanAttributeIterator0.setPosition(1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(locale0, "container");
      QName qName0 = new QName("PropertyIerator startWith parameter is not a child of the supplied parent", (String) null);
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      Class<String> class1 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, (String) null);
      nodeNameTest0.getNamespaceURI();
      Locale locale1 = Locale.CANADA_FRENCH;
      Object object0 = new Object();
      BeanPointer beanPointer0 = new BeanPointer(qName0, object0, jXPathBasicBeanInfo0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator0.prepareForIndividualProperty("container");
      assertEquals(0, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(locale0, "container");
      QName qName0 = new QName("container", "<<unknown namespace>>");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, "container", jXPathBasicBeanInfo0);
      NodePointer.newChildNodePointer(nullPointer0, qName0, "=\"");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "container", true, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("container");
      PropertyIterator propertyIterator1 = null;
      try {
        propertyIterator1 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, nullPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(locale0, "o^(");
      QName qName0 = new QName("o^(", "<<unknown namespace>>");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      nullPointer0.getImmediateValuePointer();
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, "o^(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "parent", true, nullPropertyPointer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.getPropertyPointer();
      propertyIterator0.setPosition(6);
      nullPropertyPointer0.remove();
      propertyIterator0.reset();
      nullPointer0.setIndex(6);
      nullPropertyPointer0.getName();
      JXPathContext jXPathContext0 = JXPathContext.newContext((Object) "parent");
      jXPathContext0.getParentContext();
      // Undeclared exception!
      try { 
        nullPointer0.createChild((JXPathContext) null, qName0, 14);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot create the root object: id(o^()
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.NullPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CHINA;
      QName qName0 = new QName("propertyNames", "parnt");
      BeanPointer beanPointer0 = (BeanPointer)NodePointer.newNodePointer(qName0, "parnt", locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, nullPropertyPointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "propertyNames");
      propertyIterator0.getNodePointer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition((byte)34);
      propertyIterator0.getPosition();
      propertyIterator0.getPropertyPointer();
      propertyIterator0.prepareForIndividualProperty("parnt");
      propertyIterator0.reset();
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("v$luePointer");
      propertyIterator0.prepareForIndividualProperty("`GZA,w7n");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      locale0.stripExtensions();
      NullPointer nullPointer0 = new NullPointer(locale0, (String) null);
      QName qName0 = new QName("x*J", "x*J");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, ">EQo(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, nullPropertyPointer0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      propertyIterator0.prepareForIndividualProperty((String) null);
      NodePointer nodePointer0 = nullPropertyPointer0.getValuePointer();
      propertyIterator0.getPropertyPointer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.getPropertyPointer();
      QName qName1 = nodePointer0.getName();
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      propertyIterator0.prepareForIndividualProperty("propertyNames");
      beanAttributeIterator0.getPosition();
      propertyIterator0.reset();
      propertyIterator0.getNodePointer();
      NullPropertyPointer nullPropertyPointer1 = (NullPropertyPointer)beanAttributeIterator0.getPropertyPointer();
      assertEquals("*", nullPropertyPointer1.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(locale0, "o^(");
      QName qName0 = new QName("o^(", "<<unknown namespace>>");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      nullPointer0.getImmediateValuePointer();
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, "o^(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      nullPropertyPointer0.remove();
      nullPointer0.setIndex(Integer.MIN_VALUE);
      QName qName1 = nullPropertyPointer0.getName();
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName1);
      beanAttributeIterator0.reset();
      beanAttributeIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      NodePointer nodePointer0 = beanAttributeIterator0.getNodePointer();
      NullPointer nullPointer1 = new NullPointer(locale0, "parent");
      Locale locale1 = Locale.US;
      BeanPointer beanPointer1 = new BeanPointer(qName1, nodePointer0, jXPathBasicBeanInfo0, locale1);
      assertEquals(1, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)34;
      byteArray0[4] = (byte)34;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer((Locale) null, (String) null);
      QName qName0 = new QName("propertyNames", "parent");
      NodePointer.newNodePointer(qName0, "parent", locale0);
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, "o(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, nullPropertyPointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "propertyNames");
      propertyIterator0.getNodePointer();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.setPosition((byte)34);
      propertyIterator0.getPosition();
      propertyIterator0.prepareForIndividualProperty("parent");
      propertyIterator0.getPropertyPointer();
      propertyIterator0.prepareForIndividualProperty("parent");
      propertyIterator0.reset();
      propertyIterator0.reset();
      propertyIterator0.getNodePointer();
      propertyIterator0.prepareForIndividualProperty("valuePointer");
      propertyIterator0.prepareForIndividualProperty("Cannot modify property: ");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte)25;
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer(locale0, "o(");
      QName qName0 = new QName("KrTKzH");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer(nullPointer0, qName0, "o(", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "KrTKzH");
      BeanAttributeIterator beanAttributeIterator0 = (BeanAttributeIterator)beanPointer0.attributeIterator(qName0);
      nullPropertyPointer0.getImmediateValuePointer();
      beanAttributeIterator0.prepareForIndividualProperty("actual");
      beanAttributeIterator0.reset();
      beanAttributeIterator0.getPosition();
      BeanPropertyPointer beanPropertyPointer0 = (BeanPropertyPointer)beanAttributeIterator0.getPropertyPointer();
      int int0 = beanPropertyPointer0.propertyIndex;
      assertEquals(0, int0);
      
      NullPointer nullPointer1 = (NullPointer)beanAttributeIterator0.getNodePointer();
      assertEquals(0, beanAttributeIterator0.getPosition());
      assertNull(nullPointer1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(locale0, "container");
      QName qName0 = new QName("container", "<<unknown namespace>>");
      Class<BeanPropertyPointer> class0 = BeanPropertyPointer.class;
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class1);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, "container", jXPathBasicBeanInfo0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "container", true, nullPropertyPointer0);
      propertyIterator0.prepareForIndividualProperty("container");
      propertyIterator0.getNodePointer();
      beanPointer0.setAttribute(true);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      propertyIterator0.prepareForIndividualProperty("container");
      propertyIterator0.reset();
      nullPropertyPointer0.attributeIterator(qName0);
      propertyIterator0.setPosition(1);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      BeanAttributeIterator beanAttributeIterator0 = null;
      try {
        beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator", e);
      }
  }
}
