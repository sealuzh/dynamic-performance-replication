/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 12:40:46 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Map;
import java.util.Properties;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.depend.ProviderList;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbc.jdbcStatement;
import org.hsqldb.jdbcDriver;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.util.PSQLException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.available((String) null, "{ ", "OF", "");
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      try { 
        DBUtil.getMetaData((Connection) null, "r&", "r&", false, false, false, false, "r&", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.queryLong("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, (String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.resetMonitors();
      String string0 = "org.apache.derby.iapi.store.raw.xact.RawTransaction";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.query("org.apache.derby.iapi.store.raw.xact.RawTransaction", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.connect("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.resetMonitors();
      DBUtil.available("{ ", "{ ", "#Z", "{ ");
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("#Z", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "\"`cm";
      DBUtil.escape("\"`cm");
      String string1 = "d<\\fnw7'#/^_";
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      pGConnectionPoolDataSource0.setDatabaseName("d<\fnw7'#/^_");
      pGConnectionPoolDataSource0.setUnknownLength(0);
      try { 
        pGConnectionPoolDataSource0.getConnection("", "");
        fail("Expecting exception: PSQLException");
      
      } catch(PSQLException e) {
         //
         // The connection attempt failed.
         //
         verifyException("org.postgresql.core.v3.ConnectionFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      DBUtil.close((Connection) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      String string0 = "";
      jdbcDriver0.connect("", (Properties) null);
      DBUtil.close((Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.countRows("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "gzmiJ[H._Zci!";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("gzmiJ[H._Zci!");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "gzmiJ[H._Zci!";
      stringArray0[1] = "g";
      String string1 = "-C;pa3yZ(O]{,l";
      stringArray0[2] = "-C;pa3yZ(O]{,l";
      stringArray0[3] = "gzmiJ[H._Zci!";
      stringArray0[4] = "L=,'jb";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "gzmiJ[H._Zci!", false, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, dBPrimaryKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.resetMonitors();
      DBUtil.available("{ ", "{ ", "#Z", "{ ");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      DBUtil.executeUpdate("", (Connection) null);
      String string0 = "q[69N~|[=E[EDp}";
      try { 
        DBUtil.connect("{ ", "", "{ ", "{ ", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting {  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      DBUtil.assertAllDbResourcesClosed(true);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("'7Kl$", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: '7Kl$
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "ei,8(JQ[6:NTR/p=2@";
      DBUtil.existsEnvironment("ei,8(JQ[6:NTR/p=2@");
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "ei,8(JQ[6:NTR/p=2@", false, 1490, 1490, 1734);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000003
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      DBUtil.assertAllDbResourcesClosed(true);
      ConnectionInfo connectionInfo0 = new ConnectionInfo("");
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.close((ResultSet) simpleResultSet0);
      assertEquals(1003, simpleResultSet0.getType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      Class<DBUniqueIndex> class0 = DBUniqueIndex.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("^", "0TsYQ9w,9eqs| v}9", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: ^
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.resetMonitors();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("#Z", "#Z", "C", "");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting #Z failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object[] objectArray0 = DBUtil.parseResultRow(simpleResultSet0);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.resetMonitors();
      DBUtil.getOpenPreparedStatementCount();
      DBUtil.close((Statement) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 46);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("H#mf3T/_35%A;|C?qK");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "H#mf3T/_35%A;|C?qK";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'H#mf3T/_35%A;|C?qK' not found in table 'H#mf3T/_35%A;|C?qK'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
