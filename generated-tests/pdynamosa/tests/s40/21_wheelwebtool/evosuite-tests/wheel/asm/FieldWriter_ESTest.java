/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 05:03:48 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      classWriter0.version = (-2192);
      classWriter0.visitField((-2378), "", "", (String) null, "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(81, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1332));
      classWriter0.index = (-165);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(107, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "", ">[QJM", "ORf|hw%Vr#tK", "ORf|hw%Vr#tK");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1454, "", "i~.&RiY'", "U151OIvB( c.T1/5,7", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1454, "", "i~.&RiY'", "U151OIvB( c.T1/5,7", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1454);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-47), "", "", "Synthetic", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "(1Qx->{FL<xG/c-Z", "$nYl1", "9C!>", "9C!>");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2114));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, "M^)7vX{c4q1Sp", "c$gZ 3hk_mZ*4d-\"", classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(514);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "rP>=YRl8T~ejND8Pm.9", "rP>=YRl8T~ejND8Pm.9", "rP>=YRl8T~ejND8Pm.9", dataInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.DataInputStream@a029cc5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1275));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Mtq)7<vQ'e$4q1Kp", "Mtq)7<vQ'e$4q1Kp", "Mtq)7<vQ'e$4q1Kp", (Object) null);
      Attribute attribute0 = new Attribute("Mtq)7<vQ'e$4q1Kp");
      byte[] byteArray0 = new byte[8];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(85, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      classWriter0.visitField((-2378), "M,m(p>KVUv", "9U*Qx?1D>Q", (String) null, "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(125, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2114));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(114, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1454);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-47), "", "", "", "");
      fieldWriter0.visitAnnotation("^]v", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(165, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1454);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-47), "", "", "Synthetic", "");
      fieldWriter0.visitAnnotation("^]v", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(167, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-2378), "", "", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2114));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp", "M^)7vX{c4q1Sp");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2161);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1454, "", "i~.&RiY'", "U151OIvB( c.T1/5,7", "");
      fieldWriter0.visitEnd();
  }
}
