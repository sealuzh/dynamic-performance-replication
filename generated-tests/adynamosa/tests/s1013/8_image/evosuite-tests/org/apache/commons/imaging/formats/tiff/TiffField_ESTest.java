/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 19:04:23 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)93;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 21658L, 14048L, byteArray0, (ByteOrder) null, 34025);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(93, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34025, tiffField0.getSortHint());
      assertEquals(14048, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(331, "@/)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Integer integer0 = Integer.getInteger("", (-1496));
      byte[] byteArray0 = fieldTypeRational0.writeData(integer0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte) (-59), 327, fieldTypeRational0, 331, (-93), byteArray0, byteOrder0, 331);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(331, tiffField0.getSortHint());
      assertEquals((-93), tiffField0.getOffset());
      assertEquals(327, tiffField0.getDirectoryType());
      assertEquals((-1496), int0);
      assertEquals((-59), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeLong0, (byte)1, (byte)75, byteArray0, byteOrder0, 4295);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4295, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2535), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SHORT.SRATIONAL).FLOAT, (-2146806847), (-392L), byteArray0, byteOrder0, 2104);
      tiffField0.dump();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2535), tiffField0.getDirectoryType());
      assertEquals(2104, tiffField0.getSortHint());
      assertEquals((-392), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 18, fieldTypeDouble0, 783L, (-1711L), byteArray0, byteOrder0, (-2141787403));
      String string0 = tiffField0.getValueDescription();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals((-2141787403), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1711), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(883, 1363, fieldTypeLong0, 0L, 883, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getTag();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(883, tiffField0.getOffset());
      assertEquals(1363, tiffField0.getDirectoryType());
      assertEquals(883, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1595), "YYN5Bsl2ZN");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1595), 186, fieldTypeDouble0, 2697L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(186, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1595), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1448, 649, fieldTypeRational0.ASCII, 4L, (-1658L), byteArray0, byteOrder0, 1986);
      String string0 = tiffField0.getStringValue();
      assertEquals(1448, tiffField0.getTag());
      assertEquals((-1658), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1986, tiffField0.getSortHint());
      assertEquals(649, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(883, 1363, fieldTypeLong0, 0L, 883, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getSortHint();
      assertEquals(126, int0);
      assertEquals(883, tiffField0.getOffset());
      assertEquals(883, tiffField0.getTag());
      assertEquals(1363, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "");
      TiffField tiffField0 = new TiffField(343, 978, fieldTypeAscii0, (byte) (-107), 3778L, byteArray0, byteOrder0, (-1177));
      int int0 = tiffField0.getSortHint();
      assertEquals(978, tiffField0.getDirectoryType());
      assertEquals((-1177), int0);
      assertEquals(3778, tiffField0.getOffset());
      assertEquals(343, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2535, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50711, 50711, fieldTypeFloat0, 1L, 0L, byteArray0, byteOrder0, 1297);
      int int0 = tiffField0.getOffset();
      assertEquals(50711, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50711, tiffField0.getDirectoryType());
      assertEquals(1297, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1308), (-1308), fieldTypeByte0, (-1308), 1608L, byteArray0, byteOrder0, (-2527));
      int int0 = tiffField0.getOffset();
      assertEquals((-1308), tiffField0.getTag());
      assertEquals((-2527), tiffField0.getSortHint());
      assertEquals((-1308), tiffField0.getDirectoryType());
      assertEquals(1608, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-41);
      TiffField tiffField0 = new TiffField(0, 1037, fieldTypeLong0, 1L, (-1213L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1213), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1037, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-84);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4029), 0, fieldTypeDouble0.LONG, 1610L, 1432L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-4029), tiffField0.getTag());
      assertEquals(1432, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "maNk^<XX>c[#t`]");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(621, 2145736305, fieldTypeFloat0, (byte)1, (byte)67, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(2145736305, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
      assertEquals(621, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-65), (-65), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 50706);
      tiffField0.getIntValue();
      assertEquals((-65), tiffField0.getDirectoryType());
      assertEquals(50706, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-65), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(477, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(493, (-2789), fieldTypeLong0, 1277L, (-1387L), byteArray0, (ByteOrder) null, (-2789));
      tiffField0.getFieldTypeName();
      assertEquals(493, tiffField0.getTag());
      assertEquals((-2789), tiffField0.getSortHint());
      assertEquals((-2789), tiffField0.getDirectoryType());
      assertEquals((-1387), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(48323, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 1, fieldTypeShort0, 1, 48323, byteArray0, byteOrder0, 300);
      tiffField0.getFieldTypeName();
      assertEquals(48323, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(48323, tiffField0.getTag());
      assertEquals(300, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      TiffField tiffField0 = new TiffField(2266, 1046, (FieldType) null, 2266, 1046, (byte[]) null, (ByteOrder) null, 1046);
      tiffField0.getFieldType();
      assertEquals(1046, tiffField0.getSortHint());
      assertEquals(2266, tiffField0.getTag());
      assertEquals(1046, tiffField0.getDirectoryType());
      assertEquals(1046, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "");
      TiffField tiffField0 = new TiffField(343, 978, fieldTypeAscii0, (byte) (-107), 3778L, byteArray0, byteOrder0, (-1177));
      tiffField0.getFieldType();
      assertEquals(3778, tiffField0.getOffset());
      assertEquals(978, tiffField0.getDirectoryType());
      assertEquals((-1177), tiffField0.getSortHint());
      assertEquals(343, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1717986888), "_.cUz8^45kCk");
      TiffField tiffField0 = new TiffField((-1717986888), 280, fieldTypeShort0, (byte)74, (byte)74, byteArray0, (ByteOrder) null, (-1717986888));
      tiffField0.getFieldType();
      assertEquals((-1717986888), tiffField0.getTag());
      assertEquals((-1717986888), tiffField0.getSortHint());
      assertEquals(280, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-41);
      TiffField tiffField0 = new TiffField(0, 1037, fieldTypeLong0, 1L, (-1213L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1213), tiffField0.getOffset());
      assertEquals(1037, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-27);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, (byte) (-27), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.getDoubleValue();
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals((-27), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-882), 34, fieldTypeRational0, 1986, (-1658L), byteArray0, byteOrder0, (-882));
      tiffField0.getDoubleArrayValue();
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals((-882), tiffField0.getSortHint());
      assertEquals((-882), tiffField0.getTag());
      assertEquals((-1658), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(395, 395, fieldTypeDouble0, 1401L, 1L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(395, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(395, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(331, "@/)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (-579), fieldTypeRational0, (-886L), (-886L), byteArray0, byteOrder0, (byte)5);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-579), int0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-886), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2, 834, fieldTypeRational0, (byte)0, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(834, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(48323, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, 1, fieldTypeShort0, 1, 48323, byteArray0, byteOrder0, 300);
      tiffField0.getCount();
      assertEquals(48323, tiffField0.getOffset());
      assertEquals(48323, tiffField0.getTag());
      assertEquals(300, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1314, 86, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(1314, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(331, "@/)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (-579), fieldTypeRational0, (-886L), (-886L), byteArray0, byteOrder0, (byte)5);
      tiffField0.getBytesLength();
      assertEquals((-579), tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-886), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(477, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(477, 477, fieldTypeLong0, 477, (-2685L), byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(477, tiffField0.getDirectoryType());
      assertEquals((-2685), tiffField0.getOffset());
      assertEquals(477, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2, 834, fieldTypeRational0, (byte)0, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getByteArrayValue();
      assertEquals(2, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(834, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(883, 1363, fieldTypeLong0, 0L, 883, byteArray0, byteOrder0, (byte)126);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": 883 (0x373: Unknown Tag):  (0 IFD)\n", byteArrayOutputStream0.toString());
      assertEquals(37, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65110, 42112, fieldTypeDouble0.SRATIONAL, 201L, 2082, (byte[]) null, byteOrder0, 693);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-696), 1, fieldTypeShort0.FLOAT, (-710L), (-2970L), byteArray0, byteOrder0, 1063);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, (-1), (-1), byteArray0, byteOrder0, 514);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1422, 1422, fieldTypeByte0, 1232L, 1232L, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 50, fieldTypeShort0.RATIONAL, (-1685L), 0L, (byte[]) null, byteOrder0, 3045);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34018, 34018, fieldTypeShort0, (-566L), 4L, byteArray0, byteOrder0, (-1106));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "GPSStatus");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 604L, 604L, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(20, 3348, fieldTypeShort0.RATIONAL, (-10944L), 1, byteArray0, byteOrder0, (-1512));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0.SRATIONAL, (-1), (-128L), byteArray0, byteOrder0, 1168);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(477, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(493, (-2789), fieldTypeLong0, 1277L, (-1387L), byteArray0, (ByteOrder) null, (-2789));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 2, fieldTypeAscii0, 1, (-372L), (byte[]) null, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1782), 50, fieldTypeRational0, (-133), 255L, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(801, 1198, fieldTypeAscii0, (byte) (-86), (-111L), byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34025, "");
      TiffField tiffField0 = new TiffField((byte)74, 291, fieldTypeShort0, 291, 291, byteArray0, (ByteOrder) null, 2132673415);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte) (-78));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-78), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (-1), fieldTypeLong0, 823L, 375L, byteArray0, byteOrder0, (-1));
      tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(375, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, (byte) (-27), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.toString();
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-408), 120, fieldTypeAscii0, 120, (-2537L), byteArray0, byteOrder0, (-408));
      tiffField0.getByteArrayValue();
      assertEquals((-2537), tiffField0.getOffset());
      assertEquals((-408), tiffField0.getTag());
      assertEquals((-408), tiffField0.getSortHint());
      assertEquals(120, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, (byte) (-27), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.getFieldType();
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeLong0, (byte)1, (byte)75, byteArray0, byteOrder0, 4295);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Wf}vWCW#Wd");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4295, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1430), (-2058), fieldTypeDouble0, 3292L, 1545L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1545, tiffField0.getOffset());
      assertEquals((-2058), tiffField0.getDirectoryType());
      assertEquals((-1430), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeByte0, (-6168L), (byte) (-52), byteArray0, byteOrder0, (byte) (-93));
      int int0 = tiffField0.getOffset();
      assertEquals((-52), int0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(605, 605, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SHORT).SLONG, 1618L, (-2114L), byteArray0, byteOrder0, 113);
      tiffField0.getTagInfo();
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(605, tiffField0.getTag());
      assertEquals((-2114), tiffField0.getOffset());
      assertEquals(605, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 18, fieldTypeDouble0, 783L, (-1711L), byteArray0, byteOrder0, (-2141787403));
      int int0 = tiffField0.getTag();
      assertEquals((-1711), tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2141787403), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2145736305, fieldTypeDouble0, (-372L), 1232L, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(2145736305, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1232, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(395, 395, fieldTypeDouble0, 1401L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getBytesLength();
      assertEquals(395, tiffField0.getTag());
      assertEquals(395, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, (byte) (-27), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.getDoubleValue();
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2141787403), 2145736305, fieldTypeDouble0.SSHORT, 693, (-2141787403), byteArray0, byteOrder0, 65110);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 18, fieldTypeDouble0, 783L, (-1711L), byteArray0, byteOrder0, (-2141787403));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5c1ef51d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 21658L, 14048L, byteArray0, (ByteOrder) null, 34025);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(34025, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(14048, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1549), 518, fieldTypeDouble0.SRATIONAL, 2390L, (-3870), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50711, 50, fieldTypeDouble0.BYTE, 0L, (-1015L), byteArray0, byteOrder0, (-803));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1e5f7cf1 for: 50711 (0xc617: CFALayout): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "maNk^<XX>c[#t`]");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(32809, 1422, fieldTypeFloat0, 1422, 1, byteArray0, byteOrder0, (-2091));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2091), tiffField0.getSortHint());
      assertEquals(1422, tiffField0.getDirectoryType());
      assertEquals(32809, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (-1), fieldTypeLong0, 823L, 375L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(375, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1430), (-2058), fieldTypeDouble0, 3292L, 1545L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1430), tiffField0.getTag());
      assertEquals((-2058), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1545, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(693, (-2146806847), fieldTypeDouble0.SRATIONAL, (-2146806847), 0L, byteArray0, byteOrder0, 523);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(523, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(693, tiffField0.getTag());
      assertEquals((-2146806847), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, (byte)1, 32766, byteArray0, byteOrder0, 32766);
      tiffField0.getDoubleArrayValue();
      assertEquals(32766, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(32766, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1885, "/KeikD|G4;");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-342), (-342), fieldTypeByte0.SHORT, 1232L, (-402L), byteArray0, (ByteOrder) null, 1885);
      tiffField0.getDoubleArrayValue();
      assertEquals((-342), tiffField0.getDirectoryType());
      assertEquals((-342), tiffField0.getTag());
      assertEquals(1885, tiffField0.getSortHint());
      assertEquals((-402), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(819, 1200, fieldTypeAscii0, (byte)108, 1L, byteArray0, byteOrder0, (byte)108);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5d1e9cb5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2141787403), 2145736305, fieldTypeDouble0.SHORT, 693, (-2141787403), byteArray0, byteOrder0, 65110);
      tiffField0.getIntArrayValue();
      assertEquals(65110, tiffField0.getSortHint());
      assertEquals(2145736305, tiffField0.getDirectoryType());
      assertEquals((-2141787403), tiffField0.getTag());
      assertEquals((-2141787403), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-57), (byte)5, fieldTypeRational0, 331, 1L, byteArray0, byteOrder0, (-1521));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-882), 34, fieldTypeRational0, 1986, (-1658L), byteArray0, byteOrder0, (-882));
      tiffField0.getIntArrayValue();
      assertEquals((-882), tiffField0.getTag());
      assertEquals((-882), tiffField0.getSortHint());
      assertEquals((-1658), tiffField0.getOffset());
      assertEquals(34, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, (byte) (-27), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
      assertEquals((-27), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)43;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1200, 819, fieldTypeAscii0, 1200, 819, byteArray0, byteOrder0, 3970);
      String string0 = tiffField0.getStringValue();
      assertEquals(1200, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(819, tiffField0.getOffset());
      assertEquals(3970, tiffField0.getSortHint());
      assertEquals(819, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1200, 819, fieldTypeAscii0, 1200, 819, byteArray0, byteOrder0, 3970);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@284c5313
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeDouble0, 1983L, 3, byteArray0, byteOrder0, 65002);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x3)", string0);
      assertEquals(65002, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 50, fieldTypeDouble0, (byte)74, (-2147483648L), byteArray0, byteOrder0, (byte)74);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("Interlace", string0);
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(34857, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(605, 605, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SHORT).LONG, 1618L, (-2114L), byteArray0, byteOrder0, 113);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "SubjectLocation");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(56, 1722, fieldTypeLong0.FLOAT, 1722, 1L, byteArray0, byteOrder0, 1722);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1722, tiffField0.getDirectoryType());
      assertEquals(1722, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1722L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1320, (-696), fieldTypeDouble0.SBYTE, 3014L, 1320, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1320, tiffField0.getOffset());
      assertEquals(1320, tiffField0.getTag());
      assertEquals(3014L, tiffField0.getCount());
      assertEquals((-696), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "maNk^<XX>c[#t`]");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 1457, fieldTypeFloat0, 686L, 4L, byteArray0, byteOrder0, (byte) (-50));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(53, byteArrayOutputStream0.size());
      assertEquals("1 (0x1: Unknown Tag): 0.0, 0.0 (686 maNk^<XX>c[#t`])\n", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeDouble0, 1983L, 3, byteArray0, byteOrder0, 65002);
      tiffField0.dump();
      assertEquals(65002, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(1983L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(32, (-193), fieldTypeLong0, 415L, (-51), byteArray0, byteOrder0, (-51));
      String string0 = tiffField0.getValueDescription();
      assertEquals(32, tiffField0.getTag());
      assertEquals((-51), tiffField0.getSortHint());
      assertEquals(415L, tiffField0.getCount());
      assertEquals((-193), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-51), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-8), 8, fieldTypeShort0, 163L, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(163L, tiffField0.getCount());
      assertEquals(8, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-8), tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[150];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(26, 65535, fieldTypeShort0.ASCII, 336, (-3333L), byteArray0, byteOrder0, 74);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getSortHint());
      assertEquals((-3333), tiffField0.getOffset());
      assertEquals(26, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)99, (-580), fieldTypeByte0, 1586L, (byte)0, byteArray0, (ByteOrder) null, 41730);
      String string0 = tiffField0.getValueDescription();
      assertEquals(99, tiffField0.getTag());
      assertEquals((-580), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(41730, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1586L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-348), 25, fieldTypeAscii0, 1L, 25, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-348), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(883, 1363, fieldTypeLong0, 0L, 883, byteArray0, byteOrder0, (byte)126);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(319, 403);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1363, tiffField0.getDirectoryType());
      assertEquals(883, tiffField0.getTag());
      assertEquals(883, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2141787403), 2145736305, fieldTypeDouble0.SSHORT, 693, (-2141787403), byteArray0, byteOrder0, 65091);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription(false);
      assertEquals((-2141787403), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2145736305, tiffField0.getDirectoryType());
      assertEquals((-2141787403L), tiffElement0.offset);
      assertEquals(65091, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-3920), 204, fieldTypeLong0, (-2141787403), 0L, byteArray0, byteOrder0, (byte) (-11));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3920), tiffField0.getTag());
      assertEquals(204, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-2141787403L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2145736305, fieldTypeDouble0, (-372L), 1232L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1232, tiffField0.getOffset());
      assertEquals(2145736305, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeDouble0, 1983L, 3, byteArray0, byteOrder0, 65002);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65002, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1983L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, ":xZ*d.4>d*vB");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1885, "/KeikD|G4;");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1965), (-342), fieldTypeByte0, (-284L), 1L, (byte[]) null, byteOrder0, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-342), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("-1965 (0xfffff853: Unknown Tag): ", string0);
      assertEquals((-284L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(819, 1200, fieldTypeAscii0, (byte)108, 1L, byteArray0, byteOrder0, (byte)108);
      tiffField0.dump();
      assertEquals(819, tiffField0.getTag());
      assertEquals(1200, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(108L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-3920), 204, fieldTypeLong0, (-2141787403), 0L, byteArray0, byteOrder0, (byte) (-11));
      tiffField0.getIntArrayValue();
      assertEquals((-3920), tiffField0.getTag());
      assertEquals(204, tiffField0.getDirectoryType());
      assertEquals(22784980, tiffField0.getBytesLength());
      assertEquals((-2141787403L), tiffField0.getCount());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }
}
