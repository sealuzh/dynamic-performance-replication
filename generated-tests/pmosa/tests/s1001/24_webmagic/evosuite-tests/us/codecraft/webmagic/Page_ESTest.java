/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 18:17:15 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.selector.AndSelector;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.JsonPathSelector;
import us.codecraft.webmagic.selector.OrSelector;
import us.codecraft.webmagic.selector.RegexSelector;
import us.codecraft.webmagic.selector.ReplaceSelector;
import us.codecraft.webmagic.selector.Selectable;
import us.codecraft.webmagic.selector.Selector;
import us.codecraft.webmagic.selector.SmartContentSelector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setSkip(true);
      page1.getHeaders();
      page1.getCharset();
      // Undeclared exception!
      try { 
        page1.addTargetRequest((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = Page.fail();
      Request request0 = new Request("DOg(nZUA");
      Request request1 = request0.setBinaryContent(true);
      Request request2 = request1.addHeader("IRbKG'&6@HvPHk", "th[+EJ}Dr5+C'?");
      Object object0 = new Object();
      Request request3 = request2.putExtra(", extras=", object0);
      request0.setBinaryContent(true);
      Request request4 = request3.setUrl("XY");
      request2.addHeader("@(O vmvUlclq#9", "_cycle_tried_times");
      request3.putExtra("_cycle_tried_times", "IRbKG'&6@HvPHk");
      request2.addCookie("invalid regex", "");
      request4.addHeader("1gI}rYY@zfGxmq", "$9XD");
      page0.setRequest(request4);
      Page page1 = page0.setRawText(", downloadSuccess=");
      page1.getBytes();
      page1.getRequest();
      page1.getBytes();
      page1.isDownloadSuccess();
      page1.getCharset();
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = Page.fail();
      String string0 = ">{E>778:loteeo";
      boolean boolean0 = false;
      Page page1 = page0.setSkip(false);
      page0.setSkip(false);
      page1.putField(">{E>778:loteeo", page0);
      Page page2 = page1.setSkip(false);
      // Undeclared exception!
      try { 
        page2.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = Page.fail();
      page0.setHtml((Html) null);
      LinkedList<Selector> linkedList0 = new LinkedList<Selector>();
      linkedList0.listIterator();
      OrSelector orSelector0 = new OrSelector(linkedList0);
      String string0 = "";
      orSelector0.select("");
      page0.getJson();
      orSelector0.selectList((String) null);
      List<String> list0 = orSelector0.selectList("");
      page0.addTargetRequests(list0);
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = new Page();
      page0.getHeaders();
      Page page1 = page0.setRawText("");
      Json json0 = page1.getJson();
      assertNotNull(json0);
      assertEquals(200, page1.getStatusCode());
      assertTrue(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = new Page();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0);
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = Page.fail();
      page0.putField("3V)lpENeGx-aS?ie@`", "3V)lpENeGx-aS?ie@`");
      page0.isDownloadSuccess();
      page0.getCharset();
      page0.setStatusCode(725);
      page0.setRawText((String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0, 0L);
      assertEquals(725, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setRawText(", headers=");
      Page page2 = page1.setSkip(false);
      page2.getResultItems();
      page2.putField(", headers=", page1);
      Selector[] selectorArray0 = new Selector[4];
      LinkedList<Selector> linkedList0 = new LinkedList<Selector>();
      AndSelector andSelector0 = new AndSelector(linkedList0);
      selectorArray0[0] = (Selector) andSelector0;
      OrSelector orSelector0 = new OrSelector((List<Selector>) null);
      selectorArray0[1] = (Selector) orSelector0;
      ReplaceSelector replaceSelector0 = new ReplaceSelector(", headers=", "XZ<ow@u[U7I*gujz{G%");
      selectorArray0[2] = (Selector) replaceSelector0;
      ReplaceSelector replaceSelector1 = new ReplaceSelector(", headers=", "XZ<ow@u[U7I*gujz{G%");
      selectorArray0[3] = (Selector) replaceSelector1;
      OrSelector orSelector1 = new OrSelector(selectorArray0);
      // Undeclared exception!
      try { 
        orSelector1.selectList(", headers=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.OrSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setRawText("8l6>nry,;05AcW%W");
      page1.getRawText();
      page1.setDownloadSuccess(false);
      Json json0 = page1.getJson();
      page1.setUrl(json0);
      page1.getRawText();
      // Undeclared exception!
      try { 
        page1.addTargetRequest("8l6>nry,;05AcW%W");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = new Page();
      SmartContentSelector smartContentSelector0 = new SmartContentSelector();
      String string0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      page0.setBytes(byteArray0);
      // Undeclared exception!
      try { 
        smartContentSelector0.selectList((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.SmartContentSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getStatusCode();
      String string0 = "m;EE/_E7r4&jhr\"[Xs";
      page0.setRawText("m;EE/_E7r4&jhr\"[Xs");
      RegexSelector regexSelector0 = null;
      try {
        regexSelector0 = new RegexSelector("", 1017);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.selector.RegexSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Page page0 = new Page();
      String string0 = ", json=";
      Page page1 = page0.setRawText(", json=");
      Page page2 = page1.setSkip(false);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      page1.setHeaders(hashMap0);
      page2.setRawText("");
      page0.putField("", page2);
      Json json0 = new Json("JIGZx6d51kU9M");
      Class<Selector> class0 = Selector.class;
      // Undeclared exception!
      try { 
        json0.toList(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("us.codecraft.webmagic.selector.Json", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Page page0 = Page.fail();
      Request request0 = new Request("");
      Request request1 = request0.setUrl("");
      Request request2 = request1.putExtra(", headers=", "");
      Request request3 = request2.setMethod("_cycle_tried_times");
      page0.addTargetRequest(request3);
      Page page1 = page0.setRawText("illegal encoding ");
      assertFalse(page1.isDownloadSuccess());
      assertEquals(200, page1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getJson();
      Page.fail();
      page0.getJson();
      page0.isDownloadSuccess();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      long long0 = (-895L);
      int int0 = (-736);
      String string0 = ", json=";
      // Undeclared exception!
      try { 
        linkedList0.set((-736), ", json=");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -736, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Page page0 = Page.fail();
      page0.setDownloadSuccess(false);
      page0.getTargetRequests();
      assertEquals(200, page0.getStatusCode());
      
      page0.setStatusCode(0);
      Page page1 = Page.fail();
      page1.isDownloadSuccess();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)14;
      page1.setBytes(byteArray0);
      assertEquals(200, page1.getStatusCode());
  }
}
