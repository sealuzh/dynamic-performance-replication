/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 10:05:33 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.ObjectInputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.StackConsumer;
import org.apache.bcel.generic.StackProducer;
import org.apache.bcel.generic.StoreInstruction;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LSUB lSUB0 = new LSUB();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLSTORE((LSTORE) null);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ATHROW aTHROW0 = new ATHROW();
      FLOAD fLOAD0 = new FLOAD(2477);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      assertEquals((short)23, fLOAD0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen1);
      DASTORE dASTORE0 = new DASTORE();
      I2C i2C0 = new I2C();
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackConsumer((StackConsumer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LLOAD lLOAD0 = new LLOAD(1153);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      assertEquals((short)22, lLOAD0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(629);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals(629, dSTORE0.getIndex());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitJSR_W((JSR_W) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DCMPG dCMPG0 = new DCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC((INVOKEDYNAMIC) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(807, 807);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(87);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      assertEquals("istore", iSTORE0.getName());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GOTO gOTO0 = new GOTO((InstructionHandle) null);
      gOTO0.accept(instConstraintVisitor0);
      InstructionList instructionList0 = new InstructionList();
      IASTORE iASTORE0 = new IASTORE();
      assertEquals((short)79, iASTORE0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      cALOAD0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.visitICONST((ICONST) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackProducer((StackProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitILOAD((ILOAD) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(224);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      assertEquals((short)25, aLOAD0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GETSTATIC gETSTATIC0 = new GETSTATIC(3);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals((short)178, gETSTATIC0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid IOCase name: ");
      SIPUSH sIPUSH0 = new SIPUSH((short)2108);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      assertEquals((short)17, sIPUSH0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(352, 867);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DDIV dDIV0 = new DDIV();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstructionList instructionList0 = new InstructionList();
      I2B i2B0 = new I2B();
      DUP dUP0 = new DUP();
      GETSTATIC gETSTATIC0 = new GETSTATIC(3);
      I2F i2F0 = new I2F();
      DCMPL dCMPL0 = new DCMPL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IRETURN iRETURN0 = new IRETURN();
      instConstraintVisitor0.visitDCONST((DCONST) null);
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = Constants.ILLEGAL_TYPE;
      RET rET0 = new RET(1);
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      CASTORE cASTORE0 = new CASTORE();
      String string1 = cASTORE0.toString();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(0.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)93;
      InstructionList instructionList0 = null;
      try {
        instructionList0 = new InstructionList((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class cf$e(EVg]: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: cf$e(EVg].class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(1581, 33);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEINTERFACE0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      LCONST lCONST0 = new LCONST(1L);
      instConstraintVisitor0.visitLCONST(lCONST0);
      assertEquals((short)10, lCONST0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LSHR lSHR0 = new LSHR();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitJSR((JSR) null);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC(119);
      instConstraintVisitor0.setMethodGen((MethodGen) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPUTSTATIC(pUTSTATIC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cfqe(EV>]");
      iLOAD0.toString(false);
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      objectType0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(916);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ILOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CASTORE cASTORE0 = new CASTORE();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      DASTORE dASTORE0 = new DASTORE();
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = new LocalVariables(60);
      ObjectType objectType0 = ObjectType.getInstance("q3nCaI7QViNm=*A");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      I2C i2C0 = new I2C();
      i2C0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type 'q3nCaI7QViNm=*A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      objectType0.toString();
      ARETURN aRETURN0 = new ARETURN();
      objectType0.toString();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      uninitializedObjectType0.toString();
      ARETURN aRETURN1 = new ARETURN();
      uninitializedObjectType0.OBJECT.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(581);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<LCONST> class0 = LCONST.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Type.getType(class0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      POP2 pOP2_0 = new POP2();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      pOP2_0.consumeStack(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'cf$e(EVg]' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(874);
      ObjectType objectType0 = new ObjectType("-JE/iWDR:7h.");
      LocalVariables localVariables1 = new LocalVariables(874);
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      POP pOP0 = new POP();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      OperandStack operandStack0 = new OperandStack(874, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      pOP0.produceStack(constantPoolGen0);
      instConstraintVisitor0.visitPOP(pOP0);
      POP2 pOP2_0 = new POP2();
      DUP dUP0 = new DUP();
      dUP0.toString();
      instConstraintVisitor0.visitDUP(dUP0);
      assertEquals("dup", dUP0.getName());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(44);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      ARETURN aRETURN0 = new ARETURN();
      OperandStack operandStack2 = operandStack0.getClone();
      operandStack1.merge(operandStack2);
      Boolean boolean0 = new Boolean("' is not the current class or a subclass of the current class.");
      instConstraintVisitor0.setFrame(frame0);
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type '' is not the current class or a subclass of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(867);
      ObjectType objectType0 = new ObjectType("h");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      localVariables0.toString();
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      CASTORE cASTORE0 = new CASTORE();
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      frame0.equals(l2F0);
      operandStack1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(867);
      operandStack1.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      LOR lOR0 = new LOR();
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.equals(instConstraintVisitor0);
      LDC_W lDC_W0 = new LDC_W(772);
      frame0.equals(lDC_W0);
      operandStack1.push(objectType0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      operandStack1.getClone();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IFLE iFLE0 = null;
      System.setCurrentTimeMillis(0L);
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      operandStack0.clone();
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      int int0 = 203;
      DSTORE dSTORE0 = new DSTORE(203);
      uninitializedObjectType0.THROWABLE.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE((IASTORE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(916, 916);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CASTORE cASTORE0 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(1467);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      POP pOP0 = new POP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(pOP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP constraint violated: Cannot consume 1 stack slots: only 0 slot(s) left on stack!
         // Stack:
         // Slots used: 0 MaxStack: 916.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      IMUL iMUL0 = new IMUL();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(EVg]");
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-58);
      byteArray0[3] = (byte) (-117);
      byteArray0[6] = (byte) (-117);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ObjectType.getInstance("Q$Wq^xf^GREJZ");
      OperandStack operandStack0 = new OperandStack(1817, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      I2F i2F0 = new I2F();
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(398);
      ObjectType objectType0 = new ObjectType("f$eEVg]");
      OperandStack operandStack0 = new OperandStack(398, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      operandStack1.toString();
      objectType0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(193);
      GETFIELD gETFIELD0 = new GETFIELD(193);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(.HxEVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      localVariables0.getClone();
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B((I2B) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame.getThis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL((FMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = (OperandStack)operandStack0.clone();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(916);
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLocalVariableInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      operandStack0.push(objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DASTORE dASTORE0 = new DASTORE();
      DASTORE dASTORE1 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      iLOAD0.toString(false);
      OperandStack operandStack1 = new OperandStack((byte)45, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      objectType0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame1);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = ObjectType.getInstance("wO<HUt/*{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      OperandStack operandStack1 = new OperandStack(943, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables0 = new LocalVariables(943);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      localVariables0.clone();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DADD dADD0 = new DADD();
      dADD0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<HUt/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("wO5Ut*3.{");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      LocalVariables localVariables1 = new LocalVariables(12);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wO5Ut*3.{");
      Boolean boolean0 = new Boolean("wO5Ut*3.{");
      CHECKCAST cHECKCAST0 = new CHECKCAST(12);
      operandStack0.toString();
      L2F l2F0 = new L2F();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type 'wO5Ut*3.{'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      operandStack0.toString();
      OperandStack operandStack1 = operandStack0.getClone();
      Frame.getThis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack1.toString();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.visitMONITORENTER((MONITORENTER) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ((IF_ICMPEQ) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(53);
      ObjectType objectType0 = ObjectType.getInstance("' is not the current class or a subclass of the current class.");
      localVariables0.clone();
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      ARETURN aRETURN0 = new ARETURN();
      Boolean boolean0 = new Boolean("' is not the current class or a subclass of the current class.");
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(53);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(2660);
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type '' is not the current class or a subclass of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(EVg]");
      ObjectType.getInstance(", offset dela=");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      ObjectType.getInstance("cf$e(EVg]");
      OperandStack operandStack1 = new OperandStack(916, objectType0);
      operandStack1.getClone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CASTORE cASTORE0 = new CASTORE();
      MockPrintStream mockPrintStream0 = new MockPrintStream("TGetPb");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "TGetPb");
      mockPrintStream0.append((CharSequence) "TGetPb");
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      ARETURN aRETURN0 = new ARETURN();
      aRETURN0.dump(dataOutputStream0);
      instConstraintVisitor0.visitARETURN(aRETURN0);
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BALOAD bALOAD0 = new BALOAD();
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      CASTORE cASTORE0 = new CASTORE();
      MockPrintStream mockPrintStream0 = new MockPrintStream("`sLJi\"");
      mockPrintStream0.append((CharSequence) "TGetPb");
      mockPrintStream0.append((CharSequence) "' is not the current class or a subclass of the current class.");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      mockPrintStream1.println((double) 86);
      ARETURN aRETURN0 = new ARETURN();
      aRETURN0.dump(dataOutputStream0);
      instConstraintVisitor0.visitARETURN(aRETURN0);
      ATHROW aTHROW0 = new ATHROW();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      MONITOREXIT mONITOREXIT1 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEW((NEW) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      localVariables0.getClone();
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      operandStack1.equals(operandStack0);
      localVariables0.clone();
      operandStack1.merge(operandStack0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FASTORE fASTORE0 = new FASTORE();
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB((DSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(867);
      ObjectType objectType0 = ObjectType.getInstance("h");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(867, 867);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type 'h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ILOAD iLOAD0 = new ILOAD(916);
      LocalVariables localVariables0 = new LocalVariables(44);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      ARETURN aRETURN0 = new ARETURN();
      OperandStack operandStack2 = operandStack0.getClone();
      IOR iOR0 = new IOR();
      operandStack1.merge(operandStack2);
      instConstraintVisitor0.setFrame(frame0);
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Class<LCONST> class0 = LCONST.class;
      frame0.equals("");
      Type.getType(class0);
      LocalVariables localVariables1 = new LocalVariables(922);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(922);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(922, (short)3535);
      mULTIANEWARRAY0.setIndex((short)3535);
      BALOAD bALOAD0 = new BALOAD();
      AALOAD aALOAD0 = new AALOAD();
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(.HxEVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      localVariables0.getClone();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(.HxEVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LSHR lSHR0 = new LSHR();
      ObjectType.getInstance("cf$e(EVg]");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(1817, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(107);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean(true);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LREM lREM0 = new LREM();
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("wO<5Ut/*{");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      LocalVariables localVariables1 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.equals(operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<5Ut/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[5];
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = new LocalVariables(60);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      LOR lOR0 = new LOR();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      ARRAYLENGTH aRRAYLENGTH1 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        aRRAYLENGTH1.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("y");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("y");
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.equals(objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      DMUL dMUL0 = new DMUL();
      DMUL dMUL1 = new DMUL();
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF((INSTANCEOF) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.equals(instConstraintVisitor0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      frame0.toString();
      uninitializedObjectType0.isAssignmentCompatibleWith(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(922);
      OperandStack operandStack2 = new OperandStack(922);
      FDIV fDIV0 = new FDIV();
      Boolean boolean0 = new Boolean("cf$e(EVg]");
      FASTORE fASTORE0 = new FASTORE();
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      localVariables0.clone();
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      Boolean boolean0 = new Boolean("' is not the current class or a subclass of the current class.");
      Frame frame1 = new Frame(localVariables0, operandStack1);
      Boolean boolean1 = new Boolean(",~WmJ");
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(916);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      frame0.getClone();
      Frame.setThis((UninitializedObjectType) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I((D2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(.HxEVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)64;
      DMUL dMUL0 = new DMUL();
      DMUL dMUL1 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'cf$e(.HxEVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(MEVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cf$e(MEVg]");
      Class<LCONST> class0 = LCONST.class;
      frame0.equals("cf$e(MEVg]");
      Type.getType(class0);
      OperandStack operandStack1 = new OperandStack(922);
      instConstraintVisitor0.setFrame(frame0);
      FMUL fMUL0 = new FMUL();
      ISTORE iSTORE0 = (ISTORE)InstructionConstants.ISTORE_2;
      instConstraintVisitor0.visitLocalVariableInstruction(iSTORE0);
      assertEquals((short)54, iSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("y");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("y");
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.equals(objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      DMUL dMUL0 = new DMUL();
      DMUL dMUL1 = new DMUL();
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type 'y'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(959);
      LocalVariables localVariables0 = new LocalVariables(959);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(959, objectType0);
      OperandStack operandStack1 = new OperandStack(959, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = localVariables0.getClone();
      ATHROW aTHROW0 = new ATHROW();
      ObjectType objectType1 = ObjectType.getInstance("cf$e(EVg]");
      OperandStack operandStack2 = new OperandStack(1385, objectType1);
      OperandStack operandStack3 = new OperandStack(1385);
      OperandStack operandStack4 = operandStack0.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack4);
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(44);
      localVariables0.toString();
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      ARETURN aRETURN0 = new ARETURN();
      OperandStack operandStack2 = operandStack0.getClone();
      operandStack1.merge(operandStack2);
      Boolean boolean0 = new Boolean("' is not the current class or a subclass of the current class.");
      instConstraintVisitor0.setFrame(frame0);
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL((LSHL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("wO<5Ut/*{");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      LocalVariables localVariables1 = new LocalVariables(12);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      OperandStack operandStack1 = new OperandStack(12);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      byte byte0 = (byte) (-5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-5);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      byteSequence0.readUnsignedByte();
      Instruction.readInstruction(byteSequence0);
      I2B i2B0 = new I2B();
      FSTORE fSTORE0 = new FSTORE((byte)64);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      frame0.equals("cf$e(EVg]");
      ObjectType.getInstance("cf$e(EVg]");
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(922);
      localVariables1.getClone();
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      ISTORE iSTORE0 = new ISTORE(922);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(iSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: 'cf$e(EVg]'; Instruction type: 'int'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BALOAD bALOAD0 = new BALOAD();
      Frame frame1 = frame0.getClone();
      frame0.equals(bALOAD0);
      LRETURN lRETURN0 = new LRETURN();
      frame0.equals(lRETURN0);
      frame0.equals(lRETURN0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      CASTORE cASTORE0 = new CASTORE();
      MockPrintStream mockPrintStream0 = new MockPrintStream("`sLJi\"");
      mockPrintStream0.append((CharSequence) "TGetPb");
      mockPrintStream0.append((CharSequence) "' is not the current class or a subclass of the current class.");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type '' is not the current class or a subclass of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(943);
      ObjectType objectType0 = new ObjectType("Tb\"'%p");
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(943, 943);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = frame0.getClone();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(943);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(2);
      frame2.getClone();
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      localVariables0.getClone();
      operandStack0.getClone();
      CHECKCAST cHECKCAST1 = new CHECKCAST(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IFGT iFGT0 = new IFGT((InstructionHandle) null);
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type 'Tb\"'%p'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte) (-117);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(60);
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      mockPrintStream0.println((-433.654769279));
      ATHROW aTHROW0 = new ATHROW();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitASTORE((ASTORE) null);
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      I2L i2L0 = new I2L();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(Vfg]");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitDLOAD((DLOAD) null);
      NOP nOP0 = new NOP();
      POP pOP0 = new POP();
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type 'cf$e(Vfg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(875);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)84;
      byteArray0[2] = (byte) (-58);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(875, objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack1 = new OperandStack((byte)45, objectType0);
      operandStack0.getClone();
      localVariables0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      localVariables0.getClone();
      operandStack0.equals(operandStack0);
      localVariables0.clone();
      operandStack0.merge(operandStack1);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FASTORE fASTORE0 = new FASTORE();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(890);
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#o");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(890, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      frame0.equals(operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      ByteSequence byteSequence1 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      LDIV lDIV0 = new LDIV();
      lDIV0.copy();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = ObjectType.getInstance("wO<5U/*{");
      LocalVariables localVariables0 = new LocalVariables(1);
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      OperandStack operandStack1 = new OperandStack(1, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.equals(objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Huh?! Constant pool index of instruction '");
      operandStack1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      POP pOP0 = new POP();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<5U/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[7];
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      int int0 = 60;
      LocalVariables localVariables1 = new LocalVariables(60);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      LOR lOR0 = new LOR();
      IDIV iDIV0 = new IDIV();
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      aCONST_NULL0.consumeStack(constantPoolGen0);
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      Frame frame0 = new Frame(0, 0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LOR lOR0 = new LOR();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      LocalVariables localVariables2 = new LocalVariables(46);
      DUP2 dUP2_0 = new DUP2();
      DUP2 dUP2_1 = new DUP2();
      instConstraintVisitor0.visitDUP2(dUP2_1);
      IINC iINC0 = new IINC(0, 46);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BALOAD bALOAD0 = new BALOAD();
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      CASTORE cASTORE0 = new CASTORE();
      MockPrintStream mockPrintStream0 = new MockPrintStream("`sLJi\"");
      IINC iINC0 = new IINC(255, 9);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      frame0.equals("cf$e(EVg]");
      ObjectType.getInstance("cf$e(EVg]");
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(922);
      localVariables1.getClone();
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(922);
      IADD iADD0 = new IADD();
      CHECKCAST cHECKCAST1 = new CHECKCAST(922);
      DUP2 dUP2_0 = new DUP2();
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT((InstructionHandle) null);
      iF_ICMPLT0.negate();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(943);
      ObjectType objectType0 = ObjectType.getInstance("wO<HUt/*{");
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      OperandStack operandStack1 = new OperandStack(943, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables1 = new LocalVariables(943);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      localVariables1.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables1.clone();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DUP2 dUP2_0 = new DUP2();
      CHECKCAST cHECKCAST0 = new CHECKCAST(2);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.equals(instConstraintVisitor0);
      LDC_W lDC_W0 = new LDC_W(772);
      frame0.equals(lDC_W0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      operandStack1.getClone();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE((IFLE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      IMUL iMUL0 = new IMUL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      L2I l2I0 = new L2I();
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 869;
      LocalVariables localVariables0 = new LocalVariables(869);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the curret class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      localVariables0.toString();
      operandStack0.initializeObject((UninitializedObjectType) null);
      BALOAD bALOAD0 = new BALOAD();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "' is not the current class or a subclass of the curret class.");
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL((IMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(71);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(148);
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      dUP2_X2_0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(209, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = operandStack1.getClone();
      LocalVariables localVariables0 = new LocalVariables(209);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE1 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(3);
      byte[] byteArray0 = new byte[0];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      BasicType basicType0 = Type.LONG;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.equals(frame0);
      frame0.equals(instConstraintVisitor0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      I2B i2B0 = new I2B();
      FSTORE fSTORE0 = new FSTORE(922);
      LNEG lNEG0 = new LNEG();
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(892);
      ObjectType objectType0 = new ObjectType("wO<5Ut/*{");
      OperandStack operandStack0 = new OperandStack(892, objectType0);
      localVariables0.getClone();
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wO<5Ut/*{");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Huh?! Constant pool index of instruction '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(2505);
      OperandStack operandStack1 = new OperandStack(223, objectType0);
      DUP dUP0 = new DUP();
      I2C i2C0 = new I2C();
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<5Ut/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(962);
      ObjectType objectType0 = ObjectType.getInstance("wO<5Ut/*{");
      OperandStack operandStack0 = new OperandStack(962, objectType0);
      OperandStack operandStack1 = new OperandStack(962);
      operandStack0.push(objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      I2B i2B0 = new I2B();
      FSTORE fSTORE0 = new FSTORE(0);
      DUP dUP0 = new DUP();
      DUP dUP1 = new DUP();
      instConstraintVisitor0.visitDUP(dUP1);
      LRETURN lRETURN0 = new LRETURN();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<5Ut/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(51);
      ObjectType objectType0 = new ObjectType("h");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(867, 867);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      frame0.getClone();
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LocalVariables localVariables1 = new LocalVariables(51);
      OperandStack operandStack2 = new OperandStack(51);
      DADD dADD0 = new DADD();
      dADD0.toString();
      NEWARRAY nEWARRAY0 = new NEWARRAY(objectType0.LONG);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type 'h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = ObjectType.getInstance("' is not the current class or a subclas of the current class.");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(916, 916);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(916);
      NEW nEW0 = new NEW(916);
      frame1.getClone();
      OperandStack operandStack2 = operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LocalVariables localVariables1 = new LocalVariables(67);
      DUP dUP0 = new DUP();
      operandStack2.getClone();
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(493, (short)1981);
      mULTIANEWARRAY0.copy();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type '' is not the current class or a subclas of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("y");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("y");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(1645);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(112, (short)1108);
      mULTIANEWARRAY0.setIndex(4976);
      mULTIANEWARRAY0.setIndex(0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      LSUB lSUB0 = new LSUB();
      Instruction.readInstruction(byteSequence0);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type 'y'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ISnvokedynamc");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = ObjectType.getInstance("");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitDLOAD((DLOAD) null);
      NOP nOP0 = new NOP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LCMP lCMP0 = new LCMP();
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(4449);
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      Frame frame0 = new Frame(916, 916);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      String string0 = frame0.toString();
      Boolean.valueOf(string0);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(916);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(916);
      frame1.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LocalVariables localVariables1 = new LocalVariables(67);
      OperandStack operandStack2 = new OperandStack(86);
      DUP dUP0 = new DUP();
      operandStack1.getClone();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F((I2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(943);
      ObjectType objectType0 = new ObjectType("wO<5Ut/*{");
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      OperandStack operandStack1 = new OperandStack(943, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables1 = new LocalVariables(943);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      Boolean boolean0 = new Boolean("wO<5Ut/*{");
      localVariables1.clone();
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      SWAP sWAP0 = new SWAP();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      sWAP0.consumeStack(constantPoolGen1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("9shVuOaY>,");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      sWAP0.dump(dataOutputStream0);
      instConstraintVisitor0.visitSWAP(sWAP0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<5Ut/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      LDC_W lDC_W0 = new LDC_W(608);
      frame0.equals(lDC_W0);
      operandStack0.push(objectType0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      System.setCurrentTimeMillis(0L);
      ISHR iSHR0 = new ISHR();
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.getClone();
      localVariables0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      ATHROW aTHROW0 = new ATHROW();
      Boolean boolean0 = new Boolean(true);
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(922);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(922, (short)3563);
      mULTIANEWARRAY0.setIndex((short)3563);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(922);
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(943);
      ObjectType objectType0 = new ObjectType(",Y-z)n<1");
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      OperandStack operandStack1 = new OperandStack(943, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables1 = new LocalVariables(943);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      localVariables1.getClone();
      Boolean boolean0 = new Boolean(",Y-z)n<1");
      localVariables1.clone();
      frame0.getClone();
      frame0.clone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L,Y-z)n<1;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      CASTORE cASTORE0 = new CASTORE();
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(1, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.getClone();
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      int int0 = 916;
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("wO<HUt/*{");
      Boolean boolean0 = new Boolean("wO<HUt/*{");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      OperandStack operandStack1 = new OperandStack(916, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables1 = new LocalVariables(916);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables1.clone();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      DADD dADD0 = new DADD();
      dADD0.toString();
      dADD0.produceStack(constantPoolGen0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      DUP2 dUP2_0 = new DUP2();
      DLOAD dLOAD0 = new DLOAD(46);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(dLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DLOAD constraint violated: Read-Access on local variable 46 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(922);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      OperandStack operandStack1 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.equals(instConstraintVisitor0);
      LDC_W lDC_W0 = new LDC_W(772);
      frame0.equals(lDC_W0);
      operandStack1.push(objectType0);
      Class<LCONST> class0 = LCONST.class;
      Type.getType(class0);
      operandStack1.getClone();
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("cf$e(EVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Class<LCONST> class0 = LCONST.class;
      frame0.equals("cf$e(EVg]");
      Type.getType(class0);
      localVariables0.clone();
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(922);
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type 'cf$e(EVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[5];
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      aCONST_NULL0.consumeStack(constantPoolGen0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      POP pOP0 = new POP();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      BasicType basicType0 = Type.BOOLEAN;
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      LOR lOR0 = new LOR();
      IDIV iDIV0 = new IDIV();
      LSUB lSUB0 = new LSUB();
      LSUB lSUB1 = new LSUB();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      DUP2_X1 dUP2_X1_1 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = new LocalVariables(60);
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IDIV iDIV0 = new IDIV();
      SASTORE sASTORE0 = new SASTORE();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, 1305.0F);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGT(iF_ICMPGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPGT constraint violated: The value at the stack top is not of type 'int', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = ObjectType.getInstance("wO<HUt/*{");
      Boolean boolean0 = new Boolean("wO<HUt/*{");
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      OperandStack operandStack1 = new OperandStack(943, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables0 = new LocalVariables(943);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = new LocalVariables(1001);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack2 = new OperandStack(155, objectType0);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      NOP nOP0 = new NOP();
      nOP0.copy();
      UninitializedObjectType uninitializedObjectType1 = new UninitializedObjectType(uninitializedObjectType0.STRINGBUFFER);
      operandStack0.initializeObject(uninitializedObjectType1);
      Frame frame0 = new Frame(localVariables1, operandStack2);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IDIV iDIV0 = new IDIV();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, (-799.1303F));
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<HUt/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(86);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(867, 867);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      CASTORE cASTORE0 = new CASTORE();
      Frame.getThis();
      operandStack1.initializeObject((UninitializedObjectType) null);
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      Frame frame2 = frame1.getClone();
      frame2.getClone();
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH((LOOKUPSWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("wO<HUt/*{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      OperandStack operandStack0 = new OperandStack(943, objectType0);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      ARETURN aRETURN0 = new ARETURN();
      boolean boolean0 = new Boolean(false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wO<HUt/*{");
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables0 = new LocalVariables(3);
      FNEG fNEG0 = new FNEG();
      fNEG0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LwO<HUt/*{;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(867);
      ObjectType objectType0 = ObjectType.getInstance("h");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(867, 867);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.getClone();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      frame0.getClone();
      operandStack1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      localVariables0.getClone();
      operandStack1.getClone();
      CHECKCAST cHECKCAST1 = new CHECKCAST(867);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IFGT iFGT0 = new IFGT((InstructionHandle) null);
      IFGT iFGT1 = new IFGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT(iFGT1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGT constraint violated: The value at the stack top is not of type 'int', but of type 'h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ObjectType objectType1 = new ObjectType("$g,JsVMf{p~^pU.K6");
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      frame0.toString();
      OperandStack operandStack2 = new OperandStack(922);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR((IUSHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(71);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BALOAD bALOAD0 = new BALOAD();
      frame0.equals(bALOAD0);
      FCMPL fCMPL0 = new FCMPL();
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(869, (short)2);
      ARETURN aRETURN0 = new ARETURN();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(71);
      FADD fADD0 = new FADD();
      FREM fREM0 = new FREM();
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type '' is not the current class or a subclass of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = ObjectType.getInstance("cf$e(MEVg]");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      Class<LCONST> class0 = LCONST.class;
      frame0.equals("cf$e(MEVg]");
      Type.getType(class0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(922);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u0");
      D2L d2L0 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type 'cf$e(MEVg]'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = new LocalVariables(60);
      ObjectType objectType0 = ObjectType.getInstance("q3nCaI7QViNm=*A");
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type 'q3nCaI7QViNm=*A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean(true);
      ObjectType objectType1 = new ObjectType("");
      ObjectType objectType2 = new ObjectType("D8VdH");
      OperandStack operandStack1 = new OperandStack(623, objectType2);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = operandStack0.getClone();
      Frame frame2 = new Frame(3349, 922);
      frame2.toString();
      instConstraintVisitor0.setFrame(frame2);
      CASTORE cASTORE0 = new CASTORE();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack3 = new OperandStack(3349, objectType1);
      LocalVariables localVariables1 = new LocalVariables(623);
      localVariables1.getClone();
      Frame frame3 = new Frame(localVariables1, operandStack2);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType1);
      Frame.setThis(uninitializedObjectType0);
      frame0.getClone();
      Frame frame4 = frame3.getClone();
      instConstraintVisitor0.setFrame(frame4);
      SWAP sWAP0 = new SWAP();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 867;
      LocalVariables localVariables0 = new LocalVariables(867);
      ObjectType objectType0 = new ObjectType("h");
      OperandStack operandStack0 = new OperandStack(867, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.getClone();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(867);
      FDIV fDIV0 = new FDIV();
      L2F l2F0 = new L2F();
      NEW nEW0 = new NEW(867);
      operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INEG constraint violated: The value at the stack top is not of type 'int', but of type 'h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(71);
      ObjectType objectType0 = new ObjectType("' is not the current class or a subclass of the current class.");
      OperandStack operandStack0 = new OperandStack(869, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      BALOAD bALOAD0 = new BALOAD();
      frame0.equals(bALOAD0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      instConstraintVisitor0.setFrame(frame0);
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type '' is not the current class or a subclass of the current class.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      IMUL iMUL0 = new IMUL();
      LocalVariables localVariables0 = new LocalVariables(943);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ObjectType objectType0 = new ObjectType("Tb\"'%p");
      OperandStack operandStack0 = new OperandStack(943);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      Frame frame1 = new Frame(5, 2120);
      ARETURN aRETURN0 = new ARETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CASTORE cASTORE0 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(5);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      F2L f2L0 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type 'Tb\"'%p'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(922);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(922, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      localVariables0.getClone();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      CASTORE cASTORE0 = new CASTORE();
      CHECKCAST cHECKCAST0 = new CHECKCAST(922);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte) (-85));
      InstConstraintVisitor instConstraintVisitor2 = new InstConstraintVisitor();
      instConstraintVisitor2.visitBIPUSH(bIPUSH0);
      instConstraintVisitor0.visitIFNULL((IFNULL) null);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Character character0 = Character.valueOf('f');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      InstructionList instructionList1 = new InstructionList(pUSH0);
      // Undeclared exception!
      try { 
        instructionList0.insert((Instruction) null, instructionList1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction null is not contained in this list.
         //
         verifyException("org.apache.bcel.generic.InstructionList", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(916);
      ObjectType objectType0 = new ObjectType("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      aCONST_NULL0.consumeStack(constantPoolGen0);
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      POP pOP0 = new POP();
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(916, objectType0);
      Frame frame0 = new Frame(0, 0);
      operandStack0.push(objectType0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LOR lOR0 = new LOR();
      short short0 = (short)1;
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(916, (short)1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '1' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("If stack top's size is 1, then stack next-to-top's size must also be 1. But it is '");
      byte[] byteArray0 = new byte[5];
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      aCONST_NULL0.consumeStack(constantPoolGen0);
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      POP pOP0 = new POP();
      LocalVariables localVariables0 = new LocalVariables(60);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      BasicType basicType0 = Type.BOOLEAN;
      OperandStack operandStack0 = new OperandStack(60, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      LOR lOR0 = new LOR();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      LocalVariables localVariables1 = new LocalVariables(46);
      ISHR iSHR0 = new ISHR();
      InstructionList instructionList0 = new InstructionList(iSHR0);
      InstructionList instructionList1 = instructionList0.copy();
      Character character0 = Character.valueOf('g');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      InstructionHandle instructionHandle0 = instructionList1.insert((CompoundInstruction) pUSH0);
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE(iF_ICMPLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLE constraint violated: The value at the stack top is not of type 'int', but of type 'If stack top's size is 1, then stack next-to-top's size must also be 1. But it is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
