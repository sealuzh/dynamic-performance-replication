/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:41:49 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeByte0, 26, 26, byteArray0, byteOrder0, 26);
      tiffField0.getFieldTypeName();
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(226L);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(13, " l");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeLong0, 13, 13, byteArray0, (ByteOrder) null, 13);
      tiffField0.getIntArrayValue();
      assertEquals(28, tiffField0.getTag());
      assertEquals(13L, tiffField0.getCount());
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50730, " >7_--U");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50730, 50730, fieldTypeFloat0, 50730, 50730, byteArray0, byteOrder0, 50730);
      int int0 = Short.SIZE;
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4aa7d314 for: 50730 (0xc62a: BaselineExposure): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-2147483648L), byteArray0, byteOrder0, (byte)50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2736, (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1307), (-1307), fieldTypeShort0, (-1307), 2736, byteArray0, (ByteOrder) null, 2736);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1307), tiffField0.getDirectoryType());
      assertEquals(2736, tiffField0.getSortHint());
      assertEquals((-1307), tiffField0.getTag());
      assertEquals(2736, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)91, 28, fieldTypeShort0, 28, (byte)91, byteArray0, byteOrder0, (byte)91);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(91, tiffField0.getTag());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(91, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeDouble0, (byte)91, (-520), byteArray0, (ByteOrder) null, (-520));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2f9aa03f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)57;
      byteArray0[4] = (byte) (-106);
      byteArray0[5] = (byte) (-69);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1162, 1162, fieldTypeLong0, 1162, 1162, byteArray0, byteOrder0, (byte)32);
      tiffField0.getIntValueOrArraySum();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(1162, tiffField0.getOffset());
      assertEquals(1162, tiffField0.getDirectoryType());
      assertEquals(4648, tiffField0.getBytesLength());
      assertEquals(1162, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3388), fieldTypeByte0, 41970, 41970, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(41970, tiffField0.getOffset());
      assertEquals((-3388), tiffField0.getDirectoryType());
      assertEquals(41970, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)91, (byte)50, fieldTypeDouble0, (byte)50, (-2147483648L), byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeRational0, 65535, 4014L, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4014, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1657L, 2199, byteArray0, byteOrder0, (-3266));
      tiffField0.dump();
      assertEquals(1657, tiffField0.getBytesLength());
      assertEquals((-3266), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2199, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)34;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2078), (-2078), (FieldType) null, (-2078), (-318L), byteArray0, byteOrder0, (byte)34);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)7, 5);
      tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-318), tiffField0.getOffset());
      assertEquals((-2078), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals((-2078), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)33, (-520), fieldTypeFloat0, 1L, (-727L), byteArray0, (ByteOrder) null, (byte)33);
      double double0 = new Byte((byte)33);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("33 (0x21: Unknown Tag): ", string0);
      
      tiffField0.getIntValueOrArraySum();
      System.setCurrentTimeMillis(0);
      tiffField0.getCount();
      assertEquals((-520), tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-727), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2106965088, "Jes>4)");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)38;
      byteArray0[3] = (byte)9;
      byteArray0[5] = (byte) (-100);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1415, 1, fieldTypeShort0, 1, 2106965088, byteArray0, byteOrder0, (byte) (-106));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals(1415, tiffField0.getTag());
      assertEquals(2106965088, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      long long0 = 1L;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(65535, 41994, fieldTypeRational0, 1L, 65535, byteArray0, byteOrder0, (byte)35);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeByte0, 2760L, 2760L, byteArray0, byteOrder0, 885);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6e59a943 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 50, fieldTypeShort0, 255L, (-2147483648L), byteArray0, byteOrder0, (-59));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, int0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      tiffField0.getIntArrayValue();
      assertEquals(22, tiffField0.getTag());
      assertEquals((-59), tiffField0.getSortHint());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)0;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34661, 292, fieldTypeRational0, (byte)0, 292, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(34661, tiffField0.getTag());
      assertEquals(292, tiffField0.getDirectoryType());
      assertEquals(292, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1318, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(1318, tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1717986917), 3, fieldTypeShort0, 830L, (byte)0, byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1660, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      byteArray0[5] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte)5;
      byteArray0[5] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 2125344641, fieldTypeLong0, 1020L, 1020L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4080, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2125344641, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3388), fieldTypeByte0, 0, 3929L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals((-3388), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("GPSVersionID", string1);
      assertEquals(0, tiffField0.getTag());
      assertEquals(3929, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50730, 50730, fieldTypeAscii0, 50730, 50730, byteArray0, byteOrder0, 48324);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getBytesLength();
      assertEquals(50730, int0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(48324, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(50730, tiffField0.getTag());
      assertEquals(50730, tiffField0.getDirectoryType());
      assertEquals(50730L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)19;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3991), 50218, fieldTypeRational0, (byte)19, (-2147483648L), byteArray0, byteOrder0, 1591);
      int int0 = Pattern.CANON_EQ;
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1764, (-501), fieldTypeFloat0.SHORT, 1764, (-2147483648L), byteArray0, byteOrder0, (-206));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-501), int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-206), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(3528, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1764, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-61);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 8184L, 8184L, byteArray0, (ByteOrder) null, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "jd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)49;
      byteArray0[16] = (byte)49;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      String string0 = File.pathSeparator;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(37381, (-3900), fieldTypeFloat0, (byte)49, 5001L, byteArray0, byteOrder0, 37381);
      String string1 = tiffField0.getValueDescription();
      assertEquals(37381, tiffField0.getTag());
      assertNotNull(string1);
      assertEquals(5001, tiffField0.getOffset());
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals((-3900), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50730, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50730, 50730, fieldTypeFloat0, 50730, 50730, byteArray0, byteOrder0, 50730);
      int int0 = tiffField0.getSortHint();
      assertEquals(50730, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(50730, tiffField0.getTag());
      assertEquals(202920, tiffField0.getBytesLength());
      assertEquals(50730, tiffField0.getOffset());
      assertEquals(50730, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      String string0 = File.pathSeparator;
      byte[] byteArray0 = new byte[236];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)64, (byte)64, fieldTypeFloat0.DOUBLE, (byte)64, (byte)64, byteArray0, byteOrder0, (byte)64);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(":");
      tiffField0.getValueDescription();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      assertEquals("BIG_ENDIAN", byteOrder1.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = File.pathSeparator;
      byte[] byteArray0 = new byte[236];
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)64, (byte)64, fieldTypeFloat0.DOUBLE, (byte)64, (byte)64, byteArray0, byteOrder2, (byte)64);
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getTag());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(512, tiffField0.getBytesLength());
      assertEquals(64, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte)19;
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3991), 50218, fieldTypeRational0, (byte)19, (-2147483648L), byteArray0, byteOrder0, 1591);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[17];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3192, 1, fieldTypeRational0, 3192, 1, byteArray0, byteOrder0, 3192);
      Object object0 = new Object();
      int int0 = Long.SIZE;
      byteOrder0.toString();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(695, 2147466266);
      tiffField0.getDoubleArrayValue();
      System.setCurrentTimeMillis(397);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-1);
      byteArray0[2] = (byte) (-39);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 4, fieldTypeRational0.ASCII, (byte)0, 1, byteArray0, byteOrder0, 3);
      tiffField0.dump();
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals((-1), int0);
      
      tiffField0.getCount();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-95);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(47, "B<>bDnAq%,I_gp%");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B<>bDnAq%,I_gp%");
      byte[] byteArray1 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1336, 47, fieldTypeShort0, 1536L, (byte)43, byteArray1, byteOrder0, 1336);
      ByteOrder.nativeOrder();
      tiffField0.dump();
      try { 
        FieldType.getFieldType(1336);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 1336 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeShort0, (byte)93, (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      int int0 = Short.SIZE;
      tiffField0.getIntArrayValue();
      fieldTypeShort0.getValue(tiffField0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.getDescriptionWithoutValue();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField((byte)93, 16, fieldTypeShort0.ASCII, 3279L, (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = File.separator;
      int int1 = Pattern.CASE_INSENSITIVE;
      ByteOrder byteOrder4 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder5 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder6 = ByteOrder.LITTLE_ENDIAN;
      tiffElement0.getElementDescription(false);
      tiffField1.dump();
      tiffField0.getTagName();
      FieldTypeShort fieldTypeShort1 = FieldType.SHORT;
      tiffField1.getDescriptionWithoutValue();
      try { 
        tiffField1.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@5d4ab1f4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "): ");
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)33, (byte)54, fieldTypeFloat0, (byte)54, 255L, byteArray0, byteOrder0, (-4835));
      TiffField tiffField1 = new TiffField((-4835), (-4835), fieldTypeFloat0.SLONG, 108L, (byte)54, byteArray0, byteOrder0, (-4835));
      tiffField0.getValueDescription();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      tiffField0.getTagInfo();
      tiffField1.getTagName();
      tiffField1.getDoubleArrayValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField1.getTag();
      tiffField0.getDescriptionWithoutValue();
      tiffField1.getValueDescription();
      tiffField0.getDoubleArrayValue();
      ByteOrder.nativeOrder();
      int int0 = Pattern.MULTILINE;
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
