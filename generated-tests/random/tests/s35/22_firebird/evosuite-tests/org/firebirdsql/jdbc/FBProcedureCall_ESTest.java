/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:03:45 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "=v[!fZT%7s?;{Z EL2");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      Object object0 = fBProcedureCall1.clone();
      fBProcedureParam0.setValue(object0);
      fBProcedureParam0.setType(1);
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      fBProcedureCall1.mapOutParamIndexToPosition(0);
      fBProcedureCall1.registerOutParam((-1), 0);
      fBProcedureCall1.setName(", ");
      fBProcedureCall1.getOutputParam((-2581));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setValue(", ");
      int int0 = 1;
      try { 
        fBProcedureCall0.registerOutParam(1, 1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "Z}:OC 2$z]6q?s!;");
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(2);
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(2);
      assertEquals(3, fBProcedureParam1.getPosition());
      
      fBProcedureCall0.getOutputParam((-36744287));
      fBProcedureCall0.getOutputParam((-1727));
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(Z}:OC 2$z]6q?s!;)", string0);
      
      fBProcedureCall0.getInputParams();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.addParam(2, "Z}:OC 2$z]6q?s!;");
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("Z}:OC 2$z]6q?s!;");
      fBProcedureCall1.hashCode();
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition(2);
      assertNotSame(fBProcedureCall1, fBProcedureCall0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(375);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "d,E!?A");
      fBProcedureParam0.setValue("d,E!?A");
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      int int0 = 991;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(991, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(3515, "?lbW;&U;!2@&");
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(3515);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      fBProcedureParam0.setType(3515);
      fBProcedureCall0.addParam(3515, "`^");
      try { 
        fBProcedureCall0.registerOutParam(3515, 3515);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(366, "250");
      fBProcedureCall0.mapOutParamIndexToPosition(366);
      Object object0 = fBProcedureCall0.clone();
      fBProcedureParam0.setIndex(18);
      fBProcedureParam0.setIndex(366);
      assertTrue(fBProcedureCall0.equals((Object)object0));
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType(41);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.registerOutParam(366, 366);
      fBProcedureCall0.equals(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertFalse(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getInputParam(510);
      fBProcedureCall0.addParam(1765, "Exception. ");
      fBProcedureCall1.getOutputParam(2);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall1.mapOutParamIndexToPosition(2, true);
      fBProcedureCall1.setName("bLk2kG_;^6$'lH>y0");
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.setName("bLk2kG_;^6$'lH>y0");
      fBProcedureCall0.getOutputParam(1557);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-577));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -578
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "Z}:OC 2$z]6q?s!;");
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(2);
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(3, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.getOutputParam(2);
      fBProcedureCall0.getOutputParam((-1727));
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(Z}:OC 2$z]6q?s!;)", string0);
      
      fBProcedureCall0.getInputParams();
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.addParam(2, "Z}:OC 2$z]6q?s!;");
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("Z}:OC 2$z]6q?s!;");
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(557, true);
      assertEquals(557, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("-JF");
      int int0 = (-494);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-494));
      int int1 = (-2891);
      fBProcedureParam0.setIndex((-2891));
      fBProcedureParam0.setType((-494));
      fBProcedureParam0.clone();
      fBProcedureCall0.clone();
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      int int0 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.registerOutParam(1008, 1008);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      int int0 = 1;
      fBProcedureCall1.clone();
      String string0 = null;
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam(1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2098);
      fBProcedureParam0.setIndex(2098);
      fBProcedureParam0.setIndex(2098);
      fBProcedureCall0.getInputParam(2098);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.clone();
      fBProcedureCall0.getInputParam(2382);
      fBProcedureCall0.getOutputParam((-1212));
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.mapOutParamIndexToPosition(31, true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addParam(0, "");
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam((-1212));
      assertFalse(fBProcedureParam1.isParam());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      fBProcedureCall0.setName(">=74Z-p}<cjMY&Qg~");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getName();
      fBProcedureCall0.getInputParams();
      int int0 = 0;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(0);
      int int0 = (-1642);
      fBProcedureCall0.setName("org.firebirdsql.jdbc.FBProcedureParam");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1642), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1642
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(1162);
      fBProcedureParam0.setIndex(1162);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("GCCv&<EioAQ");
      String string0 = "_d";
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1955), "_d");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1955
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "Z}:OC 2$z]6q?s!;");
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam(2);
      fBProcedureCall0.getOutputParam((-1727));
      fBProcedureCall0.getInputParams();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.getInputParam(3);
      fBProcedureCall0.addParam(2, "Z}:OC 2$z]6q?s!;");
      fBProcedureCall0.getName();
      fBProcedureCall0.setName("Z}:OC 2$z]6q?s!;");
      fBProcedureCall0.mapOutParamIndexToPosition(548, true);
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("x]/G_6B");
      fBProcedureCall0.addParam(4, "x]/G_6B");
      fBProcedureCall0.mapOutParamIndexToPosition((-142076997), true);
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      fBProcedureCall0.equals(list0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-142076997));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -142076998
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-1026);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1026));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1027
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(366, "250");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureParam0.setIndex(18);
      fBProcedureParam0.setIndex(366);
      fBProcedureParam0.setType(41);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.registerOutParam(366, 366);
      fBProcedureCall0.equals(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.getInputParam(41);
      assertNull(fBProcedureParam1.getParamValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureParam0.setIndex(2402);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addParam(2402, " not set and ");
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.mapOutParamIndexToPosition(2402);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2402);
      fBProcedureCall0.setName("rb");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-75753521));
      fBProcedureParam0.clone();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      Object object1 = fBProcedureCall0.clone();
      fBProcedureCall0.equals(object1);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getInputParam(2402);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getName();
      int int0 = 31;
      try { 
        fBProcedureCall0.registerOutParam(31, (-75753521));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2384);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-1275), true);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-3316), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(2);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2);
      assertEquals(2, int0);
      
      fBProcedureCall0.getInputParams();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1455, "OUT");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
  }
}
