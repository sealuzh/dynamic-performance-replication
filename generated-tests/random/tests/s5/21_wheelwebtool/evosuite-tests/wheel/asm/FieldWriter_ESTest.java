/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 13:27:11 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1070, "LocalVariableTypeTable", "oP", "oP", "oP");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4464));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ";qs(tX5}uJ)//", ";qs(tX5}uJ)//", (String) null, ";qs(tX5}uJ)//");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1275);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "/w]T2gDVbr_*J,", "(Vyf;.,)H.7", "/w]T2gDVbr_*J,", "/w]T2gDVbr_*J,");
      Attribute attribute0 = new Attribute("(Vyf;.,)H.7");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1692));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "k,5{PJj[[Rfxg~#2JV");
      fieldWriter0.visitAnnotation("k,5{PJj[[Rfxg~#2JV", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1692));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "k,5{PJj[[Rfxg~#2JV");
      fieldWriter0.visitAnnotation("k,5{PJj[[Rfxg~#2JV", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1342), "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", (Object) null);
      classWriter0.version = (-781);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.lastField.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1342), "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.lastField.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1801));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1220, "n3$#;Dd[>N>wTis{", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(208);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.FieldWriter", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "HDD&75");
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1342), "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", (Object) null);
      classWriter0.version = (-781);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1801));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1220, "n3$#;Dd[>N>wTis{", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1692));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "k,5{PJj[[Rfxg~#2JV");
      fieldWriter0.visitAnnotation("k,5{PJj[[Rfxg~#2JV", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1692));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synthetic", "Synthetic", "Synthetic", "k,5{PJj[[Rfxg~#2JV");
      fieldWriter0.visitAnnotation("k,5{PJj[[Rfxg~#2JV", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1342), "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", "k&LM+P*b8FdKj#QK$", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2731));
      classWriter0.visitField(933, "", "", "", "");
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 65535, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1275);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "/w]T2gDVbr_*J,", "(Vyf;.,)H.7", "/w]T2gDVbr_*J,", "/w]T2gDVbr_*J,");
      fieldWriter0.visitEnd();
  }
}
