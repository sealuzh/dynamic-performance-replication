/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 15:17:47 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("GgGj$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (-1649));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-1645), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1725);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      pipedInputStream0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1), 2735);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (-689));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -689. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.skip(1L);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("b", token1.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("package");
      StringReader stringReader1 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-94), (-5320));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(22, javaCharStream0.bufpos);
      assertEquals("FLOATING_POINT_LITERAL", token0.toString());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("default");
      StringReader stringReader1 = new StringReader("Z\u0006pzkK%pZ8~ uN<4 ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-130), (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c,{@W6+WH^%:>5s~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 89, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(356);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 356. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.skip(0);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.curLexState = 4;
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token1.kind);
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.backup(2278);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("nk2*i,7$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(42, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("inteace");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("inteace");
      StringReader stringReader2 = new StringReader("\"default\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 92, 92);
      stringReader2.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.defaultLexState = 2343;
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(92);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 92. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("6*KZ@$tl6;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[6];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = '~';
      charArray0[5] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("tl6", token0.toString());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("GKF|QSF/UCg81p&H^]o");
      StringReader stringReader1 = new StringReader("7tjw_/;Tv\" >4rwSA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 156, (-102));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager1.TokenLexicalActions(token_GTToken1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager2.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(104, token1.kind);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(", column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 19);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(110);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 110. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("interface");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[5];
      charArray0[0] = '}';
      charArray0[1] = 'v';
      charArray0[2] = 'L';
      charArray0[3] = '*';
      charArray0[4] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("face", token0.toString());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1723, (-4296));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-4294), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      StringReader stringReader0 = new StringReader("double");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 2628);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("double", token0.toString());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)91;
      StringReader stringReader0 = new StringReader("{*8vmo{lYkOd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, (byte)91);
      Token.newToken(126);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaCharStream0.available = (-519);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager3.TokenLexicalActions((Token) null);
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(96, javaCharStream0.getBeginColumn());
      //  // Unstable assertion: assertEquals(79, token1.kind);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("0hW-fUs#r>-s]@A*l");
      StringReader stringReader1 = new StringReader("Dw#e.flJcs195");
      StringReader stringReader2 = new StringReader("/Cq+KZ |6- 7p&%d7i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = 'm';
      charArray0[2] = 'g';
      charArray0[3] = '!';
      charArray0[4] = 'P';
      charArray0[5] = 'M';
      charArray0[6] = '.';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader2.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"-\" (45), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "M4Tv}L+k(MvqtGw";
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[2] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"}\" (125), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<DIGIT>");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("uxc5<!M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-C=P?G-x\"3CU;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-683));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<DIGIT>");
      javaParserTokenManager0.curLexState = (-557);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sX)p/W");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("sX)p/W");
      stringReader0.mark(51);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 96, 1016, 1016);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, true);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.curLexState = 316;
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token0.specialToken = (Token) token_GTToken0;
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token0.specialToken);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(0, token_GTToken0.beginColumn);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      StringReader stringReader0 = new StringReader("[w5UHf C'?C%y");
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      charBuffer0.rewind();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 37, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(40, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("if");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 376, 376, 376);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      token0.endColumn = 64;
      token0.image = "";
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaCharStream0.adjustBeginLineColumn(1292, (-1935));
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.TokenLexicalActions(token2);
      javaParserTokenManager0.jjFillToken();
      Token token3 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token3.kind);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("Vu^Yz?et");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-3289), 173);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager3.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(176, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("0hW-fUs#r>-s]@A*l");
      char[] charArray0 = new char[8];
      charArray0[0] = ',';
      charArray0[1] = 'K';
      charArray0[2] = 'o';
      charArray0[3] = '2';
      charArray0[4] = '+';
      charArray0[5] = 'x';
      charArray0[6] = '3';
      charArray0[7] = 'Y';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-758));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0, (int) (byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("r", token0.toString());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("he");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 42, 74);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-1));
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      Token.newToken(0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.setDebugStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SwitchTo(0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.skip(1L);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.prevCharIsCR = false;
      javaParserTokenManager1.curLexState = 54;
      javaParserTokenManager1.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(0, token1.kind);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      int int0 = 89;
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
      long long0 = 16384L;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, (-812));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -812. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Ir");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-3282));
      Token token0 = Token.newToken(41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-3281), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pg?I3v");
      StringReader stringReader1 = new StringReader("pg?I3v");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip(137438953472L);
      StringReader stringReader0 = new StringReader("93/@^-g(M");
      StringReader stringReader1 = new StringReader("ne?8M2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)11, (byte)44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("wOt/Rm?!ZR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 40, 40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(45, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("static");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-583));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-583), javaCharStream0.getBeginColumn());
      assertEquals(52, token0.kind);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '^';
      charArray0[2] = '~';
      charArray0[3] = '\'';
      charArray0[4] = '~';
      charArray0[5] = '~';
      charArray0[6] = '~';
      charArray0[7] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3055), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)43;
      byteArray0[4] = (byte) (-68);
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte) (-95);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)28;
      byteArray0[7] = (byte)35;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)67, (byte)2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)4);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)35, (byte)28);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)4, (byte)28, (byte)2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, (byte)4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^M1N#.");
      Token.newToken(978);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("0hW-fUs#r>-s]@A*l");
      StringReader stringReader1 = new StringReader("/Cq+KZ |6- 7p&%d7i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sw%_FFCN^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 103, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      javaParserTokenManager1.setDebugStream(mockPrintStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(31, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)91;
      StringReader stringReader0 = new StringReader("{*8vmo{lYkOd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, (byte)91);
      Token.newToken(126);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager3.TokenLexicalActions((Token) null);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(93, javaCharStream0.getBeginColumn());
      //  // Unstable assertion: assertEquals(96, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1024L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1404, (-32), 21);
      StringReader stringReader0 = new StringReader("h-pb@");
      StringReader stringReader1 = new StringReader("enum");
      javaCharStream0.ReInit((Reader) stringReader1, 5, (-32), 12);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager1.MoreLexicalActions();
      assertEquals((-32), javaCharStream0.getBeginColumn());
      assertEquals((-29), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1723, (-4296));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-4293), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      Token.newToken((-426));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 1649);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-426));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -426. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      StringReader stringReader1 = new StringReader("byte");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      StringReader stringReader0 = new StringReader("protected");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1723, 12);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(48, token0.kind);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      stringReader0.skip(1L);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.ExpandBuff(false);
      javaParserTokenManager1.curLexState = 54;
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(92, token1.kind);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)53;
      byteArray0[6] = (byte) (-20);
      byteArray0[7] = (byte)42;
      byteArray0[8] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)116);
      StringReader stringReader0 = new StringReader(";{ ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)65, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(";", token0.toString());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)17);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)17, 12, 0);
      StringReader stringReader0 = new StringReader("Ro");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 107, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      StringBuffer stringBuffer0 = new StringBuffer();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(108, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("protected");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)21;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2058, 124);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 22, (-1), 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 22, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      StringReader stringReader0 = new StringReader("j/,a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, (-151));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(26, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)100, (byte)100);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = (int) (byte)100;
      javaCharStream0.tokenBegin = (int) (byte)100;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.line = (-1);
      Token token0 = Token.newToken(100);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, token0.endLine);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q:t6$%'$f1#A!YEH~<@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"6\" (54), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)91, 0, (byte)17);
      StringReader stringReader0 = new StringReader("native");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1301, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("native", token0.toString());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("1D=<e4D)a}r>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 117, column 1.  Encountered: \"D\" (68), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-C=P?G-xHCZ;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(100);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 100. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("*=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("Q%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (-1649));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("Q", token1.toString());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)123;
      StringReader stringReader0 = new StringReader("int");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1179), (-1179));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SwitchTo((byte)0);
      assertEquals((-1177), javaCharStream0.getBeginColumn());
      assertEquals((-1177), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)91;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("1TqI.)Qp7@74#}f;~x2");
      StringReader stringReader1 = new StringReader(",");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)91, (byte)123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals(3, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(126, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("$H\"@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 67, (-697));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.readChar();
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 40);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 40. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("=ccGi(v$ON7N#|");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      StringReader stringReader1 = new StringReader("/Cq+KZ |6- 7p&%d7i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"c\" (99), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)91;
      byteArray1[2] = (byte)0;
      byteArray1[4] = (byte)91;
      byteArray1[5] = (byte)91;
      byteArray1[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.skip(128L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1254), (byte)0, (-160));
      StringReader stringReader0 = new StringReader("*2h-p1@");
      StringReader stringReader1 = new StringReader("+_|'fc%,!Yx");
      javaCharStream0.ReInit((Reader) stringReader0, 108, 5, 1404);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager");
      stringReader0.skip(16384L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 569, 569, 89);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.ReInit((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(569);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 569. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-983);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-983), (-983));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaCharStream0.column = 0;
      javaParserTokenManager0.lengthOfMatch = 0;
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = Token.newToken(0);
      token0.specialToken = token1;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-983));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -983. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      StringReader stringReader0 = new StringReader("abstract");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-2996L));
      StringReader stringReader1 = new StringReader("package");
      StringReader stringReader2 = new StringReader("0T7eZ|rH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)113, (byte)113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("abstract", token0.toString());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ln\"C5;)GFEi!}@H=\"");
      StringReader stringReader1 = new StringReader("ln\"C5;)GFEi!}@H=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 87, 21);
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 718, (-1), (byte)0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("msFwSJbet^?g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, 23);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$&`W`$]S>1n$s>9Z");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1153205178606813184L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 5, (byte) (-105), (-1016));
      StringReader stringReader1 = new StringReader("synchronized");
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = 'N';
      charArray0[2] = 'u';
      charArray0[3] = 'K';
      charArray0[4] = 'n';
      charArray0[5] = '<';
      charArray0[6] = 'B';
      charArray0[7] = '0';
      stringReader1.read(charArray0);
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("enum");
      javaCharStream0.ReInit((Reader) stringReader1, 1404, 3371, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(3374, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      StringReader stringReader1 = new StringReader("@g1NUa|3Dyg");
      StringReader stringReader2 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 0, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)85);
      StringReader stringReader0 = new StringReader("93/@^-g(M");
      StringReader stringReader1 = new StringReader("p)Ga=rS{/,zp-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)29, (byte)11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader(".nWU*I");
      StringReader stringReader1 = new StringReader(".nWU*I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 33, 9);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("nWU", token0.toString());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip(2199023255552L);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1404, 1723, 150);
      StringReader stringReader1 = new StringReader("*2h-p1@");
      StringReader stringReader2 = new StringReader("K<DECIMAL_LITERAL>");
      stringReader2.ready();
      javaCharStream0.ReInit((Reader) stringReader2, 1723, 108, 150);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(74, token0.kind);
      assertEquals("K", token0.toString());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)91, 0, (byte)17);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SwitchTo(0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(91, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 8, (byte)105, 8);
      StringReader stringReader0 = new StringReader("*2h-p1@");
      StringReader stringReader1 = new StringReader("+_|'fc%,!Yx");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1048, 106, (-1254));
      javaCharStream1.ReInit((Reader) stringReader0, (-160), (-160), (int) (byte)105);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -160, column -158.  Encountered: \"h\" (104), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(89, token1.kind);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      StringReader stringReader0 = new StringReader("[w5UHf C'?C%y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-907), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.mark(0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.next;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(25, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 1);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader(")W[/Q`jK\"0TLl");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("W", token1.toString());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("j}EEFO|i;OWO=/'");
      StringReader stringReader1 = new StringReader("transient");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1315, 0);
      Token token0 = Token.newToken(1315);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(1315, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E$\"@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 76, 76);
      Token token0 = Token.newToken(13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 76, column 81.  Encountered: <EOF> after : \"\\\"@\\u007f\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, (-2723));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2723. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      StringReader stringReader0 = new StringReader("abstract");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 41, 85);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = new Token();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(92, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)112;
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)112;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)113;
      byteArray1[4] = (byte)113;
      StringReader stringReader0 = new StringReader("*Ju\"6g/avuafi}");
      StringReader stringReader1 = new StringReader("*Ju\"6g/avuafi}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)113, (int) (byte)1, 315);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("Ju", token0.toString());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      char[] charArray0 = new char[6];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      charArray0[2] = 'n';
      charArray0[3] = '<';
      charArray0[4] = 'K';
      charArray0[5] = 'K';
      stringReader0.read(charArray0);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("O;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 8, 48, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(106, token0.kind);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@g1NUa|3Dyg");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(10, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("case");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 99);
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(18, token0.kind);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("r'i<?=+e@m#G_0f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 3.  Encountered: \"<\" (60), after : \"\\'i\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)83;
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("%=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)83);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("to6VKi5!1Y)17t-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 111, (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(98, javaCharStream0.getBeginColumn());
      assertEquals(111, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Token token0 = Token.newToken((-1));
      token0.image = "C$Vme<JDM^";
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1248, 2006);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("*-d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2432), 124);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(125, javaCharStream0.getBeginColumn());
      assertEquals(102, token0.kind);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-1275L));
      StringReader stringReader0 = new StringReader(">>>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)117, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(51, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"default\"");
      StringReader stringReader1 = new StringReader("\"default\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-143), (-5196));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-264), 12, (byte)8);
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("ciivTgWkxOgU");
      javaCharStream0.ReInit((Reader) stringReader3, (-264), (-5196), 2399);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals("ciivTgWkxOgU", token0.toString());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader(">=");
      StringReader stringReader1 = new StringReader("&Hwt~-r c0y)");
      Token.newToken(108);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("\"|\"");
      StringReader stringReader1 = new StringReader("\"?\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 30, 2145388542);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Token.newToken((byte)0);
      StringReader stringReader0 = new StringReader("#y7cU&");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 88);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 4, (-2549), 104);
      StringReader stringReader1 = new StringReader("b9L2|EA");
      StringReader stringReader2 = new StringReader(" 'iwo>iq5`H@");
      javaCharStream0.ReInit((Reader) stringReader1, 61, 79, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("b9L2", token0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Token token0 = Token.newToken(63);
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("+=", token1.toString());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)1;
      byteArrayInputStream1.read(byteArray1);
      byteArrayInputStream0.skip((byte)25);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)1, (byte)1, (byte)113);
      StringReader stringReader1 = new StringReader(">>");
      StringReader stringReader2 = new StringReader("M4Tv}L+k(MvqtGw");
      javaCharStream0.ReInit((Reader) stringReader1, 45, 108, 3462);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 45, column 110.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("GKF|QSF/UCg81p&H^]o");
      StringReader stringReader1 = new StringReader("GKF|QSF/UCg81p&H^]o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 131, (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(94, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]``$]S>1n$s>9Z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 1.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$&`W`$]S>1n$s>9Z");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(329);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 329. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)76;
      StringReader stringReader0 = new StringReader("n*fo#*``pb0V1SE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)76, 957);
      Token.newToken(1028);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(958, javaCharStream0.getBeginColumn());
      assertEquals(103, token0.kind);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken((-426));
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertNull(token0.toString());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("j}EEFO|i;OWO=/'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-32));
      Token token0 = Token.newToken((byte)105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token1.kind);
      assertEquals("j", token1.toString());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("j}EEFO|i;OWO=/'");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-972));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.mark(0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.next;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column -972.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1153205178606813184L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)91, 3252, (-1746));
      StringReader stringReader0 = new StringReader("synchronized");
      stringReader0.skip(6L);
      StringReader stringReader1 = new StringReader("Q yX-1e ^$6|i$");
      javaCharStream0.ReInit((Reader) stringReader0, 3395, 35, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(40, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("LX{@A?!|h3) r3J&w");
      StringReader stringReader1 = new StringReader("LX{@A?!|h3) r3J&w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-13), 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Token token0 = Token.newToken(1981);
      StringReader stringReader0 = new StringReader("r'i<?=+e@m#G_0f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k;#=,si<! 7&0D5WN");
      int int0 = 43;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaCharStream0.GetImage();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.curChar = '~';
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      token0.endColumn = 23;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      javaParserTokenManager0.jjFillToken();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("do");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[1] = (byte)113;
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream2.skip((byte)11);
      StringReader stringReader1 = new StringReader("package");
      StringReader stringReader2 = new StringReader("package");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)11, (byte)113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(46, token0.kind);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("in6eace");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-758), (-758));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-752), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)83;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.skip((byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)83, 21, 3916);
      StringReader stringReader0 = new StringReader("\"...\"");
      StringReader stringReader1 = new StringReader("*2h-p1@");
      javaCharStream0.ReInit((Reader) stringReader0, 25, 111, 3916);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 25, column 111.  Encountered: \"\\\"\" (34), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q%");
      StringReader stringReader1 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)0, 120);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager3.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(125, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip(2199023255552L);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1404, 1723, 150);
      StringReader stringReader1 = new StringReader("*2h-p1@");
      StringReader stringReader2 = new StringReader("<DECIMAL_LITERAL>");
      javaCharStream0.ReInit((Reader) stringReader2, 1723, 108, 150);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1713);
      StringReader stringReader0 = new StringReader("xh(dJ5eIh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1713, 1713);
      Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("default");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sw%_FFCN^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 103, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(30, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("%ne$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-908), (-32));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.line = (-32);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals((-29), javaCharStream0.getEndColumn());
      
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader(".tQ3_v!GxarO}xq'8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-946), (byte)17);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)1;
      byteArrayInputStream1.read(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, (byte)1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("}", token0.toString());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Token token0 = Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)48, 30, 2275);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = (int) (byte)20;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 48, column 30.  Encountered: \"\\u0014\" (20), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      Token token0 = Token.newToken(18);
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-758));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-758), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte)1;
      byteArrayInputStream1.read(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)1, (byte)1, (byte)95);
      StringReader stringReader1 = new StringReader("Ts# K");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      javaCharStream0.ReInit((Reader) stringReader2, 108, 108, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedKind = 22;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, (int) (byte)1);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(110, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)40;
      StringReader stringReader0 = new StringReader("AjqO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-162), 1227);
      StringReader stringReader1 = new StringReader(":");
      StringReader stringReader2 = new StringReader("1 s|_X^d\"}Ngv<QA");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 95, 70);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1230, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("0hW-fUs#r>-s]@A*l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-758));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("0hW", token0.toString());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-108);
      byteArray0[4] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 99);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (int) (byte)0, 91, (-1467));
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"import\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 23);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Sw%_FFCN^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 103, 28);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer(103);
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(29, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("<", token0.toString());
      assertEquals(88, token0.kind);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("import");
      StringReader stringReader1 = new StringReader("*2h-p1@");
      StringReader stringReader2 = new StringReader("import");
      StringReader stringReader3 = new StringReader("transient");
      Token.newToken((-22));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("import", token0.toString());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("interface");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      charArray0[1] = 'v';
      charArray0[2] = 'L';
      charArray0[3] = '*';
      charArray0[4] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("ace", token0.toString());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("interface");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 15, (byte) (-38), (byte) (-38));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(1597);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("u", token1.toString());
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1509, 1504);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      assertEquals(1513, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".nWU*I");
      StringReader stringReader1 = new StringReader(".nWU*I");
      StringReader stringReader2 = new StringReader(".nWU*I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 33, 33);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(37, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      StringReader stringReader0 = new StringReader("^=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1308, (byte)117);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = null;
      try {
        javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 1277);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1277. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-822));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -822. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("p#PUYLvk'");
      StringReader stringReader2 = new StringReader("t!b:");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 118, 329);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 118, column 330.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      StringReader stringReader0 = new StringReader("\"default\"");
      StringReader stringReader1 = new StringReader("\"default\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 99, 99);
      char[] charArray0 = new char[1];
      charArray0[0] = 'x';
      stringReader1.read(charArray0);
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(105);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 105. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      StringReader stringReader1 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1723, 1723);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.defaultLexState = 1723;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1485));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1485. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("G5~({tTY;'c68^~'4");
      StringReader stringReader1 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2271, 1853);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 2271);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2271. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("0hW-fUs#r>-s]@A*l");
      StringReader stringReader1 = new StringReader("Dw#e.flJcs195");
      StringReader stringReader2 = new StringReader("/Cq+KZ |6- 7p&%d7i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.ReInit((Reader) stringReader2, 0, 0, 31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E$\"@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, (-1649));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"static\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = '\\';
      charArray0[2] = 'i';
      charArray0[3] = 'V';
      charArray0[4] = '[';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.skip((byte)0);
      StringReader stringReader0 = new StringReader("g$KnkDe|.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-480), 999);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("}m=d5}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<DIGIT>");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^M1N#.");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)60;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader(";re_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte) (-126), (byte)73);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("c+\"TZ;MIlJn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, (-32));
      StringReader stringReader1 = new StringReader(":");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 70, (-911));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(92, token0.kind);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)83;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      StringReader stringReader0 = new StringReader("transient");
      StringReader stringReader1 = new StringReader("677O88v T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-816), (-816));
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(6, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals((-810), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t!b:");
      StringReader stringReader1 = new StringReader(">>>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 100);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(4, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip(137438953472L);
      StringReader stringReader0 = new StringReader("93/@^-g(M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)11, (byte)44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 11, column 45.  Encountered: \"3\" (51), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",+Z])7wHl S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 3780);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.defaultLexState = 577;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 25);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 25. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Nb=E`:`jfwr4#hH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      token1.kind = 87;
      token1.image = "";
      token1.beginColumn = 2;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 87. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",+Z])7wHl S");
      StringReader stringReader1 = new StringReader(",+Z])7wHl S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), (-557));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@g1NUa|3Dyg");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1241, 84);
      javaParserTokenManager0.ReInit(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1241, column 89.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      StringReader stringReader0 = new StringReader("catch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-758), 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-758), javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1024L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1404, (-32), 21);
      StringReader stringReader0 = new StringReader("*2h-p1@");
      StringReader stringReader1 = new StringReader("enum");
      javaCharStream0.ReInit((Reader) stringReader1, 5, (-32), 12);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-29), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = 0;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.MoreLexicalActions();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("v", token0.toString());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put(']');
      stringReader0.read(charBuffer0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'l';
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)49;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.skip((byte)108);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"l\" (108), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)91;
      byteArray1[2] = (byte)0;
      byteArray1[4] = (byte)91;
      byteArray1[5] = (byte)91;
      byteArray1[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.skip(128L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1254), (byte)0, (-160));
      StringReader stringReader0 = new StringReader("c");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 21, 488);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("c", token0.toString());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-47);
      StringReader stringReader0 = new StringReader("*Ju\"6g/avuafi}");
      StringReader stringReader1 = new StringReader(">>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader1, 1, 22, 2834);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      assertEquals(22, javaCharStream0.getBeginColumn());
      assertEquals(24, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1762));
      Token.newToken((-2397));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1762), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)127;
      byteArray0[4] = (byte)85;
      byteArray0[5] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)29);
      StringReader stringReader0 = new StringReader("jGk&");
      StringReader stringReader1 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1381, (byte)85);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(53, token0.kind);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, 0, (byte)17);
      StringReader stringReader0 = new StringReader("native");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1301, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(1306, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)100, (byte)100);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = (int) (byte)100;
      javaCharStream0.tokenBegin = (int) (byte)100;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.line = 50;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (-1178));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1178. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("to6VKi5!1Y)17t-");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)91, (-130));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals((-124), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("|=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("Vu^Yz?et");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-3289), 173);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.next;
      javaParserTokenManager1.TokenLexicalActions((Token) null);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.ReInit(javaCharStream0);
      assertEquals(175, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.curChar = '(';
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Token token0 = Token.newToken(1981);
      StringReader stringReader0 = new StringReader("r'i<?=+e@m#G_0f");
      char[] charArray0 = new char[7];
      charArray0[0] = 'X';
      charArray0[1] = '^';
      charArray0[2] = '0';
      charArray0[3] = 'P';
      charArray0[4] = '@';
      charArray0[5] = 'Q';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("j}EEFO|i;OWO=/'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (byte)105);
      Token token0 = Token.newToken((byte)105);
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.jjnewStateCnt = (-440);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(105, javaCharStream0.getBeginColumn());
      assertEquals(80, token1.kind);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$&`WF$]S>1n$s>9Z");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Token token0 = Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 8, (byte)105, 8);
      StringReader stringReader0 = new StringReader("*h-p1@");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("+_|'fc%,!Yx");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1048, 106, (-1254));
      javaCharStream1.ReInit((Reader) stringReader0, (-160), (-160), (int) (byte)105);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals((-160), javaCharStream1.getBeginColumn());
      assertEquals((-160), javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      Token token0 = Token.newToken((byte)91);
      StringReader stringReader0 = new StringReader("C$Vme<JDM^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-964), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)105;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)105);
      StringReader stringReader0 = new StringReader("[w5UHf C'?C%y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-907), 24);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.mark(0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.next;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjmatchedPos = 1580;
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)113;
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)1;
      byteArrayInputStream1.read(byteArray1);
      byteArrayInputStream0.skip((byte)25);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)1, 784, (byte)113);
      StringReader stringReader1 = new StringReader(">>");
      StringReader stringReader2 = new StringReader("M4Tv}L+k(MvqtGw");
      javaCharStream0.ReInit((Reader) stringReader1, 45, 108, 3462);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(108, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$&`W`$]S>1n$s>9Z");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1153205178606813184L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 5, (byte) (-105), (-1016));
      StringReader stringReader1 = new StringReader("synchronized");
      StringReader stringReader2 = new StringReader("enum");
      javaCharStream0.ReInit((Reader) stringReader1, 1404, 3371, (int) (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3371, javaCharStream0.getBeginColumn());
      assertEquals("synchronized", token0.toString());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.skip((-1392L));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 115, 36, 6);
      javaCharStream0.inBuf = 115;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g~I[;B");
      StringReader stringReader0 = new StringReader(">>");
      StringReader stringReader1 = new StringReader("Q%");
      javaCharStream0.ReInit((Reader) stringReader1, 93, 6, (int) (byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-110), 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4095, javaCharStream1.bufpos);
      assertEquals(">>", token0.toString());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k'b~`P'wdqoO0MBiqVh");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte) (-111);
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte)88;
      byteArray0[6] = (byte)30;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 872);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 53);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 53. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("@g1NUa|3Dyg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-557), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("-TS_shHVNujfM.[X?:");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-4319), (-4219));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("-", token0.toString());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("spr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 793);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(795, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("[w5UHf C'?C%y");
      char[] charArray0 = new char[2];
      charArray0[0] = 'L';
      charArray0[1] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("[w5UHf C'?C%y");
      StringReader stringReader2 = new StringReader("[w5UHf C'?C%y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.ReInit((Reader) stringReader0, 3462, (-2215), 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3462, column -2214.  Encountered: \"U\" (85), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1713);
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1713);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4296), (-4023));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = Token.newToken(2333);
      javaParserTokenManager2.TokenLexicalActions(token0);
      javaParserTokenManager2.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-4023));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -4023. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<AW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 760, 760);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(21, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("M4Tv}L+k(MvqtGw");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)1;
      byteArrayInputStream1.read(byteArray1);
      byteArrayInputStream0.skip((byte)25);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)1, (byte)1, (byte)113);
      StringReader stringReader1 = new StringReader("zQ]CIKh]^aH@|iB");
      StringReader stringReader2 = new StringReader("M4Tv}L+k(MvqtGw");
      javaCharStream0.ReInit((Reader) stringReader1, 45, 108, 3462);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 255, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(312);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 312. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      StringReader stringReader0 = new StringReader("\"default\"");
      StringReader stringReader1 = new StringReader("\"default\"");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, (-530));
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader(".G");
      stringReader2.ready();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 13, 220);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",+Z])7wHl S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 3780);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      token0.endColumn = 35;
      StringReader stringReader1 = new StringReader("4");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringReader stringReader2 = new StringReader("K<DECIMAL_LITERAL>");
      stringReader0.ready();
      javaCharStream0.ReInit((Reader) stringReader1, 35, 54, 3780);
      javaParserTokenManager0.jjnewStateCnt = 6;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.jjFillToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 35);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 35. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)112;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)113;
      byteArray1[4] = (byte)113;
      byteArrayInputStream0.read(byteArray1);
      byteArrayInputStream0.skip((-1555L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)112, (byte)112, 0);
      StringReader stringReader0 = new StringReader("*Ju\"6g/avuafi}");
      StringReader stringReader1 = new StringReader("*Ju\"6g/avuafi}");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.ReInit((Reader) stringReader0, (int) (byte)113, (int) (byte)1, 315);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("throw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, (-32));
      StringReader stringReader1 = new StringReader(":");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 70, (-911));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(92, token0.kind);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("default");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2116, 27);
      Token token0 = Token.newToken((byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(27, javaCharStream0.getBeginColumn());
      assertEquals(24, token1.kind);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1713);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1713, (-4296));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.nextCharInd = 1713;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1713, column -4295.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)91, 0, (byte)17);
      StringReader stringReader0 = new StringReader("3");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1301, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      stringReader0.ready();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.SwitchTo(0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Token.newToken((byte)0);
      StringReader stringReader0 = new StringReader("#y7cU&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 50, column 91.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1723);
      StringReader stringReader0 = new StringReader("D7f+U3)<:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1723, (-4296));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.ReInit(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-4293), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$&`W`$]S>1n$s>9Z");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("B_BV?$-N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)109, (byte)109);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.prevCharIsCR = true;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("f?!|h3)Ur3&w");
      StringReader stringReader1 = new StringReader("f?!|h3)Ur3&w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 79);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(79, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte)105;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 576, 106, 3719);
      StringReader stringReader0 = new StringReader("q9Ac](cflQj;gL");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)123, (int) (byte)123, 33);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1713);
      char[] charArray0 = new char[3];
      charArray0[0] = 'Q';
      charArray0[1] = '~';
      charArray0[2] = '~';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("<EOF>");
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 37, 25, 37);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("F", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("[w5UHf C'?C%y");
      StringReader stringReader1 = new StringReader("[w5UHf C'?C%y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2203), (-2203));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -2203, column -2193.  Encountered: \"C\" (67), after : \"\\'?\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      StringReader stringReader0 = new StringReader("obCGE=S,'f]y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)91, (byte)91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(96, javaCharStream0.getColumn());
  }
}
