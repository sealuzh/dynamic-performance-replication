/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 06:49:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(543, "V");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-111);
      byteArray0[5] = (byte)24;
      TiffField tiffField0 = new TiffField(1946, 9, fieldTypeRational0, 1385L, 80L, byteArray0, byteOrder0, (byte) (-44));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(1946, tiffField0.getTag());
      assertEquals(11080, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(6, int0);
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(543, "V");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte)24;
      TiffField tiffField0 = new TiffField(1946, 9, fieldTypeRational0, 1385L, 80L, byteArray0, byteOrder0, (byte) (-44));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(80, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1946, tiffField0.getTag());
      assertEquals(11080, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-3180), (byte) (-20), fieldTypeFloat0, (-27488L), (byte) (-20), byteArray0, byteOrder0, (byte) (-20));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-3180), tiffField0.getTag());
      assertEquals((-20), tiffField0.getOffset());
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals((-20), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1533), fieldTypeShort0, (byte)2, 1908L, byteArray0, byteOrder0, 14);
      tiffField0.dump();
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1533), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 29, 330, byteArray0, byteOrder0, 2);
      tiffField0.getValue();
      assertEquals(330, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(232, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1533), fieldTypeShort0, (byte)2, 1908L, byteArray0, byteOrder0, 14);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-1533), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 29, 330, byteArray0, byteOrder0, 2);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2108438490, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2108438490, 2108438490, fieldTypeShort0, 408L, 4L, byteArray0, byteOrder0, 1235);
      int int0 = tiffField0.getTag();
      assertEquals(1235, tiffField0.getSortHint());
      assertEquals(2108438490, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2108438490, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1213), (-2815), fieldTypeAscii0, 1L, (-1213), byteArray0, byteOrder0, (-1213));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1213), tiffField0.getOffset());
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1213), tiffField0.getTag());
      assertEquals((-1213), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(610, 50, fieldTypeShort0, (byte)66, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(610, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-29), (-29), fieldTypeByte0, 1L, 40L, byteArray0, byteOrder0, (-29));
      int int0 = tiffField0.getSortHint();
      assertEquals((-29), tiffField0.getDirectoryType());
      assertEquals((-29), int0);
      assertEquals(40, tiffField0.getOffset());
      assertEquals((-29), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(149, 3587, fieldTypeAscii0, 0L, 1L, byteArray0, byteOrder0, (byte) (-2));
      int int0 = tiffField0.getOffset();
      assertEquals(3587, tiffField0.getDirectoryType());
      assertEquals(149, tiffField0.getTag());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 4L, 2433L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2433, tiffField0.getOffset());
      assertEquals(255, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-33);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-33), (byte) (-33), fieldTypeShort0, 880L, (-615L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-33), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1760, tiffField0.getBytesLength());
      assertEquals((-33), tiffField0.getTag());
      assertEquals((-8448), int0);
      assertEquals((-615), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147314886), (-2147314886), fieldTypeShort0, 1L, 2190, byteArray0, byteOrder0, (-2147314886));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2147314886), tiffField0.getSortHint());
      assertEquals((-2147314886), tiffField0.getTag());
      assertEquals(2190, tiffField0.getOffset());
      assertEquals((-2147314886), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)17;
      TiffField tiffField0 = new TiffField(1, (-2411), fieldTypeShort0, 1, (-2411), byteArray0, (ByteOrder) null, (-1220));
      tiffField0.getIntValue();
      assertEquals((-1220), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2411), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2411), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0.IFD, 1, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65535, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-2021L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2021), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-493), "");
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeDouble0, (-1274L), 797, byteArray0, byteOrder0, 18);
      tiffField0.getFieldTypeName();
      assertEquals(797, tiffField0.getOffset());
      assertEquals(797, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(797, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(704, 1223, (FieldType) null, (-18560L), (-1452L), byteArray0, byteOrder0, 10);
      tiffField0.getFieldType();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-1452), tiffField0.getOffset());
      assertEquals(1223, tiffField0.getDirectoryType());
      assertEquals(704, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1697), (-1697), fieldTypeByte0, (-1657L), (-1657L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals((-1697), tiffField0.getTag());
      assertEquals((-1657), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1697), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3180), "V");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-7), (-3180), fieldTypeRational0, 1483L, 1194L, byteArray0, byteOrder0, (-3180));
      tiffField0.getFieldType();
      assertEquals(1194, tiffField0.getOffset());
      assertEquals((-3180), tiffField0.getSortHint());
      assertEquals((-3180), tiffField0.getDirectoryType());
      assertEquals((-7), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(390, 65535, fieldTypeShort0, 1L, (-1178L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(390, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1178), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[26];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeLong0, 1L, 494L, byteArray0, byteOrder0, 303);
      tiffField0.getDoubleValue();
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(303, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(494, tiffField0.getOffset());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0.SLONG, 1, 1L, byteArray0, byteOrder0, 0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(62, "U=7?sQS>ut/FlIY-");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeRational0, 62, 62, byteArray0, byteOrder0, 616);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(62, tiffField0.getTag());
      assertEquals(616, tiffField0.getSortHint());
      assertEquals(62, int0);
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, 26200L, 1483L, byteArray0, byteOrder0, (-7));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-7), tiffField0.getTag());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals(1483, tiffField0.getOffset());
      assertEquals((-7), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(41993, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41993, (-2079), fieldTypeRational0, 41993, 0L, (byte[]) null, byteOrder0, (-2079));
      long long0 = tiffField0.getCount();
      assertEquals(41993L, long0);
      assertEquals(41993, tiffField0.getTag());
      assertEquals((-2079), tiffField0.getDirectoryType());
      assertEquals((-2079), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, (-1), fieldTypeByte0, (-1), 2915L, byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2915, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2416), 42112, fieldTypeShort0, 42112, 42112, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2416), tiffField0.getTag());
      assertEquals(42112, tiffField0.getOffset());
      assertEquals(42112, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(84224, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-3180), (byte) (-20), fieldTypeFloat0, (-27488L), (byte) (-20), byteArray0, byteOrder0, (byte) (-20));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals((-3180), tiffField0.getTag());
      assertEquals((-20), tiffField0.getOffset());
      assertEquals((-109952), int0);
      assertEquals((-20), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-451), 1, fieldTypeByte0, (-451), 959L, byteArray0, (ByteOrder) null, 8);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals((-451), tiffField0.getTag());
      assertEquals(959, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), (byte) (-25), fieldTypeShort0, (byte) (-25), (byte) (-25), byteArray0, byteOrder0, (byte) (-25));
      tiffField0.getByteOrder();
      assertEquals((-25), tiffField0.getOffset());
      assertEquals((-25), tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-25), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1960), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1960), 975, fieldTypeFloat0, 975, (byte)43, byteArray0, byteOrder0, (byte)43);
      tiffField0.getByteArrayValue();
      assertEquals(975, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(3900, tiffField0.getBytesLength());
      assertEquals((-1960), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(2958);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-608), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals((-608), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34012, 34012, fieldTypeRational0, 34012, 34012, (byte[]) null, byteOrder0, 34012);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-31), (-31), fieldTypeRational0, (-31), (-31), byteArray0, byteOrder0, (-31));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51017, 51017, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 51017);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1391, 1391, fieldTypeRational0, 1391, 1391, (byte[]) null, byteOrder0, 1391);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1206), (-1206), fieldTypeShort0, (-1206), (-1206), byteArray0, byteOrder0, (-1206));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1533), fieldTypeShort0, (byte)2, 1908L, byteArray0, byteOrder0, 14);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(251, 251, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, 251);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50976, 50976, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 50976);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(747, 747, fieldTypeShort0, 747, 747, (byte[]) null, (ByteOrder) null, (-447));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-19), (-19), fieldTypeRational0, (-19), (-19), byteArray0, byteOrder0, (-19));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField(91, 91, (FieldType) null, 91, 91, byteArray0, (ByteOrder) null, 91);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50889, 50889, fieldTypeShort0, 50889, 50889, (byte[]) null, byteOrder0, 50889);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1719), (-1719), fieldTypeShort0, (-1719), (-1719), byteArray0, byteOrder0, (-1719));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2037, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeRational0, (-2147483648L), 40094, byteArray0, byteOrder0, 18);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(773, 773, fieldTypeShort0, 773, 773, (byte[]) null, (ByteOrder) null, 773);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1719), (-1719), fieldTypeShort0, (-1719), (-1719), byteArray0, byteOrder0, (-1719));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(756, 756, fieldTypeShort0, 756, 756, (byte[]) null, (ByteOrder) null, 756);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3191), (-3191), fieldTypeRational0, (-3191), (-3191), byteArray0, byteOrder0, (-3191));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(535, (-1458), (FieldType) null, (-1458), (-1L), byteArray0, byteOrder0, (-1458));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(40095, 23, fieldTypeRational0, 23, 40095, byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(756, 756, fieldTypeShort0, 756, 756, (byte[]) null, (ByteOrder) null, 756);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-757), (-757), fieldTypeRational0, (-757), (-757), byteArray0, byteOrder0, (-757));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, (byte[]) null, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2807), (-2807), fieldTypeShort0, (-2807), (-2807), byteArray0, byteOrder0, (-2807));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(943, 518, (FieldType) null, (byte) (-33), 518, byteArray0, byteOrder0, 518);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(550, 550, fieldTypeShort0, 550, 550, (byte[]) null, byteOrder0, 550);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-125), (-125), fieldTypeShort0, (-125), 0L, byteArray0, byteOrder0, (-125));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(489, 489, fieldTypeShort0.SRATIONAL, (-1L), 489, byteArray0, byteOrder0, 489);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("d\"4;o8i+R?G!L1");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "d\"4;o8i+R?G!L1");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2471), (-2471), fieldTypeRational0, (-1L), (-2471), byteArray0, byteOrder0, (-2471));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50);
      MockFileWriter mockFileWriter0 = new MockFileWriter("a}+2");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1071), (-1071), fieldTypeShort0.DOUBLE, (-1071), (-1071), byteArray0, byteOrder0, (-1071));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3180), "V");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(710, (-3180), fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, 710);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("V");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(710, tiffField0.getTag());
      assertEquals(710, tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-3180), tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(48131, 2, fieldTypeLong0, 1L, (-8428L), byteArray0, byteOrder0, (-1714));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1714), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-8428), tiffField0.getOffset());
      assertEquals(48131, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3180), "V");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeRational0, 990L, 492L, byteArray0, byteOrder0, (byte) (-20));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(492, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KBmVB]IY[N");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)74);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1702L), 0L, byteArray0, byteOrder0, (-3623));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3623), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2044, 2044, fieldTypeRational0, 2044, 2044, byteArray0, byteOrder0, 2044);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeAscii0, 23, 3940L, (byte[]) null, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "X|0YLTEOO");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeFloat0, 0, (-1L), byteArray0, byteOrder0, 34859);
      int int0 = tiffField0.getOffset();
      assertEquals(34859, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2807), 3494, fieldTypeShort0, 65535, 0L, byteArray0, byteOrder0, 494);
      int int0 = tiffField0.getTag();
      assertEquals(494, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2807), int0);
      assertEquals(3494, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2073432487, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeAscii0, 2303, 2303, byteArray0, byteOrder0, 2303);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2303, tiffField0.getDirectoryType());
      assertEquals(2303, tiffField0.getOffset());
      assertEquals(2303, tiffField0.getSortHint());
      assertEquals("2303 (0x8ff: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(794, 794, fieldTypeRational0, 1L, 794, byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeAscii0, 2303, 2303, byteArray0, byteOrder0, 2303);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5a8c0bc4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[64];
      TiffField tiffField0 = new TiffField(788, 788, fieldTypeShort0.IFD, 788, 788, byteArray0, (ByteOrder) null, 788);
      tiffField0.getIntValueOrArraySum();
      assertEquals(788, tiffField0.getTag());
      assertEquals(788L, tiffField0.getCount());
      assertEquals(788, tiffField0.getDirectoryType());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals(788, tiffField0.getOffset());
      assertEquals(788, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeAscii0, 2303, 2303, byteArray0, byteOrder0, 2303);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@12bec423 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(788, 788, fieldTypeFloat0, 788, 788, byteArray0, (ByteOrder) null, 788);
      tiffField0.getDoubleArrayValue();
      assertEquals(788, tiffField0.getOffset());
      assertEquals(788L, tiffField0.getCount());
      assertEquals(788, tiffField0.getTag());
      assertEquals(788, tiffField0.getDirectoryType());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals(788, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeDouble0, 53, 53, byteArray0, (ByteOrder) null, 53);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(53, tiffField0.getTag());
      assertEquals(25, doubleArray0.length);
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals(53L, tiffField0.getCount());
      assertEquals(53, tiffField0.getOffset());
      assertEquals(53, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      tiffField0.getDoubleArrayValue();
      assertEquals(797, tiffField0.getDirectoryType());
      assertEquals(797, tiffField0.getSortHint());
      assertEquals(797, tiffField0.getTag());
      assertEquals(797, tiffField0.getOffset());
      assertEquals(1594, tiffField0.getBytesLength());
      assertEquals(797L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2037, tiffField0.getDirectoryType());
      assertEquals(2037L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2037, tiffField0.getSortHint());
      assertEquals(2037, tiffField0.getTag());
      assertEquals(2037, tiffField0.getOffset());
      assertEquals(16296, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      tiffField0.getDoubleArrayValue();
      assertEquals(2037, tiffField0.getDirectoryType());
      assertEquals(2037, tiffField0.getOffset());
      assertEquals(16296, tiffField0.getBytesLength());
      assertEquals(2037, tiffField0.getSortHint());
      assertEquals(2037, tiffField0.getTag());
      assertEquals(2037L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[253];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(327, 1, fieldTypeDouble0, 1, 327, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(327, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(327, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[66];
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0.IFD, 797, 797, byteArray0, (ByteOrder) null, 797);
      tiffField0.getDoubleArrayValue();
      assertEquals(797, tiffField0.getOffset());
      assertEquals(3188, tiffField0.getBytesLength());
      assertEquals(797L, tiffField0.getCount());
      assertEquals(797, tiffField0.getTag());
      assertEquals(797, tiffField0.getSortHint());
      assertEquals(797, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2280, 2280, fieldTypeAscii0, 2280, 2280, byteArray0, byteOrder0, 2280);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@467c8126 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(759, 759, fieldTypeLong0, 759, 759, byteArray0, byteOrder0, 759);
      tiffField0.getIntArrayValue();
      assertEquals(759L, tiffField0.getCount());
      assertEquals(3036, tiffField0.getBytesLength());
      assertEquals(759, tiffField0.getDirectoryType());
      assertEquals(759, tiffField0.getOffset());
      assertEquals(759, tiffField0.getSortHint());
      assertEquals(759, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      tiffField0.getIntArrayValue();
      assertEquals(797, tiffField0.getSortHint());
      assertEquals(797, tiffField0.getDirectoryType());
      assertEquals(1594, tiffField0.getBytesLength());
      assertEquals(797L, tiffField0.getCount());
      assertEquals(797, tiffField0.getTag());
      assertEquals(797, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (-1405));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      tiffField0.getIntArrayValue();
      assertEquals(2037, tiffField0.getTag());
      assertEquals(2037, tiffField0.getOffset());
      assertEquals(16296, tiffField0.getBytesLength());
      assertEquals(2037, tiffField0.getDirectoryType());
      assertEquals(2037, tiffField0.getSortHint());
      assertEquals(2037L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@1bc13069
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1273, 1273, fieldTypeAscii0, 1273, 1273, byteArray0, (ByteOrder) null, 1273);
      String string0 = tiffField0.getStringValue();
      assertEquals(1273, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1273, tiffField0.getSortHint());
      assertEquals(1273, tiffField0.getDirectoryType());
      assertEquals(1273, tiffField0.getBytesLength());
      assertEquals(1273, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(749, 749, fieldTypeShort0, 749, 749, byteArray0, (ByteOrder) null, 749);
      String string0 = tiffField0.getTagName();
      assertEquals(749, tiffField0.getOffset());
      assertEquals(749, tiffField0.getSortHint());
      assertEquals(749, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x2ed)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50727, 50727, fieldTypeShort0, 50727, 50727, byteArray0, byteOrder0, 50727);
      String string0 = tiffField0.getTagName();
      assertEquals(50727, tiffField0.getOffset());
      assertEquals(50727, tiffField0.getDirectoryType());
      assertEquals(50727, tiffField0.getSortHint());
      assertEquals("AnalogBalance", string0);
      assertEquals(50727, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeRational0, 2037, 2037, byteArray0, byteOrder0, 2037);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50961, 50961, fieldTypeDouble0.FLOAT, 50961, 50961, byteArray0, byteOrder0, 50961);
      tiffField0.dump();
      assertEquals(50961, tiffField0.getOffset());
      assertEquals(203844, tiffField0.getBytesLength());
      assertEquals(50961, tiffField0.getTag());
      assertEquals(50961L, tiffField0.getCount());
      assertEquals(50961, tiffField0.getDirectoryType());
      assertEquals(50961, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-85), (-85), fieldTypeByte0, 829, (-85), byteArray0, byteOrder0, 829);
      tiffField0.dump();
      assertEquals(829, tiffField0.getSortHint());
      assertEquals(829, tiffField0.getBytesLength());
      assertEquals((-85), tiffField0.getDirectoryType());
      assertEquals((-85), tiffField0.getTag());
      assertEquals(829L, tiffField0.getCount());
      assertEquals((-85), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[417];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51016, 51016, fieldTypeDouble0, 51016, 4L, byteArray0, byteOrder0, 51016);
      String string0 = tiffField0.toString();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(408128, tiffField0.getBytesLength());
      assertEquals(51016, tiffField0.getSortHint());
      assertEquals(51016, tiffField0.getDirectoryType());
      assertEquals("51016 (0xc748: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (51016 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[187];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeDouble0, 37, 37, byteArray0, byteOrder0, 37);
      tiffField0.dump();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37L, tiffField0.getCount());
      assertEquals(296, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65524, 65524, fieldTypeLong0, 65524, 65524, byteArray0, byteOrder0, 65524);
      tiffField0.dump();
      assertEquals(65524L, tiffField0.getCount());
      assertEquals(65524, tiffField0.getTag());
      assertEquals(65524, tiffField0.getDirectoryType());
      assertEquals(262096, tiffField0.getBytesLength());
      assertEquals(65524, tiffField0.getSortHint());
      assertEquals(65524, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(788, 788, fieldTypeFloat0, 788, 788, byteArray0, (ByteOrder) null, 788);
      tiffField0.dump();
      assertEquals(788, tiffField0.getSortHint());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals(788, tiffField0.getOffset());
      assertEquals(788L, tiffField0.getCount());
      assertEquals(788, tiffField0.getTag());
      assertEquals(788, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1383, 847, fieldTypeShort0, 1383, 1383, byteArray0, byteOrder0, 1383);
      tiffField0.dump();
      assertEquals(2766, tiffField0.getBytesLength());
      assertEquals(847, tiffField0.getDirectoryType());
      assertEquals(1383, tiffField0.getSortHint());
      assertEquals(1383, tiffField0.getOffset());
      assertEquals(1383L, tiffField0.getCount());
      assertEquals(1383, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0, 797, 797, byteArray0, byteOrder0, 797);
      tiffField0.dump();
      assertEquals(797, tiffField0.getOffset());
      assertEquals(797, tiffField0.getSortHint());
      assertEquals(1594, tiffField0.getBytesLength());
      assertEquals(797, tiffField0.getTag());
      assertEquals(797, tiffField0.getDirectoryType());
      assertEquals(797L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeAscii0, 2303, 2303, byteArray0, byteOrder0, 2303);
      tiffField0.dump();
      assertEquals(2303L, tiffField0.getCount());
      assertEquals(2303, tiffField0.getTag());
      assertEquals(2303, tiffField0.getSortHint());
      assertEquals(2303, tiffField0.getDirectoryType());
      assertEquals(2303, tiffField0.getBytesLength());
      assertEquals(2303, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[84];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(788, 434, fieldTypeShort0.ASCII, 434, 788, byteArray0, byteOrder0, 788);
      tiffField0.dump();
      assertEquals(434, tiffField0.getBytesLength());
      assertEquals(434, tiffField0.getDirectoryType());
      assertEquals(434L, tiffField0.getCount());
      assertEquals(788, tiffField0.getTag());
      assertEquals(788, tiffField0.getSortHint());
      assertEquals(788, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(698, 698, fieldTypeAscii0, 698, 698, byteArray0, byteOrder0, 698);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(698, tiffField0.getOffset());
      assertEquals(698, tiffField0.getDirectoryType());
      assertEquals(698, tiffField0.getSortHint());
      assertEquals(698, tiffField0.getTag());
      assertEquals(698, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[152];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      TiffField tiffField0 = new TiffField(797, 797, fieldTypeShort0.IFD, 797, 797, byteArray0, (ByteOrder) null, 797);
      tiffField0.dump();
      assertEquals(797, tiffField0.getTag());
      assertEquals(797, tiffField0.getDirectoryType());
      assertEquals(797, tiffField0.getSortHint());
      assertEquals(797L, tiffField0.getCount());
      assertEquals(3188, tiffField0.getBytesLength());
      assertEquals(797, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 2041, fieldTypeRational0, 2041, 35L, byteArray0, byteOrder0, 31);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(31, 31);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(35, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(16328, tiffField0.getBytesLength());
      assertEquals(2041, tiffField0.getDirectoryType());
      assertEquals(2041L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 2041, fieldTypeRational0, 2041, 35L, byteArray0, byteOrder0, 31);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(31, 31);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(31, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals(2041, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
      assertEquals(35, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(16328, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2280, 2280, fieldTypeAscii0, 2280, 2280, byteArray0, byteOrder0, 2280);
      tiffField0.getFieldTypeName();
      assertEquals(2280, tiffField0.getOffset());
      assertEquals(2280, tiffField0.getSortHint());
      assertEquals(2280, tiffField0.getTag());
      assertEquals(2280, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[84];
      TiffField tiffField0 = new TiffField(756, 756, fieldTypeShort0, 756, 756, byteArray0, (ByteOrder) null, 756);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(756, tiffField0.getSortHint());
      assertEquals(756, tiffField0.getDirectoryType());
      assertEquals(756L, tiffElement0.offset);
      assertEquals(756, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeByte0, 1L, 40L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getSortHint();
      assertEquals(40, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, int0);
      assertEquals(3, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(251, 251, fieldTypeRational0, 251, 251, (byte[]) null, byteOrder0, 251);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }
}
