/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 00:15:56 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2212, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-37);
      byteArray0[5] = (byte) (-95);
      TiffField tiffField0 = new TiffField(296, 65535, fieldTypeRational0, 789L, (-4984L), byteArray0, byteOrder0, (-1688));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6312, tiffField0.getBytesLength());
      assertEquals((-1688), tiffField0.getSortHint());
      assertEquals((-4984), tiffField0.getOffset());
      assertEquals((-58), int0);
      assertEquals(296, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2212, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte) (-95);
      TiffField tiffField0 = new TiffField(296, 65535, fieldTypeRational0, 789L, (-4984L), byteArray0, byteOrder0, (-1688));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-4984), tiffField0.getOffset());
      assertEquals((-1688), tiffField0.getSortHint());
      assertEquals(296, tiffField0.getTag());
      assertEquals(6312, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-521), 0, fieldTypeByte0, 4L, 2042L, byteArray0, byteOrder0, 2146823493);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146823493, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(2042, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-521), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeLong0, 40092, (-1), byteArray0, byteOrder0, (byte)29);
      String string0 = tiffField0.toString();
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals("40092 (0x9c9c: XPComment): Invalid value: Text field not encoded as bytes. (40092 )", string0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "_wTRj");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2810), (-937), fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 4125);
      tiffField0.dump();
      assertEquals((-2810), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4125, tiffField0.getSortHint());
      assertEquals((-937), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(600, 498, fieldTypeByte0, 0L, 1L, byteArray0, byteOrder0, 1565);
      String string0 = tiffField0.getValueDescription();
      assertEquals(498, tiffField0.getDirectoryType());
      assertEquals(600, tiffField0.getTag());
      assertEquals(1565, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-21), "_wTRj");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-21), (-21), fieldTypeShort0, (byte)0, (-21), byteArray0, byteOrder0, 264);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(264, tiffField0.getSortHint());
      assertEquals((-21), tiffField0.getDirectoryType());
      assertEquals((-21), tiffField0.getTag());
      assertEquals((-21), tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeLong0, 40092, (-1), byteArray0, byteOrder0, (byte)29);
      int int0 = tiffField0.getTag();
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(40092, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3240), (-3240), fieldTypeShort0, (-3240), (-3240), byteArray0, byteOrder0, 41989);
      int int0 = tiffField0.getTag();
      assertEquals((-3240), tiffField0.getDirectoryType());
      assertEquals((-3240), tiffField0.getOffset());
      assertEquals(41989, tiffField0.getSortHint());
      assertEquals((-3240), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField(50215, 14, fieldTypeByte0.ASCII, 2820L, 50215, byteArray0, byteOrder0, (byte)78);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(2820, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(50215, tiffField0.getOffset());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(50215, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeLong0.RATIONAL, 1119L, (byte) (-95), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-95), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1973, (byte)30, fieldTypeLong0, (byte)30, (-721), byteArray0, byteOrder0, (-2671));
      int int0 = tiffField0.getSortHint();
      assertEquals((-721), tiffField0.getOffset());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals((-2671), int0);
      assertEquals(1973, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2461, 2461, fieldTypeByte0, 588L, 4672L, byteArray0, byteOrder0, 149);
      int int0 = tiffField0.getOffset();
      assertEquals(2461, tiffField0.getTag());
      assertEquals(2461, tiffField0.getDirectoryType());
      assertEquals(4672, int0);
      assertEquals(149, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-4725), 1600, fieldTypeByte0, 1600, (-3053L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1600, tiffField0.getDirectoryType());
      assertEquals((-3053), int0);
      assertEquals((-4725), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)113;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-767), fieldTypeByte0.SLONG, 4L, (byte)0, byteArray0, byteOrder0, 32908);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(32908, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-767), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-68);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1306, 32766, fieldTypeShort0, 202936L, 1306, byteArray0, byteOrder0, (byte) (-68));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(32766, tiffField0.getDirectoryType());
      assertEquals(405872, tiffField0.getBytesLength());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(1306, tiffField0.getTag());
      assertEquals((-17408), int0);
      assertEquals(1306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField(48130, 2634, fieldTypeByte0, 1L, 48130, byteArray0, byteOrder0, 48130);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(48130, tiffField0.getOffset());
      assertEquals(2634, tiffField0.getDirectoryType());
      assertEquals(48130, tiffField0.getSortHint());
      assertEquals(48130, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-26);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)61, fieldTypeByte0, 836, 65535, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(12, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0, 12, 12, byteArray0, byteOrder0, (byte)24);
      tiffField0.getFieldTypeName();
      assertEquals(12, tiffField0.getTag());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3252, 3252, (FieldType) null, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, (byte)113);
      tiffField0.getFieldType();
      assertEquals(3252, tiffField0.getTag());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(3252, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)61, fieldTypeByte0, 836, 65535, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(61, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      TiffField tiffField0 = new TiffField((byte) (-79), (byte)84, fieldTypeByte0, 1L, 1997L, byteArray0, byteOrder0, (byte) (-79));
      tiffField0.getDoubleValue();
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(1997, tiffField0.getOffset());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-13);
      TiffField tiffField0 = new TiffField(12, 89, fieldTypeByte0, 1L, 2, byteArray0, byteOrder0, 3493);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(3493, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(89, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-44), 0, fieldTypeShort0, 0, (byte) (-44), byteArray0, byteOrder0, 1);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-44), tiffField0.getOffset());
      assertEquals(0, doubleArray0.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-44), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(814, 50, fieldTypeLong0.SRATIONAL, 65535, (-548L), byteArray0, byteOrder0, (byte) (-95));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-548), tiffField0.getOffset());
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals(50, int0);
      assertEquals(814, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1549), (-3746), fieldTypeAscii0, 2136L, (-1549), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3746), int0);
      assertEquals((-1549), tiffField0.getTag());
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50779, 726, fieldTypeByte0, 0, (-607L), byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-607), tiffField0.getOffset());
      assertEquals(726, tiffField0.getDirectoryType());
      assertEquals(50779, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeLong0, 40092, (-1), byteArray0, byteOrder0, (byte)29);
      tiffField0.getCount();
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(40092, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1930), 3, fieldTypeLong0, (byte) (-68), 0L, byteArray0, byteOrder0, (byte)112);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-1930), tiffField0.getTag());
      assertEquals(112, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4520), 1592, fieldTypeByte0, (-4520), (-3529L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-4520), int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1592, tiffField0.getDirectoryType());
      assertEquals((-4520), tiffField0.getTag());
      assertEquals((-3529), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte) (-35));
      tiffField0.getByteOrder();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-35), tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(814, 50, fieldTypeLong0.SRATIONAL, 65535, (-548L), byteArray0, byteOrder0, (byte) (-95));
      tiffField0.getByteArrayValue();
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(814, tiffField0.getTag());
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals((-548), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "X~!0Jf]eJa[N4C[");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-32), fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-32), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1193, 1657, fieldTypeLong0, 3215L, 1657, byteArray0, (ByteOrder) null, (byte)46);
      MockFile mockFile0 = new MockFile("", "0;Cc%(_os~)q`1QN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1193, tiffField0.getTag());
      assertEquals(42L, mockFile0.length());
      assertEquals(1657, tiffField0.getOffset());
      assertEquals(12860, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(1657, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1880, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-808), (-808), fieldTypeLong0, 50734, 0L, byteArray0, byteOrder0, (-808));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Y |s/H30");
      assertEquals((-808), tiffField0.getDirectoryType());
      assertEquals((-808), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-808), tiffField0.getTag());
      assertEquals(202936, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147023702, 338, fieldTypeByte0, (-3783L), 180L, byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1), (FieldType) null, (-1), 1120L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-689L), 0L, byteArray0, byteOrder0, (-550));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4259, (-1254), (FieldType) null, (-1254), (-863L), byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(12, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0, 12, 12, byteArray0, byteOrder0, (byte)24);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeByte0, 25, 25, byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, (-383));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-646), 50, fieldTypeLong0, 4L, (-646), byteArray0, byteOrder0, (-1051));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34, (-721), fieldTypeLong0, (-2221L), 930L, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1406, 2142657842, fieldTypeByte0.SRATIONAL, 2142657842, 65535, byteArray0, byteOrder0, 2606);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5536, 0, fieldTypeByte0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5536, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-21), "_wTRj");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-21), (-21), fieldTypeShort0, (byte)0, (-21), byteArray0, byteOrder0, 264);
      tiffField0.getFieldType();
      assertEquals(264, tiffField0.getSortHint());
      assertEquals((-21), tiffField0.getTag());
      assertEquals((-21), tiffField0.getDirectoryType());
      assertEquals((-21), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1306, 32766, fieldTypeShort0, 202936L, 1306, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getValue();
      assertEquals(1306, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(1306, tiffField0.getTag());
      assertEquals(32766, tiffField0.getDirectoryType());
      assertEquals(405872, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(400, (byte)4, fieldTypeLong0.SSHORT, (byte)4, 484L, byteArray0, byteOrder0, 2595);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals(2595, tiffField0.getSortHint());
      assertEquals(484, tiffField0.getOffset());
      assertEquals(400, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Expected String value(");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-2146916879), fieldTypeByte0, 2137L, (-2146916879), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2146916879), tiffField0.getDirectoryType());
      assertEquals(2137, int0);
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-2146916879), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeByte0, 1L, (-4294967296L), byteArray0, byteOrder0, 2143735858);
      tiffField0.getDoubleValue();
      assertEquals(2143735858, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1482, 1482, fieldTypeByte0.SHORT, 1L, 37122, byteArray0, byteOrder0, 1482);
      tiffField0.getIntValue();
      assertEquals(37122, tiffField0.getOffset());
      assertEquals(1482, tiffField0.getTag());
      assertEquals(1482, tiffField0.getDirectoryType());
      assertEquals(1482, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[230];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)23, "");
      TiffField tiffField0 = new TiffField((byte)23, (byte)87, fieldTypeFloat0, (byte)87, (byte)87, byteArray0, byteOrder0, 42);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@29278183 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32771, (-1059), fieldTypeLong0.UNDEFINED, 1, (-1983L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(32771, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1059), tiffField0.getDirectoryType());
      assertEquals((-1983), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(607, 607, fieldTypeByte0, 607, 607, byteArray0, byteOrder0, 607);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7095df4c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2143812735, "4[jip*kB");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1239L, 2613L, byteArray0, (ByteOrder) null, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(4956, tiffField0.getBytesLength());
      assertEquals(2613, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1193, 1657, fieldTypeLong0, 3215L, 1657, byteArray0, (ByteOrder) null, (byte)46);
      tiffField0.getDoubleArrayValue();
      assertEquals(1657, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(1193, tiffField0.getTag());
      assertEquals(12860, tiffField0.getBytesLength());
      assertEquals(1657, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2478, (-1), fieldTypeDouble0, 2478, 2478, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(19824, tiffField0.getBytesLength());
      assertEquals(2478, tiffField0.getTag());
      assertEquals(2478, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)67, 1146, fieldTypeByte0.RATIONAL, 1146, 0L, byteArray0, byteOrder0, (byte)67);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(9168, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(1146, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147023702, 2, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, (byte)8);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2147023702, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(649, (-2925), fieldTypeShort0, 649, 649, byteArray0, byteOrder0, 26);
      tiffField0.getDoubleArrayValue();
      assertEquals(1298, tiffField0.getBytesLength());
      assertEquals(649, tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals((-2925), tiffField0.getDirectoryType());
      assertEquals(649, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-767), fieldTypeByte0.SLONG, 4L, (byte)0, byteArray0, byteOrder0, 32908);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(32908, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-767), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, 728, fieldTypeShort0, 5665, 4L, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(11330, tiffField0.getBytesLength());
      assertEquals(728, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2147243678, fieldTypeLong0.SRATIONAL, 1119L, (byte) (-95), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 836, fieldTypeByte0, 0, (-1L), byteArray0, byteOrder0, (byte)61);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@d01c106 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 2453, fieldTypeByte0, 1, 2453, byteArray0, byteOrder0, 2133071006);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(2453, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2133071006, tiffField0.getSortHint());
      assertEquals(2453, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeLong0.SRATIONAL, 1119L, (byte) (-95), byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(8952, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1119L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-95), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.BYTE, 1, (byte)61, byteArray0, byteOrder0, (byte) (-83));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(234, 234, fieldTypeAscii0, 0L, (byte)67, byteArray0, byteOrder0, 234);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(234, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(67, tiffField0.getOffset());
      assertEquals(234, tiffField0.getTag());
      assertEquals(234, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)67, 1146, fieldTypeByte0.RATIONAL, 1146, 0L, byteArray0, byteOrder0, (byte)67);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x43)", string0);
      assertEquals(1146, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1484), "TIFF_DIRECTORY_IFD0");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50215, 50215, fieldTypeRational0, 50215, (-1002L), byteArray0, byteOrder0, (-1484));
      String string0 = tiffField0.getTagName();
      assertEquals((-1484), tiffField0.getSortHint());
      assertEquals(50215, tiffField0.getDirectoryType());
      assertEquals("Oce Scanjob Description", string0);
      assertEquals((-1002), tiffField0.getOffset());
      assertEquals(50215, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 32946, fieldTypeLong0, 0L, 1155L, byteArray0, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "3y{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[230];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)23, "");
      TiffField tiffField0 = new TiffField((byte)23, (byte)87, fieldTypeFloat0, (byte)87, (byte)87, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getValueDescription();
      assertEquals(23, tiffField0.getTag());
      assertEquals(87L, tiffField0.getCount());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (57)", string0);
      assertEquals(87, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(607, 607, fieldTypeByte0, 607, 607, byteArray0, byteOrder0, 607);
      String string0 = tiffField0.getValueDescription();
      assertEquals(607L, tiffField0.getCount());
      assertEquals(607, tiffField0.getBytesLength());
      assertEquals(607, tiffField0.getSortHint());
      assertEquals(607, tiffField0.getDirectoryType());
      assertEquals(607, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(607, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 2412, fieldTypeLong0.FLOAT, (byte)112, (-1635L), byteArray0, byteOrder0, 1668);
      String string0 = tiffField0.toString();
      assertEquals(2412, tiffField0.getDirectoryType());
      assertEquals(448, tiffField0.getBytesLength());
      assertEquals("4 (0x4: Unknown Tag): 0.0, 0.0 (112 Float)", string0);
      assertEquals((-1635), tiffField0.getOffset());
      assertEquals(1668, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, 338, fieldTypeDouble0, 7, 44L, byteArray0, byteOrder0, (-1214));
      String string0 = tiffField0.toString();
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals("7 (0x7: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (7 Double)", string0);
      assertEquals((-1214), tiffField0.getSortHint());
      assertEquals(44, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-44), 9, fieldTypeShort0, 4L, 0L, byteArray0, byteOrder0, (byte) (-44));
      String string0 = tiffField0.toString();
      assertEquals("-44 (0xffffffd4: Unknown Tag): 0, 0 (4 SShort)", string0);
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-44), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(649, (-2925), fieldTypeShort0, 649, 649, byteArray0, byteOrder0, 26);
      String string0 = tiffField0.toString();
      assertEquals((-2925), tiffField0.getDirectoryType());
      assertEquals(1298, tiffField0.getBytesLength());
      assertEquals("649 (0x289: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (649 SShort)", string0);
      assertEquals(649, tiffField0.getOffset());
      assertEquals(26, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1549), (-3746), fieldTypeAscii0, 2136L, (-1549), byteArray0, byteOrder0, (byte)1);
      tiffField0.toString();
      assertEquals(2136L, tiffField0.getCount());
      assertEquals(2136, tiffField0.getBytesLength());
      assertEquals((-3746), tiffField0.getDirectoryType());
      assertEquals((-1549), tiffField0.getTag());
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2102), 50, fieldTypeAscii0, 4487, 50, byteArray0, byteOrder0, 65029);
      tiffField0.toString();
      assertEquals((-2102), tiffField0.getTag());
      assertEquals(4487, tiffField0.getBytesLength());
      assertEquals(4487L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65029, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (-1343), fieldTypeAscii0, 0L, 1L, byteArray0, byteOrder0, 2);
      tiffField0.toString();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1343), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeByte0, 1L, (-4294967296L), byteArray0, byteOrder0, 2143735858);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2143735858, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 22L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(22, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 3, fieldTypeByte0, 4672L, (-757L), byteArray0, byteOrder0, 2227);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-757L), tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2227, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 514, fieldTypeLong0, 440L, 4L, byteArray0, byteOrder0, (-31));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-724), 37381);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(514, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeLong0.RATIONAL, 1119L, (byte) (-95), byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-95), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(814, (String) null);
      TiffField tiffField0 = new TiffField(814, 814, fieldTypeRational0, 0L, (-2124392424), byteArray0, byteOrder0, 814);
      tiffField0.getFieldTypeName();
      assertEquals(814, tiffField0.getDirectoryType());
      assertEquals(814, tiffField0.getSortHint());
      assertEquals(814, tiffField0.getTag());
      assertEquals((-2124392424), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, (-383));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "_wTRj");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-19), (-957), fieldTypeShort0, (byte)24, 2168L, byteArray0, byteOrder0, 682);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2168, tiffField0.getOffset());
      assertEquals("-19 (0xffffffed: Unknown Tag): ", string0);
      assertEquals(682, tiffField0.getSortHint());
      assertEquals((-957), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-4725), 1600, fieldTypeByte0, 1600, (-3053L), byteArray0, byteOrder0, (-1));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OpcodeList3");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-4725), tiffField0.getTag());
      assertEquals((-3053), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1600, tiffField0.getBytesLength());
      assertEquals(1600, tiffField0.getDirectoryType());
      assertEquals(1600L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1906, 1906, fieldTypeLong0, 1906, 1906, byteArray0, byteOrder0, 1906);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7624, tiffField0.getBytesLength());
      assertEquals(1906, tiffField0.getOffset());
      assertEquals(1906, tiffField0.getSortHint());
      assertEquals(1906, tiffField0.getTag());
      assertEquals(1906, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1906L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "Missing value: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)61, fieldTypeByte0, 836, 65535, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147243678, 1009);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Missing value: ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(836, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(61, tiffField0.getDirectoryType());
  }
}
