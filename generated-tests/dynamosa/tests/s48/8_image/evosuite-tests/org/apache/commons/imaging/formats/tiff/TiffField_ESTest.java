/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 16:26:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(216, "5J7^");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-7);
      TiffField tiffField0 = new TiffField((byte) (-7), 216, fieldTypeShort0, 216, (byte) (-7), byteArray0, byteOrder0, (byte) (-7));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-7), tiffField0.getTag());
      assertEquals(249, int0);
      assertEquals(216, tiffField0.getDirectoryType());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
      assertEquals(432, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2764, "g");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      byteArray0[4] = (byte) (-125);
      TiffField tiffField0 = new TiffField(1073, 3, fieldTypeRational0, 242L, 3387L, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(1073, tiffField0.getTag());
      assertEquals(1936, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3387, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2764, "g");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-125);
      TiffField tiffField0 = new TiffField(1073, 3, fieldTypeRational0, 242L, 3387L, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1073, tiffField0.getTag());
      assertEquals(1936, tiffField0.getBytesLength());
      assertEquals(3387, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(126, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(40094, 266, fieldTypeShort0, (-1746L), 266, byteArray0, byteOrder0, 230);
      String string0 = tiffField0.toString();
      assertEquals(266, tiffField0.getOffset());
      assertEquals(266, tiffField0.getDirectoryType());
      assertEquals(230, tiffField0.getSortHint());
      assertEquals("40094 (0x9c9e: XPKeywords): Invalid value: Text field not encoded as bytes. (-1746 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      tiffField0.dump();
      assertEquals(22432, tiffField0.getBytesLength());
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(2804, tiffField0.getTag());
      assertEquals(2804, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(22432, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getSortHint());
      assertEquals(2804, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(97, (-1270), fieldTypeByte0, 97, (-1270), byteArray0, byteOrder0, (-3943));
      tiffField0.getValue();
      assertEquals((-1270), tiffField0.getOffset());
      assertEquals(97, tiffField0.getBytesLength());
      assertEquals(97, tiffField0.getTag());
      assertEquals((-3943), tiffField0.getSortHint());
      assertEquals((-1270), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[33];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(513, 2894, fieldTypeFloat0.LONG, 650L, 2894, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertTrue(tagInfo0.isOffset());
      assertEquals(2894, tiffField0.getOffset());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertEquals(2894, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1959), fieldTypeRational0, 0, 380L, byteArray0, byteOrder0, (byte) (-41));
      int int0 = tiffField0.getTag();
      assertEquals((-41), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1959), tiffField0.getDirectoryType());
      assertEquals(380, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-816), (-816), fieldTypeByte0, (-816), 0L, byteArray0, byteOrder0, 1696);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-816), int0);
      assertEquals((-816), tiffField0.getDirectoryType());
      assertEquals(1696, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-7);
      TiffField tiffField0 = new TiffField(3, 1739, fieldTypeAscii0, 1054L, (-1L), byteArray0, byteOrder0, 1739);
      String string0 = tiffField0.getStringValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(1739, tiffField0.getDirectoryType());
      assertEquals(1739, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1054, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2194, 2073432487, fieldTypeFloat0, 72L, 3596L, byteArray0, byteOrder0, 68);
      int int0 = tiffField0.getSortHint();
      assertEquals(2194, tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(68, int0);
      assertEquals(3596, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3413), 2073432487, fieldTypeFloat0, 2803, (-1397L), byteArray0, byteOrder0, (-206));
      int int0 = tiffField0.getSortHint();
      assertEquals((-206), int0);
      assertEquals((-1397), tiffField0.getOffset());
      assertEquals((-3413), tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1844, 1844, fieldTypeByte0, 1844, 1844, byteArray0, byteOrder0, 1410);
      int int0 = tiffField0.getOffset();
      assertEquals(1844, int0);
      assertEquals(1844, tiffField0.getTag());
      assertEquals(1844, tiffField0.getDirectoryType());
      assertEquals(1410, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 65105, fieldTypeAscii0, (byte)50, (byte) (-125), byteArray0, byteOrder0, (-1126));
      int int0 = tiffField0.getOffset();
      assertEquals((-1126), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-125), int0);
      assertEquals(65105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)11, (byte) (-36), fieldTypeLong0, (byte)11, 108L, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-36), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(108, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-62);
      TiffField tiffField0 = new TiffField(3522, (byte) (-62), fieldTypeLong0, 3522, (byte) (-62), byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-62), tiffField0.getOffset());
      assertEquals(14088, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3522, tiffField0.getTag());
      assertEquals((-62), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 108, fieldTypeByte0, 1, 0L, byteArray0, byteOrder0, (-1923));
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(108, tiffField0.getDirectoryType());
      assertEquals((-1923), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      TiffField tiffField0 = new TiffField(1531, (-743), fieldTypeLong0.SHORT, (byte)1, (-232), byteArray0, byteOrder0, (-2985));
      tiffField0.getIntValue();
      assertEquals((-2985), tiffField0.getSortHint());
      assertEquals(1531, tiffField0.getTag());
      assertEquals((-743), tiffField0.getDirectoryType());
      assertEquals((-232), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-77);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 6, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).SBYTE).SHORT, 1, (byte) (-77), byteArray0, byteOrder0, 8);
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(216, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 216, 4L, byteArray0, byteOrder0, (byte)46);
      tiffField0.getFieldTypeName();
      assertEquals(8, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1336, "");
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 9, fieldTypeLong0, 432L, (-116L), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-116), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeDouble0, (byte)0, (-8712L), byteArray0, byteOrder0, 1148);
      tiffField0.getFieldType();
      assertEquals((-8712), tiffField0.getOffset());
      assertEquals(1148, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-731), (-2156), fieldTypeLong0, 4L, (-849L), byteArray0, (ByteOrder) null, (-1055));
      tiffField0.getFieldType();
      assertEquals((-2156), tiffField0.getDirectoryType());
      assertEquals((-731), tiffField0.getTag());
      assertEquals((-849), tiffField0.getOffset());
      assertEquals((-1055), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte) (-62), "");
      TiffField tiffField0 = new TiffField(812, 3723, fieldTypeLong0, 2260L, 1641L, byteArray0, byteOrder0, 2138961887);
      tiffField0.getFieldType();
      assertEquals(1641, tiffField0.getOffset());
      assertEquals(3723, tiffField0.getDirectoryType());
      assertEquals(812, tiffField0.getTag());
      assertEquals(2138961887, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2730, 235, fieldTypeFloat0, 1, 753L, byteArray0, byteOrder0, 2730);
      tiffField0.getDoubleValue();
      assertEquals(2730, tiffField0.getTag());
      assertEquals(2730, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(235, tiffField0.getDirectoryType());
      assertEquals(753, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-114);
      byteArray0[7] = (byte) (-112);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)119);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-3927), fieldTypeRational0, 1, 1020L, byteArray0, byteOrder0, (byte) (-108));
      tiffField0.getDoubleValue();
      assertEquals((-3927), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-108), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1020, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-125);
      TiffField tiffField0 = new TiffField((byte)50, 216, fieldTypeFloat0.SSHORT, 1L, (byte)69, byteArray0, byteOrder0, (byte) (-125));
      tiffField0.getDoubleValue();
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(216, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      tiffField0.getDoubleArrayValue();
      assertEquals(2804, tiffField0.getTag());
      assertEquals(2804, tiffField0.getSortHint());
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(22432, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(2073432482, (-988), fieldTypeLong0, 255L, (byte) (-77), byteArray0, byteOrder0, (-1891));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-988), int0);
      assertEquals((-77), tiffField0.getOffset());
      assertEquals(2073432482, tiffField0.getTag());
      assertEquals((-1891), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2167, ">WTsuq^NvxZb=%{");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2167, 2167, fieldTypeShort0, 1L, (-1031L), byteArray0, byteOrder0, (-2521));
      tiffField0.getCount();
      assertEquals((-1031), tiffField0.getOffset());
      assertEquals(2167, tiffField0.getDirectoryType());
      assertEquals(2167, tiffField0.getTag());
      assertEquals((-2521), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1519, 1519, fieldTypeFloat0, (-1115L), (-1115L), byteArray0, byteOrder0, 1695);
      tiffField0.getCount();
      assertEquals(1695, tiffField0.getSortHint());
      assertEquals(1519, tiffField0.getTag());
      assertEquals(1519, tiffField0.getDirectoryType());
      assertEquals((-1115), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-26), 48256, fieldTypeLong0, (byte)0, (byte) (-26), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(48256, tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-26), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146870256, "M@T<>U-`^");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(8, 2, fieldTypeFloat0, 255L, 255L, byteArray0, byteOrder0, 1829);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1020, int0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
      assertEquals(1829, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2135070447, (-1476), fieldTypeDouble0, (-3183L), 2829L, byteArray0, byteOrder0, (byte)13);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1476), tiffField0.getDirectoryType());
      assertEquals(2135070447, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-25464), int0);
      assertEquals(2829, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(140, 140, fieldTypeShort0, 202948L, 140, byteArray0, (ByteOrder) null, 46);
      tiffField0.getByteOrder();
      assertEquals(140, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(140, tiffField0.getTag());
      assertEquals(140, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)11, (byte) (-36), fieldTypeLong0, (byte)11, 108L, byteArray0, byteOrder0, 50);
      tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals((-36), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1256), fieldTypeLong0, 1L, 3532L, byteArray0, byteOrder0, (-1));
      tiffField0.getByteArrayValue();
      assertEquals((-1256), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3532, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(2602, 37391, fieldTypeLong0.SBYTE, 37391, (byte) (-77), byteArray0, byteOrder0, (byte) (-77));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(2602, tiffField0.getTag());
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals(37391, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-2178), (-2178), fieldTypeByte0, (-2178), (-2178), byteArray0, byteOrder0, (-2178));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2135070447, 2135070447, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 2135070447);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1101, 1101, (FieldType) null, 1101, 1101, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(40, 40, fieldTypeShort0, 40, 40, (byte[]) null, byteOrder0, 40);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1530), (-1530), fieldTypeRational0, (-1530), (-1530), byteArray0, byteOrder0, (-1530));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 36, byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-173), fieldTypeShort0, (-1L), (-173), byteArray0, byteOrder0, (-1532));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[21];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(0, (-1216), fieldTypeLong0, (-1216), 0, byteArray0, byteOrder0, (-1216));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2641), 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, (-2641));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2329, 2329, (FieldType) null, 2329, 2329, byteArray0, byteOrder0, 2329);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField((-38), (-38), fieldTypeLong0, (-38), (-38), byteArray0, byteOrder0, (-38));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51, 1, fieldTypeRational0, 1, 51, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeRational0, 30, 30, (byte[]) null, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(210, 210, fieldTypeShort0, 210, 210, (byte[]) null, byteOrder0, 210);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((byte) (-77), (byte) (-77), fieldTypeByte0, (byte) (-77), (byte) (-77), byteArray0, byteOrder0, (byte) (-77));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2804, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 2804);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1843), fieldTypeRational0, 27, (-771L), byteArray0, byteOrder0, (-4840));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(74, 74, fieldTypeShort0, 74, 74, (byte[]) null, byteOrder0, 74);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2126221433, 2126221433, fieldTypeRational0, 2126221433, 2126221433, byteArray0, byteOrder0, 2126221433);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50827, 1, fieldTypeRational0, 1, 50827, byteArray0, byteOrder0, 50827);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2804, 1, fieldTypeRational0, 1, 2804, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(44, 44, fieldTypeRational0, 44, 44, (byte[]) null, byteOrder0, 44);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-6), (byte) (-6), fieldTypeShort0, (byte) (-6), (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 20, (FieldType) null, (-479L), (-1L), byteArray0, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeShort0, 1201L, 3794L, byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, 18, (byte[]) null, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1931, 1931, fieldTypeRational0, 1L, 1931, byteArray0, byteOrder0, 1931);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(210, 210, fieldTypeShort0, 210, 210, (byte[]) null, byteOrder0, 210);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3151), (-3151), fieldTypeRational0, (-3151), (-3151), byteArray0, byteOrder0, (-3151));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-2092), (-2092), fieldTypeDouble0, (-2092), (-2092), byteArray0, byteOrder0, (-2092));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2571, 2571, fieldTypeLong0, (byte) (-7), 2571, byteArray0, byteOrder0, 2571);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "GPSTrack");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      TiffField tiffField0 = new TiffField(65535, 428, fieldTypeFloat0, (byte)1, (byte)1, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "PX5h]tDS<2]S");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-2178), (-2178), fieldTypeByte0, (-2178), (-2178), byteArray0, byteOrder0, (-2178));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x*4R!");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2772, "K!HL");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2772, fieldTypeRational0, 1L, 2772, byteArray0, byteOrder0, 37122);
      MockFile mockFile0 = new MockFile("K!HL", "K!HL");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4724), (-4724), fieldTypeRational0, (-4724), (-4724), byteArray0, byteOrder0, (-4724));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 36L, byteArray0, byteOrder0, 260);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(2602, 37391, fieldTypeLong0.BYTE, 37391, (byte) (-77), byteArray0, byteOrder0, (byte) (-77));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(2602, tiffField0.getTag());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals(37391, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-97), (byte)51, fieldTypeFloat0, (byte)1, (-2147483648L), byteArray0, byteOrder0, 41487);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(41487, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)11, (byte) (-36), fieldTypeLong0, (byte)11, 108L, byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-36), tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2073432487, (byte) (-100), fieldTypeLong0, 0L, 7456L, byteArray0, byteOrder0, 86);
      tiffField0.getByteOrder();
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-100), tiffField0.getDirectoryType());
      assertEquals(2073432487, tiffField0.getTag());
      assertEquals(7456, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1260, 1260, (FieldType) null, 1260, 1260, byteArray0, byteOrder0, 32809);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1595), (-740), (FieldType) null, 101L, 400L, byteArray0, byteOrder0, 2817);
      tiffField0.getFieldType();
      assertEquals((-1595), tiffField0.getTag());
      assertEquals(2817, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getOffset());
      assertEquals((-740), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(5504, (-1490), fieldTypeLong0, 5504, (-1490), (byte[]) null, byteOrder0, 5504);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(8, "i~u&KHy9W{:DvOf");
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(1196, 1836, fieldTypeDouble0, 65526, 0L, byteArray0, byteOrder0, 3021);
      int int0 = tiffField0.getOffset();
      assertEquals(1196, tiffField0.getTag());
      assertEquals(3021, tiffField0.getSortHint());
      assertEquals(1836, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-3042), fieldTypeRational0, (-3042), 443, byteArray0, (ByteOrder) null, 443);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(443, tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
      assertEquals(443, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-3042), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(2073432487, (-1004), fieldTypeLong0, 255L, (byte) (-77), byteArray0, byteOrder0, (-1891));
      int int0 = tiffField0.getTag();
      assertEquals((-1891), tiffField0.getSortHint());
      assertEquals(2073432487, int0);
      assertEquals((-77), tiffField0.getOffset());
      assertEquals((-1004), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 123);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-7092), (-7092), (FieldType) null, 2085L, (-7092), byteArray0, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeFloat0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@243abb4f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(2095105998, 2095105998, fieldTypeByte0, 2095105998, (byte) (-77), byteArray0, byteOrder0, 2095105998);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5cccb46a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeFloat0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      tiffField0.getDoubleArrayValue();
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(84, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(21L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-1669), (-1669), fieldTypeLong0, 3760L, 3760L, byteArray0, byteOrder0, (-1669));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1669), tiffField0.getTag());
      assertEquals(3760, tiffField0.getOffset());
      assertEquals((-1669), tiffField0.getSortHint());
      assertEquals(15040, tiffField0.getBytesLength());
      assertEquals(3760L, tiffField0.getCount());
      assertEquals((-1669), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeDouble0, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2804, tiffField0.getTag());
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(2804, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(22432, tiffField0.getBytesLength());
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2763, 2763, fieldTypeLong0, 2763, 2763, byteArray0, byteOrder0, 2763);
      tiffField0.getIntArrayValue();
      assertEquals(2763, tiffField0.getTag());
      assertEquals(2763L, tiffField0.getCount());
      assertEquals(2763, tiffField0.getDirectoryType());
      assertEquals(2763, tiffField0.getSortHint());
      assertEquals(11052, tiffField0.getBytesLength());
      assertEquals(2763, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeFloat0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@10c44fe for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      tiffField0.getIntArrayValue();
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getSortHint());
      assertEquals(22432, tiffField0.getBytesLength());
      assertEquals(2804L, tiffField0.getCount());
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(2804, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65110, 65110, fieldTypeRational0, 65110, 65110, byteArray0, byteOrder0, 65110);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(230, 230, fieldTypeShort0, 230, 230, byteArray0, byteOrder0, 230);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(230L, tiffField0.getCount());
      assertEquals(230, tiffField0.getTag());
      assertEquals(230, tiffField0.getSortHint());
      assertEquals(230, tiffField0.getDirectoryType());
      assertEquals(460, tiffField0.getBytesLength());
      assertEquals(230, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-497), (-497), fieldTypeRational0.ASCII, 2807, (-497), byteArray0, byteOrder0, 2807);
      String string0 = tiffField0.getStringValue();
      assertEquals((-497), tiffField0.getOffset());
      assertEquals(2807, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-497), tiffField0.getTag());
      assertEquals(2807, tiffField0.getSortHint());
      assertEquals((-497), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeFloat0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@2a283e72
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(230, 230, fieldTypeShort0, 230, 230, byteArray0, byteOrder0, 230);
      String string0 = tiffField0.getTagName();
      assertEquals(230, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xe6)", string0);
      assertEquals(230, tiffField0.getDirectoryType());
      assertEquals(230, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(316, 316, fieldTypeFloat0, 316, 316, byteArray0, byteOrder0, 316);
      String string0 = tiffField0.getTagName();
      assertEquals(316, tiffField0.getDirectoryType());
      assertEquals("HostComputer", string0);
      assertEquals(316, tiffField0.getSortHint());
      assertEquals(316, tiffField0.getTag());
      assertEquals(316, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2781, 2781, fieldTypeRational0, 2781, 2781, byteArray0, byteOrder0, 2781);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(578, 1078, fieldTypeFloat0, 1078, 1078, byteArray0, byteOrder0, 578);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1078L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1078, tiffField0.getDirectoryType());
      assertEquals(4312, tiffField0.getBytesLength());
      assertEquals(1078, tiffField0.getOffset());
      assertEquals(578, tiffField0.getTag());
      assertEquals(578, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[64];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2147479551, 2147479551, fieldTypeByte0, 2147479551, (-1L), byteArray0, byteOrder0, 2147479551);
      String string0 = tiffField0.toString();
      assertEquals(2147479551, tiffField0.getBytesLength());
      assertEquals(2147479551, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("2147479551 (0x7fffefff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (64) (2147479551 SByte)", string0);
      assertEquals(2147479551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeFloat0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      String string0 = tiffField0.toString();
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getOffset());
      assertEquals("21 (0x15: Unknown Tag): 0.0, 0.0 (21 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51, 42033, fieldTypeDouble0.SLONG, 42033, (-11200L), byteArray0, byteOrder0, 51);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(51, tiffField0.getTag());
      assertEquals((-11200), tiffField0.getOffset());
      assertEquals(42033L, tiffField0.getCount());
      assertEquals(168132, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(42033, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[95];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(114, 114, fieldTypeLong0, 114, 114, byteArray0, byteOrder0, 114);
      String string0 = tiffField0.toString();
      assertEquals("114 (0x72: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (114 IFD)", string0);
      assertEquals(114, tiffField0.getSortHint());
      assertEquals(114, tiffField0.getOffset());
      assertEquals(456, tiffField0.getBytesLength());
      assertEquals(114, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(658, 658, fieldTypeShort0, 658, 658, byteArray0, byteOrder0, 658);
      String string0 = tiffField0.getValueDescription();
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(658L, tiffField0.getCount());
      assertEquals(658, tiffField0.getTag());
      assertEquals(658, tiffField0.getOffset());
      assertEquals(658, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1316, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(230, 230, fieldTypeShort0, 230, 230, byteArray0, byteOrder0, 230);
      String string0 = tiffField0.getValueDescription();
      assertEquals(230L, tiffField0.getCount());
      assertEquals(230, tiffField0.getDirectoryType());
      assertEquals(230, tiffField0.getTag());
      assertEquals(230, tiffField0.getSortHint());
      assertEquals(230, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(460, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(78, 78, fieldTypeAscii0, 78, 78, byteArray0, byteOrder0, 78);
      tiffField0.toString();
      assertEquals(78, tiffField0.getTag());
      assertEquals(78, tiffField0.getBytesLength());
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(78, tiffField0.getOffset());
      assertEquals(78L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeDouble0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-77), (byte) (-77), fieldTypeLong0.ASCII, 2010L, (byte) (-77), byteArray0, byteOrder0, (byte) (-77));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-77), tiffField0.getTag());
      assertEquals((-77), tiffField0.getOffset());
      assertEquals((-77), tiffField0.getDirectoryType());
      assertEquals((-77), tiffField0.getSortHint());
      assertEquals(2010, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(192, (-899), fieldTypeDouble0, (-899), (-2511L), byteArray0, byteOrder0, 674);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-899), 269);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-899L), tiffField0.getCount());
      assertNull(string0);
      assertEquals((-899), tiffField0.getDirectoryType());
      assertEquals(192, tiffField0.getTag());
      assertEquals((-2511), tiffField0.getOffset());
      assertEquals(674, tiffField0.getSortHint());
      assertEquals((-7192), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2857, 2857, fieldTypeRational0, 2857, 2857, byteArray0, byteOrder0, 2857);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50737, 50737);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertEquals(2857, tiffField0.getDirectoryType());
      assertEquals(2857, tiffField0.getOffset());
      assertEquals(2857, tiffField0.getSortHint());
      assertEquals(2857, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      tiffField0.getFieldTypeName();
      assertEquals(2804, tiffField0.getOffset());
      assertEquals(2804, tiffField0.getTag());
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50737, 50737, fieldTypeFloat0, 50737, 50737, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50737, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50737, tiffField0.getOffset());
      assertEquals(50737, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-7), fieldTypeShort0, (byte) (-7), (byte) (-7), (byte[]) null, byteOrder0, (byte) (-7));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeFloat0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getOffset());
      assertEquals("51 (0x33: Unknown Tag): ", string0);
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2776, 2776, fieldTypeRational0, 2776, 2776, byteArray0, byteOrder0, 2776);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(230, 230, fieldTypeShort0, 230, 230, byteArray0, byteOrder0, 230);
      tiffField0.getDoubleArrayValue();
      assertEquals(230, tiffField0.getOffset());
      assertEquals(230, tiffField0.getDirectoryType());
      assertEquals(230, tiffField0.getSortHint());
      assertEquals(230, tiffField0.getTag());
      assertEquals(460, tiffField0.getBytesLength());
      assertEquals(230L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2804, 2804, fieldTypeRational0, 2804, 2804, byteArray0, byteOrder0, 2804);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2804, tiffField0.getDirectoryType());
      assertEquals(2804L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2804, tiffField0.getSortHint());
      assertEquals(2804, tiffField0.getTag());
  }
}
