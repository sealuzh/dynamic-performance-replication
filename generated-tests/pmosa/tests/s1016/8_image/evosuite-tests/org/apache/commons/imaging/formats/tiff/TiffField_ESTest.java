/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 10:48:27 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(25, 25);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertNull(string1);
      assertEquals(25, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2146052946, (-272), fieldTypeLong0, 27, 2146052946, byteArray0, byteOrder0, (-272));
      tiffField0.getIntArrayValue();
      assertEquals(2146052946, tiffField0.getOffset());
      assertEquals((-272), tiffField0.getSortHint());
      assertEquals((-272), tiffField0.getDirectoryType());
      assertEquals(27L, tiffField0.getCount());
      assertEquals(2146052946, tiffField0.getTag());
      assertEquals(108, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-870), ";s1f`_%&");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1218), (-1218), fieldTypeByte0, 1573L, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals((-1218), tiffField0.getDirectoryType());
      assertEquals("-1218 (0xfffffb3e: Unknown Tag): 0, 32, -97, 0 (1573 ;s1f`_%&)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1573, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeByte0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getBytesLength());
      assertEquals(25L, tiffElement0.offset);
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(28, 65535, fieldTypeShort0, 65535, 65535, byteArray0, (ByteOrder) null, 52);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(28, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(131070, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147469290, 2147469290, fieldTypeFloat0, 328L, 2147469290, byteArray0, byteOrder0, 2147469290);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147469290, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2147469290, tiffField0.getOffset());
      assertEquals(328L, tiffField0.getCount());
      assertEquals(2147469290, tiffField0.getDirectoryType());
      assertEquals(2147469290, tiffField0.getTag());
      assertEquals(1312, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeFloat0, 7, 7, byteArray0, byteOrder0, 7);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      String string0 = "OriginalRawFileName";
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "OriginalRawFileName");
      long long0 = (-1295L);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-81);
      byteArray0[5] = (byte) (-91);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-946), fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@358c6640 for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-816), (-816), fieldTypeShort0, 0L, 0L, byteArray0, (ByteOrder) null, (-816));
      tiffField0.getFieldTypeName();
      assertEquals((-816), tiffField0.getDirectoryType());
      assertEquals((-816), tiffField0.getTag());
      assertEquals((-816), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)76;
      Byte byte0 = new Byte((byte) (-59));
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      fieldTypeRational0.writeData(byte0, byteOrder0);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 0L, (-761L), byteArray0, byteOrder1, 0);
      tiffField0.getValue();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      
      ByteOrder.nativeOrder();
      int int0 = tiffField0.getDirectoryType();
      assertEquals(32, int0);
      
      tiffField0.getCount();
      tiffField0.getByteOrder();
      assertEquals((-761), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2422), "=E#Mg");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)118;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1478, 1187, fieldTypeDouble0, 239L, 6068L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@851bddc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeFloat0, 6, 6, byteArray0, byteOrder0, 6);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 0, fieldTypeShort0, 0, 2693L, byteArray0, byteOrder0, (-2672));
      assertEquals((-2672), tiffField0.getSortHint());
      
      TiffField tiffField1 = new TiffField(4, (byte) (-33), fieldTypeShort0, 4, (byte) (-9), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField1.toString();
      assertEquals(8, tiffField1.getBytesLength());
      assertEquals((-33), tiffField1.getDirectoryType());
      assertEquals("4 (0x4: GPSLongitude): 2189, -8201, 241 (4 SShort)", string0);
      assertEquals((-9), tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-870), ";s1f`_%&");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1218), (-1218), fieldTypeByte0, 1573L, 0L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@18994da1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)50;
      byteArray1[1] = (byte) (-15);
      byteArray1[2] = (byte) (-118);
      byteArray1[3] = (byte) (-82);
      byteArray1[4] = (byte) (-76);
      byteArray1[5] = (byte)1;
      byteArray1[6] = (byte)124;
      TiffField tiffField0 = new TiffField(1295, 3661, fieldTypeAscii0, 336L, 3661, byteArray1, byteOrder0, (byte)50);
      String string0 = tiffField0.getStringValue();
      assertEquals(3661, tiffField0.getOffset());
      assertEquals(1295, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(3661, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(336, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-3779), (byte)0, fieldTypeAscii0, 0L, 140L, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      tiffField0.getTagInfo();
      assertEquals((-3779), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(140, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-62);
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-59);
      TiffField tiffField0 = new TiffField(582, (byte) (-62), fieldTypeRational0, 0L, (byte) (-62), byteArray0, (ByteOrder) null, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-62), tiffField0.getOffset());
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals(582, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)60, (byte) (-97), fieldTypeLong0, (byte)19, 1346L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.toString();
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("60 (0x3c: Unknown Tag): 0 (19 IFD)", string0);
      assertEquals(76, tiffField0.getBytesLength());
      assertEquals(1346, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2422), "=E#Mg");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 0L, (-1L), byteArray0, byteOrder1, (-3280));
      tiffField0.getValueDescription();
      tiffField0.toString();
      tiffField0.getCount();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      TiffField tiffField0 = new TiffField(2969, 3, fieldTypeLong0, 2969, 6848L, byteArray0, byteOrder0, (byte) (-32));
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(2969, 65535, fieldTypeLong0, 65535, (-2147483648L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField1.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)54;
      Byte byte0 = new Byte((byte) (-59));
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      fieldTypeRational0.writeData(byte0, byteOrder0);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 0L, (-761L), byteArray0, byteOrder1, 0);
      tiffField0.getValue();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      
      ByteOrder.nativeOrder();
      int int0 = ObjectStreamConstants.baseWireHandle;
      tiffField0.getIntArrayValue();
      tiffField0.getFieldType();
      tiffField0.dump();
      assertEquals((-761), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(279, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)67;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 0, fieldTypeLong0, 115, 0, byteArray0, byteOrder0, (byte) (-71));
      tiffField0.getValue();
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("115 (0x73: Unknown Tag): ", string0);
      assertEquals(460, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(115L, tiffField0.getCount());
      assertEquals((-71), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(279, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      TiffField tiffField0 = new TiffField((byte)32, (-2029), fieldTypeLong0, 235L, 171L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals(32, tiffField0.getTag());
      assertEquals(171, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(940, tiffField0.getBytesLength());
      assertEquals(235L, tiffField0.getCount());
      assertEquals((-2029), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(345, (byte) (-1), (FieldType) null, (-801L), 4L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(345, tiffField0.getTag());
      assertEquals("YClipPathUnits", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1231), (-1231), fieldTypeFloat0, 1573L, 1040L, byteArray0, byteOrder0, 34735);
      String string0 = tiffField0.toString();
      assertEquals("-1231 (0xfffffb31: Unknown Tag): 0.0 (1573 Float)", string0);
      assertEquals(34735, tiffField0.getSortHint());
      assertEquals((-1231), tiffField0.getDirectoryType());
      assertEquals(6292, tiffField0.getBytesLength());
      assertEquals(1040, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2976, 2147236042, fieldTypeRational0, 5042L, 5042L, byteArray0, byteOrder0, 2147475455);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1662, 2976);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147475455, tiffField0.getSortHint());
      assertEquals(2976, tiffField0.getTag());
      assertEquals(5042, tiffField0.getOffset());
      assertEquals(40336, tiffField0.getBytesLength());
      assertEquals(5042L, tiffField0.getCount());
      assertEquals(2147236042, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1225), ";s1f`_%&");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      TiffField tiffField0 = new TiffField(3696, (byte)32, fieldTypeRational0, 6848L, 6848L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(54784, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(6848L, tiffField0.getCount());
      assertEquals(3696, tiffField0.getTag());
      assertEquals(6848, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      int int0 = 50731;
      long long0 = 254L;
      TiffField tiffField0 = new TiffField(2, 50731, fieldTypeFloat0, 254L, 1838L, byteArray0, byteOrder0, 41484);
      tiffField0.getDoubleArrayValue();
      int int1 = 50740;
      TiffField tiffField1 = new TiffField(50731, 41484, fieldTypeFloat0, (-1L), (-1L), byteArray0, byteOrder0, 50740);
      // Undeclared exception!
      try { 
        tiffField1.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeAscii0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)118;
      byteArray0[7] = (byte) (-33);
      byteArray0[8] = (byte) (-88);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2004), 544, fieldTypeRational0, 544, (-2004), byteArray0, byteOrder0, 340);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.dump();
      assertEquals(544, tiffField0.getDirectoryType());
      assertEquals(340, tiffField0.getSortHint());
      assertEquals((-2004), tiffField0.getOffset());
      assertEquals(4352, tiffField0.getBytesLength());
      assertEquals((-2004), tiffField0.getTag());
      assertEquals(544L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1262), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      TiffField tiffField0 = new TiffField((-1829), 65535, fieldTypeDouble0, 1573L, 65535, byteArray0, byteOrder0, 2951);
      String string0 = tiffField0.toString();
      assertEquals("-1829 (0xfffff8db: Unknown Tag): 0.0 (1573 )", string0);
      
      tiffField0.getValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(2951, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(12584, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte) (-89);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-778), 91, fieldTypeShort0, 91, 91, byteArray0, byteOrder0, (byte) (-1));
      ByteOrder.nativeOrder();
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {65310, 3375, 42877}, intArray0);
      
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      int int0 = tiffField0.getOffset();
      assertEquals(91, int0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      tiffField0.getTag();
      long long0 = tiffField0.getCount();
      assertEquals(91L, long0);
      
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffffcf6)", string0);
      
      tiffField0.getFieldType();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)13, 548);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string1);
      assertNotNull(string1);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(182, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-19510), int1);
      assertEquals(91, tiffField0.getDirectoryType());
  }
}
