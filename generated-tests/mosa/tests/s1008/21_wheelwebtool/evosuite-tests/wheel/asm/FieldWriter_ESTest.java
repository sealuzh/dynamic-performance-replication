/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:42:10 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", "_>@b%D", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("Signature", true);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ClassWriter classWriter1 = new ClassWriter(2);
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.put12(0, (-1039));
      fieldWriter0.put(byteVector1);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitEnd();
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      ClassWriter classWriter1 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "Sgat}re", "'t,[s\"!", "Sgat}re");
      fieldWriter0.visitAnnotation("Sgat}re", false);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter1.pool;
      ByteVector byteVector1 = byteVector0.put12(2, 131072);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Sgat}re", "Deprecated", "Deprecated");
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(2, 1299);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(346);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 346, "Cc#o8)BQW9FT'", "Cc#o8)BQW9FT'", "long", (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(0, (-776));
      ByteVector byteVector2 = byteVector1.put12(1667, 0);
      byteVector2.putByte(1578);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "Cc#o8)BQW9FT'", "Signature", "Cc#o8)BQW9FT'", "long");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Deprecated", "Signature", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("The wildcard array must not be null", false);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "The wildcard array must not be null", "Signature", "Signature", "Deprecated");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Signature", "Deprecated", "Deprecated");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131072, "Sdvr(84cc(xS37", "Signature", "\"a", "Deprecated");
      fieldWriter0.visitAnnotation("Sdvr(84cc(xS37", true);
      fieldWriter0.getSize();
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      fieldWriter1.visitEnd();
      fieldWriter1.visitEnd();
      assertNotSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("Deprecated", true);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(65510, 2382);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", false);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(42, 1299);
      fieldWriter0.put(byteVector1);
      Attribute attribute0 = new Attribute("Deprecated");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Signature", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Signature", false);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(42, 1299);
      fieldWriter0.put(byteVector1);
      Attribute attribute0 = new Attribute("Deprecated");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      ClassWriter classWriter1 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-750), "Signature", "+3b+Hb9.%rjR8hv\"+", "hFDL#<hn", "+3b+Hb9.%rjR8hv\"+");
      fieldWriter0.visitAnnotation("Signature", false);
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Sgat}re", "Deprecated", "Deprecated");
      fieldWriter0.getSize();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter0.pool;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Sgat}re";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "Sgat}re";
      stringArray0[4] = "EnclosingMethod";
      stringArray0[5] = "RuntimeVisibleAnnotations";
      stringArray0[6] = "Sgat}re";
      classWriter0.visit((-3599), 4096, "Sgat}re", "Sgat}re", "EnclosingMethod", stringArray0);
      ByteVector byteVector1 = byteVector0.put12(30, 1299);
      ByteVector byteVector2 = byteVector0.putInt(30);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4621, "Deprecated", "Signature", "Deprecated", "Deprecated");
      fieldWriter0.getSize();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Signature";
      stringArray0[1] = "Signature";
      stringArray0[2] = "Signature";
      stringArray0[3] = "Signature";
      classWriter0.visit(1704, 1704, "Signature", "Signature", "Signature", stringArray0);
      fieldWriter0.visitAnnotation("Signature", false);
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.putByte(2);
      ByteVector byteVector1 = byteVector0.putUTF8("Signature");
      byteVector1.putUTF8("Deprecated");
      fieldWriter0.put(byteVector1);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("k|z<h$KQ", false);
      fieldWriter0.visitAnnotation("A#@`*oZqY_#Hd", false);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4621);
      ClassWriter classWriter1 = new ClassWriter((-1618));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 131072, "", "", "da1Kt", "");
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(3691, 1873);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }
}
