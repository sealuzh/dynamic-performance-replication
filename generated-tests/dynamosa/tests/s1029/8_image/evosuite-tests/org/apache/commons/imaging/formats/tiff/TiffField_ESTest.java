/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 21:44:36 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(9, 120, fieldTypeRational0, 255L, 120, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-101), int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(120, tiffField0.getOffset());
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(2040, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(9, 120, fieldTypeRational0, 255L, 120, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(120, tiffField0.getOffset());
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-23), 41990, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).SRATIONAL).IFD, 1L, 0L, byteArray0, byteOrder0, (byte) (-23));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(41990, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals((-23), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2146816520, 2146816520, byteArray0, byteOrder0, 2146816520);
      tiffField0.dump();
      assertEquals(2146816520, tiffField0.getTag());
      assertEquals(2146816520, tiffField0.getBytesLength());
      assertEquals(2146816520, tiffField0.getOffset());
      assertEquals(2146816520, tiffField0.getDirectoryType());
      assertEquals(2146816520, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, 0L, byteArray0, byteOrder0, 1954);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1954, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0.FLOAT, 1676L, 255L, byteArray0, byteOrder0, (-748));
      tiffField0.getValue();
      assertEquals((-748), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(6704, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(27, (-1509), fieldTypeRational0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (byte)124);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1509), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(124, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2825, 0, fieldTypeRational0, 2825, 2825, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2825, tiffField0.getOffset());
      assertEquals(2825, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-102), (byte)0, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).IFD).UNDEFINED, (-1L), (byte)0, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-102), int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)26;
      TiffField tiffField0 = new TiffField((-2295), 20, fieldTypeShort0.ASCII, 2508L, 2508L, byteArray0, byteOrder0, 2004318071);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2295), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2508, tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(2508, tiffField0.getBytesLength());
      assertEquals(2004318071, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)95, fieldTypeLong0, (-2853L), (byte)95, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(95, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(95, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-381), (-67), fieldTypeShort0, 1611L, (-381), byteArray0, byteOrder0, (-67));
      int int0 = tiffField0.getSortHint();
      assertEquals((-381), tiffField0.getOffset());
      assertEquals((-67), int0);
      assertEquals((-381), tiffField0.getTag());
      assertEquals((-67), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(286, "nwz}:X<csA;K>[");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 923, fieldTypeShort0, 923, 0L, byteArray0, byteOrder0, (-237));
      int int0 = tiffField0.getOffset();
      assertEquals(923, tiffField0.getDirectoryType());
      assertEquals((-237), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-381), (-67), fieldTypeShort0, 1611L, (-381), byteArray0, byteOrder0, (-67));
      int int0 = tiffField0.getOffset();
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals((-381), int0);
      assertEquals((-381), tiffField0.getTag());
      assertEquals((-67), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      TiffField tiffField0 = new TiffField(65535, 1506, fieldTypeShort0, 88L, (-1628L), byteArray0, byteOrder0, 1506);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1506, tiffField0.getDirectoryType());
      assertEquals(1506, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(13056, int0);
      assertEquals((-1628), tiffField0.getOffset());
      assertEquals(176, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1954, (byte)0, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (short)3984);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3984, tiffField0.getSortHint());
      assertEquals(1954, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-69);
      TiffField tiffField0 = new TiffField((-2282), (-2867), fieldTypeShort0, (byte)1, 255L, byteArray0, byteOrder0, (byte) (-72));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2282), tiffField0.getTag());
      assertEquals((-2867), tiffField0.getDirectoryType());
      assertEquals((-72), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-87);
      byteArray0[4] = (byte)39;
      TiffField tiffField0 = new TiffField(28, 23, fieldTypeRational0, 1L, 2130L, byteArray0, byteOrder0, (byte)39);
      tiffField0.getIntValue();
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(2130, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[132];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2300), (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-2300), fieldTypeByte0, (-2300), 1L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2300), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(11, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 3803L, byteArray0, byteOrder0, 11);
      tiffField0.getFieldTypeName();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(3803, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3640), (-632), (FieldType) null, (-1038L), (-3640), byteArray0, byteOrder0, (byte)22);
      tiffField0.getFieldType();
      assertEquals((-3640), tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals((-3640), tiffField0.getTag());
      assertEquals((-632), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 1859L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1859, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2351), "");
      Short short0 = new Short((short)13);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = fieldTypeLong0.SSHORT.writeData(short0, byteOrder0);
      TiffField tiffField0 = new TiffField(52, 3929, fieldTypeShort0, 967L, (-827L), byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getTag());
      assertEquals(3929, tiffField0.getDirectoryType());
      assertEquals((-827), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((short)3984, (-1), fieldTypeAscii0.SSHORT, 1L, (short)3984, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(3984, tiffField0.getTag());
      assertEquals(3984, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-71);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.RATIONAL, 1, 1, byteArray0, byteOrder0, 43);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-124);
      TiffField tiffField0 = new TiffField(0, 1794, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1794, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getTag());
      assertEquals(256, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeShort0, (-718), 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeShort0, 34892L, (byte) (-1), byteArray0, byteOrder0, (-718));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-718), tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(34736, (byte)0, fieldTypeByte0, 34736, 1954, byteArray0, byteOrder0, 34892);
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34892, tiffField0.getSortHint());
      assertEquals(1954, tiffField0.getOffset());
      assertEquals(34736, tiffField0.getTag());
      assertEquals(34736L, long0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((short)3984, 1453, fieldTypeLong0, (-2147483648L), 4L, byteArray0, byteOrder0, 0);
      long long0 = tiffField0.getCount();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1453, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3984, tiffField0.getTag());
      assertEquals((-2147483648L), long0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65535, 1506, fieldTypeShort0, 88L, (-1628L), byteArray0, byteOrder0, 1506);
      int int0 = tiffField0.getBytesLength();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1628), tiffField0.getOffset());
      assertEquals(176, int0);
      assertEquals(1506, tiffField0.getSortHint());
      assertEquals(1506, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2128), (-2128), fieldTypeShort0, (-2128), 1838L, byteArray0, byteOrder0, 2421);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2128), tiffField0.getDirectoryType());
      assertEquals(1838, tiffField0.getOffset());
      assertEquals((-4256), int0);
      assertEquals(2421, tiffField0.getSortHint());
      assertEquals((-2128), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)10, (byte)0, fieldTypeRational0, 2931L, (-1151L), byteArray0, (ByteOrder) null, 109);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals((-1151), tiffField0.getOffset());
      assertEquals(109, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1390, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1390, 1390, fieldTypeFloat0, 1390, 4L, byteArray0, byteOrder0, 6);
      tiffField0.getByteArrayValue();
      assertEquals(1390, tiffField0.getDirectoryType());
      assertEquals(1390, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(5560, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1436), "b38");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2015), (-1436), fieldTypeFloat0, 0L, (-1436), byteArray0, byteOrder0, (-1209));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals((-1436), tiffField0.getOffset());
      assertEquals((-2015), tiffField0.getTag());
      assertEquals((-1209), tiffField0.getSortHint());
      assertEquals((-1436), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, (byte[]) null, byteOrder0, (short)1270);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1037), (-1037), fieldTypeDouble0, (-1037), (-1037), byteArray0, byteOrder0, (-1037));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(84, 84, fieldTypeRational0, 84, 84, (byte[]) null, byteOrder0, 84);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[161];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2119), (-2119), fieldTypeRational0, (-2119), (-2119), byteArray0, byteOrder0, (-2119));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(28, (-2524), fieldTypeShort0, 3047L, (-1L), byteArray0, byteOrder0, (byte)41);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeShort0, 80, 80, (byte[]) null, byteOrder0, 80);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(318, 318, fieldTypeRational0, 318, 318, (byte[]) null, byteOrder0, 318);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-675), (-675), fieldTypeRational0, (-675), (-675), byteArray0, byteOrder0, (-675));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 77);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeShort0, 255L, 1L, (byte[]) null, byteOrder0, 102);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1905), (-1905), fieldTypeRational0, (-1905), (-1905), (byte[]) null, byteOrder0, (-1905));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-16), (-16), fieldTypeRational0, (-16), (-16), byteArray0, byteOrder0, (-16));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-535), fieldTypeRational0, (-535), 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1693, 1693, (FieldType) null, 1693, 1693, byteArray0, byteOrder0, 1693);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-12), (-12), fieldTypeRational0, (-12), (-12), byteArray0, byteOrder0, (-12));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2117, fieldTypeRational0, 1, 60L, byteArray0, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37, 26, (FieldType) null, 26, 26, byteArray0, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-3514), fieldTypeShort0, 27, (-3514), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeShort0, 303, 303, (byte[]) null, byteOrder0, 303);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1628), (-1628), fieldTypeRational0, (-1628), (-1628), byteArray0, byteOrder0, (-1628));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeShort0, 2146816520, 2146816520, (byte[]) null, byteOrder0, 2146816520);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeRational0, (-5), (-5), byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-1456), (FieldType) null, (-1456), (-1456), byteArray0, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, (-214L), (-214L), byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-248), (-248), fieldTypeShort0, (-248), (-248), byteArray0, byteOrder0, (-248));
      MockFileWriter mockFileWriter0 = new MockFileWriter("U#");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "9?I/, /5rqj4T0JT;R");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 112, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, 112);
      MockFile mockFile0 = new MockFile("", "a6|");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "a6|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-433), 3161, fieldTypeShort0, (-2074L), (-433), byteArray0, byteOrder0, 3161);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("G&zNITZ]`~");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(330, (-2), fieldTypeShort0, (-2), 330, byteArray0, byteOrder0, 330);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(23, 3, fieldTypeRational0, 1L, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34852, 34852, fieldTypeByte0, 1313L, 1676L, byteArray0, byteOrder0, (byte) (-125));
      MockPrintStream mockPrintStream0 = new MockPrintStream("): ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1313L, tiffField0.getCount());
      assertEquals(1313, tiffField0.getBytesLength());
      assertEquals(34852, tiffField0.getTag());
      assertEquals(34852, tiffField0.getDirectoryType());
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals(1676, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(107, (-67), fieldTypeShort0, (-67), (-67), byteArray0, byteOrder0, (-2128));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals((-2128), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(107, tiffField0.getTag());
      assertEquals((-67), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-381), (-67), fieldTypeShort0, 1611L, (-381), byteArray0, byteOrder0, (-67));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals((-381), tiffField0.getOffset());
      assertEquals((-67), tiffField0.getSortHint());
      assertEquals((-381), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)0, (byte)95, fieldTypeShort0, (short)3984, (byte)95, byteArray0, byteOrder0, (short)3984);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(95, tiffField0.getOffset());
      assertEquals(3984, tiffField0.getSortHint());
      assertEquals(95, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2998), (-2998), fieldTypeRational0, (-2998), (-2998), byteArray0, byteOrder0, (-1132));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(65535, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(51022, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeShort0, 330, 330, byteArray0, byteOrder0, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, 0L, byteArray0, byteOrder0, 1954);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1954, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (-747L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-747), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-67), (-67), fieldTypeShort0, 0L, (-1L), byteArray0, byteOrder0, (-67));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-67), tiffField0.getTag());
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-67), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals("32 (0x20: Unknown Tag): ", string0);
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2146816520, 2146816520, byteArray0, byteOrder0, 2146816520);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(305, 305, fieldTypeFloat0, 305, 305, byteArray0, byteOrder0, 305);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4f1d6bdf for: 305 (0x131: Software): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeLong0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getIntValueOrArraySum();
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(144, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[101];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeDouble0, 36, 36, byteArray0, byteOrder0, 36);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(13, doubleArray0.length);
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(305, 305, fieldTypeFloat0, 305, 305, byteArray0, byteOrder0, 305);
      tiffField0.getDoubleArrayValue();
      assertEquals(305, tiffField0.getTag());
      assertEquals(305, tiffField0.getOffset());
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(305, tiffField0.getDirectoryType());
      assertEquals(1220, tiffField0.getBytesLength());
      assertEquals(305L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeLong0, 36, 36, byteArray0, byteOrder0, 36);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(26, doubleArray0.length);
      assertEquals(36, tiffField0.getTag());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      tiffField0.getDoubleArrayValue();
      assertEquals(1270, tiffField0.getDirectoryType());
      assertEquals(2540, tiffField0.getBytesLength());
      assertEquals(1270L, tiffField0.getCount());
      assertEquals(1270, tiffField0.getOffset());
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(32, tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(32L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[101];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2146816520, 2146816520, byteArray0, byteOrder0, 2146816520);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5a94cf40 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(26, intArray0.length);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      tiffField0.getIntArrayValue();
      assertEquals(1270, tiffField0.getDirectoryType());
      assertEquals(1270L, tiffField0.getCount());
      assertEquals(2540, tiffField0.getBytesLength());
      assertEquals(1270, tiffField0.getOffset());
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      tiffField0.getIntArrayValue();
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146816498, 2146816498, fieldTypeAscii0, 2146816498, 2146816498, byteArray0, byteOrder0, 2146816498);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@54ac43a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2923L, 2146816520, byteArray0, byteOrder0, 2146816520);
      String string0 = tiffField0.getStringValue();
      assertEquals(2146816520, tiffField0.getDirectoryType());
      assertEquals(2146816520, tiffField0.getOffset());
      assertEquals(2146816520, tiffField0.getSortHint());
      assertEquals(2146816520, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2923, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2146816520, 2146816520, byteArray0, byteOrder0, 2146816520);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@4ace39a2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146816520, 2146816520, fieldTypeAscii0, 2146816520, 2146816520, byteArray0, byteOrder0, 2146816520);
      String string0 = tiffField0.getTagName();
      assertEquals(2146816520, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7ff5d208)", string0);
      assertEquals(2146816520, tiffField0.getSortHint());
      assertEquals(2146816520, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(334, 334, fieldTypeShort0, 334, 334, byteArray0, byteOrder0, 334);
      String string0 = tiffField0.getTagName();
      assertEquals(334, tiffField0.getSortHint());
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals("NumberOfInks", string0);
      assertEquals(334, tiffField0.getTag());
      assertEquals(334, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(132, "");
      TiffField tiffField0 = new TiffField(132, 132, fieldTypeDouble0.FLOAT, 132, 132, byteArray0, byteOrder0, 132);
      String string0 = tiffField0.getValueDescription();
      assertEquals(132, tiffField0.getSortHint());
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(132, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54)", string0);
      assertEquals(132L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(132, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(305, 305, fieldTypeFloat0, 305, 305, byteArray0, byteOrder0, 305);
      String string0 = tiffField0.toString();
      assertEquals(305, tiffField0.getOffset());
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(305, tiffField0.getDirectoryType());
      assertEquals("305 (0x131: Software): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (305 Float)", string0);
      assertEquals(1220, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-3916), 1281, fieldTypeDouble0, 1281, (-3246L), byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getValueDescription();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-3916), tiffField0.getTag());
      assertEquals(1281, tiffField0.getDirectoryType());
      assertEquals((-3246), tiffField0.getOffset());
      assertEquals(10248, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1281L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeByte0, 3602L, 3602L, byteArray0, byteOrder0, 102);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3602L, tiffField0.getCount());
      assertEquals(102, tiffField0.getDirectoryType());
      assertEquals(102, tiffField0.getTag());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(3602, tiffField0.getBytesLength());
      assertEquals(3602, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(51, 2985, fieldTypeLong0, 2985, (-2864), byteArray0, byteOrder0, 51);
      String string0 = tiffField0.toString();
      assertEquals("51 (0x33: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (2985 Long)", string0);
      assertEquals((-2864), tiffField0.getOffset());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(11940, tiffField0.getBytesLength());
      assertEquals(2985, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeDouble0, 36, 36, byteArray0, byteOrder0, 36);
      String string0 = tiffField0.toString();
      assertEquals(36, tiffField0.getOffset());
      assertEquals("36 (0x24: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (36 Double)", string0);
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      String string0 = tiffField0.toString();
      assertEquals(1270, tiffField0.getOffset());
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals("1270 (0x4f6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1270 SShort)", string0);
      assertEquals(1270, tiffField0.getDirectoryType());
      assertEquals(2540, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeShort0.LONG, 47, 47, byteArray0, byteOrder0, 47);
      String string0 = tiffField0.toString();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(188, tiffField0.getBytesLength());
      assertEquals(47, tiffField0.getOffset());
      assertEquals("47 (0x2f: Unknown Tag): 0 (47 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(166, 299, fieldTypeAscii0, 166, 299, byteArray0, byteOrder0, 1693);
      tiffField0.toString();
      assertEquals(299, tiffField0.getDirectoryType());
      assertEquals(166, tiffField0.getBytesLength());
      assertEquals(1693, tiffField0.getSortHint());
      assertEquals(299, tiffField0.getOffset());
      assertEquals(166L, tiffField0.getCount());
      assertEquals(166, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeShort0, 71, 71, byteArray0, byteOrder0, 2320);
      String string0 = tiffField0.toString();
      assertEquals("71 (0x47: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (71 SShort)", string0);
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getOffset());
      assertEquals(2320, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1436), "b38");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2015), (byte)50, fieldTypeFloat0, (-267L), 327L, byteArray0, byteOrder0, (-1436));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1157), (-648));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-2015), tiffField0.getTag());
      assertEquals((-1436), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(327, tiffField0.getOffset());
      assertEquals((-267L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-721), (-67), fieldTypeShort0, (-67), (-67), byteArray0, byteOrder0, (-2128));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-67), (-554));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-67), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals((-2128), tiffField0.getSortHint());
      assertEquals((-721), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      tiffField0.getFieldTypeName();
      assertEquals(1270, tiffField0.getDirectoryType());
      assertEquals(1270L, tiffField0.getCount());
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getTag());
      assertEquals(1270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-225), (-225), fieldTypeRational0, (-225), (-225), (byte[]) null, (ByteOrder) null, (-225));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(51022, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-4828), fieldTypeRational0, (-4828), (-4828), (byte[]) null, byteOrder0, 28);
      String string0 = tiffField0.toString();
      assertEquals((-4828), tiffField0.getDirectoryType());
      assertEquals((-4828), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-4828 Rational)", string0);
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[313];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, (FieldType) null, 43, 43, byteArray0, byteOrder0, 1623);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "o*({1kZ(OdxXr");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((short)1270, (short)1270, fieldTypeShort0, (short)1270, (short)1270, byteArray0, byteOrder0, (short)1270);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1270L, tiffElement0.offset);
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getTag());
      assertEquals(1270, tiffField0.getDirectoryType());
  }
}
