/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 04:52:45 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(584);
      classWriter0.newClassItem("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, 584);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      int int0 = 701;
      ClassWriter classWriter1 = new ClassWriter(classReader0, 701);
      classWriter1.thisName = "java/lang/Object";
      classReader0.copyPool(classWriter1);
      classReader0.readByte(1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'g';
      classReader0.getSuperName();
      charArray0[2] = 'b';
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      char[] charArray0 = new char[2];
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2908));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      Label[] labelArray0 = new Label[1];
      Label label0 = new Label();
      labelArray0[0] = label0;
      label0.getFirst();
      charArray0[1] = 'l';
      ClassWriter classWriter1 = new ClassWriter(8);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, 8);
      classReader0.readConst(2, charArray0);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(584);
      classWriter0.newClassItem("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, (-63));
      classReader0.accept((ClassVisitor) classWriter0, 1);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 701);
      classWriter1.thisName = "java/lang/Object";
      classReader0.copyPool(classWriter1);
      classReader0.readByte(1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'g';
      classReader0.getSuperName();
      charArray0[2] = 'b';
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1008);
      classWriter0.newClassItem("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, (-63));
      classReader0.accept((ClassVisitor) classWriter0, 1);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 701);
      classReader0.copyPool(classWriter1);
      classReader0.readByte(1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'g';
      charArray0[2] = 'b';
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'D';
      charArray0[2] = '/';
      charArray0[3] = '#';
      charArray0[4] = 'M';
      charArray0[5] = '=';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(275, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "wheel.asm.Item";
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 773);
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("wheel.asm.Opcodes");
      int int0 = 2338;
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      Label[] labelArray0 = new Label[9];
      Label label0 = new Label();
      Label label1 = label0.successor;
      labelArray0[0] = null;
      int int1 = 51;
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1, 51);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2332
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AgeFileFilter");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(1);
      Attribute attribute0 = null;
      classWriter0.newFieldItem("org.apache.commons.io.filefilter.AgeFileFilter", "org/apache/commons/io/filefilter/AbstractFileFilter", "I2:zpFX");
      classReader0.getClassName();
      classReader0.copyPool(classWriter0);
      classReader0.readLong(0);
      classReader0.getItem(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'z';
      charArray0[1] = '&';
      charArray0[2] = '/';
      charArray0[3] = 'c';
      charArray0[4] = '}';
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      // Undeclared exception!
      try { 
        classReader0.getItem(744);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 744
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-18);
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-27);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readChar();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-36);
      byteArray1[1] = (byte) (-18);
      byteArray1[2] = (byte)46;
      byteArray1[3] = (byte) (-27);
      byteArray1[4] = (byte) (-36);
      byteArray1[5] = (byte) (-27);
      byteArrayInputStream0.read(byteArray1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte) (-20);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      int int0 = 0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-20));
      byteArrayInputStream0.markSupported();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-7);
      byteArray0[6] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-2721), (-2721));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(".class");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      int int0 = 76;
      Label[] labelArray0 = new Label[0];
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 1288);
      // Undeclared exception!
      try { 
        classReader0.readLabel(76, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 76
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("wheel.asm.AnnotationWriter");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = (-808);
      char[] charArray0 = new char[2];
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2908));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      Label[] labelArray0 = new Label[1];
      Label label0 = new Label();
      labelArray0[0] = label0;
      label0.getFirst();
      charArray0[0] = '*';
      charArray0[1] = 'l';
      ClassWriter classWriter1 = new ClassWriter(8);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, (-808));
      char[] charArray1 = new char[8];
      charArray1[0] = '*';
      charArray1[1] = 't';
      charArray1[2] = '*';
      charArray1[3] = '*';
      charArray1[4] = '*';
      charArray1[5] = 'l';
      charArray1[6] = 'l';
      charArray1[7] = '*';
      // Undeclared exception!
      try { 
        classReader0.readConst(1193, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1193
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      char[] charArray0 = new char[2];
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2908));
      classWriter0.newUTF8("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      Label[] labelArray0 = new Label[1];
      Label label0 = new Label();
      labelArray0[0] = label0;
      label0.getFirst();
      charArray0[0] = '*';
      charArray0[1] = 'l';
      ClassWriter classWriter1 = new ClassWriter(8);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, (-808));
      // Undeclared exception!
      try { 
        classReader0.readConst((-808), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -808
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(584);
      classWriter0.newClassItem("java/lang/Object");
      classReader0.accept((ClassVisitor) classWriter0, (-63));
      classReader0.accept((ClassVisitor) classWriter0, 1);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 701);
      classReader0.copyPool(classWriter1);
      classReader0.readByte(1);
      char[] charArray0 = new char[4];
      charArray0[0] = 'F';
      charArray0[1] = 'g';
      charArray0[2] = 'b';
      charArray0[3] = '>';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
