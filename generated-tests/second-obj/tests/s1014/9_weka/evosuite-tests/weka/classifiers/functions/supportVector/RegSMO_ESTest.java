/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:29:09 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CostMatrix;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.Kernel;
import weka.classifiers.functions.supportVector.RBFKernel;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.SMOset;
import weka.classifiers.lazy.LWL;
import weka.classifiers.lazy.kstar.KStarConstants;
import weka.core.Attribute;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.core.neighboursearch.CoverTree;
import weka.core.tokenizers.AlphabeticTokenizer;
import weka.core.tokenizers.WordTokenizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.takeStep((-2142916198), 990, 114.1523123, 114.1523123, 990);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 59, 59, 3588.583, 59, 59, 59, 3588.583, 59, 59, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 59, 59, 3588.583, 59, (-1339.8862422613483), 3588.583, 59, 0.0, 779.5067457627118, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1368), (-1368), 1.0E-12, 1.0E-12, (-1368), 9.223372036854776E18, (-1368), 1.0E-12, 903.49, 0.7, 9.223372036854776E18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1326, 1326, 1326, 1326, 1326, (-1.0), (-3153.7), 1326, (-1.0), 1326, 1918.6037925438518);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2925, 2925, 2925, 2925, 2925, 1368.2629021917253, 2925, 2925, 2925, 1.0, 1368.2629021917253);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), 2189.813519876403, (-578.3913871379513), 2189.813519876403, (-1), 534.7429153166777, 2189.813519876403, 534.7429153166777, 534.7429153166777, 534.7429153166777, (-578.3913871379513));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      regSMO0.setEpsilon((-2.0));
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1859, 0.2146746857, (-1.0), 1.7976931348623157E308, (-1883), 0.1, 0.1, 0.05, 1.0E-10, 1859, (-302));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-P";
      stringArray0[1] = "n8g";
      try { 
        regSMO0.setOptions(stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Locale.getISOCountries();
      int int0 = (-1883);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1883), 4015.2750767735597, 1568.160147502684, 4015.2750767735597, (-1883), (-803.5519535744295), 0.0, (-804.571775), (-1883), 1.7976931348623157E308, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-929), 325.61410824069, (-2601.0), (-828.7692888), (-929), (-929), (-929), (-828.7692888), (-929), 325.61410824069, (-2601.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon((-0.08948601626149107));
      regSMO0.m_C = 139.0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1883), (-804.571775), 1449.999999855, 139.0, (-1883), 1037.962689, 1037.962689, 1449.999999855, (-0.08948601626149107), 4015.2750767735597, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1368), 4618.834867, 1492.451407577195, 1492.451407577195, 62, 0.693147181, 62, 1492.451407577195, 903.49, 0.7, 0.693147181);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(2.146576772E9);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 59, 59, 3588.583, 811, 811, (-5856.45), 3588.583, 100.0, 59, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.setEpsilon(2.2442268915032729E-7);
      int int0 = (-302);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146746857, 3363.0, (-302), 1449.999999855, (-240), 3363.0, (-302), 1.0, 1.0E-10, 1449.999999855, (-302));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Attribute attribute0 = new Attribute((String) null, (String) null);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(4869, 0, (-1767.22034652), 0.0, 1, 1.0E-10, 0, 0.1, 1, 154.4675633725107, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 2520.2817753063;
      regSMO0.findOptimalPointOnLine(250007, 1.0, 1.0, 6.2831853065512675, (-2146269159), 0.0, 2520.2817753063, 2.0, 250007, (-2146269159), 2520.2817753063);
      regSMO0.setSeed(200003);
      int int0 = 0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(4, 2.0, 250007, (-242.0822751700307), 0, (-2146269159), 0.0, 458.827, 2520.2817753063, 250007, (-1145.97));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_eps = 916.9;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-92), 0.0, 0.0, (-3282), (-2394), (-2394), 2514.5309415925917, (-3282), (-92), 2514.5309415925917, 863.2914350525308);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon((-1598.7));
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-543), (-1598.7), 0.08948601616148721, 2484.7273117888994, (-543), (-295.766676), 8.75887011816019E-8, 2146576794, (-889.618178953), 1492.8, 1492.8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter(1.7976931348623157E308);
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2146269159), 5, 2236.3779997763622, 1853.0442341075657, 490, 1.0E-10, 4.8, 5.70001, 4.8, 1452.99, 5.70001);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      regSMO0.setEpsilon(139.0);
      regSMO0.globalInfo();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146576772, (-1883), 0.08948601616, 673.5114220973203, (-1883), 0.0, 0.0, 2117.817582868169, (-0.08948601626149107), 0.08948601616, (-0.08948601626149107));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setSeed(14);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      double[] doubleArray0 = new double[16];
      doubleArray0[2] = (double) 2367;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 14, 14, 2256.3, 14, 0, (-3540.586923), 2334.0, 2334.0, 2367, 2256.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter(1.0E-10);
      int int0 = (-1883);
      regSMO0.setEpsilon(139.0);
      regSMO0.toString();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146576771, (-1883), 0.08948601616, 674.6120187090099, (-1883), 1.0E-10, 1.0E-10, 2117.817582868169, 1.0E-10, 0.08948601616, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(139.0);
      regSMO0.toString();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146576772, (-1883), 0.08948601616, 674.6120187090099, (-1883), 1.0E-10, 1.0E-10, 2117.817582868169, (-0.08948601626149107), 0.08948601616, (-0.08948601626149107));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), (-1), 0.9776501404869298, 0.9776501404869298, (-1029), (-1029), 2128.37047, 0.9776501404869298, (-1), 1469.192928623364, (-1029));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = null;
      doubleArray0[0] = 0.45386100549108294;
      double[] doubleArray1 = new double[1];
      regSMO0.m_error = doubleArray1;
      regSMO0.toString();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_alphaStar;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      regSMO0.secondChoiceHeuristic((-3530));
      regSMO0.m_alpha = doubleArray1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 59, 59, 3588.583, 59, (-1320.1595092704874), 3588.583, 59, (-34.04333831756819), 779.5067457627118, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.secondChoiceHeuristic(1247);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int[] intArray0 = new int[8];
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.m_classIndex = 2367;
      double[] doubleArray0 = new double[16];
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2367, 0.0, 4.0, 0, 1080, 0, 0.0, 1080, 4.0, 7.400288687063594);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha2Star = (double) 1038;
      regSMO0.m_nCacheHits = 33;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 1038;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setEpsilon(1038);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.secondChoiceHeuristic(1262);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = regSMO0.m_bModelBuilt;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1038, 1038, 1.7034140744832287, 0, 1.0, 3359.0559, 33, (-1), 3359.0559, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Random.setNextRandom(2367);
      RegSMO regSMO0 = new RegSMO();
      int[] intArray0 = new int[8];
      intArray0[0] = 2367;
      intArray0[2] = 0;
      regSMO0.m_C = (double) 2367;
      intArray0[4] = 2367;
      intArray0[5] = 1080;
      intArray0[6] = 2367;
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.m_classIndex = 2367;
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (double) 2367;
      doubleArray0[3] = (double) 0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2367, 2367.0, 2367, 2367, 1080, 1080, 2367.0, 1080, 2367, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int[] intArray0 = new int[8];
      intArray0[2] = 0;
      intArray0[5] = 1080;
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.m_classIndex = 2367;
      double[] doubleArray0 = new double[16];
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2367, 0.0, 1080.0, 0, 1080, 1080, 0.0, 1080, 1080.0, 7.400288687063594);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(139.0);
      regSMO0.globalInfo();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146576772, (-1883), 0.08948601616, (-0.08948601626149107), (-1883), 0.0, 0.0, 2117.817582868169, (-0.08948601626149107), 0.08948601616, (-0.08948601626149107));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setSeed(14);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      double[] doubleArray0 = new double[16];
      doubleArray0[2] = (double) 2367;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-2844.08376068964), 14, 1, 1, 14, 2256.3, (-1358.17989), 1, 1362.7863164807845, 2367.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1068;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setEpsilon(1068);
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.secondChoiceHeuristic(1247);
      Instances instances0 = regSMO0.m_data;
      try { 
        regSMO0.examineExample(1068);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2119.7280968519076;
      regSMO0.m_error = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      regSMO0.m_alpha = doubleArray0;
      doubleArray0[0] = 1345.0238127158373;
      regSMO0.listOptions();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_C = (double) 1113;
      regSMO0.getTechnicalInformation();
      regSMO0.m_nCacheHits = 1113;
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(1113);
      SMOset sMOset0 = new SMOset(1113);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.m_nCacheHits = 0;
      MockRandom mockRandom0 = new MockRandom();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H&:?SQMjU");
      sMOset0.delete(0);
      regSMO0.m_alphaStar = regSMO0.m_alphaStar;
      regSMO0.findOptimalPointOnLine(0, 1113, 1113, 1.7034140745, 0, (-775.32198), 3358.7485610664025, 63, 0, 3358.7485610664025, 63);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L");
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String string0 = CostMatrix.FILE_EXTENSION;
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      regSMO0.m_nInstances = 22;
      regSMO0.getTechnicalInformation();
      WordTokenizer wordTokenizer0 = new WordTokenizer();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 1038;
      regSMO0.m_C = (double) 1038;
      regSMO0.globalInfo();
      regSMO0.m_nCacheHits = 52;
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      SMOset sMOset0 = new SMOset(52);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.setEpsilon(1038);
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = regSMO0.m_bModelBuilt;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      sMOset0.printElements();
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.getRevision();
      regSMO0.findOptimalPointOnLine(0, 1038, 1038, 1.7034140744832287, 0, 3358.7485610664025, 3358.7485610664025, 52, 3.0, 3358.7485610664025, 52);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      regSMO0.m_nCacheHits = 52;
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(3955);
      SMOset sMOset0 = new SMOset(52);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.setEpsilon(3955);
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = regSMO0.m_bModelBuilt;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      sMOset0.printElements();
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.m_sparseWeights = regSMO0.m_alphaStar;
      regSMO0.getRevision();
      regSMO0.findOptimalPointOnLine(0, 3955, 3955, 1.7034140744832287, 0, 1.0, 3358.7485610664025, 52, 3.0, 3358.7485610664025, 52);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_C = (double) 1045;
      regSMO0.globalInfo();
      regSMO0.m_nCacheHits = 61;
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      SMOset sMOset0 = new SMOset(61);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.setEpsilon(1045);
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      boolean boolean0 = regSMO0.m_bModelBuilt;
      SMOreg sMOreg0 = new SMOreg();
      sMOreg0.getOptions();
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.m_nSeed = 2;
      regSMO0.findOptimalPointOnLine(1262, 0, 1262, 2, 1, 0, 1045, 728.7144416322773, 1262, (-2163.851514245251), 2);
      regSMO0.getRevision();
      regSMO0.findOptimalPointOnLine(0, 1045, 1045, 0, 0, 1045, 3346.1872236553418, 61, 3.0, 3346.1872236553418, 61);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha1Star = 0.45386100549108294;
      regSMO0.m_alpha = doubleArray0;
      doubleArray0[0] = 0.45386100549108294;
      double[] doubleArray1 = new double[1];
      regSMO0.m_error = doubleArray1;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray1;
      int int0 = (-1308);
      regSMO0.secondChoiceHeuristic((-1308));
      regSMO0.globalInfo();
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_C = (double) 1074;
      regSMO0.getTechnicalInformation();
      regSMO0.m_nCacheHits = 1074;
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(1074);
      SMOset sMOset0 = new SMOset(1074);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      boolean boolean0 = regSMO0.m_bModelBuilt;
      FileSystemHandling.shouldAllThrowIOExceptions();
      sMOset0.printElements();
      RBFKernel rBFKernel0 = new RBFKernel();
      regSMO0.m_kernel = (Kernel) rBFKernel0;
      regSMO0.m_nCacheHits = 0;
      MockRandom mockRandom0 = new MockRandom();
      sMOset0.getRevision();
      sMOset0.insert(0);
      regSMO0.m_sparseWeights = regSMO0.m_alphaStar;
      regSMO0.getRevision();
      regSMO0.findOptimalPointOnLine(0, 1074, 1074, (-11.55211432873831), 0, 1.0, 1074, 1074, 3.0, 1074, 1074);
      sMOset0.delete(17);
      int int0 = KStarConstants.B_ENTROPY;
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_C = (double) 1113;
      regSMO0.getTechnicalInformation();
      regSMO0.m_nCacheHits = 1113;
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(1113);
      SMOset sMOset0 = new SMOset(1113);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.m_nCacheHits = 0;
      MockRandom mockRandom0 = new MockRandom();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H&:?SQMjU");
      sMOset0.delete(0);
      regSMO0.m_alphaStar = regSMO0.m_alphaStar;
      String string0 = CostMatrix.FILE_EXTENSION;
      regSMO0.findOptimalPointOnLine(0, 1113, 1113, 1.7034140745, 0, 8.75887011816019E-8, 8.75887011816019E-8, 1113, 0, 8.75887011816019E-8, 1113);
      regSMO0.getRevision();
      regSMO0.epsilonParameterTipText();
      String[] stringArray0 = new String[6];
      stringArray0[0] = ".cost";
      regSMO0.setEpsilon(1.7034140745);
      Random.setNextRandom(0);
      try { 
        regSMO0.examineExample(1113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = doubleArray0;
      double[] doubleArray1 = new double[1];
      regSMO0.m_error = doubleArray1;
      regSMO0.globalInfo();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.optimize();
      regSMO0.getEpsilon();
      regSMO0.setEpsilon(0.45386100549108294);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alphaStar = null;
      double[] doubleArray0 = new double[1];
      regSMO0.m_error = doubleArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_alphaStar;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.getRevision();
      regSMO0.globalInfo();
      regSMO0.optimize();
      Locale.getISOCountries();
      regSMO0.setOptions((String[]) null);
      int int0 = LWL.LINEAR;
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.m_random = (java.util.Random) mockRandom0;
      regSMO0.examineExample(0);
      // Undeclared exception!
      try { 
        mockRandom0.doubles(2256.3, 7.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = doubleArray0;
      doubleArray0[0] = 0.5;
      regSMO0.m_error = regSMO0.m_alpha;
      regSMO0.toString();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.5;
      doubleArray1[1] = 0.5;
      regSMO0.m_error = doubleArray1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.setEpsilon(0.5);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      int int0 = LWL.LINEAR;
      MockRandom mockRandom0 = new MockRandom();
      try { 
        regSMO0.examineExample(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      regSMO0.m_alpha = doubleArray0;
      doubleArray0[0] = 0.4538610054911;
      regSMO0.m_error = regSMO0.m_alpha;
      regSMO0.epsilonTipText();
      regSMO0.m_error = regSMO0.m_alpha;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The epsilon for round-off error (shouldn't be changed).");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      regSMO0.setEpsilon((-2463.4999999999));
      int int0 = LWL.LINEAR;
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.examineExample(0);
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      regSMO0.toString();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.5;
      doubleArray1[1] = 0.5;
      regSMO0.m_error = doubleArray1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SMOreg\n\nSupport vectors:\n +       0     \n\n\n\nNumber of kernel evaluations: 0");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.setSeed((-890));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SMOreg\n\nSupport vectors:\n +       0     \n\n\n\nNumber of kernel evaluations: 0");
      regSMO0.setEpsilon(0.5);
      int int0 = LWL.LINEAR;
      MockRandom mockRandom0 = new MockRandom();
      try { 
        regSMO0.examineExample(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alpha = doubleArray0;
      doubleArray0[0] = 0.5;
      regSMO0.m_error = regSMO0.m_alpha;
      regSMO0.toString();
      double[] doubleArray1 = new double[2];
      doubleArray1[1] = 0.5;
      regSMO0.m_error = doubleArray1;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.setEpsilon(1.7976931348623157E308);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = regSMO0.m_error;
      int int0 = LWL.LINEAR;
      MockRandom mockRandom0 = new MockRandom();
      try { 
        regSMO0.examineExample(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }
}
