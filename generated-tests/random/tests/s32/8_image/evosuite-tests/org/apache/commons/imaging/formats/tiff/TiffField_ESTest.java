/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 17:23:13 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1431655764), 2134145240, fieldTypeRational0, (-1431655764), 2134145240, byteArray0, byteOrder0, (-2122799926));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2134145240, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals((-2122799926), tiffField0.getSortHint());
      assertEquals(2134145240, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)8;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-320), (-2146976327), fieldTypeShort0, 610L, (-320), byteArray0, byteOrder0, 275);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-320), tiffField0.getOffset());
      assertEquals(2048, int0);
      assertEquals((-2146976327), tiffField0.getDirectoryType());
      assertEquals((-320), tiffField0.getTag());
      assertEquals(275, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)41;
      byteArray0[4] = (byte)111;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2313), (-2313), fieldTypeLong0, 5920L, (-348L), byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-348), tiffField0.getOffset());
      assertEquals((-2313), tiffField0.getDirectoryType());
      assertEquals((-2313), tiffField0.getTag());
      assertEquals((-19), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-92);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      tiffField0.getByteArrayValue();
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(2147451503, tiffField0.getSortHint());
      assertEquals(2147451503, tiffField0.getDirectoryType());
      assertEquals(652, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, (-1351), fieldTypeByte0, (-1633L), (-395L), byteArray0, (ByteOrder) null, (byte)70);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-1L), 1313L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1791), (-1791), fieldTypeFloat0, (-1791), (-1008L), (byte[]) null, (ByteOrder) null, (-1791));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2045, 2045, fieldTypeLong0, (-8589337276L), (-1L), byteArray0, byteOrder0, 2147044040);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4269), (-4269), (FieldType) null, (-4269), (-1284L), byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]QhIgLCg~");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "]QhIgLCg~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(41, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeLong0, 41, 41, byteArray0, byteOrder0, (byte)1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(41, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      tiffField0.getFieldType();
      assertEquals(566, tiffField0.getOffset());
      assertEquals(1698, tiffField0.getSortHint());
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(566, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      tiffField0.getValue();
      assertEquals(2147451503, tiffField0.getDirectoryType());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(2147451503, tiffField0.getSortHint());
      assertEquals(652, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      int int0 = tiffField0.getOffset();
      assertEquals(2147451503, tiffField0.getDirectoryType());
      assertEquals(2147451503, tiffField0.getSortHint());
      assertEquals(652, int0);
      assertEquals(2147475455, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      tiffField0.getTagInfo();
      assertEquals(566, tiffField0.getOffset());
      assertEquals(1698, tiffField0.getSortHint());
      assertEquals(566, tiffField0.getTag());
      assertEquals(566, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      fieldTypeRational0.getValue(tiffField0);
      assertEquals(566, tiffField0.getOffset());
      assertEquals(1698, tiffField0.getSortHint());
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(566, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      tiffField0.getBytesLength();
      assertEquals(566, tiffField0.getOffset());
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(566, tiffField0.getTag());
      assertEquals(1698, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1051, 1051, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte) (-124));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6b7953c1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147165455, ">}c\"@)h<67+SuVE#Xi3");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)93);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147165455, 2147165455, fieldTypeDouble0, 65535L, 4L, byteArray0, byteOrder0, 29);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147165455, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(2147165455, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, (-1745L), byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1745), tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147432698, 0, fieldTypeLong0, 42152L, 42152L, byteArray0, (ByteOrder) null, (byte) (-40));
      tiffField0.getDoubleArrayValue();
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(42152, tiffField0.getOffset());
      assertEquals(2147432698, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(42152L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)121, 2600, fieldTypeByte0, (byte)0, 2245L, byteArray0, byteOrder0, (byte)125);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@684b81d4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-73), (-73), fieldTypeRational0, 538L, (-73), byteArray0, byteOrder0, 34910);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-73), tiffField0.getDirectoryType());
      assertEquals(538L, tiffField0.getCount());
      assertEquals((-73), tiffField0.getTag());
      assertEquals((-73), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(34910, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      tiffField0.getDoubleArrayValue();
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(566, tiffField0.getOffset());
      assertEquals(566, tiffField0.getTag());
      assertEquals(1698, tiffField0.getSortHint());
      assertEquals(566L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "JHaDTu}k5fHE*2bt_y'");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte) (-80));
      tiffField0.getDoubleArrayValue();
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(265, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(265, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-320), (-2146976327), fieldTypeShort0, 610L, (-320), byteArray0, byteOrder0, 275);
      tiffField0.getDoubleArrayValue();
      assertEquals((-320), tiffField0.getTag());
      assertEquals((-320), tiffField0.getOffset());
      assertEquals(610L, tiffField0.getCount());
      assertEquals((-2146976327), tiffField0.getDirectoryType());
      assertEquals(275, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, (-1745L), byteArray0, byteOrder0, (byte)2);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2d864497 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-320), (-2146976327), fieldTypeShort0, 610L, (-320), byteArray0, byteOrder0, 275);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(275, tiffField0.getSortHint());
      assertEquals((-320), tiffField0.getTag());
      assertEquals(610L, tiffField0.getCount());
      assertEquals((-2146976327), tiffField0.getDirectoryType());
      assertEquals((-320), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1431655764), 2134145240, fieldTypeRational0, (-1431655764), 2134145240, byteArray0, byteOrder0, (-2122799926));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      tiffField0.getIntArrayValue();
      assertEquals(2147451503, tiffField0.getDirectoryType());
      assertEquals(611L, tiffField0.getCount());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(652, tiffField0.getOffset());
      assertEquals(2147451503, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "JHaDTu}k5fHE*2bt_y'");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte) (-80));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(265, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 4L, 42152L, byteArray0, byteOrder0, (byte) (-71));
      assertEquals(4, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(42152, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-71), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146429409, 1, fieldTypeByte0, 2146429409, (-1147L), byteArray0, byteOrder0, 1383);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@3313e315
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1424, 487, fieldTypeFloat0, 1L, 2873L, byteArray0, (ByteOrder) null, (byte)104);
      String string0 = tiffField0.getTagName();
      assertEquals(2873, tiffField0.getOffset());
      assertEquals(487, tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x590)", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "JHaDTu}k5fHE*2bt_y'");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte) (-80));
      String string0 = tiffField0.getTagName();
      assertEquals(265, tiffField0.getTag());
      assertEquals("CellLength", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals((-80), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-1867), fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">qm^lvUZQ!BK4)");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "ZvZFlQluRg");
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1867), tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146429409, 1, fieldTypeByte0, 2146429409, (-1147L), byteArray0, byteOrder0, 1383);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1026);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "byArA~|v%1LR+");
      assertEquals("byArA~|v%1LR+: 2146429409 (0x7fefe9e1: Unknown Tag): 0, 0, 0 (2146429409 SByte)\n", byteArrayOutputStream0.toString());
      assertEquals(80, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)121, 2600, fieldTypeByte0, (byte)0, 2245L, byteArray0, byteOrder0, (byte)125);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2245, tiffField0.getOffset());
      assertEquals(125, tiffField0.getSortHint());
      assertEquals(121, tiffField0.getTag());
      assertEquals(2600, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40961, (-1303), fieldTypeFloat0, 0L, (-1303), byteArray0, byteOrder0, (byte) (-81));
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1303), tiffField0.getOffset());
      assertEquals("40961 (0xa001: ColorSpace):  (0 Float)", string0);
      assertEquals((-81), tiffField0.getSortHint());
      assertEquals((-1303), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147205079, 270, fieldTypeLong0, 391L, 450L, byteArray0, (ByteOrder) null, (byte)63);
      tiffField0.dump();
      assertEquals(450, tiffField0.getOffset());
      assertEquals(1564, tiffField0.getBytesLength());
      assertEquals(270, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(391L, tiffField0.getCount());
      assertEquals(2147205079, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField(2134145240, (-1717986917), fieldTypeDouble0, 3383L, 0L, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(27064, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2134145240, tiffField0.getTag());
      assertEquals(3383L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-320), (-2146976327), fieldTypeShort0, 610L, (-320), byteArray0, byteOrder0, 275);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" (0x");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-320), tiffField0.getTag());
      assertEquals(610L, tiffField0.getCount());
      assertEquals(1220, tiffField0.getBytesLength());
      assertEquals((-320), tiffField0.getOffset());
      assertEquals(275, tiffField0.getSortHint());
      assertEquals((-2146976327), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1132, fieldTypeAscii0, 65535, 1132, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1132, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(1132, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147475455, 2147451503, fieldTypeRational0, 611L, 652L, byteArray0, (ByteOrder) null, 2147451503);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(611L, tiffField0.getCount());
      assertEquals(2147451503, tiffField0.getDirectoryType());
      assertEquals(652, tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4888, tiffField0.getBytesLength());
      assertEquals(2147451503, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50965, "%Y6ad.)D<uxG?.");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)103;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50965, (-2417), fieldTypeAscii0, 50965, 50965, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50965, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50965, tiffField0.getOffset());
      assertEquals((-2417), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50965, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("c5Ju`", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)107, (-586));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1548, (-1590), (FieldType) null, (-1590), (-1590), byteArray0, byteOrder0, (-2144733988));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1698, tiffField0.getSortHint());
      assertEquals(566, tiffField0.getTag());
      assertEquals(566L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(566, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-816), "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(512, 512, fieldTypeRational0, 255L, 1410L, byteArray0, (ByteOrder) null, 48131);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(48131, tiffField0.getSortHint());
      assertEquals(512, int0);
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(512, tiffField0.getTag());
      assertEquals(1410, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(566, 566, fieldTypeRational0, 566, 566, byteArray0, (ByteOrder) null, 1698);
      int int0 = tiffField0.getSortHint();
      assertEquals(566, tiffField0.getTag());
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(566, tiffField0.getOffset());
      assertEquals(1698, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-320), (-2146976327), fieldTypeShort0, 610L, (-320), byteArray0, byteOrder0, 275);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-2146976327), tiffField0.getDirectoryType());
      assertEquals((-320), tiffField0.getOffset());
      assertEquals("-320 (0xfffffec0: Unknown Tag): ", string0);
      assertEquals(1220, tiffField0.getBytesLength());
      assertEquals(275, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(41, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeLong0, 41, 41, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(164, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(41L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1791), (-1791), fieldTypeFloat0, (-1791), (-1008L), (byte[]) null, (ByteOrder) null, (-1791));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1791), tiffField0.getDirectoryType());
      assertEquals((-1791L), tiffField0.getCount());
      assertEquals((-1791), tiffField0.getTag());
      assertEquals((-1008), tiffField0.getOffset());
      assertEquals((-1791), tiffField0.getSortHint());
      assertNull(string0);
  }
}
