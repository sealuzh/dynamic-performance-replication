/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 02:49:20 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      classReader0.getClassName();
      int int0 = 4634;
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(4634);
      classWriter0.thisName = "org.apache.commons.io.filefilter.CanWriteFileFilter";
      classReader0.accept((ClassVisitor) classWriter0, 4634);
      char[] charArray0 = new char[1];
      char char0 = ',';
      classReader0.accept((ClassVisitor) classWriter0, 572);
      // Undeclared exception!
      try { 
        classReader0.readConst(572, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 572
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      assertEquals(8070, classReader0.header);
      
      classReader0.getClassName();
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/ClassReader", string0);
      
      int int0 = classReader0.readByte(155);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      classReader0.getClassName();
      int int0 = 4634;
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(4634);
      classWriter0.thisName = "org.apache.commons.io.filefilter.CanWriteFileFilter";
      classReader0.accept((ClassVisitor) classWriter0, 4634);
      char[] charArray0 = new char[1];
      char char0 = ',';
      ClassWriter classWriter1 = new ClassWriter(classReader0, 4);
      classReader0.accept((ClassVisitor) classWriter1, 572);
      // Undeclared exception!
      try { 
        classReader0.readConst(572, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 572
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      int int0 = 117;
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = 'W';
      charArray0[2] = ']';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'Z';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 3);
      charArray0[4] = 'u';
      charArray0[5] = ']';
      charArray0[6] = 'p';
      charArray0[7] = 'K';
      charArray0[8] = 'c';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(117, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getClassName();
      int int0 = (-5117);
      classReader0.getClassName();
      char[] charArray0 = new char[7];
      charArray0[0] = 'R';
      charArray0[1] = 'C';
      charArray0[2] = '\\';
      charArray0[3] = 't';
      classReader0.getInterfaces();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[4] = ')';
      charArray0[5] = 'w';
      charArray0[6] = 'b';
      // Undeclared exception!
      try { 
        classReader0.readConst((-4763), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4763
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      int int0 = 117;
      char[] charArray0 = new char[9];
      charArray0[0] = '@';
      charArray0[1] = 'W';
      charArray0[2] = ']';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'Z';
      charArray0[4] = 'u';
      charArray0[5] = ']';
      charArray0[6] = 'p';
      charArray0[7] = 'K';
      charArray0[8] = 'c';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(117, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)110;
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-116);
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)11;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), (byte) (-8));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "wheel.asm.ByteVector";
      ClassReader classReader0 = new ClassReader("wheel.asm.ByteVector");
      classReader0.getSuperName();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(830);
      classWriter0.cr = classReader0;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classWriter0.cr.readClass(830, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte) (-81);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)0, 417);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "java/lang/String";
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.newFloat((-2141.0F));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      ClassWriter classWriter1 = null;
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-27);
      byteArray0[5] = (byte)60;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      charArray0[1] = 'E';
      charArray0[2] = '<';
      charArray0[3] = 'l';
      charArray0[4] = '$';
      ClassWriter classWriter0 = new ClassWriter(1267);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 654);
      charArray0[5] = 't';
      charArray0[6] = '&';
      // Undeclared exception!
      try { 
        classReader0.readClass((-477), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("}%)1");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
