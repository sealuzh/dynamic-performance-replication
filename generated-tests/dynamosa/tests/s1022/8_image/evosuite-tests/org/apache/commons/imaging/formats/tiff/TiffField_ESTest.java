/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 10:11:55 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-80);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2147233211), (-2147233211), fieldTypeShort0, 2006L, (-2147233211), byteArray0, byteOrder0, 2138893713);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2147233211), tiffField0.getDirectoryType());
      assertEquals(4012, tiffField0.getBytesLength());
      assertEquals((-2147233211), tiffField0.getTag());
      assertEquals((-2147233211), tiffField0.getOffset());
      assertEquals(176, int0);
      assertEquals(2138893713, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)96, 6, fieldTypeLong0, (byte)1, (-1L), byteArray0, byteOrder0, (byte)96);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(96, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(27, (-12), fieldTypeAscii0.SRATIONAL, 34041, (-2147483648L), byteArray0, (ByteOrder) null, 34041);
      String string0 = tiffField0.getValueDescription();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-12), tiffField0.getDirectoryType());
      assertEquals(34041, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2246, 1587, fieldTypeRational0, 1587, 1270, byteArray0, byteOrder0, 2246);
      String string0 = tiffField0.getValueDescription();
      assertEquals(12696, tiffField0.getBytesLength());
      assertEquals(2246, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2246, tiffField0.getTag());
      assertEquals(1587, tiffField0.getDirectoryType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(62, "g?Wi^6%p0JV~u{");
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeShort0, 1098L, 62, byteArray0, byteOrder0, 62);
      tiffField0.getValue();
      assertEquals(2196, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 59, 926L, byteArray0, (ByteOrder) null, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(926, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1297L, 1297L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(1297, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-55), 0, fieldTypeLong0, 1952L, (-55), byteArray0, byteOrder0, (byte)48);
      int int0 = tiffField0.getTag();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-55), int0);
      assertEquals((-55), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte)25;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2322, 60, fieldTypeAscii0, 2322, 1169L, byteArray0, byteOrder0, 9);
      String string0 = tiffField0.getStringValue();
      assertEquals(1169, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(2322, tiffField0.getBytesLength());
      assertEquals(60, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2322, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeDouble0, (byte)8, (-4168L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-4168), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(547, "'");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2144), (byte)0, fieldTypeByte0.IFD, 4L, 2125L, byteArray0, byteOrder0, (-3121));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3121), int0);
      assertEquals(2125, tiffField0.getOffset());
      assertEquals((-2144), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4416, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2146190760), (-2144), fieldTypeShort0.LONG, 2639L, (byte)0, byteArray0, byteOrder0, (-3121));
      int int0 = tiffField0.getOffset();
      assertEquals((-2146190760), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-3121), tiffField0.getSortHint());
      assertEquals((-2144), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(2000);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2000, 2000, fieldTypeRational0, 2000, 2000, byteArray0, byteOrder0, 31);
      int int0 = tiffField0.getOffset();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(2000, tiffField0.getTag());
      assertEquals(2000, tiffField0.getDirectoryType());
      assertEquals(2000, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)17;
      byteArray0[4] = (byte) (-16);
      TiffField tiffField0 = new TiffField(1245, 28, fieldTypeRational0, 1245, (-5935), byteArray0, (ByteOrder) null, (-5380));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-5380), tiffField0.getSortHint());
      assertEquals(9960, tiffField0.getBytesLength());
      assertEquals(18, int0);
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals((-5935), tiffField0.getOffset());
      assertEquals(1245, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-80);
      TiffField tiffField0 = new TiffField((-780), 2210, fieldTypeByte0, 1L, (-1643L), byteArray0, (ByteOrder) null, (-4142));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals(2210, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-780), tiffField0.getTag());
      assertEquals((-4142), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4238), (byte)1, fieldTypeByte0, (byte)1, 1L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-4238), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3657), "BDFQd2,3]bdm3");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3218, (-3657), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (byte)13);
      tiffField0.getIntValue();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-3657), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3218, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-80);
      TiffField tiffField0 = new TiffField((-780), 25, fieldTypeByte0, 1L, (-1643L), byteArray0, (ByteOrder) null, (-4142));
      tiffField0.getIntValue();
      assertEquals((-4142), tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-780), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146895618, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 2465, fieldTypeFloat0, 65535, 2465, byteArray0, byteOrder0, (byte)108);
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2465, tiffField0.getOffset());
      assertEquals(2465, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1280, 1280, fieldTypeShort0, 1280, 1280, byteArray0, byteOrder0, 1280);
      tiffField0.getFieldTypeName();
      assertEquals(1280, tiffField0.getDirectoryType());
      assertEquals(1280, tiffField0.getSortHint());
      assertEquals(1280, tiffField0.getTag());
      assertEquals(1280, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      tiffField0.getFieldTypeName();
      assertEquals((-1829), tiffField0.getOffset());
      assertEquals((-1829), tiffField0.getDirectoryType());
      assertEquals((-1829), tiffField0.getSortHint());
      assertEquals((-1829), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 288, (FieldType) null, (-66L), 641L, byteArray0, byteOrder0, 48257);
      tiffField0.getFieldType();
      assertEquals(48257, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, "'");
      TiffField tiffField0 = new TiffField((-2144), (byte)0, fieldTypeLong0, 4L, 2125L, byteArray0, byteOrder0, (-3121));
      tiffField0.getFieldType();
      assertEquals((-2144), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3121), tiffField0.getSortHint());
      assertEquals(2125, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      tiffField0.getFieldType();
      assertEquals((-1829), tiffField0.getTag());
      assertEquals((-1829), tiffField0.getSortHint());
      assertEquals((-1829), tiffField0.getOffset());
      assertEquals((-1829), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1752, 253, fieldTypeByte0, 1, 1752, byteArray0, (ByteOrder) null, 179);
      tiffField0.getDoubleValue();
      assertEquals(253, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(179, tiffField0.getSortHint());
      assertEquals(1752, tiffField0.getOffset());
      assertEquals(1752, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)78;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)78, (byte) (-1), fieldTypeDouble0, (byte)1, (byte)78, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(78, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(78, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-80);
      TiffField tiffField0 = new TiffField((-780), 2210, fieldTypeByte0, 1L, (-1643L), byteArray0, (ByteOrder) null, (-4142));
      tiffField0.getDoubleValue();
      assertEquals(2210, tiffField0.getDirectoryType());
      assertEquals((-4142), tiffField0.getSortHint());
      assertEquals((-780), tiffField0.getTag());
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeRational0, 59, 926L, byteArray0, (ByteOrder) null, 330);
      tiffField0.getDoubleArrayValue();
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(472, tiffField0.getBytesLength());
      assertEquals(926, tiffField0.getOffset());
      assertEquals(330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)50, 0, fieldTypeLong0, (-8589934592L), 0, byteArray0, byteOrder0, (-845));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-845), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-798), (-798), fieldTypeShort0, 1625L, (-798), byteArray0, byteOrder0, (-2229));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-798), tiffField0.getOffset());
      assertEquals((-2229), tiffField0.getSortHint());
      assertEquals((-798), tiffField0.getTag());
      assertEquals((-798), int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      tiffField0.getCount();
      assertEquals((-1829), tiffField0.getTag());
      assertEquals((-1829), tiffField0.getDirectoryType());
      assertEquals((-1829), tiffField0.getSortHint());
      assertEquals((-1829), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2207, 2207, fieldTypeShort0, (byte) (-80), (byte) (-80), byteArray0, (ByteOrder) null, 129);
      tiffField0.getCount();
      assertEquals((-80), tiffField0.getOffset());
      assertEquals(2207, tiffField0.getDirectoryType());
      assertEquals(129, tiffField0.getSortHint());
      assertEquals(2207, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(708, 708, fieldTypeRational0, 0L, 1587, byteArray0, byteOrder0, (-84));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-84), tiffField0.getSortHint());
      assertEquals(1587, tiffField0.getOffset());
      assertEquals(708, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(708, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1405), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1405), (-1405), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1405), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-5620), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4416, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1717986917), (byte)0, fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, (ByteOrder) null, 3669);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3669, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4416, ">av~l.-T");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2634, fieldTypeShort0, 79L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(2634, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3633, 3633, fieldTypeFloat0, 3633, 3633, byteArray0, (ByteOrder) null, 3633);
      tiffField0.getByteArrayValue();
      assertEquals(3633, tiffField0.getTag());
      assertEquals(14532, tiffField0.getBytesLength());
      assertEquals(3633, tiffField0.getOffset());
      assertEquals(3633, tiffField0.getSortHint());
      assertEquals(3633, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeDouble0, 4L, (-576L), byteArray0, byteOrder0, 3939);
      tiffField0.getByteArrayValue();
      assertEquals(3939, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-576), tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(547, "'");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2144), 2, fieldTypeByte0.IFD, 4L, 2125L, byteArray0, byteOrder0, (-3121));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-2144), tiffField0.getTag());
      assertEquals((-3121), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2125, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, (FieldType) null, 24, 5091L, (byte[]) null, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-318), (-318), fieldTypeRational0, (-318), (-318), byteArray0, (ByteOrder) null, (-318));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 1L, 13, byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2145801985, 2145801985, fieldTypeRational0, 2145801985, 2145801985, (byte[]) null, (ByteOrder) null, 2145801985);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2627), (-2627), fieldTypeRational0, (-2627), (-2627), byteArray0, (ByteOrder) null, (-2627));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(40091, 1653, fieldTypeAscii0.SHORT, (-2372L), (-2372L), byteArray0, (ByteOrder) null, 1653);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 46, 46, (byte[]) null, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(652, 652, fieldTypeRational0, 1L, (-3136L), byteArray0, (ByteOrder) null, 652);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1360, 1360, fieldTypeFloat0, 1360, 1360, (byte[]) null, byteOrder0, 1360);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-500), (-500), fieldTypeRational0, (-500), (-500), byteArray0, (ByteOrder) null, (-500));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(324, 324, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 324);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1270, 1270, fieldTypeShort0, 1270, 1270, (byte[]) null, byteOrder0, 1270);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeLong0, 38, 38, (byte[]) null, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeRational0, (-520), (-520), byteArray0, (ByteOrder) null, (-520));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeRational0, 40091, 40091, byteArray0, (ByteOrder) null, 40091);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(34933, 34933, fieldTypeRational0, 34933, 34933, (byte[]) null, (ByteOrder) null, 34933);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-500), (-500), fieldTypeRational0, (-500), (-500), byteArray0, (ByteOrder) null, (-500));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34894, 34894, fieldTypeRational0, 1L, 34894, byteArray0, byteOrder0, 34894);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-500), (-500), fieldTypeRational0, (-500), (-500), (byte[]) null, (ByteOrder) null, (-500));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeRational0, (-520), (-520), byteArray0, (ByteOrder) null, (-520));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeLong0, 694, 40091, byteArray0, (ByteOrder) null, 694);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(593, 593, fieldTypeByte0.SSHORT, 593, 593, (byte[]) null, (ByteOrder) null, 593);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1L, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-646), (-646), fieldTypeRational0, (-646), (-646), (byte[]) null, (ByteOrder) null, (-646));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeRational0, (-520), (-520), byteArray0, (ByteOrder) null, (-520));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-142), (-142), fieldTypeFloat0, (-142), (-1932), byteArray0, (ByteOrder) null, 41489);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", fieldType: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ", fieldType: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1681), 1241, fieldTypeRational0, (-1681), (-1681), byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(684, 737, fieldTypeLong0, 1L, 737, byteArray0, (ByteOrder) null, 593);
      MockFile mockFile0 = new MockFile("nCOQHOb", "yS");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3445, 3445, (FieldType) null, 3445, 3445, byteArray0, (ByteOrder) null, 3445);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1463, 1463, fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, 1463);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2143669289, (-520), fieldTypeRational0, 1L, (-520), byteArray0, (ByteOrder) null, (-860));
      MockFile mockFile0 = new MockFile("uam?");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2, (byte)0, fieldTypeFloat0, (-414L), (-2354L), byteArray0, (ByteOrder) null, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2354), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(34852, 34852, fieldTypeByte0.SHORT, 98L, (-1643L), byteArray0, (ByteOrder) null, 97);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(34852, tiffField0.getTag());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals(34852, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-338), (-338), (FieldType) null, (-338), (-338), byteArray0, byteOrder0, (-338));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2529), 2147422855, fieldTypeByte0, 2147422855, (byte) (-64), byteArray0, (ByteOrder) null, 225);
      tiffField0.getFieldType();
      assertEquals((-2529), tiffField0.getTag());
      assertEquals(2147422855, tiffField0.getDirectoryType());
      assertEquals((-64), tiffField0.getOffset());
      assertEquals(225, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(404, 404, fieldTypeByte0, 404, 3353L, byteArray0, byteOrder0, (-3351));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(404, int0);
      assertEquals((-3351), tiffField0.getSortHint());
      assertEquals(3353, tiffField0.getOffset());
      assertEquals(404, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1505, 1505, fieldTypeByte0.SSHORT, 1505, 1505, byteArray0, (ByteOrder) null, 1505);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3179), (-3179), fieldTypeLong0, (-3179), 2970L, byteArray0, (ByteOrder) null, (-3179));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeRational0, (-520), (-520), byteArray0, (ByteOrder) null, (-520));
      int int0 = tiffField0.getOffset();
      assertEquals((-520), tiffField0.getDirectoryType());
      assertEquals((-520), tiffField0.getTag());
      assertEquals((-520), tiffField0.getSortHint());
      assertEquals((-520), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1767), (-1767), fieldTypeShort0, (-1767), (-1767), (byte[]) null, byteOrder0, (-1767));
      tiffField0.getTagInfo();
      assertEquals((-1767), tiffField0.getSortHint());
      assertEquals((-1767), tiffField0.getDirectoryType());
      assertEquals((-1767), tiffField0.getTag());
      assertEquals((-1767), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1299L, (-3338L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-3338), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 3939, fieldTypeShort0, 1L, (-33344L), byteArray0, (ByteOrder) null, 2207);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-33344), tiffField0.getOffset());
      assertEquals(2207, tiffField0.getSortHint());
      assertEquals(3939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2246, 1587, fieldTypeRational0, 1587, 1270, byteArray0, byteOrder0, 2246);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2246, tiffField0.getTag());
      assertEquals(1587, tiffField0.getDirectoryType());
      assertEquals(12696, int0);
      assertEquals(2246, tiffField0.getSortHint());
      assertEquals(1270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1492, 1492, fieldTypeByte0.SSHORT, 1492, 1492, byteArray0, (ByteOrder) null, 1492);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1481, 1481, fieldTypeByte0.SSHORT, 1481, 1481, byteArray0, (ByteOrder) null, 1481);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1492, 1492, fieldTypeByte0, 1492, 1492, byteArray0, (ByteOrder) null, 1492);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2ac2f23a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1481, 1481, fieldTypeByte0.SSHORT, 1481, 1481, byteArray0, (ByteOrder) null, 1481);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1481, tiffField0.getDirectoryType());
      assertEquals(1481, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2962, tiffField0.getBytesLength());
      assertEquals(1481, tiffField0.getOffset());
      assertEquals(1481, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3423, 3423, fieldTypeRational0, 3423, 3423, byteArray0, (ByteOrder) null, 3423);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[196];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3618, 3618, fieldTypeLong0, 3618, 3618, byteArray0, (ByteOrder) null, 3618);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3618, tiffField0.getTag());
      assertEquals(3618, tiffField0.getDirectoryType());
      assertEquals(3618, tiffField0.getOffset());
      assertEquals(14472, tiffField0.getBytesLength());
      assertEquals(3618, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1505, 1505, fieldTypeByte0, 1505, 1505, byteArray0, (ByteOrder) null, 1505);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@a432d11 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(664, 664, fieldTypeFloat0, 664, 664, byteArray0, (ByteOrder) null, 664);
      tiffField0.getDoubleArrayValue();
      assertEquals(664, tiffField0.getOffset());
      assertEquals(2656, tiffField0.getBytesLength());
      assertEquals(664, tiffField0.getTag());
      assertEquals(664, tiffField0.getSortHint());
      assertEquals(664, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(34873, 34873, fieldTypeLong0, 34873, 34873, byteArray0, (ByteOrder) null, 34873);
      tiffField0.getDoubleArrayValue();
      assertEquals(34873, tiffField0.getDirectoryType());
      assertEquals(139492, tiffField0.getBytesLength());
      assertEquals(34873, tiffField0.getSortHint());
      assertEquals(34873, tiffField0.getTag());
      assertEquals(34873, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1280, 1280, fieldTypeShort0, 1280, 1280, byteArray0, byteOrder0, 1280);
      tiffField0.getDoubleArrayValue();
      assertEquals(1280, tiffField0.getTag());
      assertEquals(2560, tiffField0.getBytesLength());
      assertEquals(1280, tiffField0.getDirectoryType());
      assertEquals(1280, tiffField0.getSortHint());
      assertEquals(1280, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3423, 3423, fieldTypeRational0, 3423, 3423, byteArray0, (ByteOrder) null, 3423);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(3423, tiffField0.getTag());
      assertEquals(3423, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(3423, tiffField0.getOffset());
      assertEquals(27384, tiffField0.getBytesLength());
      assertEquals(3423, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[111];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0, 12, 12, byteArray0, (ByteOrder) null, 12);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, doubleArray0.length);
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1481, 1481, fieldTypeByte0, 1481, 1481, byteArray0, (ByteOrder) null, 1481);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@15654034 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1270, 1270, fieldTypeShort0, 1270, 1270, byteArray0, byteOrder0, 1270);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1270, tiffField0.getTag());
      assertEquals(1270, tiffField0.getDirectoryType());
      assertEquals(1270, tiffField0.getSortHint());
      assertEquals(2540, tiffField0.getBytesLength());
      assertEquals(1270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1245, 1245, fieldTypeRational0, 1245, 1245, byteArray0, (ByteOrder) null, 1245);
      tiffField0.getIntArrayValue();
      assertEquals(1245, tiffField0.getTag());
      assertEquals(1245, tiffField0.getSortHint());
      assertEquals(1245, tiffField0.getDirectoryType());
      assertEquals(9960, tiffField0.getBytesLength());
      assertEquals(1245, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3423, 3423, fieldTypeRational0, 3423, 3423, byteArray0, (ByteOrder) null, 3423);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[203];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3618, 3618, fieldTypeLong0, 3618, 3618, byteArray0, (ByteOrder) null, 3618);
      tiffField0.getIntArrayValue();
      assertEquals(3618, tiffField0.getOffset());
      assertEquals(3618, tiffField0.getDirectoryType());
      assertEquals(14472, tiffField0.getBytesLength());
      assertEquals(3618, tiffField0.getTag());
      assertEquals(3618, tiffField0.getSortHint());
      assertEquals(3618L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-520), (-520), fieldTypeAscii0, 0L, (-520), byteArray0, (ByteOrder) null, (-520));
      String string0 = tiffField0.getStringValue();
      assertEquals((-520), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-520), tiffField0.getSortHint());
      assertEquals((-520), tiffField0.getTag());
      assertEquals((-520), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1492, 1492, fieldTypeByte0.SSHORT, 1492, 1492, byteArray0, (ByteOrder) null, 1492);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@551641a
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1481, 1481, fieldTypeByte0.SSHORT, 1481, 1481, byteArray0, (ByteOrder) null, 1481);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x5c9)", string0);
      assertEquals(1481, tiffField0.getDirectoryType());
      assertEquals(1481, tiffField0.getSortHint());
      assertEquals(1481, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(262, 262, fieldTypeRational0, 262, 262, byteArray0, byteOrder0, 262);
      String string0 = tiffField0.getTagName();
      assertEquals("PhotometricInterpretation", string0);
      assertEquals(262, tiffField0.getOffset());
      assertEquals(262, tiffField0.getSortHint());
      assertEquals(262, tiffField0.getDirectoryType());
      assertEquals(262, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeShort0, 1254, 1254, byteArray0, byteOrder0, 1254);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "]2Y,aX}2B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[414];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1516, 1516, fieldTypeFloat0, 1516, 1516, byteArray0, (ByteOrder) null, 1516);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1516, tiffField0.getTag());
      assertEquals(1516, tiffField0.getOffset());
      assertEquals(1516, tiffField0.getSortHint());
      assertEquals(6064, tiffField0.getBytesLength());
      assertEquals(1516, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1516L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1477, 1477, fieldTypeByte0, 1477, 1477, byteArray0, (ByteOrder) null, 1477);
      tiffField0.dump();
      assertEquals(1477L, tiffField0.getCount());
      assertEquals(1477, tiffField0.getSortHint());
      assertEquals(1477, tiffField0.getDirectoryType());
      assertEquals(1477, tiffField0.getTag());
      assertEquals(1477, tiffField0.getBytesLength());
      assertEquals(1477, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(664, 664, fieldTypeFloat0, 664, 664, byteArray0, (ByteOrder) null, 664);
      tiffField0.dump();
      assertEquals(664L, tiffField0.getCount());
      assertEquals(664, tiffField0.getTag());
      assertEquals(664, tiffField0.getSortHint());
      assertEquals(664, tiffField0.getOffset());
      assertEquals(2656, tiffField0.getBytesLength());
      assertEquals(664, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[428];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(397, 2432, fieldTypeDouble0, 2432, (-1914L), byteArray0, byteOrder0, 119);
      String string0 = tiffField0.toString();
      assertEquals(2432, tiffField0.getDirectoryType());
      assertEquals((-1914), tiffField0.getOffset());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(19456, tiffField0.getBytesLength());
      assertEquals("397 (0x18d: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (2432 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0, 12, 12, byteArray0, (ByteOrder) null, 12);
      tiffField0.dump();
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3977, 3977, fieldTypeLong0, 3977, 3977, byteArray0, (ByteOrder) null, 3977);
      tiffField0.dump();
      assertEquals(3977L, tiffField0.getCount());
      assertEquals(3977, tiffField0.getTag());
      assertEquals(15908, tiffField0.getBytesLength());
      assertEquals(3977, tiffField0.getSortHint());
      assertEquals(3977, tiffField0.getOffset());
      assertEquals(3977, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[254];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(594, 594, fieldTypeByte0, 594, 594, byteArray0, (ByteOrder) null, 594);
      String string0 = tiffField0.getValueDescription();
      assertEquals(594, tiffField0.getTag());
      assertEquals(594, tiffField0.getOffset());
      assertEquals(594, tiffField0.getSortHint());
      assertEquals(594, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(594, tiffField0.getBytesLength());
      assertEquals(594L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[254];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeAscii0, 627, 627, byteArray0, (ByteOrder) null, 627);
      String string0 = tiffField0.getValueDescription();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(627, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertEquals(627, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(627, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(632, 632, fieldTypeAscii0, 0L, 675, byteArray0, (ByteOrder) null, 632);
      tiffField0.dump();
      assertEquals(632, tiffField0.getTag());
      assertEquals(632, tiffField0.getSortHint());
      assertEquals(675, tiffField0.getOffset());
      assertEquals(632, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, 42, 42, byteArray0, (ByteOrder) null, 42);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(42, 42);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getTag());
      assertNull(string0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50714, 33, fieldTypeByte0, 33, 5, byteArray0, byteOrder0, 33);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(5, 5);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50714, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: BlackLevel, fieldType: Byte", string0);
      assertEquals(33L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, (FieldType) null, 24, 5091L, (byte[]) null, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1556), (-1556), fieldTypeByte0, (-1556), 0L, byteArray0, byteOrder0, 92);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1556), tiffField0.getTag());
      assertEquals(92, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1556), tiffField0.getDirectoryType());
      assertEquals((-1556L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1492, 1492, fieldTypeByte0.SSHORT, 1492, 1492, byteArray0, (ByteOrder) null, 1492);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1492, tiffField0.getOffset());
      assertEquals("1492 (0x5d4: Unknown Tag): ", string0);
      assertEquals(1492, tiffField0.getDirectoryType());
      assertEquals(1492, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(37155, 37155, fieldTypeShort0, 37155, 37155, byteArray0, (ByteOrder) null, 6);
      tiffField0.dump();
      assertEquals(37155L, tiffField0.getCount());
      assertEquals(37155, tiffField0.getOffset());
      assertEquals(74310, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(37155, tiffField0.getDirectoryType());
      assertEquals(37155, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1492, 1492, fieldTypeByte0.SSHORT, 1492, 1492, byteArray0, (ByteOrder) null, 1492);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1492, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1492, tiffField0.getTag());
      assertEquals(1492L, tiffElement0.offset);
      assertEquals(1492, tiffField0.getDirectoryType());
  }
}
