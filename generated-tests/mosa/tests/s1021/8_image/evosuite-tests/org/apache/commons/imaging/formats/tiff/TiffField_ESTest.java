/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:52:04 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[154];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeLong0.DOUBLE, 14, 14, byteArray0, byteOrder0, 14);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(14, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14L, tiffElement0.offset);
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeAscii0, 2033, 2033, byteArray0, byteOrder0, 2033);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2033, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2033, tiffField0.getSortHint());
      assertEquals(2033, tiffField0.getTag());
      assertEquals(2033, tiffField0.getBytesLength());
      assertEquals(2033, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2022, 2022, fieldTypeAscii0, 2022, 2022, byteArray0, byteOrder0, 2022);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2022, 2022);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2022, tiffField0.getOffset());
      assertEquals(2022, tiffField0.getDirectoryType());
      assertEquals(2022, tiffField0.getSortHint());
      assertEquals(2022, tiffField0.getTag());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeLong0, 1840, 1840, byteArray0, byteOrder0, 1840);
      tiffField0.dump();
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals(1840L, tiffField0.getCount());
      assertEquals(1840, tiffField0.getOffset());
      assertEquals(1840, tiffField0.getSortHint());
      assertEquals(1840, tiffField0.getTag());
      assertEquals(7360, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeAscii0, 271, 271, byteArray0, byteOrder0, 271);
      tiffField0.toString();
      assertEquals(271, tiffField0.getTag());
      assertEquals(271, tiffField0.getBytesLength());
      assertEquals(271L, tiffField0.getCount());
      assertEquals(271, tiffField0.getSortHint());
      assertEquals(271, tiffField0.getOffset());
      assertEquals(271, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeAscii0.FLOAT, 303, 303, byteArray0, byteOrder0, 303);
      String string0 = tiffField0.getTagName();
      assertEquals(303, tiffField0.getOffset());
      assertEquals(303, tiffField0.getDirectoryType());
      assertEquals(303, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x12f)", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeLong0.DOUBLE, 14, 14, byteArray0, byteOrder0, 14);
      int int0 = tiffField0.getSortHint();
      assertEquals(14, int0);
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2022, 2022, fieldTypeAscii0, 2022, 2022, byteArray0, byteOrder0, 2022);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(292, 292, fieldTypeAscii0.FLOAT, 292, 292, byteArray0, byteOrder0, 292);
      String string0 = tiffField0.getValueDescription();
      assertEquals(292, tiffField0.getSortHint());
      assertEquals(292, tiffField0.getDirectoryType());
      assertEquals(292L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1168, tiffField0.getBytesLength());
      assertEquals(292, tiffField0.getOffset());
      assertEquals(292, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(34034, 34034, fieldTypeByte0, 34034, 34034, byteArray0, byteOrder0, 34034);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34034L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(34034, tiffField0.getDirectoryType());
      assertEquals(34034, tiffField0.getBytesLength());
      assertEquals(34034, tiffField0.getOffset());
      assertEquals(34034, tiffField0.getSortHint());
      assertEquals(34034, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((-4899), (-4899), fieldTypeLong0.SBYTE, 3587L, 3587L, byteArray0, byteOrder0, (-4899));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3587, tiffField0.getBytesLength());
      assertEquals(3587L, tiffField0.getCount());
      assertEquals((-4899), tiffField0.getDirectoryType());
      assertEquals((-4899), tiffField0.getTag());
      assertEquals((-4899), tiffField0.getSortHint());
      assertEquals(3587, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeAscii0, 2033, 2033, byteArray0, byteOrder0, 2033);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@1b93e3a5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[82];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(285, 285, fieldTypeAscii0.FLOAT, 285, 285, byteArray0, byteOrder0, 285);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(285, tiffField0.getSortHint());
      assertEquals(285, tiffField0.getOffset());
      assertEquals(285, tiffField0.getTag());
      assertEquals(285, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeShort0, (-735L), 271, byteArray0, byteOrder0, 271);
      int int0 = tiffField0.getTag();
      assertEquals(271, int0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(271, tiffField0.getDirectoryType());
      assertEquals(271, tiffField0.getOffset());
      assertEquals(271, tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, (-1L), (-1L), byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1 (0x1: Unknown Tag): ", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertNotNull(string1);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[83];
      TiffField tiffField0 = new TiffField(1400, 1400, fieldTypeLong0.DOUBLE, 1400, 1400, byteArray0, byteOrder0, 1400);
      String string0 = tiffField0.toString();
      assertEquals("1400 (0x578: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1400 Double)", string0);
      assertEquals(1400, tiffField0.getDirectoryType());
      assertEquals(1400, tiffField0.getOffset());
      assertEquals(1400, tiffField0.getSortHint());
      assertEquals(11200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[31];
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeLong0, 1840, 1840, byteArray0, byteOrder0, 1840);
      tiffField0.getDoubleArrayValue();
      assertEquals(1840L, tiffField0.getCount());
      assertEquals(1840, tiffField0.getTag());
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals(1840, tiffField0.getSortHint());
      assertEquals(7360, tiffField0.getBytesLength());
      assertEquals(1840, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeAscii0, 2033, 2033, byteArray0, byteOrder0, 2033);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2bc734e1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[405];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65538, 65538, fieldTypeDouble0, 65538, 65538, byteArray0, byteOrder0, 65538);
      tiffField0.getDoubleArrayValue();
      assertEquals(65538, tiffField0.getOffset());
      assertEquals(65538L, tiffField0.getCount());
      assertEquals(524304, tiffField0.getBytesLength());
      assertEquals(65538, tiffField0.getDirectoryType());
      assertEquals(65538, tiffField0.getSortHint());
      assertEquals(65538, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeAscii0, 2033, 2033, byteArray0, byteOrder0, 2033);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6175747f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(724, 724, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, (byte) (-30));
      tiffField0.getIntArrayValue();
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(724, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(724, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeAscii0, 2033, 2033, byteArray0, byteOrder0, 2033);
      tiffField0.getFieldTypeName();
      assertEquals(2033, tiffField0.getTag());
      assertEquals(2033, tiffField0.getDirectoryType());
      assertEquals(2033, tiffField0.getSortHint());
      assertEquals(2033, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeLong0, 1840, 1840, byteArray0, byteOrder0, 1840);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription();
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals(1840L, tiffElement0.offset);
      assertEquals(1840, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertEquals(1840, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeAscii0.FLOAT, 282, 282, byteArray0, byteOrder0, 282);
      String string0 = tiffField0.getTagName();
      assertEquals(282, tiffField0.getOffset());
      assertEquals("XResolution", string0);
      assertEquals(282, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-78);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2677, (byte)22, fieldTypeShort0, (byte)22, (byte) (-78), byteArray0, byteOrder0, (byte) (-78));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals(2677, tiffField0.getTag());
      assertArrayEquals(new int[] {178, 0}, intArray0);
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals((-78), tiffField0.getOffset());
      assertEquals(22L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.DOUBLE, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeAscii0.FLOAT, 265, 265, byteArray0, byteOrder0, 265);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3d3a7eb6 for: 265 (0x109: CellLength): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(65558, 65558, fieldTypeRational0, 3383L, 65558, byteArray0, byteOrder0, 65558);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, 1772L, (-2626L), byteArray0, byteOrder0, (byte)63);
      int int0 = Float.SIZE;
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2626), tiffField0.getOffset());
      assertEquals(14176, tiffField0.getBytesLength());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(0, int1);
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[188];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeShort0, 265, 265, byteArray0, byteOrder0, 265);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(265, tiffField0.getTag());
      assertEquals(265, tiffField0.getSortHint());
      assertEquals(530, tiffField0.getBytesLength());
      assertEquals(265, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeLong0, 1840, 1840, byteArray0, byteOrder0, 1840);
      tiffField0.getIntArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2464, 2464, fieldTypeShort0, 1422L, 2464, byteArray0, byteOrder0, 2464);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getCount();
      assertEquals(2464, tiffField0.getTag());
      assertEquals(2464, tiffField0.getDirectoryType());
      assertEquals(2464, tiffField0.getSortHint());
      assertEquals(2464, tiffField0.getOffset());
      assertEquals(2844, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(1867, 1867, fieldTypeLong0, 1867, 1867, byteArray0, byteOrder0, 1867);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1867, tiffField0.getOffset());
      assertEquals(1867, tiffField0.getTag());
      assertEquals(7468, tiffField0.getBytesLength());
      assertEquals(1867, tiffField0.getSortHint());
      assertEquals(1867, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(282, 7558, fieldTypeRational0, 7558, 7558, byteArray0, byteOrder0, 7558);
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteArrayValue();
      assertEquals(282, tiffField0.getTag());
      assertEquals(7558, tiffField0.getDirectoryType());
      assertEquals(60464, tiffField0.getBytesLength());
      assertEquals(7558, tiffField0.getOffset());
      assertEquals(7558, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(3734, 3734, fieldTypeDouble0, 3734, 3734, byteArray0, byteOrder0, 3734);
      fieldTypeDouble0.getValue(tiffField0);
      TiffField tiffField1 = new TiffField(3734, 3734, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 3734);
      tiffField1.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeAscii0, 271, 271, byteArray0, byteOrder0, 271);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(271, tiffField0.getSortHint());
      assertEquals(271, tiffField0.getTag());
      assertEquals(271, tiffField0.getOffset());
      assertEquals(271, tiffField0.getBytesLength());
      assertEquals(271, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeAscii0.FLOAT, 271, 271, byteArray0, byteOrder0, 271);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65547, 65547, fieldTypeAscii0.FLOAT, 65547, 65547, byteArray0, byteOrder0, 65547);
      tiffField0.getDoubleArrayValue();
      assertEquals(65547, tiffField0.getOffset());
      assertEquals(262188, tiffField0.getBytesLength());
      assertEquals(65547, tiffField0.getDirectoryType());
      assertEquals(65547, tiffField0.getTag());
      assertEquals(65547, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 283, fieldTypeRational0, 724, (byte) (-30), byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeAscii0, 282, 282, byteArray0, byteOrder0, 282);
      tiffField0.toString();
      assertEquals(282, tiffField0.getOffset());
      assertEquals(282, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getTag());
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[284];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(34034, 34034, fieldTypeLong0, 34034, 34034, byteArray0, byteOrder1, 34034);
      String string0 = tiffField0.getValueDescription();
      assertEquals(136136, tiffField0.getBytesLength());
      assertEquals(34034, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(34034, tiffField0.getOffset());
      assertEquals(34034, tiffField0.getTag());
      assertEquals(34034, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65588, 65588, fieldTypeFloat0, 65588, 65588, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(65588, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(65588, tiffField0.getTag());
      assertEquals(65588, tiffField0.getOffset());
      assertEquals(262352, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[431];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65556, 65556, fieldTypeDouble0, 65556, 65556, byteArray0, byteOrder0, 65556);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(65556, tiffField0.getOffset());
      assertEquals(524448, tiffField0.getBytesLength());
      assertEquals(65556, tiffField0.getSortHint());
      assertEquals(65556, tiffField0.getTag());
      assertEquals(65556, tiffField0.getDirectoryType());
  }
}
