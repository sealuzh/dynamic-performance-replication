/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:06:39 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Unicode.toLower(981);
      assertEquals(981, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(97);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Unicode.isUpper(15);
      boolean boolean1 = Unicode.isPrint(15);
      assertTrue(boolean1 == boolean0);
      
      int int0 = Unicode.toUpper(15);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Unicode.isLower(220);
      boolean boolean1 = Unicode.isTitle(220);
      assertFalse(boolean1);
      
      boolean boolean2 = Unicode.isPrint(220);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = Unicode.toUpper(407);
      assertEquals(407, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(173);
      assertFalse(boolean0);
      
      int int0 = Unicode.toLower(173);
      assertEquals(173, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Unicode.toUpper(1126);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Unicode.isLower((-102));
      Unicode.isUpper((-102));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Unicode.isTitle(779);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unicode.simpleFold((-2));
      Unicode.isPrint((-2));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Unicode.isPrint(94);
      Unicode.isLower(94);
      Unicode.simpleFold(94);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Unicode.simpleFold(42891);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unicode.isTitle(465);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unicode.isLower(42913);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Unicode.isUpper(256);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Unicode.simpleFold(914);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.isLower(8116);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Unicode.isPrint(361);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Unicode.isPrint(44003);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Unicode.toUpper(127);
      Unicode.isPrint(127);
      Unicode.toLower(127);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = Unicode.MIN_FOLD;
      Unicode.isTitle(65);
      Unicode.toLower(65);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = Unicode.MIN_FOLD;
      Unicode.isPrint(65);
      Unicode.simpleFold(65);
      Unicode.toUpper(65);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Unicode.isPrint(44024);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Unicode.isPrint(1373);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Unicode.isPrint(44014);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Unicode.isPrint(13056);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Unicode.isTitle(421);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Unicode.toUpper(97);
  }
}
