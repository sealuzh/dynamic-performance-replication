/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 06 07:03:12 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.&-@^~|XYi[Dja/I'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"n\" (110), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-288);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"iA1WXo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.setDebugStream((PrintStream) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]f-*!<EMp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 1960);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 429, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1841, 5, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, (-1923));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1923. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-1), 47);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X?:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1600, (-1542));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1, 0);
      assertFalse(javaCharStream0.equals((Object)javaCharStream1));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1244), 954);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-2196));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2196. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"iA1WXo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 408;
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 4845);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4845. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1064, (-1244));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1244));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1244. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f!md^6UK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, '0');
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(48, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 42, (byte)51);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]f-*!<EMp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1244), 78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(79, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1064, (-1244));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals((-1238), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D4lt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.nextCharInd = (-4329);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D4lt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 61, 954, 954);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YBoLkn/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(5);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 5. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.I&-@^~|XYi[Dja/I'");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c;xwQ&Krf)]0OdA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1560), 954);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("c", token0.toString());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aLp\"d3QNs(R\"e b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-2147483647));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2147483647. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]%-*b<LEMp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"L\" (76), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gJ0s;O}`QT+9h2mb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"J\" (74), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 327, (byte) (-33), (byte) (-33));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("\u07F7", token0.toString());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D4lt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("4lt", token0.toString());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("61o'Bd<*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)30, 304, 2889);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 30, column 309.  Encountered: \"d\" (100), after : \"\\'B\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 6, (byte)56);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 6, column 58.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"try\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?0)pXxdGd0U]I8ZC3");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 1, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("0", token0.toString());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z%TB@8](U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("z", token0.toString());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("goto", token0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("byte", token0.toString());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("return");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1260, (-3007));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(50, token0.kind);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("extends");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("import");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 9, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(14, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(109, token0.kind);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"//\"");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("||");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("||", token0.toString());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n{<1>}Py%&?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("n", token0.toString());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ndk6jEjYPuHq-vF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 964, 964, 964);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(976, javaCharStream0.getBeginColumn());
      assertEquals(102, token0.kind);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D4lt");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rq6M9$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("rq6M9$", token0.toString());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.&-@^~|XYi[Dja/I'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)103;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 73, 97, (-983));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(98, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, (-1), 35);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals(30, token0.kind);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdO!r_@'");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)94;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-58), (-1352), (byte) (-58));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1351), javaCharStream0.getBeginColumn());
      assertEquals(106, token0.kind);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.&-@^~|XYi[Dja/I'");
      char[] charArray0 = new char[11];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(11, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<pS}TGaP4}k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gJ0s;O}`QT+9h2mb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("gJ0s", token0.toString());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gHBhT[u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NDL]f-*!<EMp");
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.&-@^~|XYi[Dja/I'");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(102, token0.kind);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{<1>}Py%!5&?");
      char[] charArray0 = new char[9];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getColumn());
      assertEquals(105, token0.kind);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1939, 2145388542);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2145388543, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qB?c45&+Ylvd>o");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E{<1>}Py%_&?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YBoLkn/");
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("n", token0.toString());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char[] charArray0 = new char[3];
      StringReader stringReader0 = new StringReader("^)4 d(#?~J");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 73, 97, (-983));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 73, column 97.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mQ|i5LsG+mLV");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KCgpo0A{snI|:X&u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z%TB@8](U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("%", token0.toString());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchro}iz7H^ed");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sv+,");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("v", token0.toString());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uK[iCz[(Lr^=9U`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-659), 1695);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1696, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("return");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^n.&-@^~|XYi[Dja/I'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lh,!YT|J\"&+a <:WSIn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 35, 35);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("lh", token0.toString());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ndk6jEjYPuHq-vF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 954, 44, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(53, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ndk6jEjYPuHq-vF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 954, 44, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("jEjYPuHq", token0.toString());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h*]J *ZP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("h", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<pS}TGaP4}k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]eOlV`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("_", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 413, 413);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("%", token0.toString());
      assertEquals(108, token0.kind);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(111, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qB?c45&+Ylvd>o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, (byte)112);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(116, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I\"F*XYLD");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("XYLD", token0.toString());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"iA1WXo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.readChar();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("WXo", token0.toString());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" V*GlZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("V", token0.toString());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[UP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Th0b*b3~)1NaFL");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RA[j,7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d|dO!r_@'");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("!", token0.toString());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 748, (byte)10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(749, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IN_FORMAL_COMMENT");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(10, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]f-*!<EMp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("L", token0.toString());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HD: pIY;N*\"&No5?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GLd- ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(22, javaCharStream0.bufpos);
      assertEquals(23, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CeT30<K&oEj@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qB?c45&+Ylvd>o");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 72, (byte)112);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("B", token0.toString());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".AS<C^J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("AS", token0.toString());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qB?c45&+Ylvd>o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("?", token0.toString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qB?c45&+Ylvd>o");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]%-*b<LEMp");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3449), 1315);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c;xwQ&Krf)]0OdA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 954, 44, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReadByte();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(45, javaCharStream0.getBeginColumn());
      assertEquals(47, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q&:7;eme");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("7", token0.toString());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f!md^6UK");
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(5, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(4, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("58sQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3Zg%kxE`<24Qq~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("%", token0.toString());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~2*#%AX8wArByM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, token0.kind);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"iA1WXo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("1", token0.toString());
      assertEquals(66, token0.kind);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gJ0s;O}`QT+9h2mb");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",!:!+~JSLDVF](k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(",", token0.toString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DL]%-*b<EMp");
      char[] charArray0 = new char[4];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}?9%>qDl[I%)2n");
      char[] charArray0 = new char[8];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getEndColumn());
      assertEquals(")", token0.toString());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(6U(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dfdOxr_@'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$||");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("$", token0.toString());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`'jF`;wvJ#Z'3]YrV");
      char[] charArray0 = new char[8];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"iA1WXo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\\"iA1WXo\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w]QJ_?9`g8|9`A3{CBX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("w", token0.toString());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)46, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bWcPi/dPD[rF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (-292));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals((-287), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("final");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(31, token0.kind);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("contOinue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchro}iz7H^ed");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchro}iz7H^ed");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.setDebugStream(javaParserTokenManager0.debugStream);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";r5Z/V4PNu=ewECZJB");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 11.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("synchro}iz7H^ed");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("^", token0.toString());
  }
}
