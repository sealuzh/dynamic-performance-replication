/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 03:22:59 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2956.5669, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2727);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(90.621, 90.621, 90.621, (-1.5443717968117592E-8));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      graggBulirschStoerIntegrator0.setControlFactors(0.6, 2785.5657398334347, 2785.5657398334347, 0.65);
      assertEquals(90.621, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.3464667797088623;
      doubleArray0[1] = 494.31;
      doubleArray0[2] = 494.31;
      doubleArray0[3] = 494.31;
      doubleArray0[4] = 494.31;
      doubleArray0[5] = 0.3464667797088623;
      doubleArray0[6] = 0.3464667797088623;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.3464667797088623, 494.31, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.filterStep(0.3464667797088623, true, true);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1761.69684, 0.3464667797088623, 2, (UnivariateSolver) null);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-318), 7, 494.31);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1658.218199286144), fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(13.086710582796876, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      assertEquals(0.42926812171936035, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1805.938963), (-1805.938963), (-1805.938963), (-1805.938963));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      eventFilter0.init((-1805.938963), (double[]) null, (-1805.938963));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1805.938963), (-1805.938963), 2432);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(2, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      StepHandler stepHandler0 = null;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator();
      // Undeclared exception!
      try { 
        stepNormalizer0.handleStep(graggBulirschStoerStepInterpolator0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.9999;
      doubleArray0[1] = 1164.8848184;
      doubleArray0[2] = 0.9999;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.9999, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(775, 775, 0.9999);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 1.75879225876483E-25);
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.591899541396432E-175;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.42926812171936035;
      graggBulirschStoerIntegrator0.setOrderControl((-566), 0.42926812171936035, 2.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(1.0E-4, (double) (-566), 0.0, 2.0);
      graggBulirschStoerIntegrator0.setControlFactors(0.42926812171936035, 1.0E-4, 2.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-566));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-6.824454861992054E-31), 1.7976931348623157E308, (-2304), (UnivariateSolver) mullerSolver0);
      assertEquals(0, mullerSolver0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.4734157919883728, (-1156.6856284338076), 0.42926812171936035, 0.42926812171936035);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(0.4734157919883728);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.42926812171936035);
      assertEquals(21, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.591899541396432E-175;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.42926812171936035;
      graggBulirschStoerIntegrator0.setStepSizeControl(1.0E-4, (double) (-566), 0.0, 2.0);
      graggBulirschStoerIntegrator0.setControlFactors(0.42926812171936035, 1.0E-4, 2.0, 0.0);
      SecantSolver secantSolver0 = new SecantSolver(719.0, (-566));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.02, (-1829.2288051), (-6512), (UnivariateSolver) secantSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 3476.332421517053;
      doubleArray0[1] = 3476.332421517053;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-1129.976224617);
      doubleArray1[1] = 3476.332421517053;
      doubleArray1[2] = 2443.6589139196;
      doubleArray1[3] = (-1129.976224617);
      doubleArray1[4] = 3476.332421517053;
      doubleArray1[5] = (-1129.976224617);
      doubleArray1[6] = (-1129.976224617);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3476.332421517053, (-1129.976224617), doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setControlFactors(4.871550528055661E-187, (-1129.976224617), 4.871550528055661E-187, 2443.6589139196);
      assertEquals(1129.976224617, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1664.6712370351283, 121.65589201837, 121.65589201837, (-142.232975823628));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1652, 1652, (-3396.903869025));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 369.18328308, 1.3115046679980076E-8, 1652, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.setControlFactors((-3396.903869025), (-1227.4233773143), 1.3115046679980076E-8, 950.44428414);
      assertEquals(121.65589201837, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-109.33), 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepSizeControl(443.8862937, 0.0, 0.0, 1.0E-15);
      graggBulirschStoerIntegrator0.setOrderControl(1814, 0.0, (-109.33));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1814);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 1.75879225876483E-25);
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 1.75879225876483E-25;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.42926812171936035;
      double double1 = 2.0;
      graggBulirschStoerIntegrator0.setOrderControl((-566), 0.42926812171936035, 2.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(1.0E-4, 1.7636451721191406, (-6.456588023278983E-253), 0.42926812171936035);
      graggBulirschStoerIntegrator0.setOrderControl((-566), 1.75879225876483E-25, 1.0E-4);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1222);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-6.456588023278983E-253));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1294.9, 1294.9, 2.0358991622924805, 1480.0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 926);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(2798.743534542, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(1294.9, 1480.0, (-2389.0), 1294.9);
      graggBulirschStoerIntegrator0.setControlFactors(1.7976931348623157E308, 926, 926, (-2389.0));
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 498);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1033, 926, 156.13764);
      graggBulirschStoerIntegrator0.setControlFactors(2975.0077570131057, (-829.0), 1.0E-4, 4249.058395795);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-625), (-2194), 1.0E-4);
      assertEquals(1294.9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 184);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.42926812171936035);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 184);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(184).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1552.984581);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.7976931348623157E308);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.591899541396432E-175;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.42926812171936035;
      graggBulirschStoerIntegrator0.setStepSizeControl(1.0E-4, (double) (-566), 0.0, 2.0);
      graggBulirschStoerIntegrator0.setControlFactors(0.42926812171936035, 1.0E-4, 2.0, 0.0);
      SecantSolver secantSolver0 = new SecantSolver(719.0, (-566));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2254.1984516, 2254.1984516, 2254.1984516, 3204.0, 2254.1984516).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.02, (-1829.2288051), (-6512), (UnivariateSolver) secantSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-502.21798));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.0, 0.0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.591899541396432E-175;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 0.42926812171936035;
      graggBulirschStoerIntegrator0.setControlFactors(0.42926812171936035, 1.0E-4, 2.0, 0.0);
      SecantSolver secantSolver0 = new SecantSolver(719.0, (-566));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2254.1984516, 2254.1984516, 2254.1984516, 3204.0, 2254.1984516).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.02, (-1829.2288051), (-6512), (UnivariateSolver) secantSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(7).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-502.21798));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-10, 4.0, 1811.95, (-457.57409534118653));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(52).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-455.8570228543091));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1811.95);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = 0.42926812171936035;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.42926812171936035, 0.42926812171936035, 0.42926812171936035, 0.42926812171936035);
      graggBulirschStoerIntegrator0.setStepSizeControl(10.0, 1.0E-4, 81.54010000000001, 1.0E-4);
      graggBulirschStoerIntegrator0.setControlFactors(81.54010000000001, 10.0, 0.0, 0.42926812171936035);
      SecantSolver secantSolver0 = new SecantSolver(1.2890510559082031, 1.0E-4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(100).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(10.0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3204.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (1.00E01) reached, integration needs 2.11E-04
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-1156.6856284338076), 0.4734157919883728);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1156.6856284338076);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1682.9458736643;
      doubleArray0[3] = (-1156.6856284338076);
      doubleArray0[4] = (-1156.6856284338076);
      eventFilter0.eventOccurred(1682.9458736643, doubleArray0, false);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter1);
      expandableStatefulODE0.setTime(0.4734157919883728);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1156.6856284338076), 2635.8918175928407, 1.0E-15, 1682.9458736643);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 0.6798759698867798);
      assertEquals(21, graggBulirschStoerIntegrator1.getEvaluations());
  }
}
