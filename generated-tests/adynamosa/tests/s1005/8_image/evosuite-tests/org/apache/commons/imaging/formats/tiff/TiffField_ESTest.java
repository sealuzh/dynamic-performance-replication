/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 04:52:50 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)114;
      TiffField tiffField0 = new TiffField((-2264), (-2264), fieldTypeRational0.SHORT, 1970L, 0, byteArray0, byteOrder0, 2146916281);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2146916281, tiffField0.getSortHint());
      assertEquals(114, int0);
      assertEquals((-2264), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2264), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)81;
      byteArray0[4] = (byte) (-55);
      TiffField tiffField0 = new TiffField((-2147364692), (byte)50, fieldTypeRational0, 1323L, (-1588), byteArray0, byteOrder0, (byte) (-55));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-2147364692), tiffField0.getTag());
      assertEquals((-1588), tiffField0.getOffset());
      assertEquals(103, int0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-55);
      TiffField tiffField0 = new TiffField((-2147364692), (byte)50, fieldTypeRational0, 1323L, (-1588), byteArray0, byteOrder0, (byte) (-55));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-1588), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-2147364692), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1575), (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-1), fieldTypeRational0, (-1575), 142L, byteArray0, byteOrder0, 51);
      tiffField0.dump();
      assertEquals(27, tiffField0.getTag());
      assertEquals(142, tiffField0.getOffset());
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1575), (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-1), fieldTypeRational0, (-1575), 142L, byteArray0, byteOrder0, 51);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(142, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeLong0.DOUBLE, 42016, 665, byteArray0, byteOrder0, 871);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(40965, tiffField0.getTag());
      assertEquals(1, tagInfo0.length);
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(665, tiffField0.getOffset());
      assertEquals(871, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)104, fieldTypeRational0, 226L, 8L, byteArray0, byteOrder0, (byte)104);
      int int0 = tiffField0.getTag();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-406), 2663, (FieldType) null, (-406), 159L, byteArray0, byteOrder0, (byte)108);
      int int0 = tiffField0.getTag();
      assertEquals((-406), int0);
      assertEquals(2663, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(159, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-3208), (byte)1, fieldTypeShort0.ASCII, (byte)1, 822L, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(822, tiffField0.getOffset());
      assertEquals(16, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-3208), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2147259600), 1371, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2147259600), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1371, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3549, 1, fieldTypeShort0, (-3683L), 4L, byteArray0, byteOrder0, 2147349001);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147349001, int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(3549, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2147483646), (byte)60, fieldTypeRational0, (-2147483646), (-2147483646), byteArray0, byteOrder0, 2146630456);
      int int0 = tiffField0.getOffset();
      assertEquals(2146630456, tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2147483646), int0);
      assertEquals(60, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField((-1959), (-614), fieldTypeRational0.SHORT, 1L, 860L, byteArray0, byteOrder0, 116);
      tiffField0.getIntValueOrArraySum();
      assertEquals(116, tiffField0.getSortHint());
      assertEquals((-1959), tiffField0.getTag());
      assertEquals(860, tiffField0.getOffset());
      assertEquals((-614), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3487, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-58);
      TiffField tiffField0 = new TiffField(37379, (byte) (-58), fieldTypeLong0, 3487, (-2147483648L), byteArray0, byteOrder0, 3487);
      tiffField0.getIntValueOrArraySum();
      assertEquals(37379, tiffField0.getTag());
      assertEquals((-58), tiffField0.getDirectoryType());
      assertEquals(3487, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)39;
      TiffField tiffField0 = new TiffField(16, 3084, fieldTypeShort0.UNDEFINED, 1L, 3084, byteArray0, byteOrder0, 16);
      tiffField0.getIntValue();
      assertEquals(3084, tiffField0.getOffset());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(3084, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-14);
      TiffField tiffField0 = new TiffField(1681, 0, fieldTypeByte0, 1L, 8752L, byteArray0, byteOrder0, (byte) (-14));
      tiffField0.getIntValue();
      assertEquals(8752, tiffField0.getOffset());
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1681, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3487, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(37379, 3487, fieldTypeLong0, 37379, 255L, byteArray0, byteOrder0, 1982292598);
      tiffField0.getFieldTypeName();
      assertEquals(37379, tiffField0.getTag());
      assertEquals(3487, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(490, "");
      TiffField tiffField0 = new TiffField(490, 490, fieldTypeFloat0, (byte)5, 157L, byteArray0, byteOrder0, (-587));
      tiffField0.getFieldTypeName();
      assertEquals(490, tiffField0.getTag());
      assertEquals((-587), tiffField0.getSortHint());
      assertEquals(490, tiffField0.getDirectoryType());
      assertEquals(157, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 3657, (FieldType) null, 2375L, (-16040L), byteArray0, byteOrder0, 59933);
      tiffField0.getFieldType();
      assertEquals(59933, tiffField0.getSortHint());
      assertEquals(3657, tiffField0.getDirectoryType());
      assertEquals((-16040), tiffField0.getOffset());
      assertEquals(34857, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "The filter must not be null");
      TiffField tiffField0 = new TiffField(1332, 0, fieldTypeRational0, 65553, 0, byteArray0, byteOrder0, 953);
      tiffField0.getFieldType();
      assertEquals(953, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1332, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2007), "Expected String value(");
      TiffField tiffField0 = new TiffField(3159, 3159, fieldTypeFloat0, 11488L, 8L, byteArray0, byteOrder0, (-2007));
      tiffField0.getFieldType();
      assertEquals((-2007), tiffField0.getSortHint());
      assertEquals(3159, tiffField0.getTag());
      assertEquals(3159, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      TiffField tiffField0 = new TiffField(2798, 64, fieldTypeRational0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleValue();
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(2798, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-14);
      TiffField tiffField0 = new TiffField(1681, 0, fieldTypeByte0, 1L, 8752L, byteArray0, byteOrder0, (byte) (-14));
      tiffField0.getDoubleValue();
      assertEquals(8752, tiffField0.getOffset());
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1681, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.SHORT, 8L, (-2293), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2293), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2196, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147349009, 2979, fieldTypeFloat0.SHORT, 3572L, (byte) (-50), byteArray0, byteOrder0, 2196);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2147349009, tiffField0.getTag());
      assertEquals(2196, tiffField0.getSortHint());
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(2979, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2264), (-2264), fieldTypeRational0.SHORT, 1970L, 0, byteArray0, byteOrder0, 2146916281);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2264), tiffField0.getDirectoryType());
      assertEquals(2146916281, tiffField0.getSortHint());
      assertEquals((-2264), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147272510, 2147272510, fieldTypeLong0, (-1L), 2147272510, byteArray0, byteOrder0, 2147272510);
      tiffField0.getCount();
      assertEquals(2147272510, tiffField0.getTag());
      assertEquals(2147272510, tiffField0.getDirectoryType());
      assertEquals(2147272510, tiffField0.getSortHint());
      assertEquals(2147272510, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 30, fieldTypeDouble0.SHORT, 0, 6045L, byteArray0, byteOrder0, (-1));
      tiffField0.getBytesLength();
      assertEquals(6045, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 1724L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1724, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2144698325, 5, fieldTypeShort0, (-523), (-1917L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(2144698325, tiffField0.getTag());
      assertEquals((-1917), tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2196, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147349009, 2979, fieldTypeFloat0.SSHORT, 3572L, (byte) (-50), byteArray0, byteOrder0, 2196);
      tiffField0.getByteOrder();
      assertEquals(2196, tiffField0.getSortHint());
      assertEquals(2979, tiffField0.getDirectoryType());
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(2147349009, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2798, 64, fieldTypeRational0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getByteArrayValue();
      assertEquals(2798, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2762, 2762, fieldTypeByte0, 0L, 2762, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(2762, tiffField0.getTag());
      assertEquals(2762, tiffField0.getDirectoryType());
      assertEquals(2762, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50740, "IDnt>6x|");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 34377, fieldTypeAscii0, 50740, 0, byteArray0, byteOrder0, (-308));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("IDnt>6x|");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "i8`L\"&eod2vYzf");
      assertEquals(34377, tiffField0.getDirectoryType());
      assertEquals((-308), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2736), (-2736), fieldTypeLong0.FLOAT, (-2736), 40, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 507L, 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1020, (-574), fieldTypeShort0, (-574), 663L, byteArray0, byteOrder0, 1020);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-114), (-114), fieldTypeLong0, (-114), 4L, byteArray0, byteOrder0, (byte)49);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 1724L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 3657, (FieldType) null, 2375L, (-16040L), byteArray0, byteOrder0, 59933);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50740, "IDnt>6x|");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 50740, byteArray0, byteOrder0, (byte) (-69));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2144698325, 5, fieldTypeShort0, (-523), (-1917L), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3549, 1, fieldTypeShort0, (-3683L), 4L, byteArray0, byteOrder0, 2147349001);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-248), (-248), fieldTypeShort0, (-375L), (-248), byteArray0, byteOrder0, (-578));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1616, 65535, (FieldType) null, (-1511L), (-1511L), byteArray0, byteOrder0, 65535);
      File file0 = MockFile.createTempFile("BackgroundColorValue", "BackgroundColorValue");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3487, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(37379, (byte) (-58), fieldTypeLong0, 3487, (-2147483648L), byteArray0, byteOrder0, 3487);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(37379, tiffField0.getTag());
      assertEquals((-58), tiffField0.getDirectoryType());
      assertEquals(3487, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2196, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147349009, 2979, fieldTypeFloat0.SSHORT, 3572L, (byte) (-50), byteArray0, byteOrder0, 2196);
      tiffField0.getFieldType();
      assertEquals(2196, tiffField0.getSortHint());
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(2979, tiffField0.getDirectoryType());
      assertEquals(2147349009, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(492, 492, fieldTypeByte0, 492, 0, byteArray0, byteOrder0, (byte)44);
      tiffField0.getValue();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(492, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(492, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeByte0, 658L, 2597L, byteArray0, (ByteOrder) null, 2);
      int int0 = tiffField0.getOffset();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2597, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, 609, fieldTypeByte0, 1L, 0L, byteArray0, (ByteOrder) null, 609);
      int int0 = tiffField0.getTag();
      assertEquals(609, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(609, tiffField0.getDirectoryType());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2427), (-2147259600), fieldTypeByte0, (-305L), (-305L), byteArray0, byteOrder0, (-3486));
      tiffField0.getBytesLength();
      assertEquals((-305), tiffField0.getOffset());
      assertEquals((-3486), tiffField0.getSortHint());
      assertEquals((-2147259600), tiffField0.getDirectoryType());
      assertEquals((-2427), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1681, 0, fieldTypeByte0, 1L, 8752L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1681, tiffField0.getTag());
      assertEquals(8752, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(16, 3084, fieldTypeShort0.SBYTE, 1L, 3084, byteArray0, byteOrder0, 16);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(3084, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(3084, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(557, 557, fieldTypeByte0, 557, 557, byteArray0, byteOrder0, (byte) (-45));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@140169f4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2923, "Missing value: ");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 2923, fieldTypeDouble0, 5, 32L, byteArray0, byteOrder0, (byte)88);
      tiffField0.getDoubleArrayValue();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(2923, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-123), "G?");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-42), (-123), fieldTypeDouble0.FLOAT, 2L, (byte) (-92), byteArray0, byteOrder0, 46);
      tiffField0.getDoubleArrayValue();
      assertEquals((-92), tiffField0.getOffset());
      assertEquals(2L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getTag());
      assertEquals((-123), tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2293), (-40), fieldTypeRational0.IFD, 4L, 0, byteArray0, byteOrder0, 279);
      tiffField0.getDoubleArrayValue();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(279, tiffField0.getSortHint());
      assertEquals((-40), tiffField0.getDirectoryType());
      assertEquals((-2293), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2293), 0, fieldTypeRational0.SHORT, 4382L, 1030L, byteArray0, byteOrder0, (-364));
      tiffField0.getDoubleArrayValue();
      assertEquals((-364), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1030, tiffField0.getOffset());
      assertEquals(4382L, tiffField0.getCount());
      assertEquals((-2293), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 4115, fieldTypeRational0, 1724L, (-1172L), byteArray0, byteOrder0, (byte)31);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1724L, tiffField0.getCount());
      assertEquals(4115, tiffField0.getDirectoryType());
      assertEquals((-1172), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(0, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(158, 0, fieldTypeRational0.SSHORT, 1L, 3788L, byteArray0, byteOrder0, (-1975));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(158, tiffField0.getTag());
      assertEquals((-1975), tiffField0.getSortHint());
      assertEquals(3788, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(2473);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3508), (-3331), fieldTypeAscii0, (byte)42, (byte)42, byteArray0, byteOrder0, (-1431655764));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1d1b8c58 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "... (");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 37379, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 34665);
      tiffField0.getIntArrayValue();
      assertEquals(37379, tiffField0.getDirectoryType());
      assertEquals(34665, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2196, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147349009, 2979, fieldTypeFloat0.SSHORT, 3572L, (byte) (-50), byteArray0, byteOrder0, 2196);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-50), tiffField0.getOffset());
      assertEquals(2979, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(2147349009, tiffField0.getTag());
      assertEquals(2196, tiffField0.getSortHint());
      assertEquals(3572L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 1094L, 1216L, byteArray0, byteOrder0, (byte)49);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2147259600), 1371, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(1371, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147259600), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2798, 64, fieldTypeRational0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)6);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(530, 530, fieldTypeAscii0, 530, 530, byteArray0, (ByteOrder) null, (byte)11);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1d5dc02b for: 530 (0x212: YCbCrSubSampling): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(280, "IaihC(zD(i%D(AI'HA");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)5;
      TiffField tiffField0 = new TiffField(2144698325, 65535, fieldTypeAscii0, 400L, 65535, byteArray0, byteOrder0, (byte)5);
      String string0 = tiffField0.getStringValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2144698325, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(280, "IaihC(zD(i%D(AI'HA");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2144698325, 65535, fieldTypeAscii0, 400L, 65535, byteArray0, byteOrder0, (byte)5);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@3777ee50
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeByte0, 6045L, 2382L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2382, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50942, (-689), fieldTypeLong0, 255L, (byte)59, byteArray0, byteOrder0, 2071);
      String string0 = tiffField0.getTagName();
      assertEquals(2071, tiffField0.getSortHint());
      assertEquals(50942, tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
      assertEquals("ProfileCopyright", string0);
      assertEquals((-689), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-125), 530, fieldTypeAscii0, 530, (byte)1, byteArray0, byteOrder0, (-1295));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 962, fieldTypeLong0.FLOAT, 1750L, 962, byteArray0, byteOrder0, 34);
      String string0 = tiffField0.toString();
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(962, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (56) (1750 Float)", string0);
      assertEquals(962, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-601), 518, fieldTypeByte0, 533L, 1092L, byteArray0, byteOrder0, 881);
      String string0 = tiffField0.toString();
      assertEquals(881, tiffField0.getSortHint());
      assertEquals(1092, tiffField0.getOffset());
      assertEquals("-601 (0xfffffda7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (533 Undefined)", string0);
      assertEquals(518, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-123), "G?");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-42), (-123), fieldTypeDouble0.FLOAT, 2L, (byte) (-92), byteArray0, byteOrder0, 46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(46, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-92), tiffField0.getOffset());
      assertEquals((-42), tiffField0.getTag());
      assertEquals(2L, tiffField0.getCount());
      assertEquals((-123), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2147235511), (-2147235511), fieldTypeDouble0, (-2147235511), (-1742L), byteArray0, byteOrder0, (-2147235511));
      assertEquals(1985096, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147235511), tiffField0.getSortHint());
      assertEquals((-2147235511), tiffField0.getDirectoryType());
      assertEquals((-2147235511), tiffField0.getTag());
      assertEquals((-2147235511L), tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-1742), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, (-37), fieldTypeLong0, 255L, 8L, byteArray0, byteOrder0, 51);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3487, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(37379, 3487, fieldTypeLong0, 37379, 255L, byteArray0, byteOrder0, 1982292598);
      tiffField0.dump();
      assertEquals(37379, tiffField0.getTag());
      assertEquals(3487, tiffField0.getDirectoryType());
      assertEquals(37379L, tiffField0.getCount());
      assertEquals(149516, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1982292598, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(557, 871, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).FLOAT).SHORT, 12580L, 106, byteArray0, byteOrder0, (-1286));
      String string0 = tiffField0.getValueDescription();
      assertEquals(106, tiffField0.getOffset());
      assertEquals(25160, tiffField0.getBytesLength());
      assertEquals(871, tiffField0.getDirectoryType());
      assertEquals(557, tiffField0.getTag());
      assertEquals(12580L, tiffField0.getCount());
      assertEquals((-1286), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2264), (-2264), fieldTypeRational0.SSHORT, 1970L, 0, byteArray0, byteOrder0, 2146916281);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2264), tiffField0.getDirectoryType());
      assertEquals(2146916281, tiffField0.getSortHint());
      assertEquals((-2264), tiffField0.getTag());
      assertEquals(1970L, tiffField0.getCount());
      assertEquals(3940, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-6), 2320, fieldTypeShort0.ASCII, 2320, (-6), byteArray0, byteOrder0, (-6));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2320, tiffField0.getBytesLength());
      assertEquals(2320, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-6), tiffField0.getTag());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, 6045L, (-5169L), byteArray0, byteOrder0, 1122);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("RawFile");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(6045, tiffField0.getBytesLength());
      assertEquals(6045L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1122, tiffField0.getSortHint());
      assertEquals((-5169), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(280, "IaihC(zD(i%D(AI'HA");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2144698325, 2144698325, fieldTypeAscii0, 400L, 280, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(280, tiffField0.getOffset());
      assertEquals(400L, tiffField0.getCount());
      assertEquals(2144698325, tiffField0.getDirectoryType());
      assertEquals(2144698325, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50741, (-1), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SSHORT).SBYTE, 1L, 1075L, byteArray0, byteOrder0, (byte) (-101));
      tiffField0.toString();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1075, tiffField0.getOffset());
      assertEquals(50741, tiffField0.getTag());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-14), 5301, fieldTypeAscii0, 4, (byte) (-14), byteArray0, byteOrder0, (-1094));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(5301, tiffField0.getDirectoryType());
      assertEquals((-14), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-14), tiffField0.getTag());
      assertEquals((-1094), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, 41492, fieldTypeRational0, 41492, 41492, byteArray0, byteOrder0, (byte)32);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-80), (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(32, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(41492, tiffField0.getOffset());
      assertEquals(41492, tiffField0.getTag());
      assertEquals(41492, tiffField0.getDirectoryType());
      assertEquals(331936, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeShort0, (byte)0, 50, byteArray0, byteOrder0, 921);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1319, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(921, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2147259600), 1371, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-2147259600), tiffField0.getTag());
      assertEquals(1371, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 1724L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(1724, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)20);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1949), (-1949), fieldTypeDouble0, 0L, 1L, byteArray0, byteOrder0, 1543);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1949), int0);
      assertEquals(1543, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1949), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(557, 557, fieldTypeByte0, 557, 557, byteArray0, byteOrder0, (byte) (-45));
      int int0 = tiffField0.getSortHint();
      assertEquals(557, tiffField0.getTag());
      assertEquals(557, tiffField0.getDirectoryType());
      assertEquals((-45), int0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals(557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2025), (-381), fieldTypeLong0.FLOAT, 2681L, 6L, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(10724, tiffField0.getBytesLength());
      assertEquals("-2025 (0xfffff817: Unknown Tag): ", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getOffset());
      assertEquals((-381), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2196, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147349009, 2979, fieldTypeFloat0.SHORT, 3572L, (byte) (-50), byteArray0, byteOrder0, 2196);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2979, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals((-50L), tiffElement0.offset);
      assertEquals(2147349009, tiffField0.getTag());
      assertEquals(2196, tiffField0.getSortHint());
  }
}
