/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:11:24 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Excecutable;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.core.utiles.MultilanguageManagement;
import org.javathena.data.IDBManagementLogin;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login.mmo_auth_initXML();
      Login.login_log("Z+2\nU:vH?peoANQ");
      MockInetAddress.getByName(";");
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.getAuth_num();
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
      
      int int1 = Login.mmo_auth_initTXT();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      login0.save_config_in_log();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getByName("conf/subnet_athena.conf");
      login0.check_ip(inetAddress0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login0.setAuth_max(0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[3];
      intArray0[0] = 2000000;
      intArray0[1] = 30;
      intArray0[2] = 50;
      login0.server_fd = intArray0;
      login0.do_final();
      IDBManagementLogin iDBManagementLogin0 = Login.getDbManagemtType();
      assertNull(iDBManagementLogin0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      login0.do_final();
      MockSocket mockSocket0 = new MockSocket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      // Undeclared exception!
      try { 
        Login.version(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      assertEquals(0, login0.getAuth_max());
      
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login.mmo_auth_syncTXT();
      Login.mmo_auth_syncTXT();
      Login.display_title();
      Login login1 = new Login();
      login0.getServer_fd();
      login1.getOut();
      Login.mmo_auth_syncTXT();
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data1 = new Socket_data((Socket) null, fromChar0);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)8;
      Login.showTab(byteArray0);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.ConfigurationManagement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      int[] intArray0 = new int[4];
      intArray0[0] = 50;
      intArray0[1] = 2000000;
      intArray0[2] = 10;
      intArray0[3] = 10;
      login0.setServer_fd(intArray0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_max();
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("0$7H$O.1'SS3<gD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      Login.mmo_auth_syncTXT();
      login_Timer_interval_check_auth_sync0.run();
      String string0 = "              (c)2005-2006 The Translate From C To Java Project              ";
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("              (c)2005-2006 The Translate From C To Java Project              ", 2, true);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@8c3bfae1
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login.getPASSWORDENC();
      Login.setPASSWORDENC(2);
      FromClient fromClient0 = new FromClient();
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login.login_log((String) null);
      Login.login_log((String) null);
      Login login0 = new Login();
      Login.mmo_auth_initTXT();
      int[] intArray0 = null;
      login0.setServer_fd((int[]) null);
      login0.do_final();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      Login.mmo_auth_syncTXT();
      login0.check_auth_sync();
      Login.mmo_auth_syncXML();
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Socket socket0 = null;
      FromChar fromChar0 = new FromChar();
      FromChar fromChar1 = new FromChar();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromChar1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)45;
      fromChar1.parse(socket_data0, byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        fromChar0.parse(socket_data0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.javathena.login.parse.FromChar", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.check_auth_sync();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login login0 = new Login();
      login0.setOut((PrintWriter) null);
      Login.mmo_auth_initXML();
      Login.setPASSWORDENC((-1452));
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MySQLConfig.setDefault_codepage("");
      Login.setPASSWORDENC((-884));
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_num();
      login0.getLog_fp();
      login0.getOut();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("jP");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Socket_data socket_data1 = new Socket_data((Socket) null);
      Login.mmo_auth_syncTXT();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/login_athena.xml");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Socket_data socket_data2 = new Socket_data((Socket) null);
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      login0.parse_console("PzT6W;1");
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setOOBInline(true);
      FromAdmin fromAdmin0 = new FromAdmin();
      FromAdmin fromAdmin1 = new FromAdmin();
      Socket_data socket_data3 = new Socket_data(mockSocket0, fromAdmin0);
      // Undeclared exception!
      try { 
        Login.version(socket_data3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.login_log("conf/subnet_athena.conf");
      ConfigurationManagement.setAccess_allownum(100000000);
      MySQLConfig.setDefault_codepage("conf/subnet_athena.conf");
      Login.setPASSWORDENC(100000000);
      login0.do_initTXT();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      login_Timer_interval_check_auth_sync0.cancel();
      login_Timer_interval_check_auth_sync0.cancel();
      Login.setPASSWORDENC(2);
      login_Timer_interval_check_auth_sync0.run();
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      login0.check_ipmask(149, "quit");
      // Undeclared exception!
      try { 
        login0.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login.mmo_auth_syncTXT();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/login_athena.xml");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Socket_data socket_data1 = new Socket_data((Socket) null);
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      login0.parse_console("help");
      Login login1 = new Login();
      Login.ConnectionListener login_ConnectionListener1 = null;
      try {
        login_ConnectionListener1 = login0.new ConnectionListener();
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Failed to open TCP port
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoSuiteSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      login0.getLog_fp();
      login0.getOut();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      FromClient fromClient0 = new FromClient();
      String string0 = "end";
      MySQLConfig.setLogin_server_pw("end");
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_admin(30000, socket_data0, login1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Socket_data socket_data1 = new Socket_data((Socket) null);
      Login.mmo_auth_syncTXT();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/login_athena.xml");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Socket_data socket_data2 = new Socket_data((Socket) null);
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      login0.parse_console("alive");
      Login login1 = new Login();
      Login.ConnectionListener login_ConnectionListener1 = null;
      try {
        login_ConnectionListener1 = login0.new ConnectionListener();
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Failed to open TCP port
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoSuiteSocket", e);
      }
  }
}
