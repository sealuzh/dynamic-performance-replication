/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 01:54:22 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-29);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1105, 65535, fieldTypeShort0, 399L, 399L, byteArray0, byteOrder0, (byte) (-13));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(399, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(227, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1105, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3, (byte)1, fieldTypeShort0.FLOAT, 1L, 1959, byteArray0, byteOrder0, (byte)1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(1959, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-864), fieldTypeShort0, 1460L, 3329, byteArray0, byteOrder0, (-864));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (1460 Short)", string0);
      assertEquals((-864), tiffField0.getDirectoryType());
      assertEquals((-864), tiffField0.getSortHint());
      assertEquals(3329, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(316, "F<}O~ *#js[( zEc9");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2135748764, 67, fieldTypeDouble0, 316, (byte)0, byteArray0, byteOrder0, 67);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2135748764, tiffField0.getTag());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(27, "Unknown: ");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(27, (byte) (-53), fieldTypeRational0, (-2193L), 1804L, byteArray0, byteOrder0, (byte) (-53));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-53), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-53), tiffField0.getSortHint());
      assertEquals(1804, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[31];
      TiffField tiffField0 = new TiffField(324, 50940, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).RATIONAL).SHORT, 50940, (-152), byteArray0, byteOrder0, 2271);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(50940, tiffField0.getDirectoryType());
      assertEquals(2271, tiffField0.getSortHint());
      assertEquals((-152), tiffField0.getOffset());
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 1511);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1511, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1559), 1024, fieldTypeShort0.RATIONAL, 1763L, (-1559), byteArray0, byteOrder0, 305);
      int int0 = tiffField0.getTag();
      assertEquals((-1559), int0);
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(1024, tiffField0.getDirectoryType());
      assertEquals((-1559), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-118);
      TiffField tiffField0 = new TiffField(7, (byte)72, fieldTypeShort0.ASCII, 435L, 2753L, byteArray0, byteOrder0, (byte) (-118));
      String string0 = tiffField0.getStringValue();
      assertEquals((-118), tiffField0.getSortHint());
      assertEquals(72, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(7, tiffField0.getTag());
      assertEquals(2753, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-94L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-94), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-57), fieldTypeFloat0, (-2147483648L), 4L, byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getSortHint();
      assertEquals((-57), int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-57), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 1L, 0, byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-57), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(316, "F<}O~ *#js[( zEc9");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(926, 316, fieldTypeDouble0, 387L, (-1L), byteArray0, byteOrder0, 926);
      int int0 = tiffField0.getOffset();
      assertEquals(926, tiffField0.getTag());
      assertEquals(316, tiffField0.getDirectoryType());
      assertEquals(926, tiffField0.getSortHint());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(4);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      CharBuffer charBuffer0 = CharBuffer.allocate(3139);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1228, 5420, fieldType0, 4, 5420, byteArray0, byteOrder0, 1228);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1228, tiffField0.getTag());
      assertEquals(1228, tiffField0.getSortHint());
      assertEquals(5420, tiffField0.getDirectoryType());
      assertEquals(5420, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      byteArray0[5] = (byte)3;
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)3);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1743, 1743, fieldTypeRational0, 1743, 1L, byteArray0, byteOrder0, (byte)117);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1743, tiffField0.getTag());
      assertEquals(1743, tiffField0.getDirectoryType());
      assertEquals((-21845), int0);
      assertEquals(117, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37382, (byte)125, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (-2147096643));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2147096643), tiffField0.getSortHint());
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2139500436), "ColorCharacterization");
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-89);
      byteArray0[7] = (byte) (-19);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(637, 637, fieldTypeRational0, 1L, 2835L, byteArray0, byteOrder0, 1842);
      tiffField0.getIntValue();
      assertEquals(637, tiffField0.getDirectoryType());
      assertEquals(2835, tiffField0.getOffset());
      assertEquals(1842, tiffField0.getSortHint());
      assertEquals(637, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(31, (String) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-97);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-97), 0, fieldTypeShort0, 1L, (-1808L), byteArray0, byteOrder0, (byte) (-97));
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-97), tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals((-1808), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(31, (String) null);
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-97), 0, fieldTypeShort0, (-6668L), 0, byteArray0, byteOrder0, 31);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(383, "");
      TiffField tiffField0 = new TiffField(1024, (-1559), fieldTypeAscii0, 1024, 305, byteArray0, byteOrder0, (-2147096643));
      tiffField0.getFieldTypeName();
      assertEquals(1024, tiffField0.getTag());
      assertEquals((-1559), tiffField0.getDirectoryType());
      assertEquals((-2147096643), tiffField0.getSortHint());
      assertEquals(305, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "9EO=&<abH[7zp");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 1L, byteArray0, byteOrder0, 2037);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2037, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-5151), "3%x7+`!s");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 329L, (-2876L), byteArray0, byteOrder0, (-5151));
      tiffField0.getFieldType();
      assertEquals((-2876), tiffField0.getOffset());
      assertEquals((-5151), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 306, fieldTypeByte0, (byte)40, (byte)40, byteArray0, byteOrder0, (byte)38);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(306, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37382, (byte)125, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (-2147096643));
      tiffField0.getDoubleValue();
      assertEquals(37382, tiffField0.getTag());
      assertEquals((-2147096643), tiffField0.getSortHint());
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[28];
      byteArray0[0] = (byte)69;
      TiffField tiffField0 = new TiffField((-5481), (byte)50, fieldTypeLong0, 1L, (-5481), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals((-5481), tiffField0.getOffset());
      assertEquals((-5481), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-35);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50216, 1, fieldTypeRational0, 1, 50216, byteArray0, byteOrder0, 25);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50216, tiffField0.getTag());
      assertEquals(50216, tiffField0.getOffset());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 1581L, byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1581, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(4);
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(3139);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1228, 5420, fieldType0, 4, 5420, byteArray0, byteOrder0, 1228);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(5420, tiffField0.getOffset());
      assertEquals(1228, tiffField0.getSortHint());
      assertEquals(1228, tiffField0.getTag());
      assertEquals(5420, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-582), (byte) (-13), fieldTypeShort0, 0L, 1L, byteArray0, byteOrder0, (byte)98);
      tiffField0.getCount();
      assertEquals((-582), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getDirectoryType());
      assertEquals(98, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2551), (-2551), fieldTypeFloat0, (-2551), 4L, byteArray0, byteOrder0, (byte)56);
      tiffField0.getCount();
      assertEquals(56, tiffField0.getSortHint());
      assertEquals((-2551), tiffField0.getDirectoryType());
      assertEquals((-2551), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65002, (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65002, 65002, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 65002);
      tiffField0.getBytesLength();
      assertEquals(65002, tiffField0.getDirectoryType());
      assertEquals(65002, tiffField0.getSortHint());
      assertEquals(65002, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1956), (byte)5, fieldTypeShort0.ASCII, 1L, 0L, byteArray0, byteOrder0, 342);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1956), tiffField0.getTag());
      assertEquals(342, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(7, "3%x7+`!s");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(7, (-1783), fieldTypeFloat0, 7, (-3351L), byteArray0, (ByteOrder) null, (-1783));
      tiffField0.getByteOrder();
      assertEquals(7, tiffField0.getTag());
      assertEquals((-1783), tiffField0.getDirectoryType());
      assertEquals((-1783), tiffField0.getSortHint());
      assertEquals((-3351), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(316, "F<}O~ *#js[( zEc9");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(926, (byte)0, fieldTypeDouble0, 316, 316, byteArray0, byteOrder0, 926);
      tiffField0.getByteArrayValue();
      assertEquals(316, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(926, tiffField0.getTag());
      assertEquals(926, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-582), (byte) (-13), fieldTypeShort0, 0L, 1L, byteArray0, byteOrder0, (byte)98);
      tiffField0.getByteArrayValue();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals((-582), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1559), 305, fieldTypeShort0.RATIONAL, 1763L, (-1559), byteArray0, byteOrder0, 305);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50710, fieldTypeRational0, 50710, 0L, byteArray0, byteOrder0, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("1 (0x1: Unknown Tag):  (50710 org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat)\n", stringWriter0.toString());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-544), (-544), fieldTypeByte0, (-544), 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2544), 171, (FieldType) null, 3487, (-2338L), byteArray0, byteOrder0, 37510);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[264];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-702L), byteArray0, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2384, (byte)53, fieldTypeShort0, 1L, (-18120L), byteArray0, byteOrder0, 34736);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(3680, 3680, (FieldType) null, 3680, 0L, byteArray0, (ByteOrder) null, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2390), (byte)50, fieldTypeByte0, (-2390), (byte)50, byteArray0, byteOrder0, (-2390));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1, 0L, byteArray0, byteOrder0, 2677);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)24, (-2029), fieldTypeByte0, (-3927), (byte)24, byteArray0, byteOrder0, (byte)24);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3924), (-1156), (FieldType) null, 2211L, 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 1, fieldTypeShort0, (-3726L), (-969), byteArray0, byteOrder0, (-1115));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3, (byte)1, fieldTypeShort0.FLOAT, 1L, 1959, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-947), 4453, fieldTypeShort0, (byte) (-16), 4L, byteArray0, byteOrder0, 1288);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-434), fieldTypeByte0, (-434), 828L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50218, 50218, (FieldType) null, 50218, 50218, byteArray0, byteOrder0, (-2083));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[278];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1188), 65135, fieldTypeShort0, (-35L), (-3476L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1876, (byte) (-57), fieldTypeFloat0.DOUBLE, (-3636L), (-3636L), byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ", ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "XPComment");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 980, fieldTypeFloat0, (-95L), 0, byteArray0, byteOrder0, (byte) (-16));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(503, 503, (FieldType) null, 503, 503, byteArray0, byteOrder0, (byte)0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter((byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1927), (-2147420922), fieldTypeRational0, (-2147096643), (-2147096643), byteArray0, byteOrder0, 2147421157);
      tiffField0.getByteOrder();
      assertEquals(2147421157, tiffField0.getSortHint());
      assertEquals((-1927), tiffField0.getTag());
      assertEquals((-2147420922), tiffField0.getDirectoryType());
      assertEquals((-2147096643), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2544), 171, (FieldType) null, 3487, (-2338L), byteArray0, byteOrder0, 37510);
      tiffField0.getFieldType();
      assertEquals((-2338), tiffField0.getOffset());
      assertEquals(171, tiffField0.getDirectoryType());
      assertEquals((-2544), tiffField0.getTag());
      assertEquals(37510, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2120300309), (-714), fieldTypeRational0, (-714), (-2120300309), byteArray0, byteOrder0, (-714));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[107];
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeLong0, (byte)40, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2575, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2575, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1317), fieldTypeByte0, 639L, 2191L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals((-1317), tiffField0.getDirectoryType());
      assertEquals(2191, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2390), (byte)50, fieldTypeByte0, (-2390), (byte)50, byteArray0, byteOrder0, (-2390));
      tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2390), tiffField0.getTag());
      assertEquals((-2390), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)67, ", ");
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-2480), 2147218100, fieldTypeDouble0, 1959L, (byte)67, byteArray0, byteOrder0, (byte)68);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3927), fieldTypeByte0, 0L, 2191L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(4);
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(3139);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1228, 5420, fieldType0, 4, 5420, byteArray0, byteOrder0, 1228);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5420, tiffField0.getDirectoryType());
      assertEquals(1228, tiffField0.getTag());
      assertEquals(1228, tiffField0.getSortHint());
      assertEquals(5420, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-500), (-2390), fieldTypeByte0, 1L, (byte)50, byteArray0, byteOrder0, (-2390));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals((-500), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-2390), tiffField0.getDirectoryType());
      assertEquals((-2390), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1317), fieldTypeByte0, 639L, 2191L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6f82245d for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-135), 6, fieldTypeFloat0.BYTE, 2492L, 8620L, byteArray0, byteOrder0, 6);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@10490dde for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-135), (-135), fieldTypeFloat0, 4208L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-135), tiffField0.getDirectoryType());
      assertEquals(4208L, tiffField0.getCount());
      assertEquals((-135), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-57), fieldTypeFloat0, (-2147483648L), 4L, byteArray0, byteOrder0, (byte) (-57));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals((-57), tiffField0.getDirectoryType());
      assertEquals((-57), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(1126, (byte)50, fieldTypeLong0, (byte)50, (-341L), byteArray0, byteOrder0, (byte)69);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(1126, tiffField0.getTag());
      assertEquals((-341), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[31];
      TiffField tiffField0 = new TiffField((-152), (-152), fieldTypeShort0, 67L, 67L, byteArray0, byteOrder0, (-152));
      tiffField0.getDoubleArrayValue();
      assertEquals(67L, tiffField0.getCount());
      assertEquals((-152), tiffField0.getDirectoryType());
      assertEquals((-152), tiffField0.getTag());
      assertEquals((-152), tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2139500436), "ColorCharacterization");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)97, (-4684), fieldTypeRational0, (byte)5, 8090L, byteArray0, byteOrder0, (byte)97);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5L, tiffField0.getCount());
      assertEquals((-4684), tiffField0.getDirectoryType());
      assertEquals(8090, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2139500436), "ColorCharacterization");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(637, 637, fieldTypeRational0, 1L, 2835L, byteArray0, byteOrder0, 1842);
      assertEquals(8, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(637, tiffField0.getTag());
      assertEquals(2835, tiffField0.getOffset());
      assertEquals(637, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1842, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(316, "F<}O~ *#js[( zEc9");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(926, 316, fieldTypeDouble0, 387L, (-1L), byteArray0, byteOrder0, 926);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(926, tiffField0.getSortHint());
      assertEquals(316, tiffField0.getDirectoryType());
      assertEquals(926, tiffField0.getTag());
      assertEquals(387L, tiffField0.getCount());
      assertEquals(3096, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(1126, (byte)50, fieldTypeLong0, (byte)50, (-341L), byteArray0, byteOrder0, (byte)69);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-341), tiffField0.getOffset());
      assertEquals(7, intArray0.length);
      assertEquals(50L, tiffField0.getCount());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(1126, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[31];
      TiffField tiffField0 = new TiffField((-152), (-152), fieldTypeShort0, 67L, 67L, byteArray0, byteOrder0, (-152));
      tiffField0.getIntArrayValue();
      assertEquals(67, tiffField0.getOffset());
      assertEquals((-152), tiffField0.getDirectoryType());
      assertEquals((-152), tiffField0.getTag());
      assertEquals((-152), tiffField0.getSortHint());
      assertEquals(134, tiffField0.getBytesLength());
      assertEquals(67L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3133), (-3133), fieldTypeRational0, 1020L, 2864L, byteArray0, byteOrder0, (-1559));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1559), 1024, fieldTypeShort0.SRATIONAL, 1763L, (-1559), byteArray0, byteOrder0, 305);
      tiffField0.getIntArrayValue();
      assertEquals(14104, tiffField0.getBytesLength());
      assertEquals((-1559), tiffField0.getTag());
      assertEquals(1763L, tiffField0.getCount());
      assertEquals((-1559), tiffField0.getOffset());
      assertEquals(1024, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2139500436), "ColorCharacterization");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(637, 637, fieldTypeRational0, 1L, 2835L, byteArray0, byteOrder0, 1842);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "9pd'_X3bnm+L,z57b");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 2028, fieldTypeDouble0, 2528L, (byte)99, byteArray0, byteOrder0, (byte) (-75));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2b1d5216 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1956), (byte)5, fieldTypeShort0.ASCII, 1L, 0L, byteArray0, byteOrder0, 342);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals((-1956), tiffField0.getTag());
      assertEquals(342, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3277), (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3277), 41987, fieldTypeFloat0, 41987, 41987, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@4f33415b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(1126, (byte)50, fieldTypeLong0, (byte)50, (-341L), byteArray0, byteOrder0, (byte)69);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x466)", string0);
      assertEquals(69, tiffField0.getSortHint());
      assertEquals((-341), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(306, 306, fieldTypeByte0, 306, 306, byteArray0, byteOrder0, 306);
      String string0 = tiffField0.getTagName();
      assertEquals("DateTime", string0);
      assertEquals(306, tiffField0.getSortHint());
      assertEquals(306, tiffField0.getOffset());
      assertEquals(306, tiffField0.getTag());
      assertEquals(306, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65002, (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65002, 65002, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 65002);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": 65002 (0xfdea: Unknown Tag):  (0 null)\n", stringWriter0.toString());
      assertEquals(65002, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[234];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 1081, fieldTypeShort0.FLOAT, 2928L, 1753L, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.toString();
      assertEquals(1753, tiffField0.getOffset());
      assertEquals("54 (0x36: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (58) (2928 Float)", string0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1081, tiffField0.getDirectoryType());
      assertEquals(11712, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "XPComment");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-123), (byte) (-1), fieldTypeFloat0, 926, 0, byteArray0, byteOrder0, (byte) (-123));
      tiffField0.dump();
      assertEquals((-123), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(926L, tiffField0.getCount());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(3704, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[107];
      TiffField tiffField0 = new TiffField(40, 270, fieldTypeLong0.UNDEFINED, 36960L, (byte)40, byteArray0, byteOrder0, (-523));
      String string0 = tiffField0.toString();
      assertEquals(270, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(36960, tiffField0.getBytesLength());
      assertEquals("40 (0x28: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (107) (36960 Undefined)", string0);
      assertEquals((-523), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(328, 46, fieldTypeShort0.IFD, 255L, 0L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(328, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(46, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField(1126, (byte)50, fieldTypeLong0, (byte)50, (-341L), byteArray0, byteOrder0, (byte)69);
      String string0 = tiffField0.toString();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-341), tiffField0.getOffset());
      assertEquals("1126 (0x466: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (50 Long)", string0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 39, fieldTypeShort0, 938, 4294967300L, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (938 Short)", string0);
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1876, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(720, 720, fieldTypeShort0, 720, 10112L, byteArray0, byteOrder0, 1207);
      String string0 = tiffField0.toString();
      assertEquals(10112, tiffField0.getOffset());
      assertEquals(1207, tiffField0.getSortHint());
      assertEquals(1440, tiffField0.getBytesLength());
      assertEquals(720, tiffField0.getDirectoryType());
      assertEquals("720 (0x2d0: Unknown Tag): 0, 0, 0, 0 (720 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-969), (-969), fieldTypeShort0.ASCII, 4874L, 4874L, byteArray0, byteOrder0, (-969));
      tiffField0.toString();
      assertEquals((-969), tiffField0.getTag());
      assertEquals(4874, tiffField0.getOffset());
      assertEquals(4874L, tiffField0.getCount());
      assertEquals((-969), tiffField0.getSortHint());
      assertEquals((-969), tiffField0.getDirectoryType());
      assertEquals(4874, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1956), (byte)5, fieldTypeShort0.ASCII, 1L, 0L, byteArray0, byteOrder0, 342);
      tiffField0.toString();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(342, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-1956), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-500), (-2390), fieldTypeByte0, 1L, (byte)50, byteArray0, byteOrder0, (-2390));
      tiffField0.toString();
      assertEquals((-2390), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-500), tiffField0.getTag());
      assertEquals((-2390), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-2984L), byteArray0, byteOrder0, 4156);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4156, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-2984), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, (byte)29, fieldTypeShort0, (byte)93, 2467L, byteArray0, byteOrder0, 2583);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2467L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2583, tiffField0.getSortHint());
      assertEquals(186, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(292, "9pd'_X3bnm+L,z57b");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2029), (-3405), fieldTypeDouble0, 292, 1607L, byteArray0, byteOrder0, (-3405));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3405), (byte)99);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-3405), tiffField0.getDirectoryType());
      assertEquals((-3405), tiffField0.getSortHint());
      assertEquals((-2029), tiffField0.getTag());
      assertEquals(1607, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: 9pd'_X3bnm+L,z57b", string0);
      assertNotNull(string0);
      assertEquals(292L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)3);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1743, 1743, fieldTypeRational0, 1743, 1L, byteArray0, byteOrder0, (byte)117);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(1743, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1743, tiffField0.getTag());
      assertEquals(13944, tiffField0.getBytesLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 1L, 0, byteArray0, byteOrder0, (byte) (-57));
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)24, (-2029), fieldTypeByte0, (-3927), (byte)24, byteArray0, byteOrder0, (byte)24);
      int int0 = tiffField0.getOffset();
      assertEquals(24, int0);
      assertEquals((-2029), tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getSortHint());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-499), (byte) (-57), fieldTypeFloat0.RATIONAL, 8602L, 14L, byteArray0, byteOrder0, (-2957));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-57), int0);
      assertEquals((-499), tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertEquals((-2957), tiffField0.getSortHint());
      assertEquals(68816, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(6706, 0, fieldTypeByte0, (-276L), (-276L), byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6706, tiffField0.getTag());
      assertEquals((-276), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)67, ", ");
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-2480), 2147218100, fieldTypeDouble0, 1959L, (byte)67, byteArray0, byteOrder0, (byte)68);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2147218100, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
      assertEquals("-2480 (0xfffff650: Unknown Tag): ", string0);
      assertEquals(15672, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)67, ", ");
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-2480), 2147218100, fieldTypeDouble0, 1959L, (byte)67, byteArray0, byteOrder0, (byte)68);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147218100, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(15672, tiffField0.getBytesLength());
      assertEquals((-2480), tiffField0.getTag());
      assertEquals(1959L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 306, fieldTypeByte0, (byte)40, (byte)40, byteArray0, byteOrder0, (byte)38);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(38, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(40, tiffField0.getOffset());
      assertEquals(306, tiffField0.getDirectoryType());
      assertEquals(40L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
  }
}
