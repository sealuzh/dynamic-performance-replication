/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 09:48:40 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "i}r4";
      classWriter0.visit(49, 2184, "i}r4", "i}r4", "i}r4", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "i}r4", "i}r4", "i}r4", "i}r4");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1719));
      classWriter0.index = (-1719);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1720));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "i!r4";
      classWriter0.visit(49, 2183, "i!r4", "i!r4", "i!r4", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1720), "i!r4", "i!r4", "i!r4", "i!r4");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1719));
      classWriter0.index = (-1719);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "ClMzWOSLg8t3a7bI<", "bPg~|%)n9d");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5023);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Depreccted", "Depreccted", "Depreccted", "Depreccted");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G42De", "+l@@jF::uF", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "BC,6=q>L)0oQ6^7fV?", "#]d3V>kasq{CX", (String) null, "lP)7n'+(8GG=hLQ");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "+l@@jF::uF", (Object) null);
      Attribute attribute0 = new Attribute("Q ");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1737));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "0moVJ3f)24>49", "0moVJ3f)24>49", "0moVJ3f)24>49", "0moVJ3f)24>49");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 2343;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(128);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 128, "I8]:rE8~7", "L", "a", "L");
      Attribute attribute0 = new Attribute("a");
      byte[] byteArray0 = new byte[0];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 3, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5023);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "Deprewate", "Deprewate", "Deprewate", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G42De", "+l@@jF::uF", (Object) null);
      fieldWriter0.visitAnnotation("+l@@jF::uF", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "", "wheel.asm.ClassReader", "wheel.asm.FieldWriter", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("t,36'&YG~", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "BC,6=q>L)0oQ6^7fV?", "#]d3V>kasq{CX", (String) null, "lP)7n'+(8GG=hLQ");
      ByteVector byteVector0 = new ByteVector(49);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1461), "75Hc.0", "Signature", "Signature", "^K}r)/L+Yt");
      classWriter0.version = 984;
      ByteVector byteVector0 = new ByteVector(267386880);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2029), "a}r4", "&E3=Q[f^Om[V>Pqh", "&E3=Q[f^Om[V>Pqh", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ");
      Attribute attribute0 = new Attribute("DPS0e_)b%D|5?");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "", "wheel.asm.ClassReader", "wheel.asm.FieldWriter", (Object) null);
      fieldWriter0.visitAnnotation("t,36'&YG~", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "BC,6=q>L)0oQ6^7fV?", "#]d3V>kasq{CX", (String) null, "lP)7n'+(8GG=hLQ");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1461), "75Hc.0", "Signature", "Signature", "^K}r)/L+Yt");
      classWriter0.version = 984;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ");
      fieldWriter0.visitAnnotation("lP)7n'+(8GG=hLQ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2029), "a}r4", "&E3=Q[f^Om[V>Pqh", "&E3=Q[f^Om[V>Pqh", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "ClMzWOSLg8t3a7bI<", "bPg~|%)n9d");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 182, "", "java/lang/String", "#ALu`u1}l= ", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "BC,6=q>L)0oQ6^7fV?", "#]d3V>kasq{CX", (String) null, "lP)7n'+(8GG=hLQ");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1726));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Deprewate", "Deprewate", "Deprewate", "Deprewate");
      Attribute attribute0 = new Attribute("Deprewate");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
