/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:14:14 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.util.Calendar;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertNotNull(intArray0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login.login_log("java.util.Date");
      Login login0 = new Login();
      login0.do_initXML();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf");
      PrintWriter printWriter0 = mockPrintWriter0.append('r');
      login0.setOut(printWriter0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      Login.login_log("conf/subnet_athena.conf");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login login0 = new Login();
      login0.save_config_in_log();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login login0 = new Login();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Login.mmo_auth_syncXML();
      login0.getOut();
      int int0 = login0.check_auth_sync();
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
      
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.getAuth_max();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      login0.setAuth_max(0);
      assertEquals(0, login0.getAuth_max());
      
      int int0 = Login.getPASSWORDENC();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login.login_log((String) null);
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login.getDbManagemtType();
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.check_auth_sync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Login login0 = new Login();
      Login.display_title();
      int int0 = Login.mmo_auth_initTXT();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login login0 = new Login();
      login0.getLog_fp();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigurationManagement.setAccess_allow("set");
      Login.setPASSWORDENC(431);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserManagement.addAccountIdCount((-173));
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("_M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      login0.check_ip(inetAddress0);
      Login.mmo_auth_syncTXT();
      login0.setAuth_max(3893);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      String string0 = "";
      UserManagement.addAccountIdCount(100000000);
      ConfigurationManagement.setAccess_allow("");
      login0.getOut();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("conf/subnet_athena.conf", 50);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@83072d6c
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      ConfigurationManagement.setAccess_allownum(100000000);
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      login0.setAuth_max(50);
      UserManagement.addAccountIdCount();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      Auth_data auth_data0 = UserManagement.addUserTXT("B5 `", "conf/subnet_athena.conf", "conf/subnet_athena.conf", '8');
      assertEquals(2000000, (int)auth_data0.getAccount_id());
      
      int int0 = FromChar.REQUEST_ALL_OFFLINE;
      int int1 = login0.getAuth_num();
      assertEquals(0, int1);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "OFF";
      Login login0 = new Login();
      UserManagement.addAccountIdCount(50);
      login0.yesNoOnOffToBoolean("OFF");
      MockSocket mockSocket0 = new MockSocket();
      // Undeclared exception!
      try { 
        login0.parse_console("V\".>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)8;
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)81;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)81;
      Login.showTab(byteArray0);
      Login login0 = new Login();
      login0.yesNoOnOffToBoolean("YES");
      MockSocket mockSocket0 = new MockSocket();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      // Undeclared exception!
      try { 
        login0.parse_admin(512, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      int int0 = Calendar.DST_OFFSET;
      login0.do_initTXT();
      login0.parse_console("vQ>yf");
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_num();
      login0.do_initTXT();
      login0.parse_console("conf/subnet_athena.conf");
      login0.check_auth_sync();
      String string0 = "exit";
      // Undeclared exception!
      try { 
        login0.parse_console("exit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = Calendar.YEAR;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      UserManagement.addUserTXT("B5 `", "B5 `", "B5 `", 'c');
      Login login0 = new Login();
      login0.do_initTXT();
      int int1 = FromChar.STATUS_CHANGE;
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      login0.check_auth_sync();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.parse_console("sql-time");
      MySQLConfig.setLogin_server_db("sql-time");
      char char0 = 'X';
      UserManagement.addUserTXT("sql-time", "conf/subnet_athena.conf", "info_8", 'X');
      MockSocket mockSocket0 = new MockSocket();
      FromChar fromChar0 = new FromChar();
      login0.check_auth_sync();
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_num();
      login0.do_initTXT();
      login0.parse_console("status");
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromChar0);
      byte[] byteArray0 = new byte[2];
      Socket_data socket_data1 = new Socket_data((Socket) null);
      fromChar0.parse(socket_data1, byteArray0);
      byte byte0 = (byte)32;
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      login0.do_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "conf/subnet_athena.conf");
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      Login.ConnectionListener login_ConnectionListener1 = null;
      try {
        login_ConnectionListener1 = login0.new ConnectionListener();
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Failed to open TCP port
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoSuiteSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_num();
      login0.do_initTXT();
      // Undeclared exception!
      try { 
        login0.parse_console("end");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(30);
      login0.do_final();
      Login.End login_End0 = login0.new End();
      UserManagement.setAccountIdCount(2);
      MySQLConfig.setLogin_server_id("conf/subnet_athena.conf");
      login_End0.run();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      login_End0.run();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login.getMd5Data(socket_data0);
      login_End0.run();
      login0.check_ipmask(31038, "end");
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_End0.run();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("shutdown", 25);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login0.parse_console("conf/subnet_athena.conf");
      login0.check_auth_sync();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      ACO aCO0 = ACO.STRSIZE;
      ConfigurationManagement.setAccess_order(aCO0);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      int int0 = FromChar.REQUEST_ACCOUNT_REG2;
      login0.do_initTXT();
      login0.parse_console("help");
      login0.parse_console("vQ>y");
      login0.check_auth_sync();
      Login login1 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      login1.check_ip(inetAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vQ>y");
      login0.parse_console("- with the IP security order: 'allow,deny' (deny if not allow). But, NO IP IS AUTHORISED!");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "- with the IP security order: 'allow,deny' (deny if not allow). But, NO IP IS AUTHORISED!");
      MockInetAddress.getLocalHost();
      FromClient fromClient0 = new FromClient();
      FromChar fromChar0 = new FromChar();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("conf/subnet_athena.conf", 2, true);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@8307279c
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.do_initTXT();
      login0.parse_console("sql-time");
      login0.check_auth_sync();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      UserManagement.addUserTXT("conf/subnet_athena.conf", "sql-time", "conf/subnet_athena.conf", ':');
      int int0 = FromChar.STATUS_CHANGE;
      login0.do_initTXT();
      Login.getDbManagemtType();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "warning_24");
      String string0 = "quit";
      // Undeclared exception!
      try { 
        login0.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = Calendar.YEAR;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      UserManagement.addUserTXT("B5 `", "B5 `", "B5 `", 'c');
      Login login0 = new Login();
      login0.do_initTXT();
      int int1 = FromChar.STATUS_CHANGE;
      login0.do_initTXT();
      MockPrintWriter mockPrintWriter0 = (MockPrintWriter)Login.loginLogOut;
      Login login1 = new Login();
      Login login2 = new Login();
      int int2 = Calendar.FIELD_COUNT;
      boolean boolean0 = login2.yesNoOnOffToBoolean("ON");
      assertEquals(0, login2.getAuth_max());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      login0.do_initTXT();
      Login.mmo_auth_syncXML();
      MockPrintWriter mockPrintWriter0 = (MockPrintWriter)Login.loginLogOut;
      Login login1 = new Login();
      int int0 = Calendar.DST_OFFSET;
      login1.do_initTXT();
      login0.parse_console("alive");
      Integer integer0 = new Integer((-1383));
      Integer.getInteger("alive");
      Integer.getInteger(", toIndex: ", (Integer) 2000000);
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      UserManagement.setAccountIdCount((-2174));
      int int1 = Calendar.SEPTEMBER;
      login0.getOut();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("conf/subnet_athena.conf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login.mmo_auth_initXML();
      MySQLConfig.setLogin_server_pw("X&[fPXkwH9w");
      UserManagement.addAccountIdCount(1158);
      UserManagement.addUserTXT("Supports SQL: ", "X&[fPXkwH9w", "X&[fPXkwH9w", 'Z');
      int int0 = FromChar.STATUS_CHANGE;
      int int1 = FromChar.STATUS_CHANGE;
      Login.login_log("Supports SQL: ");
      ACO aCO0 = ACO.STRSIZE;
      ConfigurationManagement.setAccess_order(aCO0);
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("tree-set");
      login0.do_initTXT();
      login0.check_auth_sync();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
