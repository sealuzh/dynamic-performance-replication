/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 14:22:59 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      TiffField tiffField0 = new TiffField(50721, 2, fieldTypeShort0, 1830, 4L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(5, int0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(50721, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)39;
      byteArray0[4] = (byte)39;
      TiffField tiffField0 = new TiffField((byte)39, (byte)98, fieldTypeRational0, 276L, (byte) (-123), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(98, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getTag());
      assertEquals((-123), tiffField0.getOffset());
      assertEquals(65536, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)39;
      TiffField tiffField0 = new TiffField((byte)39, (byte)98, fieldTypeRational0, 276L, (byte) (-123), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getTag());
      assertEquals(98, tiffField0.getDirectoryType());
      assertEquals((-123), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1199), fieldTypeRational0, 1L, (-1199), byteArray0, byteOrder0, 50966);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-1199), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1199), tiffField0.getOffset());
      assertEquals(50966, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, (-1363), fieldTypeRational0.DOUBLE, 2061L, 2061L, byteArray0, byteOrder0, (-1363));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1363), tiffField0.getDirectoryType());
      assertEquals(40965, tagInfo0.tag);
      assertEquals(2061, tiffField0.getOffset());
      assertEquals(40965, tiffField0.getTag());
      assertEquals((-1363), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "[?E;1zt.G@~h$%eAHzf");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 33451);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(33451, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)20, fieldTypeShort0, 4L, (-5171L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-5171), tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)124;
      TiffField tiffField0 = new TiffField(1267, (-623), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).IFD).ASCII, 2, (byte)124, byteArray0, byteOrder0, (byte)124);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(124, tiffField0.getOffset());
      assertEquals((-623), tiffField0.getDirectoryType());
      assertEquals(1267, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)0, fieldTypeLong0, 1, (-4L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2977), (-2977), fieldTypeRational0, (-2977), (-2977), byteArray0, byteOrder0, (-2977));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2977), tiffField0.getOffset());
      assertEquals((-2977), int0);
      assertEquals((-2977), tiffField0.getTag());
      assertEquals((-2977), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-2048), fieldTypeDouble0.FLOAT, 2L, 0L, byteArray0, (ByteOrder) null, (-2147329517));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals((-2048), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-2147329517), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)20, fieldTypeShort0, 4L, (-5171L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals((-5171), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)29;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, 61, fieldTypeRational0.LONG, 203L, (byte)0, byteArray0, byteOrder0, 61);
      tiffField0.getIntValueOrArraySum();
      assertEquals(29, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "2s#n%B7N)/:l{EH)I");
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-13);
      TiffField tiffField0 = new TiffField(3638, (-844), fieldTypeLong0, 3638, (byte)0, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-844), tiffField0.getDirectoryType());
      assertEquals(3638, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1605, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-3);
      byteArray0[4] = (byte)31;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (byte)55);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)39;
      byteArray0[3] = (byte) (-123);
      TiffField tiffField0 = new TiffField((byte)39, 1659, fieldTypeRational0, 1L, 0L, byteArray0, (ByteOrder) null, 3990);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3990, tiffField0.getSortHint());
      assertEquals(1659, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, (String) null);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2409, (byte)19, fieldTypeAscii0, (-2183L), (byte) (-101), byteArray0, byteOrder0, 5);
      tiffField0.getFieldTypeName();
      assertEquals((-101), tiffField0.getOffset());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(2409, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 118, fieldTypeByte0, (-1193L), 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(118, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2538, tiffField0.getSortHint());
      assertEquals(87, tiffField0.getTag());
      assertEquals((-686), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-6), "zfAhH$<if=6d.YhG:");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (-6), 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(9, "w-Fp4E?De^iS");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 9, fieldTypeAscii0, 68L, (-290L), byteArray0, byteOrder0, 11);
      tiffField0.getFieldType();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
      assertEquals((-290), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      TiffField tiffField0 = new TiffField((-2021161079), 65535, fieldTypeFloat0, 1L, (-152L), byteArray0, byteOrder0, (byte)4);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-2021161079), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-152), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-89);
      TiffField tiffField0 = new TiffField(2146745427, 5121, fieldTypeShort0.FLOAT, 1L, 2146745427, byteArray0, byteOrder0, 482);
      tiffField0.getDoubleValue();
      assertEquals(2146745427, tiffField0.getTag());
      assertEquals(5121, tiffField0.getDirectoryType());
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(2146745427, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(17, "zfAhH$<if=6d.YhG:");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 17, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-26), (byte)20, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 902);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(20, int0);
      assertEquals(902, tiffField0.getSortHint());
      assertEquals((-26), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, (-1833L), byteArray0, byteOrder0, 5210);
      tiffField0.getCount();
      assertEquals(5210, tiffField0.getSortHint());
      assertEquals((-1833), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 3592L, 1830, byteArray0, byteOrder0, (-4555));
      tiffField0.getCount();
      assertEquals((-4555), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1830, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)43, (byte) (-1), fieldTypeRational0, (-1L), 816L, byteArray0, (ByteOrder) null, 65112);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(65112, tiffField0.getSortHint());
      assertEquals(816, tiffField0.getOffset());
      assertEquals(43, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "[?E;1zt.G@~h$%eAHzf");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 33451);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(33451, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1129, 0, fieldTypeRational0.UNDEFINED, (-19L), 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(1129, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2142743065, 1459, fieldTypeFloat0, 0L, 2142743065, byteArray0, (ByteOrder) null, (byte)14);
      tiffField0.getByteOrder();
      assertEquals(2142743065, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(2142743065, tiffField0.getOffset());
      assertEquals(1459, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "[?E;1zt.G@~h$%eAHzf");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 33451);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(33451, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-3), (byte)0, fieldTypeFloat0, 2L, (byte) (-74), byteArray0, byteOrder0, (byte) (-74));
      tiffField0.getByteArrayValue();
      assertEquals((-3), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-74), tiffField0.getOffset());
      assertEquals((-74), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, (-1499L), byteArray0, (ByteOrder) null, (byte)22);
      tiffField0.getByteArrayValue();
      assertEquals((-1499), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1830, 2146611041, fieldTypeRational0, 0L, 552L, byteArray0, byteOrder0, 2147366100);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1170), "R'");
      TiffField tiffField0 = new TiffField((byte) (-74), (-1170), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).SBYTE, (-1170), 228L, byteArray0, byteOrder0, (-1170));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)43, (byte) (-1), fieldTypeRational0, (-1L), 816L, byteArray0, (ByteOrder) null, 65112);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeFloat0, 326, (-881L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)88, (-1431655764), fieldTypeRational0.SBYTE, (-1L), (byte) (-2), byteArray0, byteOrder0, 2673);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33449, 33449, fieldTypeFloat0, 28L, 1979L, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "[?E;1zt.G@~h$%eAHzf");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)60, fieldTypeLong0, (byte) (-1), 33451, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      TiffField tiffField0 = new TiffField((-4316), 32845, fieldTypeRational0, (-586L), 3471L, byteArray0, byteOrder0, 2591);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)39, (byte)98, fieldTypeRational0, 276L, (byte) (-123), byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(785, 332, fieldTypeByte0, 332, 332, (byte[]) null, byteOrder0, 100);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-26), (byte)20, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 902);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, (-2659L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1030), (-1030), fieldTypeRational0, (-1030), (-1030), byteArray0, byteOrder0, (byte) (-7));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      MockFileWriter mockFileWriter0 = new MockFileWriter("org.apache.commons.io.filefilter.HiddenFileFilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, 50, fieldTypeRational0, (byte)0, 848L, byteArray0, byteOrder0, Integer.MAX_VALUE);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(848, tiffField0.getOffset());
      assertEquals(Integer.MAX_VALUE, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-3), (byte)0, fieldTypeFloat0, 2L, (byte) (-74), byteArray0, byteOrder0, (byte) (-74));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-74), tiffField0.getOffset());
      assertEquals((-74), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-3), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1598), (-1598), (FieldType) null, (-1), (-1), (byte[]) null, byteOrder0, (-1598));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1598), tiffField0.getSortHint());
      assertEquals((-1598), tiffField0.getTag());
      assertEquals((-1598), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-2048), fieldTypeDouble0.FLOAT, 2L, 0L, byteArray0, (ByteOrder) null, (-2147329517));
      tiffField0.getValue();
      assertEquals((-2048), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2147329517), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      int int0 = tiffField0.getOffset();
      assertEquals((-686), tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getTag());
      assertEquals(2538, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2146745427, 5121, fieldTypeShort0.FLOAT, 1L, 2146745427, byteArray0, byteOrder0, 482);
      tiffField0.getTagInfo();
      assertEquals(5121, tiffField0.getDirectoryType());
      assertEquals(2146745427, tiffField0.getTag());
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(2146745427, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-2048), fieldTypeDouble0.FLOAT, 2L, 0L, byteArray0, (ByteOrder) null, (-2147329517));
      int int0 = tiffField0.getTag();
      assertEquals((-2147329517), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2048), tiffField0.getDirectoryType());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-16), fieldTypeDouble0, (byte)88, 4L, byteArray0, byteOrder0, (-307));
      tiffField0.getBytesLength();
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-307), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2146745427, 5121, fieldTypeShort0.FLOAT, 1L, 2146745427, byteArray0, byteOrder0, 482);
      tiffField0.getDoubleValue();
      assertEquals(2146745427, tiffField0.getOffset());
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(2146745427, tiffField0.getTag());
      assertEquals(5121, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 517, fieldTypeByte0, 1L, 1, byteArray0, byteOrder0, (byte)100);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(100, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-16), fieldTypeDouble0, (byte)88, 4L, byteArray0, byteOrder0, (-307));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@e3221a6 for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(293, (-601), fieldTypeRational0, 1536L, 1536L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1199), 19, fieldTypeRational0, 1L, 524L, byteArray0, byteOrder0, (byte)29);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      tiffField0.getDoubleArrayValue();
      assertEquals((-686), tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getTag());
      assertEquals(2538, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(798, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 34017, fieldTypeFloat0, 34017, (-404L), byteArray0, byteOrder0, (byte) (-106));
      tiffField0.getDoubleArrayValue();
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals((-404), tiffField0.getOffset());
      assertEquals(34017L, tiffField0.getCount());
      assertEquals(34017, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2683), 1, fieldTypeLong0, 65535, 3202L, byteArray0, byteOrder0, 1538);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2683), tiffField0.getTag());
      assertEquals(1538, tiffField0.getSortHint());
      assertEquals(3202, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[59];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeAscii0, 255L, 4, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@116413d7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(961, 700, fieldTypeRational0, 1142L, 0L, byteArray0, byteOrder0, (-2145627567));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1142L, tiffField0.getCount());
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals(961, tiffField0.getTag());
      assertEquals((-2145627567), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-26), (byte) (-1), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 902);
      assertEquals(2, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-26), tiffField0.getTag());
      assertEquals(902, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1170), "R'");
      TiffField tiffField0 = new TiffField((byte) (-74), (-1170), fieldTypeShort0, 228L, 2612L, byteArray0, byteOrder0, (-1170));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1170), tiffField0.getDirectoryType());
      assertEquals(228L, tiffField0.getCount());
      assertEquals(2612, tiffField0.getOffset());
      assertEquals((-1170), tiffField0.getSortHint());
      assertEquals(456, tiffField0.getBytesLength());
      assertEquals((-74), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, (-1833L), byteArray0, byteOrder0, 5210);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@42f73bc2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-515), (-515), fieldTypeRational0, 1717L, (byte)29, byteArray0, byteOrder0, (-515));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-515), (byte)0, fieldTypeRational0, (byte)0, 2838L, byteArray0, byteOrder0, (byte)29);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-515), tiffField0.getTag());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(2838, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)39, 1659, fieldTypeRational0, 1L, 0L, byteArray0, (ByteOrder) null, 3990);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1170), "R'");
      TiffField tiffField0 = new TiffField((byte) (-74), (-1170), fieldTypeShort0, 228L, 2612L, byteArray0, byteOrder0, (-1170));
      tiffField0.getIntArrayValue();
      assertEquals(2612, tiffField0.getOffset());
      assertEquals((-1170), tiffField0.getSortHint());
      assertEquals(228L, tiffField0.getCount());
      assertEquals(456, tiffField0.getBytesLength());
      assertEquals((-74), tiffField0.getTag());
      assertEquals((-1170), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-2048), fieldTypeDouble0.FLOAT, 2L, 0L, byteArray0, (ByteOrder) null, (-2147329517));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(2 (0x2: InteroperabilityVersion): ): [F@6a8bcf2d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(9, "w-Fp4E?De^iS");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 9, fieldTypeAscii0, 68L, (-290L), byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getStringValue();
      assertEquals(68, tiffField0.getBytesLength());
      assertEquals((-290), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(293, (-601), fieldTypeRational0, 1536L, 1536L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals((-601), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x125)", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1536, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33449, 33449, fieldTypeFloat0, 28L, 1979L, (byte[]) null, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(33449, tiffField0.getTag());
      assertEquals(33449, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1979, tiffField0.getOffset());
      assertEquals("MD SampleInfo", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 663L, 1L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2652, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("1 (0x1: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55) (663 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-3), (byte)0, fieldTypeFloat0, 2L, (byte) (-74), byteArray0, byteOrder0, (byte) (-74));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
      assertEquals((-74), tiffField0.getOffset());
      assertEquals((-74), tiffField0.getSortHint());
      assertEquals("0.0, 0.0", string0);
      assertNotNull(string0);
      assertEquals((-3), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(415, 3377, fieldTypeRational0.BYTE, 2144942247, 2144942247, byteArray0, byteOrder0, 415);
      String string0 = tiffField0.toString();
      assertEquals(2144942247, tiffField0.getBytesLength());
      assertEquals(415, tiffField0.getSortHint());
      assertEquals("415 (0x19f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (2144942247 Byte)", string0);
      assertEquals(2144942247, tiffField0.getOffset());
      assertEquals(3377, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[54];
      TiffField tiffField0 = new TiffField((-1552), 2330, fieldTypeRational0.SBYTE, 293, (-1552), byteArray0, byteOrder0, 293);
      String string0 = tiffField0.toString();
      assertEquals("-1552 (0xfffff9f0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (293 SByte)", string0);
      assertEquals(293, tiffField0.getSortHint());
      assertEquals(293, tiffField0.getBytesLength());
      assertEquals((-1552), tiffField0.getOffset());
      assertEquals(2330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeDouble0, 2732L, 2732L, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.getValueDescription();
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(21856, tiffField0.getBytesLength());
      assertEquals(2732L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(24, tiffField0.getTag());
      assertEquals(2732, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      TiffField tiffField0 = new TiffField((byte)0, (byte)9, fieldTypeRational0.DOUBLE, (byte)9, 4, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertNotNull(string0);
      assertEquals(9L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (-2048), fieldTypeDouble0.FLOAT, 2L, 0L, byteArray0, (ByteOrder) null, (-2147329517));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2147329517), tiffField0.getSortHint());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-2048), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[231];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41987, 2530, fieldTypeDouble0.LONG, 2344L, 2530, byteArray0, byteOrder0, 41987);
      String string0 = tiffField0.toString();
      assertEquals(41987, tiffField0.getSortHint());
      assertEquals(2530, tiffField0.getDirectoryType());
      assertEquals("41987 (0xa403: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (2344 Long)", string0);
      assertEquals(2530, tiffField0.getOffset());
      assertEquals(9376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2683), 1, fieldTypeLong0, 65535, 3202L, byteArray0, byteOrder0, 1538);
      MockFile mockFile0 = new MockFile((File) null, "z");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(49L, mockFile0.length());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2683), tiffField0.getTag());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(1538, tiffField0.getSortHint());
      assertEquals(3202, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1163), "0");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-74), (-1163), fieldTypeShort0, 243L, (-1163), byteArray0, byteOrder0, (-1163));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1163), tiffField0.getSortHint());
      assertEquals((-1163), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(243L, tiffField0.getCount());
      assertEquals((-74), tiffField0.getTag());
      assertEquals(486, tiffField0.getBytesLength());
      assertEquals((-1163), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(293, (-601), fieldTypeRational0, 1536L, 1536L, byteArray0, byteOrder0, 65535);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(293);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(226, charArrayWriter0.size());
      assertEquals(293, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[59];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeAscii0, 255L, 4, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(87, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-686), tiffField0.getDirectoryType());
      assertEquals(2538, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeFloat0, 326, (-881L), (byte[]) null, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(326, 2486);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals(326, tiffField0.getTag());
      assertEquals((-881), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2088), fieldTypeShort0, (-2088), (-1095L), (byte[]) null, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-978), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: GPSVersionID, fieldType: Short", string0);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1095), tiffField0.getOffset());
      assertEquals((-2088), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2146745427, 5121, fieldTypeShort0.FLOAT, 1L, 2146745427, byteArray0, byteOrder0, 482);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(5121, tiffField0.getDirectoryType());
      assertEquals(2146745427, tiffField0.getTag());
      assertEquals(2146745427, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1340, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, (-2147126031), fieldTypeAscii0, (byte)19, 1340, byteArray0, byteOrder0, (-2147126031));
      tiffField0.getFieldTypeName();
      assertEquals(1340, tiffField0.getOffset());
      assertEquals((-2147126031), tiffField0.getSortHint());
      assertEquals((-2147126031), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-686), int0);
      assertEquals(87, tiffField0.getTag());
      assertEquals(2538, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)87, (-686), fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 2538);
      tiffField0.dump();
      assertEquals((-686), tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2538, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2683), 1, fieldTypeLong0, 65535, 3202L, byteArray0, byteOrder0, 1538);
      int int0 = tiffField0.getSortHint();
      assertEquals(1538, int0);
      assertEquals(3202, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2683), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "2s#n%B7N)/:l{EH)I");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3638, (-844), fieldTypeLong0, 3638, (byte)0, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals("3638 (0xe36: Unknown Tag): ", string0);
      assertEquals((-844), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(9, "w-Fp4E?De^iS");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 9, fieldTypeAscii0, 68L, (-290L), byteArray0, byteOrder0, 11);
      MockFile mockFile0 = new MockFile((File) null, "w-Fp4E?De^iS");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(11, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-290), tiffField0.getOffset());
      assertEquals(78L, mockFile0.length());
      assertEquals(68, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1170), "R'");
      TiffField tiffField0 = new TiffField((byte) (-74), (-1170), fieldTypeShort0, 228L, 2612L, byteArray0, byteOrder0, (-1170));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1170), tiffField0.getDirectoryType());
      assertEquals((-1170), tiffField0.getSortHint());
      assertEquals(2612, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(228L, tiffField0.getCount());
      assertEquals(456, tiffField0.getBytesLength());
      assertEquals((-74), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-16), fieldTypeDouble0, (byte)88, 4L, byteArray0, byteOrder0, (-307));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4L, tiffElement0.offset);
      assertEquals((-307), tiffField0.getSortHint());
      assertEquals(704, tiffField0.getBytesLength());
      assertEquals((-16), tiffField0.getDirectoryType());
  }
}
