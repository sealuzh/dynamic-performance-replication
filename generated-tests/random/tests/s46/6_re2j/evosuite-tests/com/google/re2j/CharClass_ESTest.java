/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 07:41:25 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][4];
      int[] intArray1 = new int[5];
      intArray1[0] = (-71);
      intArray1[1] = 1287;
      intArray1[2] = 1444;
      intArray1[3] = 1114111;
      intArray1[4] = 1865;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1114111;
      intArray2[1] = 1114111;
      intArray2[2] = 1114111;
      intArray2[3] = 1444;
      intArray2[4] = 1444;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1865;
      intArray3[1] = 1444;
      intArray3[2] = (-71);
      intArray3[3] = 1114111;
      intArray3[4] = 1444;
      intArray3[5] = 1444;
      intArray3[6] = (-71);
      intArray3[7] = 1865;
      intArray3[8] = 1444;
      intArray0[2] = intArray3;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 1444);
      CharClass charClass2 = charClass1.appendLiteral(6, 1288);
      CharClass charClass3 = charClass2.appendTableWithSign(intArray0, (-71));
      assertSame(charClass1, charClass3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 231;
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 231;
      intArray1[1] = 231;
      intArray1[2] = 231;
      intArray1[3] = 231;
      intArray1[4] = 231;
      intArray1[5] = 231;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 231;
      intArray2[1] = 231;
      intArray2[2] = 231;
      intArray2[3] = 231;
      intArray2[4] = 231;
      intArray2[5] = 231;
      intArray2[6] = 231;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 231;
      intArray3[1] = 231;
      intArray3[2] = 231;
      intArray3[3] = (-406);
      intArray3[4] = 231;
      intArray3[5] = 231;
      intArray3[6] = 1;
      intArray3[7] = 231;
      intArray3[8] = 231;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 231;
      intArray4[1] = (-406);
      intArray4[2] = 1;
      intArray4[3] = (-406);
      intArray4[4] = 231;
      intArray4[5] = 231;
      intArray4[6] = 231;
      intArray4[7] = 231;
      intArray4[8] = (-406);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = 1;
      intArray5[1] = 1;
      intArray5[2] = (-406);
      intArray5[3] = 231;
      intArray5[4] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 1;
      intArray6[1] = 1;
      intArray0[5] = intArray6;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-3402);
      intArray0[1] = 717;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass.charClassToString(intArray0, (-2464));
      CharClass charClass2 = charClass1.appendFoldedRange((-806), (-446));
      charClass2.toString();
      CharClass charClass3 = charClass0.appendClassWithSign(intArray0, (-806));
      CharClass charClass4 = charClass0.cleanClass();
      charClass4.appendClass(intArray0);
      charClass3.appendNegatedClass(intArray0);
      int[] intArray1 = new int[8];
      intArray1[0] = (-446);
      intArray1[1] = (-446);
      intArray1[2] = (-446);
      intArray1[3] = (-3402);
      intArray1[4] = (-2464);
      intArray1[5] = (-3402);
      intArray1[6] = 717;
      intArray1[7] = 717;
      charClass1.appendClass(intArray1);
      assertArrayEquals(new int[] {(-3402), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = (-841);
      intArray0[2] = 341;
      intArray0[3] = 4810;
      intArray0[4] = 2609;
      intArray0[5] = 1376;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[9][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[5];
      intArray2[0] = 4810;
      intArray2[1] = 1;
      intArray2[2] = 1376;
      intArray2[3] = 2609;
      intArray2[4] = 2609;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      int[] intArray3 = new int[7];
      intArray3[0] = 4810;
      intArray3[1] = 1;
      intArray3[2] = 1;
      intArray3[3] = 2609;
      intArray3[4] = 2609;
      intArray3[5] = 341;
      intArray3[6] = 4810;
      intArray1[4] = intArray3;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      assertArrayEquals(new int[] {1, (-841), 341, 4810, 0, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 466;
      CharClass charClass1 = charClass0.appendFoldedRange(466, 466);
      int[] intArray0 = new int[6];
      intArray0[0] = 466;
      intArray0[1] = 466;
      intArray0[2] = 466;
      intArray0[3] = 466;
      intArray0[4] = 466;
      intArray0[5] = 466;
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[8][0];
      intArray1[0] = intArray0;
      charClass1.appendLiteral(466, 466);
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      charClass0.appendFoldedClass(intArray0);
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      charClass2.appendTableWithSign(intArray1, 466);
      charClass1.appendLiteral(93, 466);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 466);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[] intArray1 = charClass2.toArray();
      charClass2.cleanClass();
      int int0 = 11;
      int int1 = (-2741);
      charClass1.appendFoldedRange(11, (-2741));
      charClass0.appendFoldedRange(11, 11);
      CharClass charClass3 = charClass2.appendClass(intArray0);
      charClass2.appendFoldedClass(intArray1);
      charClass3.toString();
      charClass3.appendFoldedClass(intArray1);
      int int2 = 2141;
      charClass3.appendRange(2141, 2141);
      int[][] intArray2 = new int[2][9];
      charClass1.negateClass();
      intArray2[0] = intArray1;
      intArray2[1] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 1089;
      intArray0[1] = 120744;
      intArray0[2] = 4;
      intArray0[3] = 4;
      int int0 = 177;
      intArray0[4] = 177;
      intArray0[5] = (-2072);
      intArray0[6] = 3056;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-3803), (-749));
      int[] intArray0 = new int[0];
      CharClass.charClassToString(intArray0, (-3803));
      charClass1.appendClassWithSign(intArray0, (-2127));
      charClass1.appendRange((-3803), 1376);
      int[][] intArray1 = new int[3][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[2];
      intArray2[0] = (-2127);
      intArray2[1] = 1376;
      intArray1[2] = intArray2;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      int int0 = 66640;
      int int1 = (-1615);
      CharClass charClass1 = charClass0.appendRange(66640, (-1615));
      charClass1.appendLiteral((-1615), (-1615));
      int[][] intArray1 = new int[5][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int int2 = (-1114);
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, (-1114));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-2436), 1);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.negateClass();
      assertSame(charClass2, charClass3);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-2);
      intArray0[1] = (-347852);
      intArray0[2] = 2608;
      intArray0[3] = (-350474);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange((-350474), (-350474));
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendClass(intArray0);
      CharClass charClass4 = charClass3.appendFoldedClass(intArray0);
      charClass4.appendLiteral(2608, 2608);
      assertArrayEquals(new int[] {(-2), (-347852), 2608, (-350474)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 65547;
      intArray0[1] = 1;
      intArray0[2] = 3148;
      intArray0[3] = 5787;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[5][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[0] = 5787;
      intArray2[1] = 65547;
      intArray2[2] = 5787;
      intArray2[3] = 65547;
      intArray1[3] = intArray2;
      intArray1[4] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, 571);
      CharClass charClass3 = charClass2.appendClass(intArray2);
      int[] intArray3 = charClass3.toArray();
      assertEquals(2, intArray3.length);
      assertArrayEquals(new int[] {0, 1114111}, intArray3);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 621;
      intArray0[1] = (-1055);
      intArray0[2] = (-349163);
      intArray0[3] = 2903;
      intArray0[4] = 2854;
      intArray0[5] = 66499;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedRange(119171, 781);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 65);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[] intArray1 = new int[2];
      intArray1[0] = 2903;
      intArray1[1] = (-349163);
      charClass0.appendNegatedClass(intArray1);
      charClass2.appendClassWithSign(intArray0, 292);
      assertArrayEquals(new int[] {621, (-1055), (-349163), 2903, 2854, 66499}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 65131;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(65131, 65131);
      // Undeclared exception!
      try { 
        charClass1.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      int int0 = (-165);
      int int1 = 281;
      CharClass charClass1 = charClass0.appendFoldedRange((-165), 281);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.cleanClass();
      int[][] intArray1 = new int[2][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass2.cleanClass();
      CharClass.charClassToString(intArray0, (-165));
      // Undeclared exception!
      try { 
        charClass3.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = null;
      CharClass charClass0 = null;
      try {
        charClass0 = new CharClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1626);
      intArray0[1] = 8501;
      intArray0[2] = 2321;
      intArray0[3] = (-72);
      intArray0[4] = (-21);
      intArray0[5] = 32;
      intArray0[6] = 2315;
      intArray0[7] = 310;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      String string0 = charClass2.toString();
      assertArrayEquals(new int[] {(-1626), 8501, (-1626), 8501, (-21), 32, 2321, (-72)}, intArray0);
      assertEquals("[0xfffff9a6-0x2135]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 2608;
      intArray0[0] = 2608;
      int int1 = (-395);
      intArray0[1] = (-395);
      int int2 = (-424);
      intArray0[2] = (-424);
      int int3 = 303;
      intArray0[3] = 303;
      intArray0[4] = (-2019);
      intArray0[5] = 794;
      int int4 = (-1877);
      intArray0[6] = (-1877);
      intArray0[7] = 2531;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][9];
      int int0 = (-769);
      charClass0.appendFoldedRange((-363), (-769));
      int[] intArray1 = new int[4];
      int int1 = 9203;
      intArray1[0] = 9203;
      intArray1[1] = 65;
      int int2 = (-3020);
      intArray1[2] = (-3020);
      intArray1[3] = 68098;
      intArray0[0] = intArray1;
      int int3 = 0;
      charClass0.appendTableWithSign(intArray0, 0);
      int int4 = 1085;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray1, 1085);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[3][6];
      int[] intArray1 = new int[7];
      intArray1[0] = 216;
      intArray1[1] = (-1802);
      intArray1[2] = 66639;
      intArray1[3] = 1976;
      intArray1[4] = 91;
      intArray1[5] = 888;
      intArray1[6] = 2946;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-1802);
      intArray2[1] = (-1802);
      intArray2[2] = 2946;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1976;
      intArray3[1] = 66639;
      intArray3[2] = 888;
      intArray3[3] = (-1802);
      intArray3[4] = 66639;
      intArray3[5] = 91;
      intArray3[6] = 66639;
      intArray3[7] = 66639;
      intArray3[8] = 91;
      intArray0[2] = intArray3;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      CharClass charClass3 = charClass2.appendRange(2946, 216);
      CharClass charClass4 = charClass3.appendTable(intArray0);
      CharClass charClass5 = charClass4.appendTableWithSign(intArray0, 1294);
      // Undeclared exception!
      try { 
        charClass5.appendNegatedClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray0 = new int[9][1];
      int[] intArray1 = new int[4];
      intArray1[0] = (-459);
      intArray1[1] = 2120;
      intArray1[2] = 936;
      intArray1[3] = (-3667);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = (-3667);
      intArray3[1] = 2120;
      intArray3[2] = (-459);
      intArray3[3] = 2120;
      intArray3[4] = (-3667);
      intArray3[5] = 2120;
      intArray3[6] = (-3667);
      intArray3[7] = (-3667);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = (-3667);
      intArray4[1] = 2683;
      intArray4[2] = (-3667);
      intArray4[3] = (-3667);
      intArray4[4] = (-3667);
      intArray4[5] = (-3667);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[8];
      intArray5[0] = 936;
      intArray5[1] = (-459);
      intArray5[2] = 936;
      intArray5[3] = (-3667);
      intArray5[4] = 2683;
      intArray5[5] = 2120;
      intArray5[6] = (-3667);
      intArray5[7] = (-1712);
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 10191;
      intArray6[1] = 2683;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 10191;
      intArray7[1] = (-3667);
      intArray7[2] = (-459);
      intArray7[3] = (-459);
      intArray7[4] = 936;
      intArray7[5] = 1066;
      intArray7[6] = 10191;
      intArray7[7] = (-3667);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[2];
      intArray8[0] = 10191;
      intArray8[1] = 936;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = 10191;
      intArray9[1] = 2683;
      intArray9[2] = (-1712);
      intArray9[3] = 936;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 493;
      intArray0[1] = 8045;
      intArray0[2] = 1822;
      intArray0[3] = 462;
      intArray0[4] = 778;
      intArray0[5] = 64;
      intArray0[6] = 1573;
      intArray0[7] = 1;
      intArray0[8] = (-1630);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(64, 1);
      int[][] intArray1 = new int[4][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass1.appendTable(intArray1);
      charClass1.toString();
      CharClass charClass2 = charClass0.appendFoldedRange(1573, 462);
      CharClass charClass3 = charClass2.appendRange((-3318), (-576));
      int[] intArray2 = charClass3.toArray();
      assertEquals(49, intArray2.length);
      
      String string0 = charClass2.toString();
      assertEquals("[0x1ed-0x1f6d 0x71e-0x1ce 0x30a-0x40 0x625-0x1 0xfffff9a2-0x90b 0x90b-0x1029 0x1029-0x1747 0x1747-0x1e65 0x1e65-0x1ed 0x1ed-0x90b 0x90b-0x1029 0x1029-0x1747 0x1747-0x1e65 0x1e65-0x1ed 0x1ed-0x90b 0x90b-0x1029 0x1029-0x1747 0x1747-0x1e65 0x1e65-0x1ed 0x1ed-0x90b 0x90b-0x1029 0x1029-0x1747 0x1747-0x1e65 0x1e65-0xfffff30a 0xfffffdc0-0x0]", string0);
      assertArrayEquals(new int[] {493, 8045, 1822, 462, 778, 64, 1573, 1, (-1630)}, intArray0);
  }
}
