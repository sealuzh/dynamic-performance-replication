/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 16:09:47 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[12][4];
      charClass0.appendTable(intArray0);
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(1021, 1021);
      int[] intArray0 = charClass0.toArray();
      assertArrayEquals(new int[] {1021, 1021, 891, 891}, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      charClass0.appendFoldedRange(10, 1223);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 2042);
      CharClass charClass2 = charClass0.negateClass();
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 3026;
      intArray0[1] = 0;
      intArray0[2] = 4;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = new CharClass();
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass0.appendClassWithSign(intArray0, (-235));
      assertSame(charClass0, charClass2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[] intArray0 = new int[12];
      intArray0[10] = (-466);
      charClass1.appendFoldedClass(intArray0);
      String string0 = charClass1.toString();
      assertEquals("[0xfffffe2e-0x0]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[12][4];
      charClass0.negateClass();
      String string0 = charClass0.toString();
      assertEquals("[0x0-0x10ffff]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 4972;
      intArray0[1] = 494;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 3386);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(91, 91);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[3][2];
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray0, (-134));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(8596, 0);
      int[][] intArray1 = new int[0][3];
      charClass0.appendTable(intArray1);
      charClass0.appendTableWithSign(intArray1, 8596);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-1736));
      charClass1.negateClass();
      int[][] intArray1 = new int[0][0];
      charClass0.appendTableWithSign(intArray1, (-1736));
      charClass1.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(1, 1);
      charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      charClass2.toArray();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-1736));
      CharClass charClass2 = charClass1.appendFoldedRange(8203, (-1736));
      charClass2.cleanClass();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(0, 407);
      charClass0.cleanClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 407;
      intArray0[1] = 0;
      intArray0[0] = 407;
      charClass0.appendLiteral(407, (-2462));
      intArray0[3] = 407;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      charClass2.negateClass();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1114112;
      intArray0[1] = 2043;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(2043, (-2525));
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 1114112);
      charClass1.cleanClass();
      charClass0.appendNegatedClass(intArray0);
      charClass0.toArray();
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(761, 761);
      charClass1.toString();
      charClass0.toString();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(1155, 1155);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 8596;
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray1 = new int[5][5];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      charClass3.toString();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 8596;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][5];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass0.appendFoldedClass(intArray0);
      charClass1.appendRange((-590), 8596);
      charClass0.appendLiteral((-590), 152);
      CharClass charClass3 = charClass0.appendFoldedClass(intArray0);
      charClass3.appendNegatedClass(intArray0);
      charClass2.appendNegatedTable(intArray1);
      charClass0.appendTable(intArray1);
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 2042);
      CharClass charClass2 = charClass0.negateClass();
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass2.appendNegatedTable(intArray1);
      charClass2.appendTable(intArray1);
      charClass1.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 3489;
      intArray0[1] = 1114111;
      charClass0.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = new CharClass();
      charClass0.appendLiteral(1074500, 1083097);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 8596;
      int int0 = 3183;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = new CharClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(7828, 1114111);
      int[][] intArray1 = new int[0][9];
      CharClass charClass3 = charClass0.appendTable(intArray1);
      charClass2.negateClass();
      charClass3.appendTableWithSign(intArray1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(10, 1);
      CharClass charClass2 = charClass1.cleanClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 1;
      intArray0[4] = 1;
      intArray0[5] = 4203;
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, 9728);
      int[][] intArray1 = new int[6][8];
      intArray1[0] = intArray0;
      charClass3.appendClass(intArray0);
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      charClass3.appendNegatedTable(intArray1);
      charClass3.negateClass();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass0.appendRange(1114112, 1114112);
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[9];
      intArray1[0] = 1114112;
      intArray1[1] = 1114112;
      intArray1[2] = 1114112;
      intArray1[4] = 1114112;
      intArray1[5] = 1114112;
      intArray1[6] = 1114112;
      intArray1[7] = 1114112;
      intArray0[0] = intArray1;
      charClass2.appendNegatedTable(intArray0);
      charClass1.toString();
      charClass2.appendTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 8596;
      int int0 = 0;
      int int1 = 3183;
      int int2 = 3585;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[8];
      int int3 = 1543;
      intArray1[0] = 1543;
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = new CharClass();
      int[][] intArray2 = new int[1][5];
      intArray2[0] = intArray0;
      CharClass charClass3 = charClass2.appendTable(intArray2);
      charClass1.negateClass();
      int int4 = (-1770);
      charClass3.appendTableWithSign(intArray2, 3183);
      CharGroup charGroup0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
