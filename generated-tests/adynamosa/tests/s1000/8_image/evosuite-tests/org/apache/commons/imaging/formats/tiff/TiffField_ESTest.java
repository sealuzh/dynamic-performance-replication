/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 21 20:48:43 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)96, 2144616513, fieldTypeRational0.SHORT, 1916L, 3206L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3206, tiffField0.getOffset());
      assertEquals(96, tiffField0.getTag());
      assertEquals(2144616513, tiffField0.getDirectoryType());
      assertEquals(96, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3832, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeRational0.SBYTE, 692, (-1863L), byteArray0, byteOrder0, 1531);
      tiffField0.dump();
      assertEquals((-1863), tiffField0.getOffset());
      assertEquals(40095, tiffField0.getTag());
      assertEquals(1531, tiffField0.getSortHint());
      assertEquals(40095, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 122, fieldTypeLong0, 1691L, 1691L, byteArray0, byteOrder0, 3782);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6764, tiffField0.getBytesLength());
      assertEquals(3782, tiffField0.getSortHint());
      assertEquals(1691, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(122, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(40965, (byte) (-125), fieldTypeRational0, (byte)96, (-1L), byteArray0, byteOrder0, (-1213));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-125), tiffField0.getDirectoryType());
      assertEquals((-1213), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1757), fieldTypeRational0, (byte)96, (byte)96, byteArray0, byteOrder0, (byte) (-19));
      int int0 = tiffField0.getTag();
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(96, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1757), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-138), 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 9);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-138), int0);
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-138), fieldTypeFloat0.ASCII, 0, 1838L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals((-138), tiffField0.getDirectoryType());
      assertEquals(1838, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 2205, 4L, byteArray0, byteOrder0, 1229);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1229, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1428), (-1428), fieldTypeFloat0, 3206L, 247L, byteArray0, byteOrder0, (byte) (-6));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1428), tiffField0.getTag());
      assertEquals((-6), int0);
      assertEquals((-1428), tiffField0.getDirectoryType());
      assertEquals(247, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1823), "^+<W3/->");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, 0, fieldTypeByte0.SHORT, 0, 0, byteArray0, byteOrder0, (byte)14);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1485), (-1485), fieldTypeRational0, 30L, (-1485), byteArray0, (ByteOrder) null, (byte)79);
      int int0 = tiffField0.getOffset();
      assertEquals((-1485), int0);
      assertEquals((-1485), tiffField0.getTag());
      assertEquals((-1485), tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)96;
      byteArray0[5] = (byte)96;
      TiffField tiffField0 = new TiffField(2147475455, (byte)96, fieldTypeRational0, 3507L, (-34359738352L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(28056, tiffField0.getBytesLength());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(256, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2147475455, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-31);
      TiffField tiffField0 = new TiffField((-4127), (byte) (-26), fieldTypeLong0, 8L, (byte) (-26), byteArray0, byteOrder0, (-4127));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-4127), tiffField0.getSortHint());
      assertEquals((-4127), tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-26), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1305), (-138), fieldTypeRational0.FLOAT, 1L, (-3236L), byteArray0, byteOrder0, (byte)6);
      tiffField0.getIntValue();
      assertEquals((-138), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1305), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-3236), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      TiffField tiffField0 = new TiffField((byte)95, (-107), fieldTypeRational0.SBYTE, 1L, (-579L), byteArray0, byteOrder0, (-107));
      tiffField0.getIntValue();
      assertEquals(95, tiffField0.getTag());
      assertEquals((-107), tiffField0.getDirectoryType());
      assertEquals((-579), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-107), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1078, 3404, fieldTypeRational0.FLOAT, 1L, 4L, byteArray0, byteOrder0, (byte) (-87));
      tiffField0.getIntValue();
      assertEquals(3404, tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(1078, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(329, 329, fieldTypeLong0, 329, 329, byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getIntArrayValue();
      assertEquals(1316, tiffField0.getBytesLength());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(329, tiffField0.getOffset());
      assertEquals(329, tiffField0.getDirectoryType());
      assertEquals(329, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)33, (String) null);
      TiffField tiffField0 = new TiffField((-2143), (-3272), fieldTypeLong0, (byte)17, (-4L), byteArray0, byteOrder0, 888);
      tiffField0.getFieldTypeName();
      assertEquals((-3272), tiffField0.getDirectoryType());
      assertEquals((-2143), tiffField0.getTag());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(888, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50780, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147286069, (-10), fieldTypeRational0, 2147286069, 1488L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals(1488, tiffField0.getOffset());
      assertEquals(2147286069, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-10), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(65108);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(47, 50, (FieldType) null, 47, 1679L, byteArray0, byteOrder0, (-2530));
      tiffField0.getFieldType();
      assertEquals(1679, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2530), tiffField0.getSortHint());
      assertEquals(47, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "OtherImageLength");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (-2561));
      tiffField0.getFieldType();
      assertEquals((-2561), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-468), "Wv6%7uYu");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-468), (-468), fieldTypeFloat0, (-468), (-468), byteArray0, byteOrder0, (-755));
      tiffField0.getFieldType();
      assertEquals((-468), tiffField0.getOffset());
      assertEquals((-468), tiffField0.getDirectoryType());
      assertEquals((-468), tiffField0.getTag());
      assertEquals((-755), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-601), 1, fieldTypeLong0, 1, 255L, byteArray0, byteOrder0, 2139160067);
      tiffField0.getDoubleValue();
      assertEquals(2139160067, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-601), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      TiffField tiffField0 = new TiffField((byte)95, (-107), fieldTypeRational0.SBYTE, 1L, (-579L), byteArray0, byteOrder0, (-107));
      tiffField0.getDoubleValue();
      assertEquals(95, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-579), tiffField0.getOffset());
      assertEquals((-107), tiffField0.getDirectoryType());
      assertEquals((-107), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-26);
      TiffField tiffField0 = new TiffField(1, (byte)50, fieldTypeByte0, 1, (byte)32, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1823), "^+<W3/->");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, 0, fieldTypeByte0.SSHORT, 0, 0, byteArray0, byteOrder0, (byte)14);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147483647), 0, fieldTypeRational0.FLOAT, 588L, (byte)68, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-2147483647), tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-883), fieldTypeRational0, 601L, 0L, byteArray0, byteOrder0, (byte)95);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-883), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)43, (-952), fieldTypeDouble0, 0L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(43, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-952), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4188, 4188, fieldTypeAscii0, 4188, 4568L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getCount();
      assertEquals(4188, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4188, tiffField0.getDirectoryType());
      assertEquals(4568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3054, (-138), fieldTypeFloat0.RATIONAL, (-421L), (-1733), byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getCount();
      assertEquals((-138), tiffField0.getDirectoryType());
      assertEquals((-1733), tiffField0.getOffset());
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(3054, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1439, "^+<W3/->");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)15, 0, fieldTypeShort0, 0, (-18), byteArray0, byteOrder0, (byte)15);
      int int0 = tiffField0.getBytesLength();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-18), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0.ASCII, (-2680L), 822L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(822, tiffField0.getOffset());
      assertEquals((-2680), int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(263, 65532, fieldTypeRational0, 65532, 65532, byteArray0, (ByteOrder) null, 65532);
      tiffField0.getByteOrder();
      assertEquals(263, tiffField0.getTag());
      assertEquals(65532, tiffField0.getDirectoryType());
      assertEquals(65532, tiffField0.getSortHint());
      assertEquals(65532, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3054, (-138), fieldTypeFloat0.SRATIONAL, (-421L), (-1733), byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getByteOrder();
      assertEquals((-138), tiffField0.getDirectoryType());
      assertEquals(3054, tiffField0.getTag());
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals((-1733), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(329, 329, fieldTypeLong0, 329, 329, byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getByteArrayValue();
      assertEquals(329, tiffField0.getTag());
      assertEquals(329, tiffField0.getOffset());
      assertEquals(1316, tiffField0.getBytesLength());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(329, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(113, (byte)0, fieldTypeFloat0, (byte)0, 1989L, byteArray0, (ByteOrder) null, (byte) (-30));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1989, tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getTag());
      assertEquals((-30), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3265), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, (-23), fieldTypeShort0.FLOAT, (byte)14, (byte)14, byteArray0, byteOrder0, 0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(56, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(24, (String) null);
      TiffField tiffField0 = new TiffField(24, (-1), fieldTypeShort0, (-2531L), 5, byteArray0, byteOrder0, 1540);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1196, (-669), fieldTypeByte0, (-669), 1196, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59932, 0, (FieldType) null, 0, 732L, byteArray0, byteOrder0, 526);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1100), 0, (FieldType) null, (-2856L), 0, byteArray0, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-36), (byte) (-36), fieldTypeRational0, (-1752L), 2205, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59932, 0, (FieldType) null, 0, 732L, byteArray0, byteOrder0, 526);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[296];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36868, 266, fieldTypeLong0.FLOAT, (-1L), (-11968L), byteArray0, byteOrder0, 718);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(113, 992, (FieldType) null, 504L, 0L, byteArray0, (ByteOrder) null, (byte) (-115));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, 2235, fieldTypeShort0, 2147358130, (-1L), byteArray0, byteOrder0, (byte) (-103));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0, (byte[]) null, byteOrder0, (-3293));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-191), 34026, fieldTypeShort0.IFD, 4L, 0L, byteArray0, byteOrder0, (-1947));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(628, 628, fieldTypeRational0, 0L, 628, byteArray0, (ByteOrder) null, 628);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2413), fieldTypeDouble0, (-2413), 0, byteArray0, byteOrder0, (-1917));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, (-2483), fieldTypeRational0, (-844L), (-2483), byteArray0, byteOrder0, 1123);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1305), (-138), fieldTypeRational0.FLOAT, 1L, (-3236L), byteArray0, byteOrder0, (byte)6);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-3236), tiffField0.getOffset());
      assertEquals((-1305), tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-138), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(433, 0, fieldTypeRational0, 2728, 2728, byteArray0, byteOrder0, 372);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(372, tiffField0.getSortHint());
      assertEquals(433, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2728, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, (byte)50, fieldTypeByte0, 1, (byte)32, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1428), (-1428), fieldTypeFloat0, 3206L, 247L, byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getValue();
      assertEquals((-1428), tiffField0.getDirectoryType());
      assertEquals(247, tiffField0.getOffset());
      assertEquals(12824, tiffField0.getBytesLength());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-1428), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(835, (-1), fieldTypeByte0, 835, 77L, byteArray0, byteOrder0, (-1083));
      int int0 = tiffField0.getOffset();
      assertEquals((-1083), tiffField0.getSortHint());
      assertEquals(77, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(835, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-144), fieldTypeLong0, 1484L, 257L, byteArray0, byteOrder0, 580);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(580, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-144), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(257, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4188, 4188, fieldTypeAscii0, 4188, 4568L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4188, tiffField0.getDirectoryType());
      assertEquals(4188, int0);
      assertEquals(4568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1428), (-1428), fieldTypeFloat0, 3206L, 247L, byteArray0, byteOrder0, (byte) (-6));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1428), tiffField0.getTag());
      assertEquals((-1428), tiffField0.getDirectoryType());
      assertEquals(247, tiffField0.getOffset());
      assertEquals(12824, int0);
      assertEquals((-6), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1717986917), 1, fieldTypeAscii0, 8, 145L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1863), "^+<W3/->");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)92, 9, fieldTypeByte0, 1776L, (-1863), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-4127), (byte) (-26), fieldTypeLong0, 8L, (byte) (-26), byteArray0, byteOrder0, (-4127));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-4127), tiffField0.getSortHint());
      assertEquals((-4127), tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-26), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147475455, (byte)96, fieldTypeRational0, 3507L, (-34359738352L), byteArray0, byteOrder0, (byte)96);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1078, 3404, fieldTypeRational0.FLOAT, 1L, 4L, byteArray0, byteOrder0, (byte) (-87));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(3404, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1078, tiffField0.getTag());
      assertEquals((-87), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1863), "^+<W3/->");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, (-385), fieldTypeByte0, (byte)40, 2173L, byteArray0, byteOrder0, (byte)40);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@14e6bb0f for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1863), "^+<W3/->");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 53, fieldTypeByte0, (byte)0, 3183L, byteArray0, byteOrder0, (-1863));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1641f880 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)29, (byte) (-83), fieldTypeDouble0, 1400L, (-4374), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleArrayValue();
      assertEquals(11200, tiffField0.getBytesLength());
      assertEquals(1400L, tiffField0.getCount());
      assertEquals((-4374), tiffField0.getOffset());
      assertEquals(29, tiffField0.getTag());
      assertEquals((-83), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(603, 603, fieldTypeFloat0, 2994L, 329, byteArray0, byteOrder0, 2913);
      tiffField0.getDoubleArrayValue();
      assertEquals(2994L, tiffField0.getCount());
      assertEquals(2913, tiffField0.getSortHint());
      assertEquals(329, tiffField0.getOffset());
      assertEquals(603, tiffField0.getTag());
      assertEquals(603, tiffField0.getDirectoryType());
      assertEquals(11976, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2854, "&{MCmMXf#tL");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2854, (-1592), fieldTypeShort0.LONG, 1162L, 1336L, byteArray0, byteOrder0, 2146624998);
      tiffField0.getDoubleArrayValue();
      assertEquals(2854, tiffField0.getTag());
      assertEquals(1162L, tiffField0.getCount());
      assertEquals((-1592), tiffField0.getDirectoryType());
      assertEquals(1336, tiffField0.getOffset());
      assertEquals(2146624998, tiffField0.getSortHint());
      assertEquals(4648, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2147475443, (byte)96, fieldTypeRational0, (byte)96, (-34359738352L), byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(768, tiffField0.getBytesLength());
      assertEquals(2147475443, tiffField0.getTag());
      assertEquals(96L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1305), (-138), fieldTypeRational0.FLOAT, 1L, (-3236L), byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1305), tiffField0.getTag());
      assertEquals((-138), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-3236), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2854, "&{MCmMXf#tL");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65, 153, fieldTypeShort0, 4L, 404, byteArray0, byteOrder0, 153);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(404, tiffField0.getOffset());
      assertEquals(4, doubleArray0.length);
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(153, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(329, 329, fieldTypeLong0, 329, 329, byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getIntArrayValue();
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(329, tiffField0.getOffset());
      assertEquals(1316, tiffField0.getBytesLength());
      assertEquals(329, tiffField0.getDirectoryType());
      assertEquals(329, tiffField0.getTag());
      assertEquals(329L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)96, 2144616513, fieldTypeRational0.SHORT, 1916L, 3206L, byteArray0, byteOrder0, 3);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3206, tiffField0.getOffset());
      assertEquals(1916L, tiffField0.getCount());
      assertEquals(3832, tiffField0.getBytesLength());
      assertEquals(2144616513, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(96, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      byteArray0[6] = (byte)96;
      TiffField tiffField0 = new TiffField(2147475443, (byte)96, fieldTypeRational0, (byte)96, (-34359738352L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(2147475443, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(96L, tiffField0.getCount());
      assertEquals(768, tiffField0.getBytesLength());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2147475443, (byte)96, fieldTypeRational0, (byte)96, (-34359738352L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(1, 682, fieldTypeRational0, 1, 3507L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1863), "^+<W3/->");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3504), (-1863), fieldTypeByte0, 65535, (-1566L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6addb76b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField((-1148), (-2760), fieldTypeRational0.ASCII, 255L, 0L, byteArray0, (ByteOrder) null, (byte) (-17));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1148), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2760), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-17), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2854, "&{MCmMXf#tL");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65, 153, fieldTypeShort0, 4L, 404, byteArray0, byteOrder0, 153);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6a013b77
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4188, 4188, fieldTypeAscii0, 4188, 4568L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4188, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x105c)", string0);
      assertEquals(4568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, (byte) (-123), fieldTypeLong0, 50, 8L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-123), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[241];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1699, 34, fieldTypeLong0.FLOAT, 65535, 438, byteArray0, byteOrder0, 7150);
      tiffField0.dump();
      assertEquals(438, tiffField0.getOffset());
      assertEquals(7150, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(1699, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(48325, "");
      TiffField tiffField0 = new TiffField(2147422370, 296, fieldTypeShort0.UNDEFINED, 296, 341, byteArray0, byteOrder0, 1528);
      String string0 = tiffField0.toString();
      assertEquals(341, tiffField0.getOffset());
      assertEquals("2147422370 (0x7fff10a2: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (74) (296 Undefined)", string0);
      assertEquals(296, tiffField0.getDirectoryType());
      assertEquals(296, tiffField0.getBytesLength());
      assertEquals(1528, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1428), (-1428), fieldTypeFloat0, 3206L, 247L, byteArray0, byteOrder0, (byte) (-6));
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Zl\"&R1M^r");
      assertEquals((-1428), tiffField0.getTag());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals(12824, tiffField0.getBytesLength());
      assertEquals((-1428), tiffField0.getDirectoryType());
      assertEquals(3206L, tiffField0.getCount());
      assertEquals(247, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(284, (-1301), fieldTypeLong0.DOUBLE, 284, 284, byteArray0, byteOrder0, 284);
      tiffField0.dump();
      assertEquals(284, tiffField0.getSortHint());
      assertEquals(284, tiffField0.getTag());
      assertEquals(284L, tiffField0.getCount());
      assertEquals(2272, tiffField0.getBytesLength());
      assertEquals((-1301), tiffField0.getDirectoryType());
      assertEquals(284, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)29, (byte) (-83), fieldTypeDouble0, 1400L, (-4374), byteArray0, byteOrder0, (-1717986917));
      tiffField0.dump();
      assertEquals(29, tiffField0.getTag());
      assertEquals(1400L, tiffField0.getCount());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-83), tiffField0.getDirectoryType());
      assertEquals(11200, tiffField0.getBytesLength());
      assertEquals((-4374), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-712), (-712), fieldTypeLong0, 2005L, 1508L, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-712), tiffField0.getTag());
      assertEquals((-712), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2005L, tiffField0.getCount());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(1508, tiffField0.getOffset());
      assertEquals(8020, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(835, (-1), fieldTypeByte0, 835, 77L, byteArray0, byteOrder0, (-1083));
      String string0 = tiffField0.toString();
      assertEquals("835 (0x343: Unknown Tag): 0, 0, 0 (835 )", string0);
      assertEquals(77, tiffField0.getOffset());
      assertEquals((-1083), tiffField0.getSortHint());
      assertEquals(835, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2139160067, 2139160067, fieldTypeLong0.SHORT, 1521, 2139160067, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(2139160067, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2139160067, tiffField0.getDirectoryType());
      assertEquals(3042, tiffField0.getBytesLength());
      assertEquals(1521L, tiffField0.getCount());
      assertEquals(2139160067, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3506), 50, fieldTypeLong0.ASCII, 280, 50, byteArray0, byteOrder0, 50730);
      tiffField0.toString();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(280, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(280L, tiffField0.getCount());
      assertEquals((-3506), tiffField0.getTag());
      assertEquals(50730, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((-1717986917), 1, fieldTypeAscii0, 8, 145L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(145, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1078, 3404, fieldTypeRational0.FLOAT, 1L, 4L, byteArray0, byteOrder0, (byte) (-87));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3404, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1078, tiffField0.getTag());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48131, 3, fieldTypeLong0.SBYTE, 3, 0L, byteArray0, byteOrder0, 59932);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-519), 3);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(59932, tiffField0.getSortHint());
      assertEquals(48131, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146082810, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1171, 4, fieldTypeShort0, 2994L, 4L, byteArray0, byteOrder0, (byte)6);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-49), 8);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(4, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(1171, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(5988, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)43, (-952), fieldTypeDouble0, 0L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getTag());
      assertEquals((-952), tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)95, 1531, fieldTypeRational0, (byte)95, 1531, byteArray0, byteOrder0, 207);
      tiffField0.getFieldTypeName();
      assertEquals(95, tiffField0.getTag());
      assertEquals(207, tiffField0.getSortHint());
      assertEquals(1531, tiffField0.getDirectoryType());
      assertEquals(1531, tiffField0.getOffset());
      assertEquals(760, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(329, 329, fieldTypeLong0, 329, 329, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(329, int0);
      assertEquals(329, tiffField0.getTag());
      assertEquals(329, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)43, (-952), fieldTypeDouble0, 0L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(43, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals((-952), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1717986917), 1, fieldTypeAscii0, 8, 145L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(145, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
      assertEquals("-1717986917 (0x9999999b: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2854, "&{MCmMXf#tL");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65, 153, fieldTypeShort0, 4L, 404, byteArray0, byteOrder0, 153);
      tiffField0.dump();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(65, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals(404, tiffField0.getOffset());
      assertEquals(153, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(835, (-1), fieldTypeByte0, 835, 77L, byteArray0, byteOrder0, (-1083));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(77L, tiffElement0.offset);
      assertEquals(835, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1083), tiffField0.getSortHint());
      assertEquals(835, tiffField0.getBytesLength());
  }
}
