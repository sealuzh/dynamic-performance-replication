/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 12:21:27 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 39, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)35);
      tiffField0.dump();
      tiffField0.toString();
      tiffField0.getValueDescription();
      tiffField0.getIntArrayValue();
      tiffField0.getTagName();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getTag();
      tiffField0.getFieldType();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@418ab958
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1611), (-1611), fieldTypeLong0, 0L, (-722L), byteArray0, byteOrder0, (-1611));
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getTag();
      assertEquals((-1611), int0);
      assertEquals((-1611), tiffField0.getDirectoryType());
      assertEquals((-1611), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-722), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-110);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      int int0 = Short.BYTES;
      int int1 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65535, int1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50234, 50234, fieldTypeFloat0, 50234, 50234, byteArray0, byteOrder0, 50234);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte) (-102);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 0L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1105, 1105, fieldTypeFloat0, 1105, 577L, byteArray0, byteOrder0, (byte) (-21));
      tiffField0.getTag();
      tiffField0.getByteArrayValue();
      tiffField0.getTagName();
      tiffField0.getTag();
      tiffField0.getByteArrayValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteArrayValue();
      tiffField0.getTagInfo();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50241, 50241, fieldTypeFloat0, 50241, 50241, byteArray0, byteOrder0, 50241);
      tiffField0.getDoubleArrayValue();
      assertEquals(50241, tiffField0.getTag());
      assertEquals(50241L, tiffField0.getCount());
      assertEquals(50241, tiffField0.getDirectoryType());
      assertEquals(50241, tiffField0.getSortHint());
      assertEquals(200964, tiffField0.getBytesLength());
      assertEquals(50241, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte) (-112);
      byteArray0[8] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1859, 1859, fieldTypeFloat0, 1007L, 2137L, byteArray0, byteOrder0, (-510));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("G\"HpDA3:[F~R");
      PrintWriter printWriter0 = mockPrintWriter0.append('h');
      tiffField0.dump(printWriter0, "");
      assertEquals(1859, tiffField0.getDirectoryType());
      assertEquals(1007L, tiffField0.getCount());
      assertEquals(1859, tiffField0.getTag());
      assertEquals((-510), tiffField0.getSortHint());
      assertEquals(2137, tiffField0.getOffset());
      assertEquals(4028, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146808550, 2146808550, fieldTypeFloat0, 1030L, 2146808550, byteArray0, byteOrder0, 2146808550);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2146808550, tiffField0.getOffset());
      assertEquals(1030L, tiffField0.getCount());
      assertEquals(2146808550, tiffField0.getDirectoryType());
      assertEquals(2146808550, tiffField0.getSortHint());
      assertEquals(4120, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2146808550, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 2147137781, fieldTypeShort0, 8940L, 3184L, byteArray0, byteOrder0, (-2171));
      int int0 = tiffField0.getOffset();
      assertEquals(3184, int0);
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(8940L, tiffField0.getCount());
      assertEquals(17880, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(2147137781, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals((-2171), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1624, (-2096), fieldTypeAscii0, 0L, 0, byteArray0, byteOrder0, (byte) (-20));
      fieldTypeAscii0.getValue(tiffField0);
      assertEquals(1624, tiffField0.getTag());
      
      byteArray0[5] = (byte)126;
      byteArray0[6] = (byte)29;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField(0, 2006, fieldTypeAscii0, 0L, 0, byteArray0, byteOrder1, (byte)29);
      tiffField1.getFieldTypeName();
      assertEquals(29, tiffField1.getSortHint());
      assertEquals(0, tiffField1.getBytesLength());
      assertEquals(2006, tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)47;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1976, 1668, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, (byte)96);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)47, (byte)47);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1976, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(96, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(1668, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50224, 50224, fieldTypeFloat0, 50224, 50224, byteArray0, byteOrder0, 50224);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50224, 50224);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(200896, tiffField0.getBytesLength());
      assertEquals(50224, tiffField0.getDirectoryType());
      assertEquals(50224, tiffField0.getOffset());
      assertEquals(50224, tiffField0.getTag());
      assertEquals(50224, tiffField0.getSortHint());
      assertNull(string1);
      assertEquals(50224L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-110);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeAscii0, 0L, 139L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      
      int int1 = tiffField0.getSortHint();
      assertEquals(139, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, int1);
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeFloat0, 1030L, 50217, byteArray0, byteOrder0, 50217);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals(50217, tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(50217L, tiffElement0.offset);
      assertEquals(4120, tiffField0.getBytesLength());
      assertEquals(1030L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-184), (byte)2, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 27);
      tiffField0.getByteOrder();
      tiffField0.getIntValueOrArraySum();
      FieldType.getFieldType((byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1105, fieldTypeFloat0, (byte) (-1), 3184L, byteArray0, byteOrder0, 785);
      TiffField tiffField1 = new TiffField(2146808550, (byte) (-1), fieldTypeFloat0, 2545L, (-694L), byteArray0, byteOrder0, 41489);
      try { 
        tiffField1.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@58e72bba for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50234, "");
      TiffField tiffField0 = new TiffField(50234, 50234, fieldTypeShort0, 50234, 5736L, byteArray0, byteOrder0, 2146974403);
      int int0 = tiffField0.getOffset();
      assertEquals(5736, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2146974403, tiffField0.getSortHint());
      assertEquals(50234, tiffField0.getTag());
      assertEquals(100468, tiffField0.getBytesLength());
      assertEquals(50234, tiffField0.getDirectoryType());
      assertEquals(50234L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1717986917), fieldTypeShort0, (-2147483648L), (-1284L), byteArray0, byteOrder0, (-1502));
      tiffField0.getTag();
      tiffField0.getByteArrayValue();
      tiffField0.getTagName();
      tiffField0.getTag();
      tiffField0.getByteArrayValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteArrayValue();
      tiffField0.getTagInfo();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)117;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte) (-112);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)117, (byte) (-3), fieldTypeFloat0, 0, (byte)51, byteArray0, byteOrder0, 1859);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50234, 50234, fieldTypeFloat0, 50234, 50234, byteArray0, byteOrder0, 50234);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-105);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-21), fieldTypeFloat0, (byte)0, 2916L, byteArray0, byteOrder0, (byte)3);
      tiffField0.getSortHint();
      tiffField0.getByteOrder();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6c210499 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4053, (byte)107, fieldTypeLong0, 0L, 4053, byteArray0, byteOrder0, (byte) (-1));
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getByteArrayValue();
      tiffField0.getTagName();
      tiffField0.getTag();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.getByteArrayValue();
      tiffField0.getTagInfo();
      TiffField tiffField1 = new TiffField((-1), (-1171), fieldTypeLong0, 4L, (-1L), byteArray1, byteOrder1, 85);
      tiffField1.getSortHint();
      System.setCurrentTimeMillis(4053);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(7, 66, fieldTypeLong0, 804L, 804L, byteArray0, byteOrder0, 2145750408);
      int int0 = tiffField0.getOffset();
      assertEquals(804, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2145750408, tiffField0.getSortHint());
      assertEquals(804L, tiffField0.getCount());
      assertEquals(3216, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getTag());
      assertEquals(66, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      Short short0 = new Short((short) (-26699));
      fieldTypeShort0.writeData(short0, byteOrder0);
      TiffField tiffField0 = new TiffField(217, (-1552), fieldTypeShort0, 217, (short) (-26699), byteArray0, byteOrder0, (-1552));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(217, tiffField0.getTag());
      assertEquals(217L, tiffField0.getCount());
      assertEquals((-26699), tiffField0.getOffset());
      assertEquals((-1552), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1552), tiffField0.getDirectoryType());
      assertEquals(434, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = (-1717986917);
      TiffField tiffField0 = new TiffField((-1), (-1717986917), fieldTypeShort0, (-2147483648L), (-1284L), byteArray0, byteOrder0, (-1502));
      int int1 = 1;
      TiffField tiffField1 = new TiffField((byte)0, 1, fieldTypeShort0, 3149L, (-1), byteArray0, byteOrder0, 1);
      tiffField0.getByteOrder();
      tiffField0.getIntValueOrArraySum();
      try { 
        FieldType.getFieldType((byte) (-1));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -1 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2851, "Rcj");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-103);
      byteArray0[5] = (byte)94;
      byteArray0[6] = (byte)19;
      byteArray0[7] = (byte)47;
      byteArray0[8] = (byte)12;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)50, fieldTypeDouble0, 0, 4L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertNotNull(string1);
      assertEquals("", string1);
      
      tiffField0.getDoubleArrayValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)46;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2, "OversizeValueElement, tag: ");
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeLong0, (byte)3, (byte)46, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      tiffField0.getByteOrder();
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3), tiffField0.getTag());
      assertEquals((-3), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte) (-26);
      byteArray0[6] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, (-834L), byteArray0, byteOrder0, 34859);
      tiffField0.getCount();
      tiffField0.getOversizeValueElement();
      String string0 = tiffField0.toString();
      assertEquals("50 (0x32: Unknown Tag): 24, -101, -22, 1, 34, -26, 50 (50 Undefined)", string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-834), tiffField0.getOffset());
      assertEquals(34859, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 686, fieldTypeRational0, 2281L, 1297L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      tiffField0.getTagName();
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51019, 27, fieldTypeLong0, (byte)2, (byte)2, byteArray0, byteOrder0, (byte)2);
      tiffField0.getByteOrder();
      tiffField0.getIntValueOrArraySum();
      FieldType fieldType0 = FieldType.getFieldType((byte)2);
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField1 = new TiffField(2362, 2362, fieldType0, 0L, (-184), byteArray0, byteOrder0, 34735);
      try { 
        tiffField1.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-34);
      byteArray0[7] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-39), fieldTypeRational0, 2619L, (-1L), byteArray0, byteOrder0, 50);
      tiffField0.dump();
      tiffField0.toString();
      tiffField0.getValueDescription();
      tiffField0.getIntArrayValue();
      tiffField0.getTagInfo();
      tiffField0.getTagName();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getTag();
      tiffField0.getFieldType();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(0 (0x0: GPSVersionID): ): [Lorg.apache.commons.imaging.common.RationalNumber;@3b489884
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3309), "zV t{ 6F!H/+qX");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte) (-49);
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte) (-36);
      byteArray0[6] = (byte)45;
      byteArray0[7] = (byte)71;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3309), (-3309), fieldTypeShort0, 151L, 3618L, byteArray0, byteOrder0, (byte)90);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-3309), tiffField0.getTag());
      assertEquals((-3309), tiffField0.getDirectoryType());
      assertEquals(151L, tiffField0.getCount());
      assertEquals(302, tiffField0.getBytesLength());
      assertEquals(3618, tiffField0.getOffset());
      assertEquals(90, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2851, "Rcj");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3419, "Rcj");
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)59;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)59;
      TiffField tiffField0 = new TiffField(3376, 2101792506, fieldTypeDouble0, 4L, 4L, byteArray0, byteOrder1, (byte)3);
      tiffField0.dump();
      tiffField0.getByteOrder();
      String string0 = tiffField0.getValueDescription();
      assertEquals(2101792506, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3376, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (-195L), byteArray0, byteOrder0, (byte) (-11));
      tiffField0.dump();
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: Unknown Tag):  (0 SRational)", string0);
      
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-11), "0 (0x0: Unknown Tag):  (0 SRational)");
      TiffField tiffField1 = new TiffField((-5704), 50, fieldTypeAscii0, 394L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField1.getByteOrder();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      FieldType.getFieldType(1);
      System.setCurrentTimeMillis(50);
      int int1 = Long.SIZE;
      tiffField1.getTagInfo();
      assertEquals(394L, tiffField1.getCount());
      assertEquals(50, tiffField1.getDirectoryType());
      assertEquals((-5704), tiffField1.getTag());
      assertEquals(394, tiffField1.getBytesLength());
      
      tiffField0.getValue();
      tiffField0.getIntArrayValue();
      assertEquals((-195), tiffField0.getOffset());
      assertEquals((-11), tiffField0.getSortHint());
  }
}
