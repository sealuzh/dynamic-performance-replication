/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:32:03 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader0.readUnsignedShort(4);
      classReader0.readShort(4);
      ClassWriter classWriter0 = new ClassWriter(160);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classWriter0, 0);
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 21;
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      char[] charArray0 = null;
      ClassWriter classWriter0 = new ClassWriter(1218);
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4386, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 2863);
      assertEquals(4, ClassReader.SKIP_FRAMES);
      
      Label[] labelArray0 = new Label[6];
      // Undeclared exception!
      try { 
        classReader1.readLabel((-892), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)47, (byte) (-19));
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[8];
      Label[] labelArray0 = new Label[0];
      attribute0.read(classReader0, 8, 2, charArray0, 8, labelArray0);
      charArray0[0] = '@';
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(classReader1, 4);
      classReader0.getInterfaces();
      classReader1.readUnsignedShort(17);
      short short0 = classReader1.readShort(1121);
      assertEquals((short)74, short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      Item[] itemArray0 = new Item[6];
      Item item0 = classWriter0.newInteger(9);
      itemArray0[0] = item0;
      Item item1 = new Item(8);
      itemArray0[1] = item1;
      Item item2 = classWriter0.newClassItem("org.apache.commons.io.filefilter.WildcardFilter");
      itemArray0[2] = item2;
      Item item3 = classWriter0.newMethodItem("InnerClasses", "org.apache.commons.io.filefilter.WildcardFilter", "`g", false);
      itemArray0[3] = item3;
      Item item4 = classWriter0.newInteger(1121);
      itemArray0[4] = item4;
      Item item5 = classWriter0.newInteger(9);
      itemArray0[5] = item5;
      classWriter0.typeTable = itemArray0;
      classWriter0.threshold = 842;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(33);
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, (-1));
      String string0 = classReader1.getClassName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 124);
      int int0 = classReader0.readUnsignedShort(2);
      assertEquals(47806, int0);
      
      int int1 = classReader0.readByte(1);
      assertEquals(254, int1);
      
      int int2 = classReader0.readInt(763);
      assertEquals(1768894310, int2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.WildcardFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      char char0 = '?';
      charArray0[0] = '?';
      classReader0.getSuperName();
      int int0 = 2;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[9];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      int int1 = 62;
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        attribute0.read(classReader0, (-182), 174, charArray0, 62, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.readUnsignedShort(646);
      ClassWriter classWriter0 = new ClassWriter(25);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 548);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(classReader1, 4);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = null;
      attributeArray0[1] = attribute1;
      attributeArray0[2] = null;
      long long0 = classReader1.readLong(2);
      assertEquals((-4990551337076522922L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      charArray0[1] = '8';
      charArray0[2] = 'f';
      charArray0[3] = 'z';
      charArray0[4] = '+';
      charArray0[5] = ' ';
      charArray0[6] = '#';
      charArray0[7] = 'Z';
      classReader0.readConst(8, charArray0);
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(classReader1, 268435455);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-2887));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      int int0 = 62;
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      int int1 = 319;
      Label[] labelArray0 = new Label[3];
      // Undeclared exception!
      try { 
        classReader0.readLabel(62, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = 'c';
      charArray0[1] = '`';
      charArray0[2] = 'D';
      charArray0[3] = 'Z';
      // Undeclared exception!
      try { 
        classReader0.readClass(1137, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      charArray0[1] = 'X';
      charArray0[2] = 'z';
      charArray0[3] = 'v';
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.readUnsignedShort(646);
      assertEquals(1008, classReader0.header);
      
      classReader0.getSuperName();
      int int0 = classReader0.readInt(646);
      assertEquals(1668201, int0);
      
      String string0 = classReader0.getClassName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[7];
      ClassWriter classWriter1 = new ClassWriter(classReader0, 79);
      classReader1.accept((ClassVisitor) classAdapter1, attributeArray0, 8);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = '`';
      ClassAdapter classAdapter2 = new ClassAdapter(classAdapter0);
      ClassWriter classWriter2 = new ClassWriter(classReader0, 267386880);
      classReader1.accept((ClassVisitor) classWriter1, attributeArray0, 267386880);
      assertEquals(3065, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 73);
      assertEquals(4, ClassReader.SKIP_FRAMES);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org/apache/commons/io/filefilter/AbstractFileFilter");
      classReader0.readByte(2);
      // Undeclared exception!
      try { 
        classReader1.readConst(186, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)86;
      byteArray0[6] = (byte) (-125);
      byteArray0[7] = (byte) (-86);
      byteArray0[8] = (byte)63;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader1.getItem((-557));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -557
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_}+6]");
      classReader0.readShort(1);
      ClassWriter classWriter1 = new ClassWriter(75);
      classWriter1.newConst("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[9];
      charArray0[0] = '[';
      charArray0[1] = '6';
      charArray0[2] = '[';
      charArray0[3] = '6';
      charArray0[4] = '[';
      charArray0[5] = '6';
      classWriter1.newConst("_}+6]");
      charArray0[6] = '6';
      charArray0[7] = '[';
      charArray0[8] = '\'';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.readUnsignedShort(4);
      assertEquals(1121, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 106);
      assertNotSame(classReader0, classReader1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b, 1008, 6);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader2, 1008);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      assertEquals(8, ClassReader.EXPAND_FRAMES);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(classReader1, 4);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = null;
      attributeArray0[1] = attribute1;
      attributeArray0[2] = null;
      attributeArray0[4] = null;
      attributeArray0[5] = null;
      classReader1.accept((ClassVisitor) classWriter1, attributeArray0, 1);
      String string0 = classReader1.getSuperName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      char[] charArray0 = new char[9];
      charArray0[0] = '<';
      charArray0[1] = 'G';
      charArray0[2] = 'V';
      charArray0[3] = '#';
      charArray0[4] = '\"';
      charArray0[5] = '%';
      charArray0[6] = 'w';
      charArray0[7] = 'g';
      charArray0[8] = 'L';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1038, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = 'H';
      charArray0[2] = 'r';
      charArray0[3] = 'O';
      charArray0[4] = 'H';
      charArray0[5] = 'o';
      charArray0[6] = 'f';
      // Undeclared exception!
      try { 
        classReader1.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("V-LK;5P[");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 21;
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(768, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      String string0 = classReader1.getClassName();
      assertEquals("org/apache/commons/io/filefilter/WildcardFilter", string0);
      
      int int0 = classReader1.readUnsignedShort(21);
      assertEquals(2560, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      String string0 = classReader1.getClassName();
      assertEquals("org/apache/commons/io/filefilter/WildcardFilter", string0);
      
      int int0 = ClassReader.EXPAND_FRAMES;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[21];
      charArray0[0] = '5';
      charArray0[2] = '/';
      charArray0[3] = 'c';
      charArray0[4] = 'i';
      String string1 = classReader0.readClass(1121, charArray0);
      assertEquals("\u00002\b\u00003\b\u00004\u000B\u00005\u00006\u000B\u00005\u0000", string1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readUnsignedShort(1121);
      assertEquals(1121, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.readByte(1);
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'W';
      charArray0[4] = 'X';
      // Undeclared exception!
      try { 
        classReader1.readConst((-1231), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader1.header);
      
      String string0 = classReader1.getClassName();
      assertEquals("org/apache/commons/io/filefilter/WildcardFilter", string0);
      
      Locale.getISOCountries();
      classReader0.readUnsignedShort(4);
      short short0 = classReader0.readShort(1);
      assertEquals((short) (-326), short0);
      
      classReader0.readUnsignedShort(4);
      classReader0.getSuperName();
      long long0 = classReader1.readLong(0);
      assertEquals((-3819410108757049297L), long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.WildcardFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12489
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(705, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = new Attribute("java/lang/Object");
      classReader1.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, (-23));
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)56;
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(byteArray0, 1121, 1008);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      assertEquals(4, ClassReader.SKIP_FRAMES);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      Attribute attribute0 = new Attribute("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute[] attributeArray0 = new Attribute[6];
      int int0 = (-105);
      // Undeclared exception!
      try { 
        classReader0.readInt((-105));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader0.header);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      classReader0.readUnsignedShort(4);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      int int0 = classReader0.readInt(0);
      assertEquals((-889275714), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.WildcardFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader0.readUnsignedShort(4);
      ClassWriter classWriter0 = new ClassWriter(160);
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader1.readLong((-1264));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(255);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.readUnsignedShort(2);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader1.getSuperName();
      classReader0.readUnsignedShort(4);
      short short0 = classReader0.readShort(4);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      char[] charArray0 = new char[9];
      charArray0[0] = '<';
      charArray0[1] = 'G';
      charArray0[2] = 'V';
      charArray0[3] = '#';
      charArray0[4] = '\"';
      charArray0[5] = '%';
      // Undeclared exception!
      try { 
        classReader0.readConst(32, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1121);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Label[] labelArray0 = new Label[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        classReader0.readLabel(2, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      charArray0[1] = 'X';
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      // Undeclared exception!
      try { 
        classReader0.readByte((-3194));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3194
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      int int0 = ClassReader.SKIP_CODE;
      int int1 = classReader0.getAccess();
      assertEquals(33, int1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      int int0 = 62;
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      int int1 = 176;
      int int2 = 319;
      Label[] labelArray0 = new Label[3];
      // Undeclared exception!
      try { 
        classReader0.readLabel(62, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classWriter0.invalidFrames = false;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getInterfaces();
      classReader0.readUnsignedShort(758);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.readShort(1);
      ClassWriter classWriter1 = new ClassWriter(1);
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-1378), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader0.readUnsignedShort(4);
      classReader0.readShort(4);
      // Undeclared exception!
      try { 
        classReader0.getItem(262);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 262
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader1.header);
      
      String string0 = classReader1.getClassName();
      assertNotNull(string0);
      assertEquals("org/apache/commons/io/filefilter/WildcardFilter", string0);
      
      int int0 = ClassReader.EXPAND_FRAMES;
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[2] = '/';
      charArray0[3] = 'c';
      short short0 = classReader1.readShort(2);
      assertEquals((short) (-17730), short0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      int int0 = ClassReader.EXPAND_FRAMES;
      char[] charArray0 = new char[5];
      charArray0[0] = '5';
      charArray0[1] = ',';
      charArray0[2] = '/';
      charArray0[3] = 'c';
      charArray0[4] = 'i';
      // Undeclared exception!
      try { 
        classReader0.readClass(1121, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '?';
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org/apache/commons/io/filefilter/AbstractFileFilter");
      classReader0.readByte(2);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 165, 4277);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12489
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader0.readUnsignedShort(4);
      // Undeclared exception!
      try { 
        classReader0.readClass(4, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getInterfaces();
      classReader0.readUnsignedShort(758);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_}+6]");
      classReader0.readShort(1);
      ClassWriter classWriter1 = new ClassWriter(894);
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      charArray0[1] = '6';
      charArray0[2] = '2';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(255, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)32;
      byteArray0[8] = (byte)66;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-75), (byte)7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.readUnsignedShort(646);
      classReader0.getSuperName();
      long long0 = classReader0.readLong(646);
      assertEquals(7164870573518709L, long0);
      assertEquals(1008, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[0];
      classReader1.getInterfaces();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      assertEquals(3065, classReader1.header);
      
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[7];
      ClassWriter classWriter1 = new ClassWriter(classReader0, 79);
      classReader1.accept((ClassVisitor) classAdapter1, attributeArray0, 8);
      classReader0.getSuperName();
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = '`';
      charArray0[2] = 'b';
      charArray0[3] = '?';
      charArray0[4] = '#';
      charArray0[5] = 'u';
      charArray0[6] = 'P';
      charArray0[7] = 'z';
      charArray0[8] = '4';
      Object object0 = classReader1.readConst(79, charArray0);
      assertEquals("\u0000\u01C9\u0000\t\u0000\u020A\u0000", object0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 401);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1121);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader1.readClass((-3287), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = '/';
      // Undeclared exception!
      try { 
        classReader0.readConst(21, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.getClassName();
      classReader1.getInterfaces();
      classReader0.readUnsignedShort(4);
      char[] charArray0 = new char[6];
      classReader0.getSuperName();
      charArray0[0] = 'C';
      charArray0[1] = 'H';
      charArray0[2] = '3';
      charArray0[3] = '`';
      charArray0[4] = '!';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader1.copyPool(classWriter0);
      charArray0[5] = 'H';
      // Undeclared exception!
      try { 
        classReader1.readClass(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[1] = 'M';
      charArray0[2] = 'y';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'a';
      charArray0[4] = '!';
      charArray0[5] = ']';
      charArray0[6] = 'B';
      charArray0[7] = 'k';
      charArray0[8] = 'v';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(781, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(11);
      classReader1.copyPool(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(8);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      classReader1.accept((ClassVisitor) classAdapter0, 57);
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      int int0 = classReader1.getItem(1);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 719);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      assertEquals(1121, classReader1.header);
      
      classReader1.getClassName();
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      classReader0.readUnsignedShort(4);
      ClassWriter classWriter0 = new ClassWriter(160);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classWriter0, 0);
      classReader1.getSuperName();
      short short0 = classReader0.readShort(0);
      assertEquals((short) (-13570), short0);
      
      String string0 = classReader1.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.getSuperName();
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 416);
      // Undeclared exception!
      try { 
        classReader0.readShort((-2503));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.readUnsignedShort(57);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[7];
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("DaX");
      attributeArray0[1] = attribute1;
      attributeArray0[2] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[4] = attribute0;
      attributeArray0[5] = attribute0;
      attributeArray0[6] = attribute0;
      classReader1.accept((ClassVisitor) classAdapter1, attributeArray0, 1);
      // Undeclared exception!
      try { 
        classReader0.readLabel(1, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.getClassName();
      classReader0.readUnsignedShort(0);
      ClassWriter classWriter1 = new ClassWriter(1121);
      ClassWriter classWriter2 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter2, 2);
      classReader0.getSuperName();
      short short0 = classReader0.readShort(2);
      assertEquals((short) (-17730), short0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2202);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.readUnsignedShort(2);
      classWriter0.cr = classReader0;
      assertEquals(33, classWriter0.cr.getAccess());
      
      classReader0.accept((ClassVisitor) classWriter0, 47806);
      Attribute attribute0 = new Attribute("%u#~LxT[u");
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      Attribute attribute1 = new Attribute("wheel.asm.Handler");
      classReader0.accept((ClassVisitor) classWriter0, 1);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute1.next;
      ClassWriter classWriter0 = new ClassWriter(1121);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = attribute1;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute1;
      attributeArray0[4] = attribute1;
      Label[] labelArray0 = new Label[9];
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      labelArray0[0] = null;
      Label label1 = classReader0.readLabel(8, labelArray0);
      labelArray0[1] = label1;
      Label label2 = label1.getFirst();
      labelArray0[2] = label2;
      Label label3 = classReader1.readLabel(1, labelArray0);
      labelArray0[3] = label3;
      Label label4 = label1.successor;
      labelArray0[4] = null;
      Edge edge0 = new Edge();
      Label label5 = edge0.successor;
      labelArray0[5] = null;
      ClassWriter classWriter1 = new ClassWriter(1121);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(4096);
      ByteVector byteVector2 = byteVector1.putUTF8("java/lang/Object");
      ByteVector byteVector3 = byteVector2.putByte(704);
      ByteVector byteVector4 = byteVector3.put12(2, 1);
      // Undeclared exception!
      try { 
        attribute0.put(classWriter1, classReader0.b, 1, 4096, (-729), byteVector4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassVisitor classVisitor0 = null;
      Attribute[] attributeArray0 = null;
      int int0 = 719;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 719);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute1.next;
      ClassWriter classWriter0 = new ClassWriter(1121);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = attribute1;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute1;
      attributeArray0[4] = attribute1;
      attributeArray0[5] = attribute1;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 4);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.getSuperName();
      Attribute attribute0 = new Attribute("EnclosingMethod");
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 416);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 73);
      // Undeclared exception!
      try { 
        classReader0.readLong(2896);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classWriter0.visitSource("InnerClasses", "InnerClasses");
      classReader1.accept((ClassVisitor) classWriter0, 1443);
      int int0 = classReader1.readUnsignedShort(4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readUnsignedShort(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 8);
      assertEquals(2, attributeArray0.length);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      char[] charArray0 = new char[8];
      charArray0[0] = '@';
      Attribute attribute1 = new Attribute("java/lang/Object");
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(classReader1, 4);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = null;
      attributeArray0[1] = attribute1;
      attributeArray0[2] = null;
      attributeArray0[3] = attribute0;
      attributeArray0[4] = null;
      attributeArray0[5] = null;
      classReader1.accept((ClassVisitor) classWriter1, attributeArray0, 1);
      assertEquals(6, attributeArray0.length);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      // Undeclared exception!
      try { 
        classReader0.readConst(5, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1025));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.readUnsignedShort(57);
      assertEquals(1121, classReader0.header);
      
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[7];
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("DaX");
      attributeArray0[2] = attribute0;
      Attribute attribute2 = new Attribute("wheel.asm.Type");
      Attribute[] attributeArray1 = new Attribute[8];
      attributeArray1[0] = attribute1;
      attributeArray1[1] = attribute1;
      Attribute attribute3 = new Attribute("wheel.asm.Type");
      attribute1.value = classReader1.b;
      attributeArray1[2] = attribute3;
      attributeArray1[3] = attribute2;
      attributeArray1[4] = attribute0;
      attributeArray1[5] = attribute0;
      attributeArray1[6] = attribute0;
      attributeArray1[7] = attribute1;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray1, 596);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 172);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader1.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 6);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)47;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.WildcardFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 82);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1180, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1813
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
