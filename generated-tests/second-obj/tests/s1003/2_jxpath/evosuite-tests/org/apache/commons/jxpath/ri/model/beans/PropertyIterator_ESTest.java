/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:23:23 GMT 2018
 */

package org.apache.commons.jxpath.ri.model.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator;
import org.apache.commons.jxpath.ri.model.beans.BeanPointer;
import org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyIterator;
import org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer;
import org.apache.commons.jxpath.ri.model.beans.PropertyPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyIterator_ESTest extends PropertyIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("YKoz");
      Locale locale0 = Locale.ENGLISH;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      PropertyIterator propertyIterator0 = null;
      try {
        propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, nullPointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.US;
      NullPointer nullPointer0 = new NullPointer(locale0, "org.apache.commons.jxpath.JXPathException");
      Object object0 = new Object();
      QName qName0 = new QName((String) null, "<<unknown namespace>>");
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.setPosition(Integer.MIN_VALUE);
      NodePointer nodePointer0 = beanAttributeIterator0.getNodePointer();
      assertNull(nodePointer0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      QName qName0 = new QName("<<unknown namespace>>");
      NullPointer nullPointer0 = new NullPointer(nullPropertyPointer0, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      assertEquals(0, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer(locale0, "Cannot compare pointers that do not belong to the same tree: '");
      NullPointer nullPointer1 = new NullPointer(nullPointer0, (QName) null);
      PropertyIterator propertyIterator0 = null;
      try {
        propertyIterator0 = new PropertyIterator(nullPointer1, "<<unknown namespace>>", false, nullPointer1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // PropertyIerator startWith parameter is not a child of the supplied parent
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = new QName("Ue");
      Locale locale0 = Locale.GERMAN;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", true, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      boolean boolean0 = propertyIterator0.setPosition(27);
      assertEquals(27, propertyIterator0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("0tJCoG7bKB", "0tJCoG7bKB");
      Locale locale0 = Locale.CHINA;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      boolean boolean0 = beanAttributeIterator0.setPosition(963);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QName qName0 = new QName("0tJCoG7bKB", "0tJCoG7bKB");
      Locale locale0 = Locale.CHINESE;
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.prepareForIndividualProperty("0tJCoG7bKB");
      boolean boolean0 = beanAttributeIterator0.setPosition(1024);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = new QName("Ue");
      Locale locale0 = new Locale("Ue", "Ue");
      NullPointer nullPointer0 = new NullPointer(qName0, locale0);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(nullPointer0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, "<<unknown namespace>>", false, nullPropertyPointer0);
      propertyIterator0.getNodePointer();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "!f:", true, (NodePointer) null);
      beanPointer0.asPath();
      propertyIterator0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      propertyIterator0.prepareForIndividualProperty("root");
      propertyIterator0.setPosition(2);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      // Undeclared exception!
      try { 
        variablePointer0.getBaseValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = new QName("cd1))$]^[v+-C");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("cd1))$]^[v+-C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer((NodePointer) null);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("locale");
      propertyIterator0.setPosition(2);
      Locale locale0 = Locale.GERMAN;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("<<unknown namespace>>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=<<unknown namespace>>
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<Object> class0 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
      QName qName0 = new QName((String) null, (String) null);
      BeanPointer beanPointer0 = new BeanPointer(qName0, "length", jXPathBasicBeanInfo0, (Locale) null);
      NodePointer nodePointer0 = beanPointer0.getValuePointer();
      Class<NullPropertyPointer> class1 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo1 = new JXPathBasicBeanInfo(class1, class0);
      BeanPointer beanPointer1 = new BeanPointer(nodePointer0, qName0, "length", jXPathBasicBeanInfo1);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer1, qName0);
      beanAttributeIterator0.getNodePointer();
      beanAttributeIterator0.getPosition();
      beanAttributeIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      NullPointer nullPointer0 = new NullPointer((Locale) null, "<<unknown namespace>>");
      assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NullPointer nullPointer0 = new NullPointer((QName) null, (Locale) null);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, false, (NodePointer) null);
      NodePointer nodePointer0 = propertyIterator0.getNodePointer();
      assertNull(nodePointer0);
      assertEquals(1, propertyIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PropertyIterator propertyIterator0 = (PropertyIterator)beanPointer0.createNodeIterator((String) null, false, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nullPropertyPointer0.namespacePointer("Empty expression context");
      beanPointer0.asPath();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      propertyIterator0.setPosition(2);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      // Undeclared exception!
      try { 
        variablePointer0.getBaseValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: :
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.US;
      NullPointer nullPointer0 = new NullPointer(locale0, "org.apache.commons.jxpath.JXPathException");
      Object object0 = new Object();
      QName qName0 = new QName((String) null, (String) null);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(nullPointer0, qName0);
      beanAttributeIterator0.setPosition(Integer.MIN_VALUE);
      beanAttributeIterator0.getNodePointer();
      assertEquals(Integer.MIN_VALUE, beanAttributeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo0);
      BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPointer0, jXPathBasicBeanInfo0);
      QName qName1 = new QName("<<unknown namespace>>", "<<unknown namespace>>");
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName1);
      beanAttributeIterator0.getNodePointer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, false, beanPropertyPointer1);
      beanAttributeIterator0.prepareForIndividualProperty("");
      beanPointer0.clone();
      NullPointer nullPointer0 = new NullPointer(variablePointer0, qName1);
      Object object0 = beanPropertyPointer0.bean;
      beanAttributeIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      int int0 = PropertyPointer.UNSPECIFIED_PROPERTY;
      beanAttributeIterator0.getPropertyPointer();
      beanAttributeIterator0.getNodePointer();
      propertyIterator0.getNodePointer();
      int int1 = PropertyPointer.UNSPECIFIED_PROPERTY;
      BeanAttributeIterator beanAttributeIterator1 = null;
      try {
        beanAttributeIterator1 = new BeanAttributeIterator((PropertyOwnerPointer) null, qName1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.beans.PropertyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "immediateValuePointer", false, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      propertyIterator0.reset();
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      propertyIterator0.prepareForIndividualProperty("baseValue");
      propertyIterator0.getNodePointer();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      QName qName0 = new QName((String) null, "");
      Class<String> class0 = String.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      Locale locale0 = Locale.CANADA;
      BeanPointer beanPointer0 = new BeanPointer(qName0, "", jXPathBasicBeanInfo0, locale0);
      beanPointer0.getImmediateParentPointer();
      NullPointer nullPointer0 = new NullPointer((NodePointer) null, qName0);
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.getNodePointer();
      propertyIterator0.reset();
      propertyIterator0.getPropertyPointer();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NullPointer nullPointer0 = new NullPointer((Locale) null, "org.apache.commons.jxpath.JXPathException");
      Class<Object> class0 = Object.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, false);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPointer0, jXPathBasicBeanInfo0);
      BeanPropertyPointer beanPropertyPointer1 = new BeanPropertyPointer(beanPropertyPointer0, jXPathBasicBeanInfo0);
      beanPropertyPointer0.getBean();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      Object object0 = beanPropertyPointer1.bean;
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      PropertyIterator propertyIterator0 = new PropertyIterator(nullPointer0, (String) null, true, beanPropertyPointer1);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      propertyIterator0.setPosition(2296);
      propertyIterator0.reset();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JXPathBasicBeanInfo jXPathBasicBeanInfo1 = new JXPathBasicBeanInfo(class0, class0);
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      variablePointer0.namespacePointer((String) null);
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPropertyPointer beanPropertyPointer0 = new BeanPropertyPointer(nullPropertyPointer0, jXPathBasicBeanInfo1);
      Object object0 = beanPropertyPointer0.bean;
      FileSystemHandling.shouldAllThrowIOExceptions();
      BeanPointer beanPointer0 = new BeanPointer(variablePointer0, qName0, (Object) null, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, (String) null, true, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("r>=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jXPathBasicBeanInfo1.getPropertyDescriptors();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      propertyIterator0.prepareForIndividualProperty(",j\"]hfWR?ne");
      propertyIterator0.getNodePointer();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = new QName("a");
      Class<NullPropertyPointer> class0 = NullPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0);
      Locale locale0 = Locale.PRC;
      BeanPointer beanPointer0 = new BeanPointer(qName0, qName0, jXPathBasicBeanInfo0, locale0);
      BeanAttributeIterator beanAttributeIterator0 = new BeanAttributeIterator(beanPointer0, qName0);
      beanAttributeIterator0.reset();
      beanAttributeIterator0.reset();
      beanAttributeIterator0.prepareForIndividualProperty("a");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(beanPointer0);
      Object object0 = nullPropertyPointer0.clone();
      beanAttributeIterator0.prepareForIndividualProperty("PropertyIerator startWith parameter is not a child of the supplied parent");
      BeanPointer beanPointer1 = new BeanPointer(nullPropertyPointer0, qName0, object0, jXPathBasicBeanInfo0);
      beanPointer1.getParent();
      beanAttributeIterator0.getNodePointer();
      beanAttributeIterator0.reset();
      beanAttributeIterator0.prepareForIndividualProperty("actual");
      beanAttributeIterator0.getPropertyPointer();
      beanAttributeIterator0.getPosition();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      Locale locale0 = new Locale("<<unknown namespace>>", "<<unknown namespace>>", "");
      beanPointer0.namespacePointer("<<unknown namespace>>");
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      locale0.getCountry();
      propertyIterator0.setPosition(1414);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      Object object0 = new Object();
      propertyIterator0.prepareForIndividualProperty("valuePointer");
      NullPointer nullPointer0 = new NullPointer(locale0, (String) null);
      propertyIterator0.getPosition();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QName qName0 = new QName("", "");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("");
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", true, (NodePointer) null);
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      String string0 = "locale";
      propertyIterator0.prepareForIndividualProperty("locale");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.setPosition((byte)1);
      // Undeclared exception!
      try { 
        variablePointer0.isLeaf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: :
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QName qName0 = new QName("(URSYoWS<%hZ", "(URSYoWS<%hZ");
      Class<Integer> class0 = Integer.class;
      Class<BeanPropertyPointer> class1 = BeanPropertyPointer.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class1, class0);
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      variablePointer0.namespacePointer("(URSYoWS<%hZ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      NullPropertyPointer nullPropertyPointer0 = new NullPropertyPointer(variablePointer0);
      BeanPointer beanPointer0 = new BeanPointer((NodePointer) null, qName0, nullPropertyPointer0, jXPathBasicBeanInfo0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      PropertyIterator propertyIterator0 = new PropertyIterator(beanPointer0, "<<unknown namespace>>", false, (NodePointer) null);
      propertyIterator0.prepareForIndividualProperty("<<unknown namespace>>");
      jXPathBasicBeanInfo0.getPropertyDescriptors();
      propertyIterator0.prepareForIndividualProperty("locale");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      propertyIterator0.setPosition((byte)1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "attris#bute");
      FileSystemHandling.shouldAllThrowIOExceptions();
      NullPointer nullPointer0 = new NullPointer(beanPointer0, (QName) null);
      propertyIterator0.reset();
      jXPathBasicBeanInfo0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<<unknown namespace>>");
      NodePointer nodePointer0 = propertyIterator0.getPropertyPointer();
      propertyIterator0.reset();
      propertyIterator0.getNodePointer();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        nodePointer0.compareTo(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.apache.commons.jxpath.ri.model.NodePointer
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }
}
