/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:00:05 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.lang.reflect.Array;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInterfaceMethodref;
import org.apache.bcel.classfile.ConstantLong;
import org.apache.bcel.classfile.ConstantMethodHandle;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantString;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IALOAD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.INVOKEVIRTUAL;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.InvokeInstruction;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.ReturnInstruction;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(iNVOKESTATIC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitISTORE((ISTORE) null);
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(46);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte) (-104));
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals("bipush", bIPUSH0.getName());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      iMPDEP1_0.consumeStack(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DMUL dMUL0 = new DMUL();
      SIPUSH sIPUSH0 = new SIPUSH((short)20);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      assertEquals(3, sIPUSH0.getLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LXOR lXOR0 = new LXOR();
      LLOAD lLOAD0 = new LLOAD(0);
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      assertEquals(1, aCONST_NULL0.getLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      assertEquals((short)0, nOP0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setConstantPoolGen((ConstantPoolGen) null);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LLOAD lLOAD0 = new LLOAD(9);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      assertEquals((short)22, lLOAD0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IAND iAND0 = new IAND();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IOR iOR0 = new IOR();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(7, 7);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(227);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      instConstraintVisitor0.visitDCONST((DCONST) null);
      IDIV iDIV0 = new IDIV();
      assertEquals("idiv", iDIV0.getName());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IOR iOR0 = new IOR();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IALOAD iALOAD0 = new IALOAD();
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ((InstructionHandle) null);
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      DALOAD dALOAD0 = new DALOAD();
      LDC_W lDC_W0 = new LDC_W(2699);
      LDC_W lDC_W1 = new LDC_W(207);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC_W(lDC_W1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(46);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      instConstraintVisitor0.visitJSR_W(jSR_W0);
      assertEquals(5, jSR_W0.getLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(0);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(dUP2_X2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DLOAD dLOAD0 = new DLOAD(1);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      assertEquals("dload_1", dLOAD0.getName());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FSTORE fSTORE0 = new FSTORE(8192);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      assertEquals((short)56, fSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(0);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals(0, dSTORE0.getIndex());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitFCONST((FCONST) null);
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      INEG iNEG0 = new INEG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LCONST lCONST0 = new LCONST(0L);
      instConstraintVisitor0.visitLCONST(lCONST0);
      assertEquals(1, lCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GETSTATIC gETSTATIC0 = new GETSTATIC(7);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2257);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2257, 676);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(676);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addDouble(676);
      rET0.produceStack(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 676.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame.getThis();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      InstructionList instructionList0 = new InstructionList(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.visitJSR((JSR) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack0 = new OperandStack(155);
      Frame frame0 = new Frame(1029, 155);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      FMUL fMUL0 = new FMUL();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IINC iINC0 = new IINC(1029, 1029);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FASTORE fASTORE0 = new FASTORE();
      OperandStack operandStack0 = new OperandStack(147);
      Frame frame0 = new Frame(1029, 1029);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FMUL fMUL0 = new FMUL();
      IINC iINC0 = new IINC(147, 147);
      iINC0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(752);
      IAND iAND0 = new IAND();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      iAND0.produceStack(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.setMethodGen((MethodGen) null);
      FCMPL fCMPL0 = new FCMPL();
      LRETURN lRETURN0 = new LRETURN();
      String string0 = Constants.ILLEGAL_OPCODE;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ICONST iCONST0 = new ICONST(2);
      instConstraintVisitor0.visitICONST(iCONST0);
      assertEquals("iconst_2", iCONST0.getName());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FASTORE fASTORE0 = new FASTORE();
      OperandStack operandStack0 = new OperandStack(140);
      Frame frame0 = new Frame(140, 140);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FMUL fMUL0 = new FMUL();
      IINC iINC0 = new IINC(140, 140);
      I2L i2L0 = new I2L();
      ARETURN aRETURN0 = new ARETURN();
      ARETURN aRETURN1 = new ARETURN();
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        i2C0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: Cannot consume 1 stack slots: only 0 slot(s) left on stack!
         // Stack:
         // Slots used: 0 MaxStack: 140.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      LocalVariables localVariables0 = new LocalVariables(149);
      localVariables0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.toString();
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(149, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      rETURN0.copy();
      FRETURN fRETURN0 = new FRETURN();
      fRETURN0.getType();
      // Undeclared exception!
      try { 
        fRETURN0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(265, 265);
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = frame0.getClone();
      IAND iAND0 = new IAND();
      IINC iINC0 = new IINC(722, 193);
      CASTORE cASTORE0 = new CASTORE();
      frame1.getClone();
      RET rET0 = new RET((byte)54);
      FCMPG fCMPG0 = new FCMPG();
      FSTORE fSTORE0 = new FSTORE((byte)54);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      INEG iNEG0 = new INEG();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      Frame.setThis((UninitializedObjectType) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1988);
      OperandStack operandStack0 = new OperandStack(1988);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1988);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte byte0 = (byte)1;
      byte[] byteArray0 = new byte[0];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      ASTORE aSTORE0 = (ASTORE)InstructionConstants.ASTORE_2;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      InstructionHandle instructionHandle0 = null;
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE((InstructionHandle) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(17);
      localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(17);
      operandStack0.getClone();
      Frame frame0 = new Frame(17, 17);
      instConstraintVisitor0.setFrame(frame0);
      IAND iAND0 = new IAND();
      Frame frame1 = new Frame(3, 3);
      LLOAD lLOAD0 = new LLOAD(17);
      InstructionList instructionList0 = new InstructionList((BranchInstruction) iF_ICMPLE0);
      ObjectType objectType0 = new ObjectType("F+{{I%n%}Ffn!NI");
      ILOAD iLOAD0 = new ILOAD(17);
      DLOAD dLOAD0 = new DLOAD(147);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ILOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE((InstructionHandle) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(17);
      localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(17);
      operandStack0.getClone();
      Frame frame0 = new Frame(17, 17);
      instConstraintVisitor0.setFrame(frame0);
      IAND iAND0 = new IAND();
      Frame frame1 = new Frame(3, 3);
      LLOAD lLOAD0 = new LLOAD(17);
      InstructionList instructionList0 = new InstructionList((BranchInstruction) iF_ICMPLE0);
      ObjectType objectType0 = new ObjectType("F+{{I%n%}Ffn!NI");
      ILOAD iLOAD0 = (ILOAD)InstructionConstants.ILOAD_0;
      DLOAD dLOAD0 = new DLOAD(147);
      instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2239, 676);
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      LXOR lXOR1 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2226);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      OperandStack operandStack1 = new OperandStack(147, objectType0);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame1.getClone();
      Frame frame3 = new Frame(localVariables0, operandStack1);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/tn:%n&h5>SyXbBS9YKHz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "    WnstouctionHandle ih_");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(5);
      ATHROW aTHROW0 = new ATHROW();
      frame0.getClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(5);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2I constraint violated: The value at the stack top is not of type 'double', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      LocalVariables localVariables0 = new LocalVariables(149);
      localVariables0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(149, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      rETURN0.copy();
      FRETURN fRETURN0 = new FRETURN();
      LSTORE lSTORE0 = new LSTORE(149);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(lSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: 'Jw 7fJ]MY~L.DK-*N'; Instruction type: 'long'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(135, 2902);
      ConstantLong constantLong0 = new ConstantLong(0);
      Constant[] constantArray0 = new Constant[0];
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, (-153.22128733190203));
      InstructionList instructionList0 = pUSH0.getInstructionList();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      GOTO gOTO0 = new GOTO(instructionHandle0);
      instConstraintVisitor0.visitGOTO(gOTO0);
      LDC lDC0 = new LDC(2212);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC(lDC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      LocalVariables localVariables0 = new LocalVariables(149);
      localVariables0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.toString();
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(149, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      rETURN0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR((ISHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PUTFIELD pUTFIELD0 = new PUTFIELD(2250);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      LocalVariables localVariables0 = new LocalVariables(2250);
      ObjectType objectType0 = new ObjectType("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2250, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2250);
      LXOR lXOR0 = new LXOR();
      LXOR lXOR1 = new LXOR();
      LXOR lXOR2 = new LXOR();
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      LocalVariables localVariables0 = new LocalVariables(130);
      localVariables0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.toString();
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(130, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      rETURN0.copy();
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type 'Jw 7fJ]MY~L.DK-*N'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2250, 2250);
      I2D i2D0 = new I2D();
      ObjectType objectType0 = new ObjectType("JU");
      OperandStack operandStack0 = new OperandStack(56, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.equals(operandStack0);
      Frame frame2 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame2);
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type 'JU'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PUTFIELD pUTFIELD0 = new PUTFIELD(16);
      LocalVariables localVariables0 = new LocalVariables(39);
      ObjectType objectType0 = new ObjectType("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IDIV iDIV0 = new IDIV();
      IDIV iDIV1 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2239, 676);
      LocalVariables localVariables0 = new LocalVariables(2239);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL((FCMPL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2239, 676);
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2250);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(1415, 2);
      LocalVariables localVariables0 = new LocalVariables(1415);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sL~");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "class");
      LocalVariables localVariables1 = new LocalVariables(67);
      ObjectType objectType0 = new ObjectType("sL~");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      operandStack0.clone();
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      I2B i2B0 = new I2B();
      I2B i2B1 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'sL~'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2260);
      LocalVariables localVariables0 = new LocalVariables(2260);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2509, objectType0);
      operandStack0.toString();
      operandStack0.clone();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      uninitializedObjectType0.isCastableTo(objectType0);
      operandStack0.initializeObject(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ISTORE iSTORE0 = new ISTORE(2260);
      LSUB lSUB0 = new LSUB();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(69);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("(q|SLRd!0S");
      OperandStack operandStack0 = new OperandStack(69, objectType0);
      LocalVariables localVariables0 = new LocalVariables(28);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame0.clone();
      Frame frame2 = frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U");
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type '(q|SLRd!0S'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(314);
      LocalVariables localVariables0 = new LocalVariables(314);
      ObjectType objectType0 = new ObjectType("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 2250;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2250);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      LocalVariables localVariables0 = new LocalVariables(2250);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2250, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2250);
      LXOR lXOR0 = new LXOR();
      LXOR lXOR1 = new LXOR();
      DRETURN dRETURN0 = new DRETURN();
      DRETURN dRETURN1 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance(".g;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(localVariables0);
      LASTORE lASTORE0 = new LASTORE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.setFrame(frame0);
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte)0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type '.g'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      Constant[] constantArray0 = new Constant[1];
      ConstantInteger constantInteger0 = new ConstantInteger(1024);
      ConstantInteger constantInteger1 = new ConstantInteger(constantInteger0);
      Constant constant0 = constantInteger1.copy();
      constantArray0[0] = constant0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ(iF_ACMPEQ0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(2239, 2239);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      ConstantInteger constantInteger0 = new ConstantInteger(1041);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame2.equals(frame1);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      mONITORENTER0.toString(true);
      MONITORENTER mONITORENTER1 = new MONITORENTER();
      mONITORENTER1.copy();
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      MONITORENTER mONITORENTER2 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER2);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D((F2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      LocalVariables localVariables0 = new LocalVariables(2250);
      ObjectType objectType0 = new ObjectType("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2250, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(2250, 2250);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2((DUP2_X2) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_D5R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vg;ut5I`w_D5R9");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("Synthetic");
      String string0 = Constants.CONSTRUCTOR_NAME;
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      ConstantDouble constantDouble0 = new ConstantDouble((byte)66);
      CHECKCAST cHECKCAST0 = new CHECKCAST((byte)33);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vg;ut5I`w_R9", true);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("tn:%.&h>SyXBS9YxHz", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream1);
      BALOAD bALOAD0 = new BALOAD();
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockFileOutputStream0);
      bALOAD0.dump(dataOutputStream0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/tn:%n&h5>SyXbBS9YKHz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "    InstructionHandle ih_");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(5);
      ConstantInteger constantInteger0 = new ConstantInteger(558);
      BIPUSH bIPUSH0 = new BIPUSH((byte)99);
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(2239);
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;utI`_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vg;utI`_R9");
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      ATHROW aTHROW0 = new ATHROW();
      frame0.getClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(2239);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      INSTANCEOF iNSTANCEOF1 = new INSTANCEOF(2020);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      ObjectType objectType0 = ObjectType.getInstance(",swv0.Q!VNff#1");
      OperandStack operandStack0 = new OperandStack(176, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(2198, 2239);
      InstructionList instructionList0 = new InstructionList();
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type ',swv0.Q!VNff#1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`wa_R9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      OperandStack operandStack0 = new OperandStack(503, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(2239, 2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      int int0 = 2065;
      DADD dADD0 = new DADD();
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(11);
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`wa_R9");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "vg;ut5I`wa_R9");
      OperandStack operandStack0 = new OperandStack(11, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      operandStack0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      LUSHR lUSHR0 = new LUSHR();
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class vg;ut5I`wa_R9: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: vg;ut5I`wa_R9.class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2226);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      F2I f2I0 = new F2I();
      F2I f2I1 = new F2I();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`wa_R9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      OperandStack operandStack0 = new OperandStack(503, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      operandStack0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL((DCMPL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;utI`_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vg;utI`_R9");
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      IF_ACMPNE iF_ACMPNE0 = new IF_ACMPNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPNE(iF_ACMPNE0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vg;ut5I`w_R9", true);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("tn:%.&h>SyXBS9YxHz", true);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream1, (byte)11);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2239);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream1);
      BALOAD bALOAD0 = new BALOAD();
      DataOutputStream dataOutputStream1 = new DataOutputStream(mockFileOutputStream0);
      bALOAD0.dump(dataOutputStream0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2257);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2257);
      ObjectType objectType0 = new ObjectType("vg;utI`_R9");
      OperandStack operandStack0 = new OperandStack(2257, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      frame0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2257);
      LXOR lXOR0 = new LXOR();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(2122, (short)3315);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '3315' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2D i2D0 = new I2D();
      ObjectType objectType0 = new ObjectType("JU");
      OperandStack operandStack0 = new OperandStack(56, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FLOAD fLOAD0 = new FLOAD(56);
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      LocalVariables localVariables1 = new LocalVariables(146);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      localVariables1.getClone();
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(146, objectType0);
      BasicType basicType0 = Type.INT;
      Class<DUP2_X1>[] classArray0 = (Class<DUP2_X1>[]) Array.newInstance(Class.class, 0);
      Type.getTypes(classArray0);
      objectType0.isCastableTo(basicType0);
      ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      RET rET0 = new RET(209);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      RET rET1 = new RET(146);
      LXOR lXOR0 = new LXOR();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      dUP2_X1_0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2250, 2250);
      I2D i2D0 = new I2D();
      ObjectType objectType0 = new ObjectType("JU");
      OperandStack operandStack0 = new OperandStack(56, objectType0);
      operandStack0.push(objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame1 = new Frame(localVariables0, operandStack2);
      instConstraintVisitor0.setFrame(frame1);
      FLOAD fLOAD0 = new FLOAD(2);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      Frame frame2 = new Frame(localVariables1, operandStack1);
      frame2.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "StackMapTable");
      Frame frame3 = new Frame(2250, 1);
      instConstraintVisitor0.setFrame(frame1);
      FCMPL fCMPL0 = null;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGE((IF_ICMPGE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vg;ut5I`w_R9", true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C((I2C) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LLOAD lLOAD0 = new LLOAD(687);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(lLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LLOAD constraint violated: Read-Access on local variable 687 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2D i2D0 = new I2D();
      ObjectType objectType0 = new ObjectType("JU");
      OperandStack operandStack0 = new OperandStack(56, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      instConstraintVisitor0.setFrame(frame0);
      FLOAD fLOAD0 = new FLOAD(2);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type 'JU'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte)105;
      byteArray0[4] = (byte)127;
      byteArray0[5] = (byte) (-1);
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 2250;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2250);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2250);
      LocalVariables localVariables0 = new LocalVariables(2250);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2250, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2250);
      LXOR lXOR0 = new LXOR();
      LXOR lXOR1 = new LXOR();
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2226);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(69);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("(q|SLRd!0S");
      OperandStack operandStack0 = new OperandStack(1997, objectType0);
      LocalVariables localVariables0 = new LocalVariables(28);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      operandStack0.push(objectType0);
      Frame frame2 = frame1.getClone();
      frame0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(q|SLRd!0S");
      DMUL dMUL0 = new DMUL();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type '(q|SLRd!0S'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 77;
      PUTFIELD pUTFIELD0 = new PUTFIELD(77);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(77);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(77);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(77, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(77);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      ConstantInteger constantInteger0 = new ConstantInteger(1024);
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      boolean boolean0 = false;
      PUSH pUSH0 = new PUSH((ConstantPoolGen) null, false);
      frame0.toString();
      InstructionList instructionList0 = new InstructionList();
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) pUTFIELD0);
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT(instructionHandle0);
      int int0 = Pattern.CASE_INSENSITIVE;
      IF_ICMPGT iF_ICMPGT1 = new IF_ICMPGT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGT(iF_ICMPGT1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPGT constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2226);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ixi@[u%,S=Oa~maMoXv");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2226);
      frame0.clone();
      LXOR lXOR0 = new LXOR();
      instConstraintVisitor0.setFrame(frame1);
      RET rET1 = new RET(2226);
      LXOR lXOR1 = new LXOR();
      LRETURN lRETURN0 = new LRETURN();
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 2239;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LocalVariables localVariables1 = new LocalVariables(5);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(69);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("(q|SLRd!0S");
      OperandStack operandStack0 = new OperandStack(69, objectType0);
      LocalVariables localVariables0 = new LocalVariables(28);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type '(q|SLRd!0S'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`wa_R9");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      OperandStack operandStack0 = new OperandStack(503, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DCMPL dCMPL0 = null;
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(3331);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKESTATIC0);
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vg;ut5I`w_R9", true);
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("tn:%n&h>SyXbBS9YKHz", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(2239);
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 2;
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      F2L f2L0 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 2239;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(2239, 2239);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      ConstantInteger constantInteger0 = new ConstantInteger(1041);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame2.equals(frame1);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      mONITORENTER0.toString(false);
      MONITORENTER mONITORENTER1 = new MONITORENTER();
      mONITORENTER1.copy();
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      MONITORENTER mONITORENTER2 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER2);
      FREM fREM0 = new FREM();
      IADD iADD0 = new IADD();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      InstructionList instructionList0 = new InstructionList(lXOR0);
      InstructionList instructionList1 = instructionList0.copy();
      InstructionHandle instructionHandle0 = instructionList1.getStart();
      instructionList1.insert(instructionHandle0, (Instruction) aNEWARRAY0);
      IFNONNULL iFNONNULL0 = new IFNONNULL(instructionHandle0);
      instConstraintVisitor0.visitIFNONNULL(iFNONNULL0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      ObjectType objectType1 = ObjectType.getInstance("B^bBh:W`h`\"-I(");
      localVariables0.getClone();
      Type.getMethodSignature(objectType1, objectType1.NO_ARGS);
      OperandStack operandStack1 = new OperandStack(115, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(67);
      DDIV dDIV0 = new DDIV();
      ANEWARRAY aNEWARRAY1 = new ANEWARRAY(2239);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      ConstantInteger constantInteger0 = new ConstantInteger(2239);
      LRETURN lRETURN0 = new LRETURN();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type .
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(69);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("(q|SLRd!0S");
      OperandStack operandStack0 = new OperandStack(69, objectType0);
      LocalVariables localVariables0 = new LocalVariables(28);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U");
      DMUL dMUL0 = new DMUL();
      OperandStack operandStack1 = new OperandStack(815, objectType0);
      Frame frame3 = new Frame(localVariables0, operandStack1);
      IUSHR iUSHR0 = new IUSHR();
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type '(q|SLRd!0S'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      ConstantInteger constantInteger0 = new ConstantInteger(1041);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      Frame frame3 = new Frame(localVariables0, operandStack0);
      frame3.toString();
      frame2.getClone();
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vg;ut5I`w_R9");
      ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack1 = new OperandStack(2239, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/tn:%n&h5>SyXbBS9YKHz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "    InstructionHandle ih_");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(3580);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      mONITORENTER0.toString(false);
      MONITORENTER mONITORENTER1 = new MONITORENTER();
      mONITORENTER1.copy();
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      MONITORENTER mONITORENTER2 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      FREM fREM0 = new FREM();
      ASTORE aSTORE0 = new ASTORE(1092);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      LALOAD lALOAD0 = new LALOAD();
      NEW nEW0 = new NEW(1092);
      ALOAD aLOAD0 = new ALOAD(217);
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      LocalVariables localVariables0 = new LocalVariables(149);
      localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.toString();
      ObjectType objectType0 = ObjectType.getInstance("Jw 7fJ]MY~L.DK-*N");
      OperandStack operandStack0 = new OperandStack(149, objectType0);
      ObjectType.getInstance("x");
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.visitPOP((POP) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB((FSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = ObjectType.getInstance("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType1 = ObjectType.getInstance("B^bBh:W`h`\"-I(");
      LocalVariables localVariables2 = new LocalVariables(5);
      Type.getMethodSignature(objectType1, objectType1.NO_ARGS);
      OperandStack operandStack1 = new OperandStack(115, objectType0);
      operandStack1.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame2 = frame1.getClone();
      Frame frame3 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame2);
      FLOAD fLOAD0 = new FLOAD(17);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      ASTORE aSTORE0 = new ASTORE(17);
      aSTORE0.toString(true);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      F2L f2L0 = new F2L();
      D2L d2L0 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(676);
      ObjectType objectType0 = new ObjectType("-HDqX#]j077cE\u0000");
      OperandStack operandStack0 = new OperandStack(132, objectType0);
      Frame frame0 = new Frame(676, 676);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = frame1.getClone();
      operandStack0.equals(frame0);
      frame2.equals(frame0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      LXOR lXOR0 = new LXOR();
      F2I f2I0 = new F2I();
      F2I f2I1 = new F2I();
      LALOAD lALOAD0 = new LALOAD();
      LNEG lNEG0 = new LNEG();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type '-HDqX#]j077cE\u0000'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      localVariables0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Illegal type for StackMapType: ");
      ObjectType objectType0 = ObjectType.getInstance(",swv0Q!VNff#1");
      OperandStack operandStack0 = new OperandStack(176, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INEG constraint violated: The value at the stack top is not of type 'int', but of type ',swv0Q!VNff#1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 2239;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      localVariables0.toString();
      ObjectType objectType0 = ObjectType.getInstance(",swv0.Q!VNff#1");
      int int1 = 176;
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      RETURN rETURN0 = new RETURN();
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type ',swv0.Q!VNff#1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(2239);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y");
      ObjectType objectType0 = new ObjectType("y");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      ConstantInteger constantInteger0 = new ConstantInteger(2239);
      LXOR lXOR0 = new LXOR();
      ILOAD iLOAD0 = new ILOAD(1591);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.visitILOAD(iLOAD0);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type 'y'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2226);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      int int0 = 115;
      OperandStack operandStack1 = new OperandStack(147, objectType0);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame1.getClone();
      Frame frame3 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FLOAD fLOAD0 = new FLOAD(115);
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "ixi@[u%,S=Oa~maMoXv");
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      F2I f2I0 = new F2I();
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 2239;
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      int int1 = 2065;
      DADD dADD0 = new DADD();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type 'vg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      LocalVariables localVariables0 = new LocalVariables(2239);
      String string0 = localVariables0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      ObjectType objectType0 = ObjectType.getInstance(",swv0Q!VNff#1");
      OperandStack operandStack0 = new OperandStack(176, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FLOAD fLOAD0 = new FLOAD(2198);
      localVariables0.getClone();
      FRETURN fRETURN0 = new FRETURN();
      LSTORE lSTORE0 = new LSTORE(2198);
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP(dUP0);
      RET rET0 = new RET(2239);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2239
         //
         verifyException("org.apache.bcel.verifier.structurals.LocalVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2226);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      F2I f2I0 = new F2I();
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      InstConstraintVisitor instConstraintVisitor2 = new InstConstraintVisitor();
      instConstraintVisitor2.setFrame(frame1);
      instConstraintVisitor0.visitPOP((POP) null);
      OperandStack operandStack1 = new OperandStack((-234));
      InstConstraintVisitor instConstraintVisitor3 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM((DREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(54);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("(q|SLRd!0S");
      OperandStack operandStack0 = new OperandStack(1997, objectType0);
      LocalVariables localVariables0 = new LocalVariables(28);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame frame2 = frame1.getClone();
      frame0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(q|SLRd!0S");
      DMUL dMUL0 = new DMUL();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.visitISTORE((ISTORE) null);
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor2 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type '(q|SLRd!0S'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 2226;
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      F2I f2I0 = new F2I();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type 'ixi@[u%,S=Oa~maMoXv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2226);
      LocalVariables localVariables0 = new LocalVariables(2226);
      ObjectType objectType0 = ObjectType.getInstance("ixi@[u%,S=Oa~maMoXv");
      OperandStack operandStack0 = new OperandStack(2226, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'ixi@[u%,S=Oa~maMoXv' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2D i2D0 = new I2D();
      ObjectType objectType0 = new ObjectType("JU");
      OperandStack operandStack0 = new OperandStack(56, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = new OperandStack(56, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      instConstraintVisitor0.setFrame(frame0);
      DASTORE dASTORE0 = new DASTORE();
      operandStack1.merge(operandStack0);
      operandStack0.equals(dASTORE0);
      FLOAD fLOAD0 = new FLOAD(2);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      localVariables0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD((GETFIELD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      localVariables0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      ObjectType objectType0 = new ObjectType("vg;ut5I`w_R9");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(2239, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(2239);
      LXOR lXOR0 = new LXOR();
      OperandStack operandStack1 = new OperandStack(2239, objectType0);
      ObjectType.getInstance("R7KBU4ul");
      Frame frame2 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      D2F d2F0 = new D2F();
      F2D f2D0 = new F2D();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-124);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH((LOOKUPSWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PUTFIELD pUTFIELD0 = new PUTFIELD(2239);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(2239);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2239);
      OperandStack operandStack0 = new OperandStack(2239);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("B^bBh:W`h`\"-I(");
      localVariables0.getClone();
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = frame0.getClone();
      Frame frame3 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      FLOAD fLOAD0 = new FLOAD(5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame2);
      frame1.getClone();
      ATHROW aTHROW0 = new ATHROW();
      ALOAD aLOAD0 = new ALOAD(16);
      ISHL iSHL0 = new ISHL();
      IREM iREM0 = new IREM();
      CHECKCAST cHECKCAST0 = new CHECKCAST(16);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ISHR iSHR0 = new ISHR();
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitDDIV((DDIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
