/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:26:31 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]JAJLEZI)UM");
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.endPosition();
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-963));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("9", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(1929);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token4);
      XPathLexer xPathLexer2 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(19, int0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("F", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("A", token7.getTokenText());
      
      xPathLexer1.and();
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer3.consume(1929);
      XPathLexer xPathLexer4 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer1.currentPosition();
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("op()&UYv[i2uk\"f,nU");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals("&", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.relationalOperator();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.setXPath("V*");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uUiMPDJXp;9^&gXE!");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("iMPDJXp", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("onev'>D,$D63DPdv:A");
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("onev'>D,$D63DPdv:A");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer1.getXPath();
      xPathLexer2.endPosition();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.consume(1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.consume(1779);
      xPathLexer0.notEquals();
      char char0 = '_';
      xPathLexer0.isIdentifierStartChar('_');
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer2.mod();
      String string0 = "Ha.Hi";
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zjp/%Vn]imJLEZ8)6M");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.star();
      xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SOy8!AK8>f,(8Ud8");
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.S=%Lth(QY");
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(2767);
      xPathLexer1.leftBracket();
      xPathLexer0.consume();
      assertEquals("m!1T.S=%Lth(QY", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RPeTN)FWOdRj");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.comma();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.or();
      xPathLexer1.minus();
      xPathLexer1.consume();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer1.dollar();
      xPathLexer1.whitespace();
      token0.toString();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken((Token) null);
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.star();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Gq=D=1>O:6;8?");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.not();
      assertEquals("=", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (4) (q)", string0);
      
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath(">>nV#CD <");
      XPathLexer xPathLexer1 = new XPathLexer("Kj?\">5Ys-");
      xPathLexer0.operatorName();
      Token token4 = xPathLexer1.doubleColon();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("?\">5Ys-", token5.getTokenText());
      
      String string1 = token4.toString();
      assertEquals("[ (19) (Kj)", string1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.currentPosition();
      xPathLexer0.whitespace();
      xPathLexer0.consume(9);
      assertEquals("5Op/dQR;P<Z", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      xPathLexer0.setXPath("#}]Z8^m");
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-640));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "$1nvmYVpL-";
      XPathLexer xPathLexer0 = new XPathLexer("$1nvmYVpL-");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer1.getPreviousToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7gVn]fAJAEZ)UM");
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer1.minus();
      xPathLexer1.leftParen();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.currentPosition();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K,9R1e");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(",9", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("R", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("1", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("e", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('w');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";|Cq.h!");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(";|", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("C", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("q.h", token2.getTokenText());
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.comma();
      assertEquals("!", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.setXPath("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.={L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer1.or();
      xPathLexer1.or();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer2.getPreviousToken();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.not();
      xPathLexer1.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-14));
      xPathLexer2.getXPath();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.setXPath(">>nV#CD <");
      XPathLexer xPathLexer2 = new XPathLexer(">>nV#CD <");
      Token token2 = xPathLexer2.equals();
      assertEquals(">", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals(">>", token3.getTokenText());
      
      xPathLexer2.operatorName();
      xPathLexer2.div();
      Token token4 = xPathLexer0.nextToken();
      String string0 = token4.toString();
      assertEquals(15, token4.getTokenType());
      assertEquals("[ (15) (nV)", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(") (");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.setXPath(") (");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      String string0 = xPathLexer3.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ag9d=*|F+GGT=^w)&z\"");
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.LA((-1));
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      token0.toString();
      xPathLexer0.div();
      xPathLexer1.colon();
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.or();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("5Op/dQR;P<Z");
      xPathLexer1.star();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.minus();
      XPathLexer xPathLexer3 = new XPathLexer("2xOI");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("5Op/dQR;P<Z");
      xPathLexer4.and();
      xPathLexer3.or();
      String string0 = null;
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("op()&UYv[i2uk\"f,nU");
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.getXPath();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")c9:5Bn@dJ^HMF");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("c9", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W:#>|o$K`+Z]!a\"");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("98L)j^&~Eh7jKHm");
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<8gr:2Ds(*Mj`\"");
      xPathLexer0.relationalOperator();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("<8gr:2Ds(*Mj`\"");
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      xPathLexer0.number();
      int int0 = (-1306);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.={L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer2.identifier();
      String string0 = null;
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*,'3d)ujn^r?cHWP");
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.S=%Lth(QY");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      Token token1 = xPathLexer0.minus();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.consume(169);
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.consume(1);
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<9h4p>&j4c ^F`");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.leftBracket();
      xPathLexer2.identifier();
      xPathLexer1.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      String string0 = ") (";
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      token0.toString();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.at();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("`{y?{ '3h=a]zyYs,C");
      Token token0 = xPathLexer4.nextToken();
      assertEquals("`{y?{ '3h=a]zyYs,C", token0.getTokenText());
      
      Token token1 = xPathLexer3.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer2.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("39,-c7!`bpmjr3O");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(",", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath("39,-c7!`bpmjr3O");
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("3", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("9", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(",", token5.getTokenText());
      
      String string0 = token4.toString();
      assertEquals("[ (15) ()", string0);
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("-c", token6.getTokenText());
      
      xPathLexer0.minus();
      xPathLexer0.setXPath("b3l8_m");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('X');
      assertTrue(boolean0);
      
      xPathLexer0.setPreviousToken(token4);
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("b", token7.getTokenText());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V*");
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("16:ed%EFWG>sN!E~");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vku");
      Token token0 = xPathLexer0.plus();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.star();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<8gr:2Ds(*Mj`\"");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("<8gr:2Ds(*Mj`\"");
      xPathLexer1.identifier();
      Token token1 = xPathLexer0.pipe();
      assertEquals("8", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("gr", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("<", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals("8", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'G,l+?O_%' 3;#g/0");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-97));
      xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.endPosition();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z]Kjp/%Vn]imJLEZ8)6M");
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("=");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("z]Kjp/%Vn]imJLEZ8)6M");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer1.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.star();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uqBD,1>O:6;8");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (21) (u)");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("uqBD,1>O:6;8");
      xPathLexer3.operatorName();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E_,290");
      XPathLexer xPathLexer1 = new XPathLexer("E_,290");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("E", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("E_", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.minus();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("%UKCE");
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.whitespace();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      xPathLexer2.dollar();
      xPathLexer0.whitespace();
      xPathLexer1.rightParen();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer2.star();
      xPathLexer1.setXPath("");
      xPathLexer2.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.whitespace();
      xPathLexer2.not();
      token0.toString();
      xPathLexer2.mod();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-1061));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.dollar();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("|\"");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      Token token1 = xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.whitespace();
      xPathLexer0.currentPosition();
      token1.toString();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume(23);
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer2.doubleColon();
      xPathLexer0.setXPath("%UKCE");
      XPathLexer xPathLexer5 = new XPathLexer("%UKCE");
      xPathLexer4.nextToken();
      xPathLexer5.getXPath();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      xPathLexer6.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftBracket();
      XPathLexer xPathLexer8 = new XPathLexer("W2Ha,PE,d");
      Token token2 = xPathLexer8.mod();
      assertNull(token2);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&\"4a* |3S 0U>9");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("[ (26) (&)");
      xPathLexer1.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("&\"4a* |3S 0U>9");
      String string0 = xPathLexer3.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = "m!13..{L8(QY";
      XPathLexer xPathLexer0 = new XPathLexer("m!13..{L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer1.getPreviousToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("98L)j^&~Eh7jKHm");
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "r wRM#8ZbE:-`9?{jP4";
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1306));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.leftParen();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setXPath("L<V;A=0h_KFZkOq)");
      xPathLexer4.mod();
      xPathLexer4.operatorName();
      xPathLexer4.setPreviousToken((Token) null);
      assertNotSame(xPathLexer4, xPathLexer0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.dots();
      assertEquals("O", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(11, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("5Op/dQR;P<Z");
      xPathLexer3.setXPath("5Op/dQR;P<Z");
      xPathLexer3.mod();
      xPathLexer2.operatorName();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("p", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h-K");
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("2xOI");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer3.mod();
      xPathLexer1.leftBracket();
      xPathLexer2.leftBracket();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.setXPath("W{@#");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("W", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("{@#", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      xPathLexer0.minus();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.currentPosition();
      xPathLexer0.whitespace();
      xPathLexer0.consume(7);
      assertEquals("5Op/dQR;P<Z", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("op()&UYv[i2uk\"f,nU");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      assertNotNull(token3);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.setPreviousToken(token1);
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('p');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      Token token0 = xPathLexer4.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R-:t:,em^m");
      Token token0 = xPathLexer0.star();
      assertEquals("R", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("-", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertNotNull(token2);
      assertEquals("t", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals(",e", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d>]?@66R/T?CraC8f{");
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@F1W95YdP $$)K#V");
      xPathLexer0.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F1W95YdP", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-c[d/j");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.identifier();
      token1.toString();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (16) (c)", string0);
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.pipe();
      assertEquals("d", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("j", token5.getTokenText());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("[ (16) (c)");
      xPathLexer0.relationalOperator();
      xPathLexer0.getXPath();
      xPathLexer0.number();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nev'>D,$D63DPdv|:A");
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("nev'>D,$D63DPdv|:A");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer1.getXPath();
      xPathLexer2.endPosition();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.consume(0);
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume(0);
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals("n", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("]", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      xPathLexer0.setXPath("$eyjxPkxz55.L");
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.setXPath("");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("$", token6.getTokenText());
      
      xPathLexer1.consume(0);
      xPathLexer2.and();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("]:Y)va(r[");
      xPathLexer3.currentPosition();
      Token token8 = xPathLexer3.doubleColon();
      assertEquals("]:", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals("e", token10.getTokenText());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Gq=D=1>O:6;8?");
      xPathLexer0.or();
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (-)", string0);
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("G", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.plus();
      assertEquals("D", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer2.currentPosition();
      boolean boolean0 = xPathLexer4.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&\"4a* |3S 0U>9");
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("&\"4a* |3S 0U>9");
      String string0 = xPathLexer3.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.setXPath("zj7pVn]iAJLEZ)UM");
      Token token0 = xPathLexer0.colon();
      assertEquals("z", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("j7", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("p", token2.getTokenText());
      
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.dollar();
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("_Cy>.w]X$Da8eS5Uz@");
      Token token4 = xPathLexer3.star();
      assertEquals("_", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.setXPath("mw");
      Token token5 = xPathLexer3.nextToken();
      assertEquals("Cy", token5.getTokenText());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("mw");
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer4.setXPath("]U");
      xPathLexer1.currentPosition();
      xPathLexer1.mod();
      char char0 = xPathLexer0.LA(4);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer4.pipe();
      assertEquals("]", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
      
      Token token10 = new Token(4, "mw", 4, 4);
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.isIdentifierStartChar('O');
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.getXPath();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'Y'{G4AR`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Y", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{G4AR`", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("{", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("SOy8!AK8>f,(8Ud8");
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals("S", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "-Gq=D=1>O:6;8?";
      XPathLexer xPathLexer0 = new XPathLexer("-Gq=D=1>O:6;8?");
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.not();
      token0.toString();
      token0.toString();
      xPathLexer0.doubleColon();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qV{x!ry,Z:mir");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setXPath("%WfI96");
      Token token1 = xPathLexer0.slashes();
      assertEquals("%", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("WfI96", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e1k");
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer2.consume((-54));
      xPathLexer1.LA(1);
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.and();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("UxKK ?Mb\"G@LU:b");
      Token token3 = xPathLexer3.slashes();
      assertEquals("U", token3.getTokenText());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals("xKK", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer4.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.mod();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.div();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token7 = xPathLexer9.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer3.setPreviousToken(token6);
      assertEquals(15, token6.getTokenType());
      
      Token token8 = xPathLexer8.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("UxKK ?Mb\"G@LU:b");
      boolean boolean0 = xPathLexer10.isIdentifierChar(',');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("_Cy>.w]X$Da8eS5Uz@");
      xPathLexer2.nextToken();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("mw");
      xPathLexer1.doubleColon();
      xPathLexer0.dollar();
      xPathLexer3.setXPath("]U");
      xPathLexer0.currentPosition();
      xPathLexer0.mod();
      Token token0 = xPathLexer3.pipe();
      Token token1 = xPathLexer1.leftParen();
      assertNotSame(token1, token0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("< :Ds=@1xa7rbDEdE^o");
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.LA(100);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("y`^ k?'+xV'#joH");
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<9[L>&4c ^F`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("9[", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GqBD=1>O:6;8?");
      Token token0 = xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (21) (G)");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("GqBD=1>O:6;8?");
      xPathLexer3.operatorName();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      XPathLexer xPathLexer1 = new XPathLexer("0NjM4,GW,TSAmT)._u");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("0NjM4,GW,TSAmT)._u");
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      String string0 = token1.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token2 = xPathLexer1.leftBracket();
      Token token3 = xPathLexer2.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("r wRM#8ZbE:-`9?{jP4");
      Token token4 = xPathLexer2.colon();
      assertEquals("N", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (-2) ()");
      Token token5 = xPathLexer5.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer5.setPreviousToken(token2);
      assertEquals(3, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("op()&UYv[i2uk\"f,nU");
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("nB@4@rDah/L/H");
      XPathLexer xPathLexer2 = new XPathLexer("0");
      XPathLexer xPathLexer3 = new XPathLexer("KCU");
      xPathLexer2.number();
      xPathLexer0.plus();
      xPathLexer1.setXPath("nB@4@rDah/L/H");
      xPathLexer2.and();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<9h4p>&j4c ^F`");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer1.comma();
      xPathLexer1.plus();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      String string0 = "";
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.comma();
      String string1 = null;
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")c9:5Bn@dJ^HMF");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("c9", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(":5", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals("B", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zj7pVn]iAJLEZ)UM");
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer1.leftParen();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer1.currentPosition();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "m!13..{L8(QY";
      XPathLexer xPathLexer0 = new XPathLexer("m!13..{L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer1.getPreviousToken();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer1.consume();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Nce(_?45F Uv1");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Nce", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.dots();
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals("?", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("Uv", token3.getTokenText());
      
      xPathLexer0.setXPath("Nce(_?45F Uv1");
      xPathLexer0.or();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("N", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("c", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      xPathLexer0.consume();
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("_", token7.getTokenText());
      
      Token token8 = xPathLexer0.dots();
      assertEquals("?", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("o#,LJun~s z*3cP5");
      xPathLexer1.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer1.consume(0);
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer("o#,LJun~s z*3cP5");
      xPathLexer2.consume(0);
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("#Gb0NLb{");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.star();
      xPathLexer2.setXPath("BUB^_");
      xPathLexer2.nextToken();
      xPathLexer5.setXPath("BUB^_");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.comma();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer7.identifier();
      xPathLexer9.dollar();
      XPathLexer xPathLexer10 = new XPathLexer("A");
      xPathLexer1.relationalOperator();
      xPathLexer10.minus();
      Token token0 = xPathLexer7.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-Gq=D=1>O:6;8?");
      Token token0 = xPathLexer0.dollar();
      assertEquals("-", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.div();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
      
      xPathLexer0.setXPath("[v]^'!yPSh4qzbEg\"c");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("^'!yPSh4qzbEg\"c", token4.getTokenText());
      
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.equals();
      assertEquals("'", token8.getTokenText());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("!", token9.getTokenText());
      
      Token token10 = xPathLexer2.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals("yP", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.S=%Lth(QY");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("m!1T.S=%Lth(QY");
      Token token2 = xPathLexer1.dollar();
      xPathLexer0.comma();
      xPathLexer0.currentPosition();
      xPathLexer0.setXPath("guLgRRZy|`L");
      Token token3 = xPathLexer1.nextToken();
      assertEquals("!", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("guLgRRZy|`L");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      String string0 = token2.toString();
      assertEquals("[ (26) (m)", string0);
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("g", token5.getTokenText());
      
      xPathLexer2.operatorName();
      xPathLexer0.setXPath("m!1T.S=%Lth(QY");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setPreviousToken(token2);
      Token token6 = xPathLexer2.rightParen();
      assertEquals("u", token6.getTokenText());
      
      xPathLexer1.div();
      xPathLexer0.setXPath("l9tW&9j=!,ff");
      Token token7 = xPathLexer2.nextToken();
      assertEquals("LgRRZy", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("l", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.and();
      Token token9 = xPathLexer5.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer4.or();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("9", token11.getTokenText());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.S=%Lth(QY");
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("m!1T.S=%Lth(QY");
      xPathLexer1.rightBracket();
      xPathLexer1.dollar();
      xPathLexer0.setXPath(")");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.hasMoreChars();
      xPathLexer1.setXPath("l(194FW[]5H");
      xPathLexer1.nextToken();
      xPathLexer2.setXPath("2fEI_uXxaVe|rC~");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer4.getXPath();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("2fEI_uXxaVe|rC~");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer5.identifierOrOperatorName();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer8.mod();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer5.slashes();
      Token token0 = xPathLexer5.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = "-Gq=D=1>O:6;8?";
      XPathLexer xPathLexer0 = new XPathLexer("Qs:!y{=:.");
      XPathLexer xPathLexer1 = new XPathLexer("Qs:!y{=:.");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("-Gq=D=1>O:6;8?");
      xPathLexer0.minus();
      String string1 = null;
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("H}_,s90");
      XPathLexer xPathLexer1 = new XPathLexer("H}_,s90");
      Token token0 = xPathLexer1.leftParen();
      assertEquals("H", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("}_,s90", token3.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("5Op/dQR;P<Z");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.slashes();
      String string0 = token0.toString();
      assertEquals("[ (6) (5)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (12) (p/)", string1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ").O-";
      XPathLexer xPathLexer0 = new XPathLexer(").O-");
      xPathLexer0.colon();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("onev'>D,$D63DPdv:A");
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer1.operatorName();
      xPathLexer1.setXPath("onev'>D,$D63DPdv:A");
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer1.leftParen();
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.colon();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.setXPath(">>nV#CD <");
      XPathLexer xPathLexer2 = new XPathLexer(">>nV#CD <");
      xPathLexer2.operatorName();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (9) (>)", string0);
      
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("op()&UYv[i2uk\"f,nU");
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.getXPath();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G;atIF;;5Aj8C+UPz]Q");
      xPathLexer0.div();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.equals();
      assertEquals("a", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.and();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.at();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.colon();
      assertEquals(";", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("LjX0VWtCbq");
      XPathLexer xPathLexer4 = new XPathLexer("fq+2CzD/#a");
      Token token7 = xPathLexer4.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("fq", token7.getTokenText());
      
      xPathLexer1.getXPath();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zjp/%Vn]imJLEZ8)6M");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.dollar();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (5) (z)");
      xPathLexer0.number();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer3.pipe();
      xPathLexer3.at();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer3.or();
      xPathLexer0.nextToken();
      xPathLexer2.currentPosition();
      xPathLexer0.dots();
      xPathLexer2.operatorName();
      Token token2 = xPathLexer1.relationalOperator();
      assertNull(token2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("G;atIF;;5Aj8C+UPz]Q");
      xPathLexer1.minus();
      xPathLexer1.not();
      xPathLexer1.minus();
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer1.mod();
      xPathLexer1.equals();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      xPathLexer0.at();
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.operatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = "m!1T.6{L8(QY";
      XPathLexer xPathLexer0 = new XPathLexer("m!1T.6{L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer1.identifier();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer1.at();
      xPathLexer0.plus();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("m!1T.6{L8(QY");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer1.doubleColon();
      xPathLexer3.pipe();
      xPathLexer0.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m!13..{L8(QY");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.endPosition();
      xPathLexer1.or();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer2.getXPath();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
