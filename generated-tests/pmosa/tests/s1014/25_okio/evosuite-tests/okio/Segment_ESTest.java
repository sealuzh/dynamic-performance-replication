/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 03:57:49 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-41);
      byteArray0[4] = (byte)31;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-1), 2405, false, false);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-41);
      byteArray1[1] = (byte)31;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-41);
      byteArray1[4] = (byte) (-41);
      Segment segment1 = new Segment(byteArray1, (byte) (-41), 1024, false, true);
      // Undeclared exception!
      try { 
        segment0.push(segment1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.prev.split((-1619));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      segment0.writeTo(segment1, 3111);
      assertFalse(segment0.equals((Object)segment1));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)2;
      byteArray0[0] = (byte)2;
      byte byte1 = (byte)1;
      byteArray0[1] = (byte)1;
      byte byte2 = (byte) (-54);
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte)0;
      boolean boolean0 = true;
      Segment segment0 = new Segment(byteArray0, 0, (byte)2, true, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)2;
      byteArray0[0] = (byte)2;
      byte byte1 = (byte)1;
      byteArray0[1] = (byte)1;
      byte byte2 = (byte) (-54);
      boolean boolean0 = true;
      Segment segment0 = new Segment(byteArray0, 0, (byte)2, true, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      Segment segment2 = new Segment();
      segment0.prev.unsharedCopy();
      segment0.writeTo(segment2, 0);
      segment0.sharedCopy();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-70);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)121;
      byteArray0[7] = (byte)115;
      Segment segment3 = new Segment(byteArray0, 202, 0, false, false);
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment1.writeTo(segment1, 8192);
      segment1.writeTo(segment1, 1022);
      assertFalse(segment1.equals((Object)segment0));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      Segment segment2 = new Segment();
      segment2.writeTo(segment1, 8192);
      // Undeclared exception!
      try { 
        segment1.writeTo(segment1, 1022);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.writeTo(segment0, 8192);
      segment0.writeTo(segment0, 1022);
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
