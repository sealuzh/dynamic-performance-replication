/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 19:53:54 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2665));
      classWriter0.index = (-2665);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.am.FieldWriter", "wheel.am.FieldWriter", "wheel.am.FieldWriter", "wheel.am.FieldWriter");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2688));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2688), ".;<QDM7", ".;<QDM7", ".;<QDM7", ".;<QDM7");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2688));
      classWriter0.index = (-2343);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2688), "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2688));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2688), "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions", "RuntimeInvisibleAnnottions");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`", "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4602));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(8);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.SuffixFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4535));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "5t", "5t", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-4535);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 8, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "0ST-i=/0 UGI", "0ST-i=/0 UGI", "0ST-i=/0 UGI", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4602));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(8);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.SuffixFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation(" ", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3043));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-696), "u &c{u,", "u &c{u,", "u &c{u,", "u &c{u,");
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1114), (-1114), "<C06}LPE_bEw&?Ue", (String) null, (String) null, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3043));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-696), "u &c{u,", "u &c{u,", "u &c{u,", "u &c{u,");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      fieldWriter0.visitAnnotation(" ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3043));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-696), "u &c{u,", "u &c{u,", "u &c{u,", "u &c{u,");
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1114), (-1114), "<C06}LPE_bEw&?Ue", (String) null, (String) null, stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4602));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1169);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`", "|aQI9Q/Em;JgSB", "XR=Uw%Qax]yLZLdX`");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "??A", "??A", "n2<-LhU[Q?a?[Y", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-194));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1169, "!\"DSaJ,`e~#", "!\"DSaJ,`e~#", "", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2377), "XR=Uw%Qax]yLZLdX`", " O", "<>15X", "XR=Uw%Qax]yLZLdX`");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
