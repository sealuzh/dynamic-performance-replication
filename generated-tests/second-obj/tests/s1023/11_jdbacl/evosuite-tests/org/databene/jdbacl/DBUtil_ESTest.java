/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:33:36 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import org.apache.derby.iapi.sql.depend.ProviderList;
import org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBBlob;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("Np");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Np", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = DBUtil.existsEnvironment("_F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "px", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: px
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DBUtil.runScript("", (Connection) null, false, errorHandler0);
      boolean boolean0 = DBUtil.available((String) null, "", "mV}q: :", "mV}q: :");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "org.hsqldb.Constraint";
      String string1 = "";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Statement statement0 = null;
      DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      String string0 = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("Np", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "_F<\"e7q:afF!^\\Ih";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.query("_F<\"e7q:afF!^Ih", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "Q";
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("Q", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      String string0 = "psGwsQ";
      DBUtil.available("AFTER UPDATE", "w@Mp+_*B'wr]L<K#", "psGwsQ", "psGwsQ");
      DBUtil.resetMonitors();
      DBUtil.getOpenPreparedStatementCount();
      FBArray fBArray0 = new FBArray();
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.getAuxiliaryProviderList();
      fBArray0.getResultSet((-1547L), 0, (Map) null);
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = FBBlob.SEGMENTED;
      String[] stringArray0 = new String[19];
      stringArray0[0] = "--";
      stringArray0[1] = "--";
      stringArray0[2] = "--";
      stringArray0[3] = "~!.J*VkE9g1Uh1^|O<2";
      stringArray0[4] = "~!.J*VkE9g1Uh1^|O<2";
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("--", level0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.runScript("--", ") or wrong URL format (", '&', (Connection) proxy0, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.available("AFTER UPDATE", "w@Mp+_*B'wr]L<K#", "psGwsQ", "psGwsQ");
      DBUtil.resetMonitors();
      DBUtil.getOpenPreparedStatementCount();
      FBArray fBArray0 = new FBArray();
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      ProviderList providerList0 = new ProviderList();
      String string0 = "9S.^zwb`&";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("9S.^zwb`&", "9S.^zwb`&", "w@Mp+_*B'wr]L<K#", "w@Mp+_*B'wr]L<K#");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 9S.^zwb`& failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("~!.J*VkE9g1Uh1^|O<2", (DBSchema) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "~!.J*VkE9g1Uh1^|O<2";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "~!.J*VkE9g1Uh1^|O<2", false, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBUniqueConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '~!.J*VkE9g1Uh1^|O<2' not found in table '~!.J*VkE9g1Uh1^|O<2'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = true;
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Level level0 = Level.trace;
      String string0 = "--Np 7";
      ErrorHandler errorHandler0 = new ErrorHandler("--Np 7", level0);
      DBUtil.runScript("--_F<\"e7q:afF!^Ih", (Connection) null, true, errorHandler0);
      String string1 = "TEMPORARY ";
      // Undeclared exception!
      try { 
        DBUtil.queryLong("TEMPORARY ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Np", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("USQ@/j");
      String string0 = "getDistinctScalarAggregateResultSet";
      // Undeclared exception!
      try { 
        DBUtil.runScript("USQ@/j", "USQ@/j", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: USQ@/j
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-43);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)71;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      DBUtil.createLoggingStatementHandler((Statement) null, true);
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DBUtil.runScript("", (Connection) null, false, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "Gp", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.close((ResultSet) simpleResultSet0);
      assertEquals(0, simpleResultSet0.getRow());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = FBBlob.SEGMENTED;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--", (DBSchema) null);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase((String) null, "--", (VersionNumber) null);
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(defaultDatabase0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBUtil.escape("ySh=!");
      DBUtil.escape("ySh=!");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ySh=!";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "ySh=!";
      stringArray0[2] = "ySh=!";
      stringArray0[3] = "ySh=!";
      stringArray0[4] = "ySh=!";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "ySh=!", false, stringArray0);
      dBPrimaryKeyConstraint0.setTable(defaultDBTable0);
      DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      String string0 = "X0Y69.S";
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("ySh=!", "ySh=!", "X0Y69.S");
      JdbcConnectionPool.create("--Gp2 7", "+jX~f", "ySh=!");
      // Undeclared exception!
      try { 
        jdbcConnectionPool0.getConnection("ySh=!", "ySh=!");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.jdbcx.JdbcConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "psGwsQ";
      DBUtil.available("AFTER UPDATE", "w@Mp+_*B'wr]L<K#", "psGwsQ", "psGwsQ");
      DBUtil.resetMonitors();
      DBUtil.getOpenPreparedStatementCount();
      FBArray fBArray0 = new FBArray();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("psGwsQ", (String) null, "AFTER UPDATE", "w@Mp+_*B'wr]L<K#");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("");
      try { 
        DBUtil.getMetaData((Connection) null, "----_F<\"e7q:afF!^Ih", "$ xZC'LZ6DI", true, true, true, true, "----", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
