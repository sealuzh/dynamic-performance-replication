/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 10:24:19 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.Writer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1264, 1264, fieldTypeLong0.DOUBLE, 1264, 1264, byteArray0, byteOrder0, 1264);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3703), (-2702), fieldTypeLong0, 4L, (byte) (-105), byteArray0, byteOrder0, (byte) (-105));
      String string0 = tiffField0.getValueDescription();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-105), tiffField0.getOffset());
      assertEquals((-2702), tiffField0.getDirectoryType());
      assertEquals((-3703), tiffField0.getTag());
      assertEquals((-105), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37396, 2073, fieldTypeByte0, 1672L, 1L, (byte[]) null, byteOrder0, 42);
      tiffField0.getTag();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[295];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Float.BYTES;
      TiffField tiffField0 = new TiffField((-1459), 9, fieldTypeFloat0, 4, (byte)92, byteArray0, byteOrder0, 104);
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis((-1588L));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-119);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2930L, 2930L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2930, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2930L, tiffField0.getCount());
      assertEquals(2930, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "U~xZY!/0$");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 13560L, 13560L, byteArray0, byteOrder0, 380);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(108480, tiffField0.getBytesLength());
      assertEquals(13560, tiffField0.getOffset());
      assertEquals(13560L, tiffField0.getCount());
      assertEquals(380, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)117;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)117, 32, fieldTypeByte0, (byte)117, 32L, byteArray0, byteOrder0, 32);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4908ceb2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50970, (byte) (-105), fieldTypeLong0, (byte) (-105), 50970, (byte[]) null, byteOrder0, 20);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      int int0 = tiffField0.getBytesLength();
      assertEquals((-105), tiffField0.getDirectoryType());
      assertEquals((-420), int0);
      assertEquals(50970, tiffField0.getTag());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(50970, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      TiffField tiffField0 = new TiffField(64, 50, fieldTypeLong0, 64, 64, byteArray0, (ByteOrder) null, (-135));
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getOffset());
      assertEquals((-135), tiffField0.getSortHint());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(64, tiffField0.getTag());
      assertEquals(64L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, (byte) (-42));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-42), (-3039));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, (byte) (-42));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-42), (byte) (-42));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50, tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)58;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeLong0, 17, (-48L), byteArray0, byteOrder0, 912);
      String string0 = tiffField0.getTagName();
      assertEquals(912, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x11)", string0);
      assertEquals((-48), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1456, (-2229), fieldTypeFloat0, (-2229), (-2229), byteArray0, byteOrder0, (-2229));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2229), int0);
      
      long long0 = tiffField0.getCount();
      assertEquals((-2229L), long0);
      assertEquals(1456, tiffField0.getTag());
      assertEquals((-2229), tiffField0.getOffset());
      assertEquals((-2229), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-87);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(370, 370, fieldTypeRational0, 370, 1L, byteArray0, byteOrder0, 370);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2960, tiffField0.getBytesLength());
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(370, tiffField0.getTag());
      assertEquals(370L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(370, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)93;
      TiffField tiffField0 = new TiffField(389, 19, fieldTypeAscii0, 7342L, 2147483647L, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(389, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(7342, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Object object0 = new Object();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Float.BYTES;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)23, 4, fieldTypeLong0, 1L, 4, byteArray0, byteOrder1, 1417);
      tiffField0.dump();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1417, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(23, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3057, 3057, fieldTypeLong0, 3057, 3057, byteArray0, byteOrder0, 119);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("3057 (0xbf1: Unknown Tag): ", string0);
      
      tiffField0.getFieldTypeName();
      assertEquals(3057, tiffField0.getDirectoryType());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(3057, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2143127697, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeShort0, 17, 2143127697, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@12b818c7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[27];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1990, (String) null);
      TiffField tiffField0 = new TiffField(34850, 34850, fieldTypeShort0, 5160L, 25, byteArray0, byteOrder0, (-2519));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(34850, tiffField0.getDirectoryType());
      assertEquals((-2519), tiffField0.getSortHint());
      assertEquals(5160L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals(10320, tiffField0.getBytesLength());
      assertEquals(34850, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2017, 775, fieldTypeByte0, 4L, 1L, byteArray0, byteOrder0, 2017);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@466cc8f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)20;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2289, 2289, fieldTypeLong0, 2289, 2289, byteArray0, byteOrder0, 65002);
      tiffField0.getIntArrayValue();
      assertEquals(9156, tiffField0.getBytesLength());
      assertEquals(65002, tiffField0.getSortHint());
      assertEquals(2289, tiffField0.getDirectoryType());
      assertEquals(2289, tiffField0.getOffset());
      assertEquals(2289, tiffField0.getTag());
      assertEquals(2289L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1264, 1264, fieldTypeLong0.DOUBLE, 1264, 1264, byteArray0, byteOrder0, 1264);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5981d89c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(339, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte) (-55);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeByte0, 339, (-3231L), byteArray0, byteOrder0, 406);
      String string0 = tiffField0.getTagName();
      assertEquals(339, tiffField0.getDirectoryType());
      assertEquals((-3231), tiffField0.getOffset());
      assertEquals(406, tiffField0.getSortHint());
      assertEquals("SampleFormat", string0);
      assertEquals(339, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[41];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      int int0 = Long.BYTES;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField((-1654), 8, fieldTypeFloat0.DOUBLE, 8, (-2076), byteArray0, byteOrder0, (-2076));
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-1654), tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals((-2076), tiffField0.getSortHint());
      assertEquals((-2076), tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[400];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Object object0 = new Object();
      ByteOrder.nativeOrder();
      int int0 = Float.BYTES;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, (byte) (-26), fieldTypeFloat0, 4, (byte)105, byteArray0, byteOrder1, (byte) (-26));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(105, tiffField0.getOffset());
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown: ");
      ByteOrder.nativeOrder();
      int int0 = Long.BYTES;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "Unknown: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (byte)50, fieldTypeShort0, 50, (-2304L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getValueDescription();
      Byte byte0 = new Byte((byte)50);
      assertEquals((byte)50, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)93;
      TiffField tiffField0 = new TiffField(389, 19, fieldTypeAscii0, 7332L, 2147483647L, byteArray0, (ByteOrder) null, (byte)12);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7332, tiffField0.getBytesLength());
      assertEquals(389, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte) (-3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 2717, fieldTypeRational0, 2717, 44, byteArray0, byteOrder0, 2717);
      tiffField0.getDoubleArrayValue();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      try { 
        fieldTypeRational0.writeData(mockMinguoDate0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@f862fbb (org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte) (-39);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1745), (-1745), fieldTypeByte0, 1L, 3708L, byteArray0, byteOrder0, (byte)21);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(3708, tiffField0.getOffset());
      assertEquals((-1745), tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals((-1745), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte) (-103);
      TiffField tiffField0 = new TiffField(2547, 2547, fieldTypeLong0, 2547, 204L, byteArray0, (ByteOrder) null, (byte)82);
      tiffField0.getIntValueOrArraySum();
      assertEquals(82, tiffField0.getSortHint());
      assertEquals(2547, tiffField0.getTag());
      assertEquals(204, tiffField0.getOffset());
      assertEquals(10188, tiffField0.getBytesLength());
      assertEquals(2547, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-69);
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte) (-37);
      byteArray0[6] = (byte) (-115);
      byteArray0[8] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 3033L, byteArray0, byteOrder0, (byte) (-37));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getTag());
      assertEquals(74, tiffField0.getBytesLength());
      assertEquals(3033, tiffField0.getOffset());
      assertArrayEquals(new int[] {39578, 47948, 56251, 141}, intArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)66;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)86;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41488, 2463, fieldTypeByte0, 1L, 2463, byteArray0, byteOrder0, (-300));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2463, tiffField0.getDirectoryType());
      assertEquals((-300), tiffField0.getSortHint());
      assertEquals(41488, tiffField0.getTag());
      assertEquals(2463, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-4025), 2143127697, fieldTypeShort0, 960L, 2147483647L, byteArray0, byteOrder0, 3519);
      tiffField0.getDoubleArrayValue();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 36;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2135351002, 2135351002, fieldTypeAscii0, 2135351002, 2135351002, byteArray0, byteOrder0, 5);
      ByteOrder.nativeOrder();
      tiffField0.getStringValue();
      ByteOrder.nativeOrder();
      try { 
        FieldType.getFieldType(2135351002);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 2135351002 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[400];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Object object0 = new Object();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeLong fieldTypeLong1 = FieldType.SLONG;
      Object object1 = new Object();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("DigitalZoomRatio");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      mockPrintWriter0.flush();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("DigitalZoomRatio");
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(973, 3, fieldTypeFloat0, 1L, 435L, byteArray0, byteOrder0, 28);
      tiffField0.getDoubleArrayValue();
      assertEquals(973, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(435, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1653, 45, fieldTypeFloat0.ASCII, 2629L, 1223L, byteArray0, byteOrder1, 45);
      tiffField0.toString();
      int int0 = tiffField0.getSortHint();
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(2629, tiffField0.getBytesLength());
      assertEquals(45, int0);
      assertEquals(1653, tiffField0.getTag());
      assertEquals(1223, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)29;
      byteArray0[7] = (byte)113;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(501, 501, fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, (byte) (-89));
      tiffField0.getIntArrayValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(501, tiffField0.getTag());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(501, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte) (-128);
      TiffField tiffField0 = new TiffField(4215, 4215, fieldTypeRational0, (-2147483648L), 4215, byteArray0, (ByteOrder) null, 21);
      assertEquals(0, tiffField0.getBytesLength());
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(4215, tiffField0.getDirectoryType());
      assertEquals(4215, tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(4215, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      int int0 = 65106;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65106, "");
      byte byte0 = (byte) (-87);
      byte byte1 = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-2960), fieldTypeRational0, (byte)13, (-3023L), byteArray0, byteOrder0, (-2960));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(4041, "");
      TiffField tiffField0 = new TiffField((-207), (-2147212397), fieldTypeByte0, 2147483647L, (-207), byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getValueDescription();
      assertEquals(5, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2147212397), tiffField0.getDirectoryType());
      assertEquals((-207), tiffField0.getTag());
      assertEquals((-207), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[400];
      String string0 = "QIT\\u";
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(71, string0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)28, 2557, fieldTypeShort0, 370L, (-2266L), byteArray0, byteOrder0, 38);
      String string1 = tiffField0.getValueDescription();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2266), tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (200)", string1);
      assertNotNull(string1);
      assertEquals(2557, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2638, 10, fieldTypeFloat0, 255L, 0L, byteArray0, byteOrder0, 2638);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2638, tiffField0.getSortHint());
      assertEquals(2638, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[400];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(325, 973, fieldTypeLong0, 973, 0L, byteArray0, byteOrder0, 325);
      tiffField0.dump();
      String string0 = "";
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Object object0 = new Object();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Short.BYTES;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!");
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeFloat0.DOUBLE, 415L, 415L, byteArray0, byteOrder2, 973);
      tiffField0.getOversizeValueElement();
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
