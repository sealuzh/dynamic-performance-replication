/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:41:57 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.CharArrayWriter;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.Writer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParser_ESTest extends JavaParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 1741;
      JavaParser.ModifierSet.removeModifier(1741, 37);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca/         java JavaParser inputfile");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      JavaParser javaParser0 = new JavaParser("         java JavaParser inputfile");
      try { 
        javaParser0.Statement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1030);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("q21\u0000%AxCmgl#CB1");
      try { 
        javaParser0.TypeArguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(484);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.DefaultValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(78);
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.ReturnStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileReader0);
      // Undeclared exception!
      try { 
        javaParser0.ReturnStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaParser0.ExplicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ExplicitConstructorInvocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("m^b-?['V`!(PVMS&<Yw");
      int int0 = javaParser0.Modifiers();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      try { 
        javaParser0.ClassOrInterfaceBodyDeclaration(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.Expression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic(11);
      try { 
        javaParser0.Block();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isProtected(38);
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'T';
      charArray0[2] = '$';
      charArray0[3] = 'p';
      charArray0[4] = '`';
      charArray0[5] = '8';
      charArray0[6] = '>';
      charArray0[7] = 'Z';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 2, 3363);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0, 12);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0, 16, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser0.Block();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 16, column 0.  Encountered: $p
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "         java JavaParser < inputfile");
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.FieldDeclaration((-930));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      try { 
        javaParser0.FormalParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      javaParser0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.FormalParameter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.CastLookahead();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int int0 = 108;
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isVolatile(108);
      JavaParser javaParser0 = new JavaParser("=:K4K=fj");
      try { 
        javaParser0.RUNSIGNEDSHIFT();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isProtected(953);
      char[] charArray0 = new char[6];
      charArray0[0] = '`';
      charArray0[1] = 'Z';
      charArray0[2] = '`';
      charArray0[3] = 'p';
      charArray0[4] = '8';
      charArray0[5] = 'p';
      CharArrayReader charArrayReader0 = null;
      try {
        charArrayReader0 = new CharArrayReader(charArray0, (-1432), 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.PackageDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("7$Ix[9~zi[V2&W=");
      try { 
        javaParser0.PostfixExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte) (-76);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)80);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ExclusiveOrExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(484);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(33);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.PrimaryPrefix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)52;
      byteArray0[2] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)52);
      byteArrayInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream1);
      // Undeclared exception!
      try { 
        javaParser0.ExclusiveOrExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".  Encountered: ");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 87);
      LineNumberReader lineNumberReader0 = new LineNumberReader(bufferedReader0);
      JavaParser javaParser0 = new JavaParser(lineNumberReader0);
      try { 
        javaParser0.TypeDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: .
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("bW'f>PxW]q%|x=");
      try { 
        javaParser0.MemberSelector();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("c_l6>:e;=");
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.WhileStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(3325);
      JavaParser javaParser0 = new JavaParser("74L,6`6[c ]2q$");
      try { 
        javaParser0.SwitchStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("NormalAnnotation");
      try { 
        javaParser0.ConstructorDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.VariableInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PrimitiveType");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileReader0);
      // Undeclared exception!
      try { 
        javaParser0.EnumConstant();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.TypeParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(484);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1048);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca/7TA=45l*|PP");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        JavaParser.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal((-2837));
      javaParser_ModifierSet0.isTransient((-2837));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "I9<OA\"Gpyq}X+%}N";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JavaParser.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.NormalAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Reader reader0 = null;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.TypeArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)17;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)77;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1578), (byte)77);
      byteArrayInputStream0.reset();
      JavaParser javaParser0 = new JavaParser("=*Ri]{XG'P");
      PipedReader pipedReader0 = new PipedReader();
      LineNumberReader lineNumberReader0 = new LineNumberReader(pipedReader0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParser0.ReInit(javaParserTokenManager0);
      try { 
        javaParser0.SwitchStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Z");
      try { 
        javaParser0.SwitchLabel();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 108;
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isVolatile(108);
      JavaParser javaParser0 = new JavaParser("=:K4K=fj");
      try { 
        javaParser0.LocalVariableDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isVolatile((-3296));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      javaParser_ModifierSet0.isStatic(76);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1587);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1587. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("m^b-?['V`!(PVMS&<Yw");
      javaParser0.getToken(1941);
      try { 
        javaParser0.TypeParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^bc9a%4Y+5iLx");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^bc9a%4Y+5iLx");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      javaParser0.TypeArgument();
      try { 
        javaParser0.ImportDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream1);
      javaParser0.CompilationUnit();
      javaParser0.ReInit((Reader) null);
      assertFalse(javaParser0.lookingAhead);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp((-1262));
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.Modifiers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      javaParser0.ReInit((InputStream) pushbackInputStream0);
      try { 
        javaParser0.PreIncrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.DoStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("AnnotationTypeDeclaration");
      try { 
        javaParser0.DoStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("\"||\"");
      Token token0 = javaParser0.jj_nt;
      javaParser0.token = null;
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1902);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ClassOrInterfaceType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp(14);
      javaParser_ModifierSet0.isAbstract(14);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      javaParser0.ReInit((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ArrayDimsAndInits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1732);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      try { 
        javaParser0.WildcardBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = JavaCharStream.staticFlag;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.SingleMemberAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(493);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.SynchronizedStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ContinueStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("rqIZ.5=Fe7f\"n");
      try { 
        javaParser0.BreakStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(78);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ResultType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      JavaParser javaParser0 = new JavaParser("+Zw.d,?Tn&7");
      try { 
        javaParser0.AnnotationTypeBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      // Undeclared exception!
      try { 
        javaParser0.AnnotationTypeBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 1030;
      PipedInputStream pipedInputStream0 = new PipedInputStream(1030);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca/7TA=45l*|PP");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      try { 
        javaParser0.PackageDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.MemberValuePairs();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      PipedInputStream pipedInputStream0 = new PipedInputStream(122);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.IfStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.TypeBound();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1355, 1355, (byte) (-6));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser0.PrimarySuffix();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1355, column 1354.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SystemInUtil.addInputLine("I");
      JavaParser javaParser0 = new JavaParser("I");
      javaParser0.ForUpdate();
      try { 
        javaParser0.SingleMemberAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1395);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.UnaryExpressionNotPlusMinus();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = 'z';
      charArray0[4] = 'z';
      charArray0[5] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      JavaParser javaParser0 = new JavaParser(bufferedReader0);
      javaParser0.InclusiveOrExpression();
      assertFalse(javaParser0.lookingAhead);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InputStream inputStream0 = null;
      char[] charArray0 = new char[1];
      charArray0[0] = '!';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.UnaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaParser0.MethodDeclaration(11);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp(1732);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.EnumDeclaration(2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1030);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.MemberValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4096, 512);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ForStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      byteArrayInputStream0.read();
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.CompilationUnit();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(33);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.CompilationUnit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ^
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.MethodDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InputStream inputStream0 = null;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileReader0);
      // Undeclared exception!
      try { 
        javaParser0.Block();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      javaParser0.Modifiers();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1732, 2087, 1732);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser1.LabeledStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      javaParser0.getToken((-1075));
      try { 
        javaParser0.EnumConstant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(1932);
      CharArrayReader charArrayReader0 = null;
      try {
        charArrayReader0 = new CharArrayReader((char[]) null, 1058, 1932);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.SingleMemberAnnotation();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u0007\" (7), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(33);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 33);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ResultType();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 82);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ResultType();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaParser javaParser0 = new JavaParser("A7TS'8(4/NYH");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser1.Literal();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ]
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.NameList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(493);
      char[] charArray0 = new char[8];
      charArray0[1] = 'k';
      charArray0[2] = '=';
      charArray0[5] = '}';
      charArray0[6] = '}';
      charArray0[7] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceType();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream1);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic(18);
      try { 
        javaParser0.ConditionalOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ArrayInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStatic(280);
      javaParser_ModifierSet0.isNative(280);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.skip(307L);
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (-69), (-3761), 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SystemInUtil.addInputLine("s[F");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -69, column -3760.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[12];
      charArray0[1] = '!';
      charArray0[2] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (-3761), 4096, 4096);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      charArrayReader0.read();
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line -3761, column 4096.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = 'P';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 2486, 97, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.StatementExpressionList();
      javaParserTokenManager0.TokenLexicalActions(javaParser0.token);
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 2486, column 100.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte) (-77);
      byteArray0[6] = (byte)90;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte) (-77);
      byteArray0[6] = (byte)90;
      byteArray0[7] = (byte)90;
      byteArray0[8] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-103), 1198);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      byteArrayInputStream0.close();
      JavaParser javaParser1 = new JavaParser("");
      // Undeclared exception!
      try { 
        javaParser0.LabeledStatement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)40);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ForStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1395);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.TypeArgument();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      String string0 = null;
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(")@| *zs@89?(5o");
      try { 
        javaParser0.ClassOrInterfaceBody(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-115);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.skip(0L);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip((-1L));
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream2.close();
      byteArrayInputStream0.close();
      JavaParser javaParser1 = new JavaParser("");
      // Undeclared exception!
      try { 
        javaParser0.LabeledStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SystemInUtil.addInputLine("Qk4{-Ljw0");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser1 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser1.TypeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1018);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ArrayDimsAndInits();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '}';
      charArray0[3] = 'y';
      charArray0[4] = 'U';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.RSIGNEDSHIFT();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.MemberSelector();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      try { 
        javaParser0.ImportDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'Q';
      charArray0[1] = 'f';
      charArray0[1] = '=';
      charArray0[3] = '$';
      charArray0[4] = 'k';
      charArray0[5] = 'n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (byte)85, '$', 99);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("s[F");
      javaCharStream0.line = 338;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 338, column 38.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = '=';
      charArray0[3] = 'f';
      charArray0[4] = 'k';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (byte)85, (-3761), 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("s[F");
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
      javaParserTokenManager0.debugStream = printStream0;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.StatementExpressionList();
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 85, column -3756.  Encountered: }
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)64;
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = 'i';
      charArray0[2] = ')';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 123, 69, (byte)64);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.StatementExpressionList();
      Token token0 = new Token();
      javaParser0.token_source.TokenLexicalActions(token0);
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 123, column 71.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.AssignmentOperator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.ClassOrInterfaceDeclaration(69);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("q21\u0000%AxCmgl#CB1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = JavaCharStream.staticFlag;
      javaParser_ModifierSet0.isAbstract(96);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("         java JavaParser < inputfile");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.PreDecrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser(",");
      try { 
        javaParser0.BooleanLiteral();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp(14);
      PipedReader pipedReader0 = new PipedReader(16);
      PushbackReader pushbackReader0 = new PushbackReader(pipedReader0, 4096);
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isSynchronized(6);
      JavaParser javaParser0 = new JavaParser("         java JavaParser inputfile");
      assertFalse(javaParser0.lookingAhead);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SystemInUtil.addInputLine("");
      JavaParser javaParser0 = new JavaParser("bma");
      try { 
        javaParser0.ForUpdate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      SystemInUtil.addInputLine("&LUL+|!\"yx");
      char[] charArray0 = new char[20];
      charArray0[0] = 'f';
      charArray0[1] = 'F';
      charArray0[2] = '~';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2609);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.EnumDeclaration(2609);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.PrimarySuffix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1774, 1774);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = null;
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.ThrowStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)52;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaParser javaParser0 = new JavaParser("8$[5J/wAN");
      try { 
        javaParser0.EmptyStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      SystemInUtil.addInputLine("&LUL+|!\"yx");
      char[] charArray0 = new char[20];
      charArray0[0] = 'f';
      charArray0[1] = 'F';
      charArray0[2] = '~';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.IfStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStatic(280);
      javaParser_ModifierSet0.isNative(280);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.CastLookahead();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = '\\';
      charArray0[2] = '=';
      charArray0[3] = '!';
      charArray0[4] = 'b';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.available = (-1221);
      // Undeclared exception!
      try { 
        javaParser0.Expression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\\\\" (92), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      charArrayReader0.read();
      // Undeclared exception!
      try { 
        javaParser0.MethodDeclarator();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      JavaParser javaParser1 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceBodyDeclaration(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      JavaParser javaParser1 = new JavaParser((JavaParserTokenManager) null);
      JavaParser javaParser2 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser2.MethodDeclaration(1490);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isProtected(38);
      char[] charArray0 = new char[8];
      charArray0[0] = 'S';
      charArray0[1] = 'T';
      charArray0[2] = 'S';
      charArray0[3] = 'p';
      charArray0[4] = '`';
      charArray0[5] = '8';
      charArray0[6] = '>';
      charArray0[7] = 'Z';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 2, 3363);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0, 12);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0, 16, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaCharStream0.nextCharInd = 1434;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaCharStream0.line = 1434;
      // Undeclared exception!
      try { 
        javaParser0.Block();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1434, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ReferenceType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte byte0 = (byte)76;
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)76);
      byteArrayInputStream0.close();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)76, (byte) (-6));
      byteArrayInputStream1.mark(85);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream1);
      try { 
        javaParser0.ReferenceType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte) (-128);
      byteArray0[6] = (byte) (-60);
      byteArray0[7] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ArrayInitializer();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("7$Ix[9~zi[V2&W=");
      try { 
        javaParser0.Arguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1774, 1774);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[1] = '/';
      charArray0[2] = '=';
      charArray0[3] = 'r';
      charArray0[4] = 'd';
      charArray0[5] = ' ';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      Token token0 = javaParser0.jj_nt;
      // Undeclared exception!
      try { 
        javaParser0.PreDecrementExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"=\" (61), after : \"\\'/\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)64, 728);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.AnnotationTypeDeclaration((byte)62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "         java JavaParser < inputfile");
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.AnnotationTypeDeclaration((-753));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1732, 1732);
      byteArrayInputStream0.close();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      char[] charArray0 = new char[3];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (-3761), 4646, 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("[am9");
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser1.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line -3761, column 4646.  Encountered: }
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      int int0 = JavaParserConstants.IN_FORMAL_COMMENT;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 15, 2087, 2322);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser((JavaParserTokenManager) null);
      // Undeclared exception!
      try { 
        javaParser0.DefaultValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Reader reader0 = null;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.WildcardBounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-60);
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 64, (byte) (-60));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.PackageDeclaration();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 64, column -60.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      charArray0[1] = 'a';
      charArray0[2] = '9';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      charArray0[3] = '*';
      charArray0[4] = '8';
      charArray0[5] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 1221, 96, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufcolumn = javaParserTokenManager0.jjnewLexState;
      charArrayReader0.read();
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.StatementExpressionList();
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1221, column 98.  Encountered: *
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = 101;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 101, 124, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      String string0 = "s[F";
      SystemInUtil.addInputLine("s[F");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser0.MultiplicativeExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 101, column 124.  Encountered: }
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      char[] charArray1 = new char[9];
      charArray1[0] = 'f';
      charArray1[1] = 'N';
      charArray1[2] = 'N';
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)74, 3);
      byteArrayInputStream1.skip(3);
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceBodyDeclaration(false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)93;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      int int0 = 5;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)93, 97);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)93, 5);
      byteArrayInputStream2.skip(0L);
      try { 
        javaParser0.ClassOrInterfaceBodyDeclaration(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ]
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[4] = 'k';
      charArray0[5] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      charArrayReader0.mark((byte)85);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1L);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ReturnStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)77;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 53);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream1);
      javaParser0.ResultType();
      try { 
        javaParser0.InclusiveOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: ?
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'L';
      charArray0[2] = 'J';
      charArray0[3] = '<';
      charArray0[3] = '<';
      charArray0[5] = '<';
      charArray0[6] = '<';
      charArray0[7] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      // Undeclared exception!
      try { 
        javaParser0.MethodDeclaration(94);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SystemInUtil.addInputLine("^mE/g%TthOm");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.TryStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ^
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      try { 
        javaParser0.ForUpdate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte) (-2);
      byteArray0[6] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(20);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        javaParser0.MemberSelector();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u001e\" (30), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int int0 = 81;
      PipedInputStream pipedInputStream0 = new PipedInputStream(81);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.CastExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(883);
      javaParser_ModifierSet0.isTransient(1410);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "i`8Cx#c";
      stringArray0[1] = "R-cFV'";
      stringArray0[2] = "";
      stringArray0[3] = "s%(l%9f4qPW";
      stringArray0[4] = "";
      JavaParser.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)52;
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('K');
      // Undeclared exception!
      try { 
        javaParser0.dump(charArrayWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SystemInUtil.addInputLine("%^f*JN?w&n");
      char[] charArray0 = new char[12];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca/tx\\YN[zI_u^;");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(24);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      // Undeclared exception!
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      byteArrayInputStream0.read(byteArray1);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)74, 3);
      byteArrayInputStream1.skip(3);
      JavaParser javaParser1 = new JavaParser("!R]E'AJt}D");
      // Undeclared exception!
      try { 
        javaParser0.TypeBound();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      char[] charArray1 = new char[9];
      charArray1[0] = 'f';
      charArray1[1] = 'N';
      charArray1[2] = 'N';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)74, 3);
      // Undeclared exception!
      try { 
        javaParser0.TypeArgument();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)112;
      SystemInUtil.addInputLine(",650!f-d ");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("AnnotationTypeDeclaration");
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaParser javaParser0 = new JavaParser("L_V!8");
      try { 
        javaParser0.ImplementsList(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      PipedReader pipedReader0 = new PipedReader();
      LineNumberReader lineNumberReader0 = new LineNumberReader(pipedReader0);
      JavaParser javaParser0 = new JavaParser(lineNumberReader0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser1.PrimitiveType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = '=';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (byte)85, (-3761), 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.UnaryExpression();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      try { 
        javaParser0.WildcardBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 85, column -3759.  Encountered: =
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      JavaParser javaParser1 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser1.CompilationUnit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1732);
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = '}';
      SystemInUtil.addInputLine("ny(Asn3WXO%/I3");
      charArray0[5] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 101, (-1700));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("s[F");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser1 = new JavaParser("R");
      try { 
        javaParser1.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 12.  Encountered: /
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1732);
      char[] charArray0 = new char[6];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = '}';
      charArray0[5] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 101, (-1700));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("s[F");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser1 = new JavaParser("R");
      try { 
        javaParser1.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 4.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)63, (-808));
      byteArrayInputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 75);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)74;
      byteArray1[2] = (byte)74;
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      // Undeclared exception!
      try { 
        javaParser1.ThrowStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1978, (-310));
      byteArrayInputStream1.skip(972777521659510784L);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      JavaParser javaParser1 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'K';
      charArray0[5] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      javaParser0.getNextToken();
      // Undeclared exception!
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = '=';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      charArray0[5] = 'n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)85;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, (byte)85, (-3761), 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("s[F");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.MultiplicativeExpression();
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 85, column -3759.  Encountered: =
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: @
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      charArray0[5] = 'N';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark((byte)85);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 57, (-3761), 3240);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.MultiplicativeExpression();
      JavaParser javaParser1 = new JavaParser("");
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 57, column -3758.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[9];
      charArray0[0] = '\u0081';
      charArray0[1] = '=';
      charArray0[2] = '!';
      charArray0[3] = 'k';
      charArray0[4] = 'o';
      charArray0[5] = '\u0081';
      charArray0[6] = '\u0081';
      charArray0[7] = '=';
      charArray0[8] = '\u0081';
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[1];
      int int0 = 6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1776), 6);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.markSupported();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      char[] charArray1 = new char[3];
      charArray1[0] = 'k';
      charArray1[1] = 'N';
      charArray1[2] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)107;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(116);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      // Undeclared exception!
      try { 
        javaParser0.ExtendsList(false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[12];
      charArray0[0] = '!';
      charArray0[1] = '!';
      charArray0[2] = '}';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(100);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.ExtendsList(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = 'R';
      charArray0[4] = 'k';
      charArray0[5] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      charArrayReader0.mark((byte)85);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[4] = (byte)92;
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      javaParser0.ReInit((Reader) charArrayReader0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic((-1730));
      try { 
        javaParser0.ExclusiveOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: :
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      String[] stringArray0 = new String[0];
      JavaParser.main(stringArray0);
      try { 
        javaParser0.UnaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ;
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'k';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "a%7!@*4";
      stringArray0[1] = "riZI";
      stringArray0[2] = "\"null\"";
      stringArray0[3] = "x7+ht<|h";
      JavaParser.main(stringArray0);
      try { 
        javaParser0.UnaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ;
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 3240, 3240, 3240);
      JavaCharStream javaCharStream1 = new JavaCharStream(charArrayReader0, (-835), (-835));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      SystemInUtil.addInputLine("ExtendsList");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.MultiplicativeExpression();
      try { 
        javaParser0.ClassOrInterfaceBodyDeclaration(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line -835, column -832.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser("L_V!8");
      javaParser0.disable_tracing();
      try { 
        javaParser0.ConditionalOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte byte0 = (byte)52;
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      char[] charArray0 = new char[4];
      charArray0[0] = 'l';
      charArray0[1] = '=';
      charArray0[2] = 'C';
      charArray0[3] = '{';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 256, 822, 1814);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      SystemInUtil.addInputLine("");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      javaParser1.MultiplicativeExpression();
      JavaParser javaParser2 = new JavaParser("MM>}<_W/6");
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 4.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-104);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-90), (byte)24);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.mark(68);
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        javaParser0.Statement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SystemInUtil.addInputLine("%^f*JN?w&n");
      char[] charArray0 = new char[12];
      charArray0[2] = 'w';
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/10_jmca/tx\\YN[zI_u^;");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte)78;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 128, 4096, 4096);
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser("txYN[zI_u^;");
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager2);
      // Undeclared exception!
      try { 
        javaParser1.DefaultValue();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 128, column 4097.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'G';
      charArray0[1] = '^';
      charArray0[2] = 'G';
      charArray0[7] = 'L';
      charArray0[4] = 'E';
      charArray0[5] = 'L';
      charArray0[6] = 'W';
      charArray0[7] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark((byte)85);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      javaParser0.ReInit((Reader) charArrayReader0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic((byte)92);
      // Undeclared exception!
      try { 
        javaParser0.ExclusiveOrExpression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E6");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 85, 1151);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufsize = (int) (byte)40;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      char[] charArray0 = new char[4];
      charArray0[0] = 'l';
      charArray0[1] = '=';
      charArray0[2] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 256, 822, 1814);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      javaParser1.MultiplicativeExpression();
      JavaParser javaParser2 = new JavaParser("MM>}<_W/6");
      // Undeclared exception!
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)52;
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char char0 = 'K';
      // Undeclared exception!
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.VariableDeclaratorId();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'f';
      charArray0[2] = '=';
      charArray0[3] = '!';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: :
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)77;
      byteArray0[1] = (byte)69;
      byteArray0[4] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 53);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream1);
      // Undeclared exception!
      try { 
        javaParser0.ConstructorDeclaration();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'L';
      charArray0[2] = 'M';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '<';
      charArray0[6] = '<';
      charArray0[7] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      javaParser0.ReInit((Reader) bufferedReader0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = javaParser0.lookingAhead;
      try { 
        javaParser0.AndExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 6.  Encountered: <<
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.Initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      char[] charArray0 = new char[4];
      charArray0[1] = '=';
      charArray0[2] = 'C';
      charArray0[3] = '{';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = 1814;
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 256, 822, 1814);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.Initializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      charArray0[4] = 'k';
      charArray0[5] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      charArrayReader0.mark((byte)85);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[4] = (byte)92;
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      // Undeclared exception!
      try { 
        javaParser0.LocalVariableDeclaration();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)64;
      char[] charArray0 = new char[4];
      charArray0[0] = 'p';
      charArray0[1] = 'i';
      charArray0[2] = ')';
      charArray0[3] = 'h';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.mark(614);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.LocalVariableDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 3.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      char[] charArray0 = new char[5];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[2] = '~';
      charArray0[3] = '~';
      charArray0[4] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)115;
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.mark(78);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader1);
      javaParser0.ReInit((Reader) charArrayReader1);
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      javaParser_ModifierSet1.isPublic(87);
      javaParser0.ExclusiveOrExpression();
      try { 
        javaParser0.PostfixExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)6;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)24;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 72, 72);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.AssertStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = 'L';
      charArray0[3] = '@';
      charArray0[3] = '@';
      charArray0[5] = '@';
      charArray0[6] = '@';
      charArray0[7] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(94);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = javaParser0.lookingAhead;
      // Undeclared exception!
      try { 
        javaParser0.VariableDeclaratorId();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'f';
      charArray0[2] = 'P';
      charArray0[3] = '!';
      charArray0[4] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      charArrayReader1.mark('!');
      charArrayReader1.ready();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser0 = new JavaParser(charArrayReader2);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      javaParser0.ReInit((Reader) charArrayReader1);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      // Undeclared exception!
      try { 
        javaParser1.MethodDeclaration(76);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = ':';
      charArray0[1] = 'f';
      charArray0[3] = '\u0000';
      charArray0[4] = 'k';
      charArray0[5] = 'k';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SystemInUtil.addInputLine("ny(Asn3WXO%/I3");
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader1, 76, (-1700));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      SystemInUtil.addInputLine("_};ovgbR.#");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser1 = new JavaParser("");
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 76, column -1700.  Encountered: :
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = 'f';
      charArray0[2] = 'R';
      charArray0[3] = '!';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0, 3240, 3240, 3240);
      JavaCharStream javaCharStream1 = new JavaCharStream(charArrayReader0, (-835), (-835));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      SystemInUtil.addInputLine("ExtendsList");
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParser0.MultiplicativeExpression();
      try { 
        javaParser0.ClassOrInterfaceDeclaration((-1122));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line -835, column -832.  Encountered: !
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("MultiplicativeExpression");
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isSynchronized(112);
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream((InputStream) null, (-426));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }
}
