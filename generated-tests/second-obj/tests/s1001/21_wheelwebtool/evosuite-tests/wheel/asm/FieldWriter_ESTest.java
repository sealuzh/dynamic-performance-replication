/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:58:22 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "T.p|", "RuntimeVisibleAnnotations", "T.p|");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "T.p|", "RuntimeVisibleAnnotations", "T.p|");
      fieldWriter0.visitAnnotation("T.p|", true);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte(2);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "T.p|", "2]}", "T.p|");
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("Signature", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte((-3016));
      ByteVector byteVector2 = byteVector1.put12(0, 1334);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "<init>", "<init>", "<init>", (Object) null);
      Attribute attribute0 = new Attribute("<init>");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      byteVector0.putByte(1);
      byteVector0.putUTF8("");
      fieldWriter0.put(byteVector0);
      System.setCurrentTimeMillis(2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute(".ZeHVY\"o=K1:i");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte((-2430));
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "T.p|", "RuntimeVisibleAnnotations", "T.p|");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      fieldWriter0.visitAnnotation("", false);
      System.setCurrentTimeMillis(36);
      int int0 = fieldWriter1.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute(".ZeHVY\"o=K1:i");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4083, ")u.F>D?6Mt1>", "4MueGS", "n?=-H", "n?=-H");
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[22];
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-326), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      String[] stringArray0 = new String[0];
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-326), "RuntimeVisibleAnnotations", "<pVg0/]pDQX2b", "]9HnB_eKX{", "RuntimeVisibleAnnotations");
      fieldWriter1.getSize();
      fieldWriter1.visitEnd();
      assertNotSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "<init>", "<init>", "-u4b", (Object) null);
      Attribute attribute0 = new Attribute("<init>");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(2);
      byteVector1.putByte(7);
      fieldWriter1.put(byteVector0);
      fieldWriter1.getSize();
      fieldWriter0.visitEnd();
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-302), "RuntimeVisibleAnnotations", "T.p|", "RuntimeVisibleAnnotations", "T.p|");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "&qFm;EE/_E7r4&";
      stringArray0[1] = "T.p|";
      stringArray0[2] = "T.p|";
      stringArray0[3] = "RuntimeVisibleAnnotations";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "T.p|";
      stringArray0[7] = "&qFm;EE/_E7r4&";
      fieldWriter0.visitAnnotation("Synthetic", false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByteArray((byte[]) null, (-3127), 4096);
      ByteVector byteVector2 = byteVector1.put12(2, 23);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
      
      fieldWriter0.visitAnnotation("Synthetic", false);
      fieldWriter0.put(byteVector1);
      classWriter0.version = (-3127);
      fieldWriter0.put(byteVector2);
      fieldWriter0.getSize();
      int int1 = fieldWriter0.getSize();
      assertEquals(46, int1);
  }
}
