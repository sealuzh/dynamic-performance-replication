/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 11:08:38 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.RegexSelector;
import us.codecraft.webmagic.selector.ReplaceSelector;
import us.codecraft.webmagic.selector.Selectable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setSkip(false);
      Page page2 = page1.setRawText(", statusCode=");
      // Undeclared exception!
      try { 
        page2.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = Page.fail();
      Json json0 = page0.getJson();
      assertNotNull(json0);
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = Page.fail();
      Object object0 = new Object();
      page0.putField("", object0);
      Page page1 = Page.fail();
      page1.getBytes();
      page0.setBytes((byte[]) null);
      Request request0 = new Request("");
      request0.getExtras();
      Request request1 = request0.setExtras((Map<String, Object>) null);
      request0.setBinaryContent(true);
      Request request2 = request1.setBinaryContent(true);
      request0.setMethod("");
      Request request3 = request2.setUrl("_cycle_tried_times");
      Request request4 = request3.setCharset("us.codecraft.webmagic.selector.Html");
      request4.setUrl("7O`=");
      page1.addTargetRequest(request4);
      page1.getStatusCode();
      page1.getRawText();
      page0.getCharset();
      page1.getTargetRequests();
      Json json0 = page1.getJson();
      // Undeclared exception!
      try { 
        json0.$("3I=U340Q ?dk|=)K$");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // $ can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).
         //
         verifyException("us.codecraft.webmagic.selector.PlainText", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setSkip(false);
      page1.setHeaders((Map<String, List<String>>) null);
      page1.toString();
      page0.setStatusCode(41);
      assertEquals(41, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getHeaders();
      page0.setHeaders((Map<String, List<String>>) null);
      String string0 = "Page{request=";
      // Undeclared exception!
      try { 
        page0.addTargetRequest("Page{request=");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = Page.fail();
      String string0 = "innerHtml";
      Page page1 = page0.setRawText("innerHtml");
      page1.getUrl();
      // Undeclared exception!
      try { 
        page1.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = new Page();
      Json json0 = page0.getJson();
      page0.setUrl(json0);
      page0.setRawText((String) null);
      String string0 = "_";
      ReplaceSelector replaceSelector0 = new ReplaceSelector("IJUlKV@m_Nd1 ", "_");
      replaceSelector0.toString();
      // Undeclared exception!
      try { 
        replaceSelector0.selectList("Smart content can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.ReplaceSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Page page0 = new Page();
      Request request0 = new Request();
      page0.setRequest(request0);
      Page page1 = page0.setSkip(true);
      page0.setHtml((Html) null);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      page0.setStatusCode(39);
      BiConsumer<Object, Object> biConsumer0 = (BiConsumer<Object, Object>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      hashMap0.forEach(biConsumer0);
      page1.setHeaders(hashMap0);
      Page page2 = page1.setRawText("I(");
      page2.getRequest();
      request0.getExtras();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)39;
      page2.setBytes(byteArray0);
      // Undeclared exception!
      try { 
        page1.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setRawText(";:Q]gTaVZdoVWPEFHn");
      page0.getJson();
      Json json0 = page1.getJson();
      assertEquals(200, page1.getStatusCode());
      assertTrue(page1.isDownloadSuccess());
      assertNotNull(json0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0);
      page0.setCharset("2JBP$)~Nd");
      page0.getTargetRequests();
      Page page1 = Page.fail();
      page1.getResultItems();
      boolean boolean0 = page1.isDownloadSuccess();
      assertFalse(boolean0);
      assertEquals(200, page1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = new Page();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0, (-1932L));
      assertEquals(200, page0.getStatusCode());
      assertTrue(page0.isDownloadSuccess());
  }
}
