/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 17:43:00 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)42;
      TiffField tiffField0 = new TiffField(42035, (byte)42, fieldTypeShort0, 9696L, (byte)42, byteArray0, byteOrder0, (byte)5);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(42, int0);
      assertEquals(42035, tiffField0.getTag());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4570), "ApertureValue");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)60, 2243, fieldTypeFloat0, 1, (-2147483648L), byteArray0, byteOrder0, (byte)60);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(60, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(2243, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-808), fieldTypeDouble0, (-808), 27, byteArray0, byteOrder0, 2605);
      tiffField0.dump();
      assertEquals((-808), tiffField0.getDirectoryType());
      assertEquals(2605, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(101, (-76), fieldTypeLong0, 1597L, 0L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-76), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1066), 0, fieldTypeShort0, 2194L, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1066), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(513, 75, fieldTypeDouble0.IFD, 3590L, 75, byteArray0, byteOrder0, 75);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(75, tiffField0.getOffset());
      assertEquals(513, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(75, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-60));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-60), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3022), 50733, fieldTypeShort0.SBYTE, 3528L, 1664L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-3022), int0);
      assertEquals(50733, tiffField0.getDirectoryType());
      assertEquals(1664, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)72;
      TiffField tiffField0 = new TiffField(1461, 1461, fieldTypeLong0.ASCII, 258, 258, byteArray0, byteOrder0, 1232);
      String string0 = tiffField0.getStringValue();
      assertEquals(1461, tiffField0.getTag());
      assertEquals(1232, tiffField0.getSortHint());
      assertEquals(1461, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(258, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 2146646422, fieldTypeDouble0, (byte)0, 501L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(2146646422, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(501, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(646, "Unknown value: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(0, (-2627), fieldTypeFloat0.RATIONAL, 646, (-2627), byteArray0, byteOrder0, 2147076078);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147076078, int0);
      assertEquals((-2627), tiffField0.getOffset());
      assertEquals((-2627), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2775), (-2775), fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals((-2775), tiffField0.getDirectoryType());
      assertEquals((-2775), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1817), "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1817), 4, fieldTypeRational0, 0L, 4, byteArray0, byteOrder0, (byte)18);
      int int0 = tiffField0.getOffset();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1817), tiffField0.getTag());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-55);
      TiffField tiffField0 = new TiffField((-1548), (byte) (-26), fieldTypeLong0, 101, (-2975L), byteArray0, byteOrder0, 1172);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2975), tiffField0.getOffset());
      assertEquals(1172, tiffField0.getSortHint());
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-1548), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)43;
      TiffField tiffField0 = new TiffField(9, 2144815966, fieldTypeRational0, 3164L, 602, byteArray0, byteOrder0, 370);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2144815966, tiffField0.getDirectoryType());
      assertEquals(602, tiffField0.getOffset());
      assertEquals((-8193524), int0);
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 41485);
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(41485, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)5, fieldTypeShort0, 1, (byte)42, byteArray0, byteOrder0, 42035);
      tiffField0.getIntValue();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(42035, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-62);
      TiffField tiffField0 = new TiffField(61, 32896, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)97);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(32896, tiffField0.getDirectoryType());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(56, (String) null);
      byte[] byteArray0 = new byte[2];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(12);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34, 50, fieldTypeByte0, (-1L), 56, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(34, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1744, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 1744, 1744, byteArray0, byteOrder0, (byte) (-122));
      tiffField0.getFieldTypeName();
      assertEquals(1744, tiffField0.getOffset());
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(973, 973, fieldTypeLong0, 973, (-2819L), byteArray0, byteOrder0, 11);
      tiffField0.getFieldType();
      assertEquals((-2819), tiffField0.getOffset());
      assertEquals(973, tiffField0.getTag());
      assertEquals(973, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-733), "<9c6z<m5O/WKQ#H%s");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-55), 2897, fieldTypeRational0, 1891L, (-1759L), byteArray0, byteOrder0, 2897);
      tiffField0.getFieldType();
      assertEquals((-55), tiffField0.getTag());
      assertEquals((-1759), tiffField0.getOffset());
      assertEquals(2897, tiffField0.getSortHint());
      assertEquals(2897, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1448), fieldTypeByte0, 27, (-1473L), byteArray0, byteOrder0, (-1446));
      tiffField0.getFieldType();
      assertEquals((-1473), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1446), tiffField0.getSortHint());
      assertEquals((-1448), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1041), 1471, fieldTypeLong0.BYTE, 1L, 18L, byteArray0, byteOrder0, (-241));
      tiffField0.getDoubleValue();
      assertEquals((-241), tiffField0.getSortHint());
      assertEquals(18, tiffField0.getOffset());
      assertEquals(1471, tiffField0.getDirectoryType());
      assertEquals((-1041), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)5, fieldTypeShort0, 1, (byte)42, byteArray0, byteOrder0, 42035);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(42035, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-66);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 0L, byteArray0, byteOrder0, (byte) (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeRational0, 57, 57, byteArray0, (ByteOrder) null, 57);
      tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1817), "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1817), 4, fieldTypeRational0, 0L, 4, byteArray0, byteOrder0, (byte)18);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1817), tiffField0.getTag());
      assertEquals(4, int0);
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1142), "ud5P i`0c6&");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2537, (-324), fieldTypeRational0, (byte)18, (-456L), byteArray0, (ByteOrder) null, (byte)18);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2537, tiffField0.getTag());
      assertEquals((-324), int0);
      assertEquals(18, tiffField0.getSortHint());
      assertEquals((-456), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1832, "Ii@<s7$qA(");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (-402), fieldTypeFloat0, (byte) (-79), (-12656L), byteArray0, byteOrder0, 1116);
      long long0 = tiffField0.getCount();
      assertEquals(1116, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-12656), tiffField0.getOffset());
      assertEquals((-79L), long0);
      assertEquals((-402), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147077619, 2147077619, fieldTypeShort0, 144L, (-2443L), byteArray0, (ByteOrder) null, (-1411));
      tiffField0.getBytesLength();
      assertEquals((-1411), tiffField0.getSortHint());
      assertEquals(2147077619, tiffField0.getDirectoryType());
      assertEquals(2147077619, tiffField0.getTag());
      assertEquals((-2443), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3194, "r*Y'CsD-HQ_ooHU");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3194, 3194, fieldTypeFloat0, (-214L), 0L, byteArray0, byteOrder0, (byte)97);
      tiffField0.getBytesLength();
      assertEquals(3194, tiffField0.getTag());
      assertEquals(3194, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2610, (byte)0, fieldTypeShort0, 2425L, (byte)0, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2610, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-1), fieldTypeDouble0, 1787, 2301L, byteArray0, byteOrder0, 1787);
      tiffField0.getByteArrayValue();
      assertEquals(1787, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2301, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1316, 1316, fieldTypeLong0, 627L, 1316, byteArray0, byteOrder0, (byte) (-26));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeRational0, 80, 80, (byte[]) null, byteOrder0, 80);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(2147239754, 2147239754, fieldTypeRational0, 2147239754, 2147239754, byteArray0, (ByteOrder) null, 2147239754);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, (-3646));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2131, (byte) (-26), (FieldType) null, 2L, (byte) (-26), byteArray0, byteOrder0, 1073);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(93, 93, fieldTypeShort0, 93, 93, (byte[]) null, byteOrder0, 93);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2344), (-2344), fieldTypeShort0, (-2344), (-2344), byteArray0, byteOrder0, (-2344));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-808), fieldTypeDouble0, (-808), 27, byteArray0, byteOrder0, 2605);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(556, (-490), fieldTypeByte0, (-490), (-490), byteArray0, byteOrder0, 556);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 100, byteArray0, (ByteOrder) null, 100);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(257, 257, (FieldType) null, 257, 257, (byte[]) null, byteOrder0, 257);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-925), (-925), fieldTypeRational0, (-925), (-925), byteArray0, (ByteOrder) null, (-925));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 126);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, (byte[]) null, byteOrder0, 26);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(514, 514, fieldTypeShort0, 514, 514, (byte[]) null, byteOrder0, 514);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1680), (-1680), fieldTypeShort0, (-1680), (-1680), byteArray0, byteOrder0, (-1680));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1842), fieldTypeShort0, 28, (-1842), byteArray0, byteOrder0, (-1842));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40, 40, fieldTypeRational0, 40, 40, (byte[]) null, byteOrder0, 40);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4051), (-4051), fieldTypeRational0, (-4051), (-4051), byteArray0, byteOrder0, (-4051));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeDouble0, 67, 67, byteArray0, byteOrder0, 67);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 1L, 5, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2939, 2939, (FieldType) null, 2939, 2939, byteArray0, byteOrder0, 2939);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(33, 33, (FieldType) null, 21L, 33, byteArray0, (ByteOrder) null, 15);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-1278), fieldTypeRational0, (-1278), 28, byteArray0, byteOrder0, (-1278));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2139, 2139, fieldTypeDouble0, 2139, 2139, (byte[]) null, byteOrder0, 2139);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-34), (-34), fieldTypeShort0, (-34), (-34), byteArray0, byteOrder0, (-34));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 34737);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 81, (FieldType) null, 81, 81, byteArray0, byteOrder0, 81);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-723), (-723), fieldTypeShort0, (-723), (-723), byteArray0, byteOrder0, (-723));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 1, fieldTypeRational0, 1, 81, byteArray0, byteOrder0, 81);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(61, 61, fieldTypeRational0, (-1337L), 61, byteArray0, byteOrder0, 61);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1940), 36, fieldTypeRational0, (-518L), 36, byteArray0, (ByteOrder) null, 1554);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ExifVersion");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "ExifVersion");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeDouble0, 1L, 55, byteArray0, byteOrder0, (byte)0);
      StringWriter stringWriter0 = new StringWriter(60);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "~KaWXCAg,L$/u");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-700), 34020, fieldTypeByte0, (-700), (-700), byteArray0, byteOrder0, (-700));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("u-$ieA2h`M#( !2O");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-17), (byte) (-17), fieldTypeShort0, (byte) (-17), (byte) (-17), byteArray0, byteOrder0, (byte) (-17));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1461, 1461, fieldTypeDouble0, 2933L, 255L, byteArray0, byteOrder0, (byte) (-109));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.constants.GeoTiffTagConstants");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1461, tiffField0.getDirectoryType());
      assertEquals(2933L, tiffField0.getCount());
      assertEquals((-109), tiffField0.getSortHint());
      assertEquals(1461, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3876, 0, (FieldType) null, (-651L), 2276L, byteArray0, (ByteOrder) null, 274);
      tiffField0.getByteOrder();
      assertEquals(2276, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3876, tiffField0.getTag());
      assertEquals(274, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(778, 778, fieldTypeShort0, 778, 778, (byte[]) null, byteOrder0, 778);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1014, (byte) (-48), (FieldType) null, 1014, 255L, byteArray0, byteOrder0, (byte) (-25));
      tiffField0.getFieldType();
      assertEquals(1014, tiffField0.getTag());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-48), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1048), (byte)0, fieldTypeAscii0, (-1048), 1L, byteArray0, byteOrder0, 599);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1048), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(599, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(100, 100, fieldTypeRational0, 100, 100, byteArray0, (ByteOrder) null, 100);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, (-1058L), (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(898, 898, fieldTypeShort0, (-4671L), (-4671L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-4671), int0);
      assertEquals(898, tiffField0.getTag());
      assertEquals(898, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2494), "");
      TiffField tiffField0 = new TiffField(28, (-2494), fieldTypeDouble0, 28, 28, byteArray0, byteOrder0, 250);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals((-2494), tiffField0.getDirectoryType());
      assertEquals(250, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-718), fieldTypeFloat0, 50, 1L, byteArray0, byteOrder0, 1212);
      long long0 = tiffField0.getCount();
      assertEquals(1212, tiffField0.getSortHint());
      assertEquals(50L, long0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-718), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getOffset());
      assertEquals("31 (0x1f: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeShort0, 32, 32, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(32, (-1), fieldTypeRational0, 1L, (-1), byteArray0, (ByteOrder) null, 50939);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(32932, 32932, fieldTypeDouble0.LONG, 32932, 32932, byteArray0, byteOrder0, 32932);
      tiffField0.getIntValueOrArraySum();
      assertEquals(32932, tiffField0.getTag());
      assertEquals(32932, tiffField0.getOffset());
      assertEquals(32932, tiffField0.getSortHint());
      assertEquals(32932, tiffField0.getDirectoryType());
      assertEquals(32932L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1101, 1101, fieldTypeDouble0, 1101, 1101, byteArray0, byteOrder0, 1101);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4ed6c602 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(2928, 2928, fieldTypeRational0, 2928, 2928, byteArray0, (ByteOrder) null, 2928);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeDouble0.UNDEFINED, (byte)107, (byte)107, byteArray0, byteOrder0, (byte)107);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@439e7be0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeDouble0.FLOAT, 30, 30, byteArray0, byteOrder0, 30);
      tiffField0.getDoubleArrayValue();
      assertEquals(30, tiffField0.getOffset());
      assertEquals(30L, tiffField0.getCount());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeShort0, 67, 67, byteArray0, byteOrder0, 67);
      tiffField0.getDoubleArrayValue();
      assertEquals(67L, tiffField0.getCount());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getTag());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeDouble0, 67, 67, byteArray0, byteOrder0, 67);
      tiffField0.getDoubleArrayValue();
      assertEquals(67, tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67L, tiffField0.getCount());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeRational0, 57, 57, byteArray0, (ByteOrder) null, 57);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(57L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, 36, byteArray0, byteOrder0, 36);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(36, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeRational0, 57, 57, byteArray0, (ByteOrder) null, 57);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[14];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1461, 1461, fieldTypeAscii0, 1461, 1461, byteArray0, byteOrder0, 1461);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@31ce826f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeShort0, 67, 67, byteArray0, byteOrder0, 67);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@4775b28e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65, 65, fieldTypeRational0.ASCII, 65, 65, byteArray0, (ByteOrder) null, (-603));
      String string0 = tiffField0.getStringValue();
      assertEquals((-603), tiffField0.getSortHint());
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getOffset());
      assertEquals(65, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeShort0, 42, 42, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getTagName();
      assertEquals(42, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x2a)", string0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(344, 344, fieldTypeLong0, 344, 344, byteArray0, byteOrder0, 344);
      String string0 = tiffField0.getTagName();
      assertEquals(344, tiffField0.getOffset());
      assertEquals(344, tiffField0.getTag());
      assertEquals("XClipPathUnits", string0);
      assertEquals(344, tiffField0.getDirectoryType());
      assertEquals(344, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(599, 599, fieldTypeFloat0, 599, 599, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(599, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(599L, tiffField0.getCount());
      assertEquals(599, tiffField0.getDirectoryType());
      assertEquals(599, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(612, 612, fieldTypeByte0, 612, (-1L), byteArray0, byteOrder0, 612);
      String string0 = tiffField0.getValueDescription();
      assertEquals(612, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(612, tiffField0.getSortHint());
      assertEquals(612, tiffField0.getTag());
      assertEquals(612L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(650, 650, fieldTypeFloat0, 650, 650, byteArray0, byteOrder0, 650);
      tiffField0.dump();
      assertEquals(650, tiffField0.getSortHint());
      assertEquals(650, tiffField0.getOffset());
      assertEquals(650L, tiffField0.getCount());
      assertEquals(650, tiffField0.getTag());
      assertEquals(650, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeDouble0.UNDEFINED, (byte)107, (byte)107, byteArray0, byteOrder0, (byte)107);
      tiffField0.dump();
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getOffset());
      assertEquals(107, tiffField0.getTag());
      assertEquals(107L, tiffField0.getCount());
      assertEquals(107, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2140793620), (-2140793620), fieldTypeLong0, 1898L, 1898L, byteArray0, (ByteOrder) null, (-2140793620));
      tiffField0.dump();
      assertEquals(1898L, tiffField0.getCount());
      assertEquals((-2140793620), tiffField0.getDirectoryType());
      assertEquals((-2140793620), tiffField0.getTag());
      assertEquals((-2140793620), tiffField0.getSortHint());
      assertEquals(1898, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[126];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65, 65, fieldTypeShort0, 65, 65, byteArray0, byteOrder0, 65);
      tiffField0.dump();
      assertEquals(65L, tiffField0.getCount());
      assertEquals(65, tiffField0.getTag());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals(65, tiffField0.getOffset());
      assertEquals(65, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2140793666), (-2140793666), fieldTypeShort0, (-2140793666), (-2140793666), byteArray0, byteOrder0, (-2140793666));
      assertEquals(13379964, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals((-2140793666L), tiffField0.getCount());
      assertEquals((-2140793666), tiffField0.getSortHint());
      assertEquals((-2140793666), tiffField0.getTag());
      assertEquals((-2140793666), tiffField0.getOffset());
      assertEquals((-2140793666), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(599, "");
      TiffField tiffField0 = new TiffField(599, 599, fieldTypeAscii0, 599, 599, byteArray0, byteOrder0, 599);
      tiffField0.toString();
      assertEquals(599, tiffField0.getDirectoryType());
      assertEquals(599L, tiffField0.getCount());
      assertEquals(599, tiffField0.getOffset());
      assertEquals(599, tiffField0.getBytesLength());
      assertEquals(599, tiffField0.getSortHint());
      assertEquals(599, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-870), (-870), fieldTypeDouble0.ASCII, 2098L, (-870), byteArray0, byteOrder0, (-870));
      tiffField0.dump();
      assertEquals((-870), tiffField0.getOffset());
      assertEquals(2098L, tiffField0.getCount());
      assertEquals(2098, tiffField0.getBytesLength());
      assertEquals((-870), tiffField0.getSortHint());
      assertEquals((-870), tiffField0.getTag());
      assertEquals((-870), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2509, (-521), fieldTypeRational0, (-521), (-1043L), byteArray0, byteOrder0, (-521));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2509, (-521));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2509, tiffField0.getTag());
      assertEquals((-521), tiffField0.getSortHint());
      assertEquals((-521), tiffField0.getDirectoryType());
      assertEquals((-1043), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-521L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1288, (-1705), fieldTypeShort0, (-1705), 1288, byteArray0, (ByteOrder) null, 1814);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1814, 44);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(1288, tiffField0.getTag());
      assertEquals((-1705), tiffField0.getDirectoryType());
      assertEquals(1814, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(1288, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2140793620), (-2140793620), fieldTypeRational0, (-2140793620), (-2140793620), byteArray0, byteOrder0, (-2140793620));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2140793620), tiffField0.getSortHint());
      assertEquals((-2140793620), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2140793620), tiffField0.getTag());
      assertEquals((-2140793620), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(61, 61, fieldTypeShort0, 61, 61, byteArray0, byteOrder0, 61);
      tiffField0.getFieldTypeName();
      assertEquals(61, tiffField0.getOffset());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2627), fieldTypeRational0, (-2627), (byte)0, byteArray0, byteOrder0, (-2627));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2627), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2627), tiffField0.getDirectoryType());
      assertEquals((-21016), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1560), (-1560), fieldTypeDouble0, 704L, (-1560), (byte[]) null, byteOrder0, (-1560));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeRational0, 57, 57, byteArray0, (ByteOrder) null, 57);
      tiffField0.getIntArrayValue();
      assertEquals(57, tiffField0.getTag());
      assertEquals(57L, tiffField0.getCount());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(456, tiffField0.getBytesLength());
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeRational0, 57, 57, byteArray0, (ByteOrder) null, 57);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(57L, tiffElement0.offset);
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getTag());
  }
}
