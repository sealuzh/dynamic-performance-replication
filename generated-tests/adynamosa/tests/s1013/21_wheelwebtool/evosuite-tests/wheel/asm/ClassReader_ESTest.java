/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 18:31:49 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      Attribute attribute0 = new Attribute("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 2314);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader0.readConst(47, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getClassName();
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[5] = 'd';
      charArray0[6] = 'd';
      charArray0[7] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readConst(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getClassName();
      classReader0.getInterfaces();
      char[] charArray0 = new char[27];
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[5] = 'd';
      charArray0[6] = 'd';
      charArray0[7] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readConst(54, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readLong(4);
      classReader1.getSuperName();
      classReader0.copyPool(classWriter0);
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '_';
      ClassWriter classWriter1 = new ClassWriter(classReader1, 1236);
      classReader1.accept((ClassVisitor) classWriter1, 271);
      // Undeclared exception!
      try { 
        classWriter1.visitOuterClass((String) null, "InnerClasses", "=*1y3!xK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 0);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 0);
      ClassWriter classWriter1 = new ClassWriter(1715);
      Object object0 = classReader0.readConst(2, charArray0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      int int0 = 54;
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'f';
      charArray0[5] = 'd';
      charArray0[6] = 'd';
      charArray0[7] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readConst(54, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(994);
      classReader0.accept((ClassVisitor) classWriter0, (-59));
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8334);
      classReader0.accept((ClassVisitor) classWriter1, 1);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, 2);
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = '+';
      charArray0[2] = 'Q';
      charArray0[3] = 'F';
      charArray0[4] = ':';
      // Undeclared exception!
      try { 
        classReader0.readConst(1522, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1522
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8334);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classReader0.getClassName();
      classReader0.readShort(2);
      classReader0.readLong(1);
      char[] charArray0 = new char[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(376, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      assertEquals(271, classReader0.header);
      
      Attribute attribute0 = new Attribute(" <#)");
      ClassWriter classWriter0 = new ClassWriter(8);
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter1 = new ClassWriter(1262);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " <#)");
      ClassWriter classWriter2 = new ClassWriter(classReader0, 2344);
      FieldWriter fieldWriter0 = classWriter1.lastField;
      classWriter2.firstField = null;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter2);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 51);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
      
      char[] charArray0 = new char[0];
      String string1 = classReader0.readClass(138, charArray0);
      assertEquals("next", string1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(128);
      // Undeclared exception!
      try { 
        classReader0.readConst(11, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 32);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      classReader0.readLong(757);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      long long0 = classReader0.readLong(192);
      assertEquals(8029194036033302377L, long0);
      
      classReader0.readInt(2);
      short short0 = classReader0.readShort(757);
      assertEquals((short)2, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(2);
      Item[] itemArray0 = new Item[4];
      Item item0 = classWriter0.newFloat((-466.51953F));
      itemArray0[0] = item0;
      ClassWriter classWriter1 = new ClassWriter(1);
      Item item1 = classWriter1.key2;
      itemArray0[1] = item1;
      Item item2 = classWriter1.newLong(1);
      itemArray0[2] = item2;
      Item item3 = new Item(1274);
      itemArray0[3] = item3;
      classWriter0.typeTable = itemArray0;
      ClassWriter classWriter2 = new ClassWriter((-1390));
      classReader0.accept((ClassVisitor) classWriter0, 76);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("wheel.asm.Attribute");
      ClassReader classReader2 = new ClassReader("wheel.asm.Attribute");
      classReader2.readLong(2);
      classReader1.getSuperName();
      classReader2.readLong(1);
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      charArray0[1] = 'U';
      charArray0[2] = ')';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(1274, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-1119));
      ClassWriter classWriter1 = new ClassWriter(4);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter2 = new ClassWriter(classReader0, 534);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      Attribute attribute1 = attribute0.next;
      classReader0.readLong(2);
      ClassWriter classWriter3 = new ClassWriter((-2959));
      Type type0 = (Type)classReader0.readConst(2, (char[]) null);
      assertEquals(1, type0.getDimensions());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(103);
      Attribute attribute0 = new Attribute(" <#)");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 83);
      Attribute attribute1 = attribute0.next;
      ClassWriter classWriter2 = new ClassWriter((-1844));
      Attribute[] attributeArray0 = new Attribute[8];
      attributeArray0[0] = null;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = null;
      attributeArray0[4] = null;
      attributeArray0[5] = attribute0;
      attributeArray0[6] = attribute0;
      attributeArray0[7] = attribute0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " <#)");
      classReader0.accept((ClassVisitor) classWriter2, attributeArray0, 2);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      assertEquals(271, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      classReader1.readLong(4);
      classReader1.getSuperName();
      long long0 = classReader0.readLong(0);
      assertEquals((-3819410108757049294L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[1] = ';';
      charArray0[2] = '?';
      charArray0[3] = '?';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readConst(5, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(534);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 128);
      classReader0.getSuperName();
      classReader0.readUnsignedShort(2);
      classReader0.copyPool(classWriter0);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      Attribute attribute0 = new Attribute("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[4];
      attributeArray0[0] = attribute0;
      int int0 = ClassReader.EXPAND_FRAMES;
      classReader0.readShort(8);
      // Undeclared exception!
      try { 
        classReader0.readByte((-989));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -989
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 128);
      classReader0.getSuperName();
      classReader0.readUnsignedShort(128);
      classReader0.copyPool(classWriter0);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.getInterfaces();
      EvoSuiteFile evoSuiteFile0 = null;
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = '?';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(5, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      assertEquals(534, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, (-151));
      short short0 = classReader0.readShort(810);
      assertEquals((short) (-19712), short0);
      
      classReader0.readByte(0);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-1119));
      ClassWriter classWriter1 = new ClassWriter(4);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter2 = new ClassWriter(classReader0, 534);
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[2] = null;
      attributeArray0[3] = attribute0;
      attributeArray0[4] = attribute0;
      attributeArray0[5] = attribute0;
      classReader0.accept((ClassVisitor) classWriter2, attributeArray0, 2);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-1119));
      Attribute attribute0 = new Attribute("EnclosingMethod");
      Attribute[] attributeArray0 = new Attribute[5];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute0;
      attributeArray0[4] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 153);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2221);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.accept((ClassVisitor) classAdapter0, 8);
      classReader0.getSuperName();
      char[] charArray0 = new char[7];
      charArray0[0] = '5';
      charArray0[2] = '3';
      charArray0[3] = '5';
      charArray0[5] = '3';
      charArray0[6] = '5';
      classReader0.readUTF8(534, charArray0);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(401, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FalseFileFilter");
      attributeArray0[0] = attribute0;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FalseFileFilter");
      attributeArray0[0] = attribute0;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getClassName();
      int int0 = 447;
      char[] charArray0 = new char[0];
      classReader1.getInterfaces();
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader2.getClassName();
      classReader0.getSuperName();
      ClassReader classReader3 = new ClassReader(classReader2.b, 721, 2);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader3, 224);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Object object0 = new Object();
      classReader0.readShort(2);
      int int0 = 17;
      ClassReader classReader1 = new ClassReader(classReader0.b, 10, 17);
      ClassWriter classWriter0 = new ClassWriter(178);
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, attributeArray0, (-669));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader2.getClassName();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      classReader2.getInterfaces();
      classReader0.getAccess();
      int int0 = classReader1.readByte(4);
      assertEquals(0, int0);
      assertEquals(33, classReader1.getAccess());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      assertEquals(534, classReader0.header);
      
      classReader0.getSuperName();
      classReader0.getItem(1);
      String string0 = classReader0.getClassName();
      assertEquals("org/apache/commons/io/filefilter/FalseFileFilter", string0);
      
      int int0 = classReader0.readByte(532);
      assertEquals(101, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader1.getSuperName();
      int int0 = classReader0.getItem(1);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.readLong(2);
      // Undeclared exception!
      try { 
        classReader1.getItem(534);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 534
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.getInterfaces();
      classReader0.readLong(4);
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassWriter classWriter1 = new ClassWriter((-241));
      classReader0.accept((ClassVisitor) classWriter1, (-3396));
      // Undeclared exception!
      try { 
        classReader0.readClass(310, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";[xguil0TXv");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.readUnsignedShort(189);
      classReader0.getClassName();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, 391);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 846
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      Attribute attribute0 = new Attribute("wheel.asm.Attribute");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[4];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute0;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 2);
      classReader0.getClassName();
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream0);
      ClassReader classReader0 = new ClassReader(sequenceInputStream0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readShort(4);
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      // Undeclared exception!
      try { 
        classReader1.readUTF8((short)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classReader0.readShort(2);
      ClassReader classReader1 = new ClassReader(classReader0.b, 10, 17);
      classReader1.readLong(10);
      ClassWriter classWriter0 = new ClassWriter(17);
      // Undeclared exception!
      try { 
        classReader0.readConst(2149, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2149
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      assertEquals(8334, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 348);
      classReader0.accept((ClassVisitor) classWriter0, 348);
      String string0 = classReader0.getClassName();
      assertEquals("java/lang/String", string0);
      
      ClassReader classReader1 = new ClassReader(classReader0.b);
      short short0 = classReader1.readShort(2);
      assertEquals((short) (-17730), short0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      boolean boolean0 = ClassReader.RESIZE;
      Object object0 = new Object();
      classReader0.readShort(1);
      classReader0.readLong((short)0);
      ClassWriter classWriter0 = new ClassWriter((-838));
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      boolean boolean0 = ClassReader.RESIZE;
      Object object0 = new Object();
      classReader0.readShort(2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        classReader1.readConst((short)0, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLong((-1331));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = '.';
      charArray0[2] = '.';
      ClassReader classReader1 = new ClassReader(byteArray0);
      int int0 = classReader1.readInt(1);
      assertEquals(10, classReader1.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.DirectoryFileFilter");
      int int0 = classReader2.getAccess();
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.getItem((-156));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -156
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      short short0 = classReader0.readShort(4);
      assertEquals((short)0, short0);
      assertEquals(10, classReader0.header);
      
      classReader0.getAccess();
      assertEquals(10, classReader0.header);
      
      // Undeclared exception!
      try { 
        classReader0.getItem(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(classReader0.b, 4, 76);
      classReader1.readLong(2);
      char[] charArray0 = null;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)108;
      byteArray1[2] = (byte) (-103);
      byteArray1[3] = (byte)99;
      byteArray1[4] = (byte)33;
      byteArray1[5] = (byte)32;
      byteArray1[6] = (byte)3;
      byteArray1[7] = (byte) (-128);
      byteArray1[8] = (byte) (-65);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        classReader0.readLabel(2116, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = (-3979);
      int int1 = 6;
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        classReader0.readLabel(76, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ClassReader classReader0 = new ClassReader(byteArray0);
      short short0 = classReader0.readShort(31);
      assertEquals((short)0, short0);
      
      classReader0.readUnsignedShort(31);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      boolean boolean0 = ClassReader.RESIZE;
      // Undeclared exception!
      try { 
        classReader0.readConst(2, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      assertEquals(10, classReader0.header);
      
      // Undeclared exception!
      try { 
        classReader0.getItem(2664);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2664
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = (-3979);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst((-3979), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3979
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 8;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(32, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-183L));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.skip(0L);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream0);
      ClassReader classReader0 = new ClassReader(sequenceInputStream0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      short short0 = classReader0.readShort(2);
      assertEquals((short)0, short0);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      assertEquals(534, classReader0.header);
      
      classReader0.getClassName();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      assertNotNull(string0);
      
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 85);
      classReader0.copyPool(classWriter0);
      classReader0.readShort(1);
      short short0 = classReader0.readShort(85);
      assertEquals((short)20294, short0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(438);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.readShort(2);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-274));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(425);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getInterfaces();
      Attribute[] attributeArray0 = new Attribute[6];
      Attribute attribute0 = new Attribute("wheel.asm.Type");
      attributeArray0[0] = attribute0;
      int int0 = 76;
      int int1 = (-4190);
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      charArray0[1] = 'Z';
      charArray0[2] = '{';
      Label[] labelArray0 = new Label[7];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = new Label();
      labelArray0[1] = label1;
      // Undeclared exception!
      try { 
        classReader0.readLabel((-1093), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      assertEquals(534, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 534);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classReader0.getClassName();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      short short0 = classReader1.readShort(696);
      assertEquals((short)256, short0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 85);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 8);
      classReader0.getClassName();
      classReader0.readInt(176);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        classReader0.readShort((-3979));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = '#';
      charArray0[2] = 'z';
      charArray0[3] = 'N';
      charArray0[4] = 'q';
      // Undeclared exception!
      try { 
        classReader0.readConst(3626, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3626
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      assertEquals(534, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("org/apache/commons/io/filefilter/FalseFileFilter", string0);
      
      Attribute attribute0 = new Attribute("org/apache/commons/io/filefilter/FalseFileFilter");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = new Attribute("LocalVariableTable");
      Attribute attribute3 = new Attribute("S|a%cui:Abks:pOV");
      Attribute attribute4 = new Attribute("S|a%cui:Abks:pOV");
      Attribute attribute5 = new Attribute("S|a%cui:Abks:pOV");
      Attribute attribute6 = new Attribute("S|a%cui:Abks:pOV");
      Attribute attribute7 = attribute6.next;
      Attribute attribute8 = new Attribute("");
      ClassWriter classWriter0 = new ClassWriter(175);
      Attribute[] attributeArray0 = new Attribute[5];
      attributeArray0[0] = null;
      Attribute attribute9 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute10 = new Attribute("S|a%cui:Abks:pOV");
      attributeArray0[2] = attribute10;
      attributeArray0[3] = attribute4;
      attributeArray0[4] = attribute3;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 175);
      classReader0.getClassName();
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readInt(651);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(10);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int0 = 85;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 85);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 8);
      classWriter0.newField("InnerClasses", "org.apache.commons.io.filefilter.FalseFileFilter", "b");
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 985);
      char[] charArray0 = new char[1];
      charArray0[0] = '*';
      // Undeclared exception!
      try { 
        classReader0.readClass((-3848), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = (-65);
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '\'';
      ClassWriter classWriter0 = new ClassWriter(396);
      classWriter0.version = 1;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, 66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 140;
      char[] charArray0 = new char[1];
      char char0 = 'K';
      int int1 = 1577;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 1577);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 1);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      byte byte0 = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      byteArrayInputStream0.skip(1L);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 845
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte)29;
      byteArray0[5] = (byte) (-78);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 2, (byte)29);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-128);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(0L);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'C';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((byte) (-78), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(0L);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byte byte0 = (byte) (-128);
      byteArray0[0] = (byte) (-128);
      byte byte1 = (byte)4;
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte) (-4);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-4), 3749);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 1);
      classWriter0.newField("org.apache.commons.io.filefilter.FalseFileFilter", "org/apache/commons/io/filefilter/FalseFileFilter", "\"o;x`Mv4s;']:Qv3b");
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      byteArrayInputStream0.skip(0L);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'o';
      charArray0[1] = 'v';
      charArray0[2] = '3';
      charArray0[3] = 'u';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(180, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 1);
      classWriter0.newField("org.apache.commons.io.filefilter.FalseFileFilter", "org/apache/commons/io/filefilter/FalseFileFilter", "\"o;x`Mv4s;']:Qv3b");
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readInt((-879));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 1);
      classWriter0.newField("org.apache.commons.io.filefilter.FalseFileFilter", "org/apache/commons/io/filefilter/FalseFileFilter", "\"o;x`Mv4s;']:Qv3b");
      classReader0.accept((ClassVisitor) classWriter0, (-2684));
      classReader0.accept((ClassVisitor) classWriter0, (-2684));
      char[] charArray0 = new char[10];
      // Undeclared exception!
      try { 
        classReader0.readClass(180, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)12;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-2877), (byte)51);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.addUninitializedType("\"o;x`Mv4s;']:Qv3b", 1);
      classWriter0.newField("org.apache.commons.io.filefilter.FalseFileFilter", "org/apache/commons/io/filefilter/FalseFileFilter", "\"o;x`Mv4s;']:Qv3b");
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      classReader0.accept((ClassVisitor) classWriter0, (-2698));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(180, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-111);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-111), 131);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("!x9e.0Ch#QR");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-128);
      byte byte0 = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte) (-4);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-4), 3749);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
