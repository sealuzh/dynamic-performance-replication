/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 11:28:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)76;
      byteArray0[4] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 65535, fieldTypeRational0, 2048L, 2048L, byteArray0, byteOrder0, 1840700269);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1840700269, tiffField0.getSortHint());
      assertEquals(198, int0);
      assertEquals(2048, tiffField0.getOffset());
      assertEquals(14, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 65535, fieldTypeRational0, 2048L, 2048L, byteArray0, byteOrder0, 1840700269);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2048, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1840700269, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeShort0.UNDEFINED, 40094, 40094, byteArray0, byteOrder0, 1798);
      String string0 = tiffField0.toString();
      assertEquals("40094 (0x9c9e: XPKeywords): Invalid value: Text field not encoded as bytes. (40094 Undefined)", string0);
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals(40094, tiffField0.getOffset());
      assertEquals(1798, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)66, fieldTypeShort0, 1798, (-2325L), byteArray0, byteOrder0, 1798);
      tiffField0.getValue();
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1798, tiffField0.getSortHint());
      assertEquals((-2325), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeByte0, 1L, 23, byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)53, (-1717986917), fieldTypeShort0, (byte)0, 4L, byteArray0, (ByteOrder) null, (-338));
      int int0 = tiffField0.getTag();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(53, int0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-338), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-962), 1717986918, (FieldType) null, (-962), 1717986918, byteArray0, byteOrder0, (-2147111659));
      int int0 = tiffField0.getTag();
      assertEquals((-962), int0);
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals((-2147111659), tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)4;
      TiffField tiffField0 = new TiffField((-682), 33449, fieldTypeAscii0, 2L, 1695L, byteArray0, byteOrder0, (-682));
      assertEquals(2, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals((-682), tiffField0.getSortHint());
      assertEquals(1695, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(33449, tiffField0.getDirectoryType());
      assertEquals((-682), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(133, 1938, fieldTypeRational0, 1938, 2370L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(2370, tiffField0.getOffset());
      assertEquals(1938, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "i99CNf!L i@1h(^h'.");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 48132, fieldTypeDouble0, 395L, (-1L), byteArray0, (ByteOrder) null, (byte) (-24));
      int int0 = tiffField0.getSortHint();
      assertEquals((-24), int0);
      assertEquals(48132, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(584, 50, fieldTypeLong0, 1L, 50, byteArray0, byteOrder0, (byte)123);
      int int0 = tiffField0.getOffset();
      assertEquals(584, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, int0);
      assertEquals(123, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(214, (String) null);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(214, (-2029), fieldTypeRational0, (-2029), (-2029), byteArray0, (ByteOrder) null, 214);
      int int0 = tiffField0.getOffset();
      assertEquals(214, tiffField0.getSortHint());
      assertEquals(214, tiffField0.getTag());
      assertEquals((-2029), tiffField0.getDirectoryType());
      assertEquals((-2029), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 5, fieldTypeShort0, 1798, (-2325L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(5888, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(3596, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-2325), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-121);
      TiffField tiffField0 = new TiffField((byte)0, (-797), fieldTypeByte0, 1L, 3230L, byteArray0, byteOrder0, 1551);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3230, tiffField0.getOffset());
      assertEquals((-797), tiffField0.getDirectoryType());
      assertEquals(1551, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1031), (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1L, (-1031), byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1031), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)122;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeLong0, 1L, 2147483647L, byteArray0, byteOrder0, (-2489));
      tiffField0.getIntValue();
      assertEquals(20, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2489), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)42;
      byteArray0[4] = (byte) (-15);
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 49);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(2354, tiffField0.getDirectoryType());
      assertEquals(2354, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[73];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2126, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(53, 405, fieldTypeDouble0, 53, 1L, byteArray0, byteOrder0, 50708);
      tiffField0.getFieldTypeName();
      assertEquals(50708, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(53, tiffField0.getTag());
      assertEquals(405, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-477), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(5, (-477), fieldTypeFloat0, 1L, 4800, byteArray0, byteOrder0, (-477));
      tiffField0.getFieldTypeName();
      assertEquals(5, tiffField0.getTag());
      assertEquals((-477), tiffField0.getSortHint());
      assertEquals((-477), tiffField0.getDirectoryType());
      assertEquals(4800, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(65535, (-55), (FieldType) null, 56L, (byte) (-23), byteArray0, byteOrder0, (-720));
      tiffField0.getFieldType();
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-23), tiffField0.getOffset());
      assertEquals((-720), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "U.Y^Yr mM<drTH");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 2147483647L, byteArray0, byteOrder0, 25);
      tiffField0.getFieldType();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-867), (-867), fieldTypeAscii0, 2066L, (-867), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-867), tiffField0.getOffset());
      assertEquals((-867), tiffField0.getTag());
      assertEquals((-867), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34017, 96, fieldTypeDouble0, 1L, 48321L, byteArray0, byteOrder0, 34017);
      tiffField0.getDoubleValue();
      assertEquals(48321, tiffField0.getOffset());
      assertEquals(34017, tiffField0.getTag());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)28;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeLong0, 1L, 2147483647L, byteArray0, byteOrder0, (-2489));
      tiffField0.getDoubleValue();
      assertEquals(20, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-2489), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-57);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeByte0, 1L, 23, byteArray0, byteOrder0, 0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, 11);
      tiffField0.getDoubleArrayValue();
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11L, tiffField0.getCount());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, (-2105));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2105), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1402, 1089, fieldTypeShort0, (byte)53, 1402, byteArray0, byteOrder0, (byte)53);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1402, tiffField0.getOffset());
      assertEquals(1089, int0);
      assertEquals(1402, tiffField0.getTag());
      assertEquals(53, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3, 4038, fieldTypeLong0, 958L, (-3591L), byteArray0, byteOrder0, 3);
      long long0 = tiffField0.getCount();
      assertEquals(958L, long0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-3591), tiffField0.getOffset());
      assertEquals(4038, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1089, 826, fieldTypeAscii0, (-911L), (-911L), byteArray0, byteOrder0, 421);
      long long0 = tiffField0.getCount();
      assertEquals(826, tiffField0.getDirectoryType());
      assertEquals(1089, tiffField0.getTag());
      assertEquals((-911), tiffField0.getOffset());
      assertEquals(421, tiffField0.getSortHint());
      assertEquals((-911L), long0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 0, fieldTypeRational0, 1046L, (-1405L), byteArray0, byteOrder0, (byte)99);
      int int0 = tiffField0.getBytesLength();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals((-1405), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8368, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2623, 2623, fieldTypeShort0, (-3298L), 203748L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-6596), int0);
      assertEquals(203748, tiffField0.getOffset());
      assertEquals(2623, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2623, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2248, "");
      TiffField tiffField0 = new TiffField(2248, 2248, fieldTypeFloat0, 3545L, 2248, byteArray0, (ByteOrder) null, 50828);
      tiffField0.getByteOrder();
      assertEquals(2248, tiffField0.getOffset());
      assertEquals(50828, tiffField0.getSortHint());
      assertEquals(2248, tiffField0.getDirectoryType());
      assertEquals(2248, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-472), (-199), fieldTypeByte0, 4L, 1047L, byteArray0, byteOrder0, 7);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-199), tiffField0.getDirectoryType());
      assertEquals(1047, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(4, byteArray1.length);
      assertEquals((-472), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeAscii0, 39, 39, byteArray0, byteOrder0, 65535);
      tiffField0.getByteArrayValue();
      assertEquals(39, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getTag());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 0, fieldTypeRational0, 1046L, (-1405L), byteArray0, byteOrder0, (byte)99);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-815), fieldTypeRational0, (-815), (-815), (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-10), (-10), fieldTypeLong0.ASCII, (-10), (-10), byteArray0, byteOrder0, (-10));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(403, 403, (FieldType) null, 403, 403, (byte[]) null, byteOrder0, 403);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2102), (-2102), fieldTypeFloat0, (-2102), (-2102), (byte[]) null, byteOrder0, (-2102));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-57), (-57), fieldTypeShort0, (-57), (-57), byteArray0, byteOrder0, (-57));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-961), fieldTypeShort0, 28, (-961), byteArray0, byteOrder0, (-961));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-673), (-673), fieldTypeShort0, (-673), (-673), byteArray0, byteOrder0, (-673));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(463, 463, fieldTypeByte0, 463, 463, (byte[]) null, byteOrder0, 463);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeRational0, (-4), (-4), byteArray0, byteOrder0, (-4));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1833), 14, (FieldType) null, 14, 2217, byteArray0, byteOrder0, 2217);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2206, 2206, fieldTypeShort0, 2206, 2206, (byte[]) null, byteOrder0, 2206);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-88), (byte) (-88), fieldTypeShort0, (byte) (-88), (byte) (-88), byteArray0, byteOrder0, (byte) (-88));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 18249);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeRational0, 40094, 40094, (byte[]) null, byteOrder0, 40094);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3342), (-3342), fieldTypeRational0, (-3342), (-3342), (byte[]) null, byteOrder0, (-3342));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1287), (-1287), fieldTypeShort0, (-1287), (-1287), byteArray0, byteOrder0, (-1287));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 1L, 8, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(82, 82, fieldTypeRational0, 1L, 82, byteArray0, byteOrder0, 82);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2341, 2341, fieldTypeRational0, 2341, (-1855L), (byte[]) null, byteOrder0, 2341);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1965), 2147349390, (FieldType) null, 263L, 263L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1303, 1303, (FieldType) null, 1303, 1303, byteArray0, byteOrder0, 1303);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-11), (-11), fieldTypeRational0, (-11), (-11), byteArray0, byteOrder0, (-11));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3677, (-2560), fieldTypeShort0, 1L, (-2560), byteArray0, byteOrder0, (-2560));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2206, 2206, fieldTypeShort0, 2206, 2206, (byte[]) null, byteOrder0, 2206);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0.ASCII, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1342), fieldTypeByte0, (-1342), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1089, (byte)0, fieldTypeShort0, (-12), 1089, byteArray0, byteOrder0, 1089);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("O f]fuu)S6'y0l}[]");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "O f]fuu)S6'y0l}[]");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3692, 3692, fieldTypeShort0, 3692, 3692, byteArray0, byteOrder0, 3692);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, (-725L), (-725L), byteArray0, byteOrder0, 88);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-882), (-882), fieldTypeRational0, (-882), (-882), byteArray0, byteOrder0, (-882));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(74, 1979, fieldTypeRational0, 1L, 2111L, byteArray0, byteOrder0, 2358);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)99, fieldTypeRational0, 0L, (byte) (-1), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-472), (-199), fieldTypeByte0, 4L, 1047L, byteArray0, byteOrder0, 7);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1047, tiffField0.getOffset());
      assertEquals((-472), tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-199), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34017, 96, fieldTypeDouble0, 1L, 48321L, byteArray0, byteOrder0, 34017);
      tiffField0.getByteOrder();
      assertEquals(34017, tiffField0.getSortHint());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(48321, tiffField0.getOffset());
      assertEquals(34017, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(96, " for: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(96, 96, fieldTypeRational0, 96, 96, (byte[]) null, byteOrder0, 96);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2147111659), "d7A#Bb#*.Kt\"");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeDouble0, (byte)0, 500L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(500, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2147111659), "d7A#Bb#*.Kt\"");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2147111659), (-2036), fieldTypeDouble0, (-2147111659), (-3172L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147111659), tiffField0.getTag());
      assertEquals((-2036), int0);
      assertEquals((-3172), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(526, "[tQ7qRMa_9Myup`");
      byte[] byteArray0 = new byte[0];
      File file0 = MockFile.createTempFile("P7)?];", "P7)?];");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      TiffField tiffField0 = new TiffField((byte) (-19), 127, fieldTypeDouble0, 1L, (-14652L), byteArray0, (ByteOrder) null, 127);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2232, 2232, fieldTypeShort0, 2232, 2232, (byte[]) null, byteOrder0, 2232);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 4811, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (byte) (-29));
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-29), tiffField0.getSortHint());
      assertEquals(4811, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34665, 2958, fieldTypeFloat0, 34665, (-8L), (byte[]) null, byteOrder0, 2958);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(2958, tiffField0.getDirectoryType());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(34665, tagInfo0.tag);
      assertEquals(2958, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-121), fieldTypeShort0, 1798, (byte)0, byteArray0, byteOrder0, (-797));
      int int0 = tiffField0.getTag();
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-797), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2138961887, (-1610612735), fieldTypeAscii0.DOUBLE, 0L, (-2131L), byteArray0, byteOrder0, 7);
      tiffField0.getCount();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(2138961887, tiffField0.getTag());
      assertEquals((-2131), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(4293, "BqB.p");
      TiffField tiffField0 = new TiffField((-2502), 4293, fieldTypeDouble0, (-2147483648L), (-8L), byteArray0, (ByteOrder) null, (-697));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-2502), tiffField0.getTag());
      assertEquals((-697), tiffField0.getSortHint());
      assertEquals(4293, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(96, 96, fieldTypeShort0, 96, 96, byteArray0, byteOrder0, 96);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("96 (0x60: Unknown Tag): ", string0);
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(96, tiffField0.getOffset());
      assertEquals(96, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2225, 2225, fieldTypeShort0, 2225, 2225, byteArray0, byteOrder0, 2225);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, byteArray0, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2142, 2142, fieldTypeLong0, 2142, 2142, byteArray0, byteOrder0, 2142);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2142, tiffField0.getTag());
      assertEquals(2142, tiffField0.getOffset());
      assertEquals(2142, tiffField0.getSortHint());
      assertEquals(2142, tiffField0.getDirectoryType());
      assertEquals(8568, tiffField0.getBytesLength());
      assertEquals(2142L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0.ASCII, 19, 19, byteArray0, byteOrder0, 19);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2a9acc94 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, byteArray0, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2232, 2232, fieldTypeShort0.DOUBLE, 2232, 2232, byteArray0, byteOrder0, 2232);
      tiffField0.getDoubleArrayValue();
      assertEquals(2232L, tiffField0.getCount());
      assertEquals(17856, tiffField0.getBytesLength());
      assertEquals(2232, tiffField0.getTag());
      assertEquals(2232, tiffField0.getSortHint());
      assertEquals(2232, tiffField0.getOffset());
      assertEquals(2232, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[188];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1378, 1378, fieldTypeFloat0, 1378, 1378, byteArray0, byteOrder0, 1378);
      tiffField0.getDoubleArrayValue();
      assertEquals(5512, tiffField0.getBytesLength());
      assertEquals(1378, tiffField0.getOffset());
      assertEquals(1378, tiffField0.getTag());
      assertEquals(1378, tiffField0.getSortHint());
      assertEquals(1378L, tiffField0.getCount());
      assertEquals(1378, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0, 19, 19, byteArray0, byteOrder0, 19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(14, doubleArray0.length);
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2225, 2225, fieldTypeShort0, 2225, 2225, byteArray0, byteOrder0, 2225);
      tiffField0.getDoubleArrayValue();
      assertEquals(2225, tiffField0.getTag());
      assertEquals(2225L, tiffField0.getCount());
      assertEquals(4450, tiffField0.getBytesLength());
      assertEquals(2225, tiffField0.getSortHint());
      assertEquals(2225, tiffField0.getOffset());
      assertEquals(2225, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0.ASCII, 19, 19, byteArray0, byteOrder0, 19);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6791c30d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, 11);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(11, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(11, tiffField0.getTag());
      assertEquals(11L, tiffField0.getCount());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getIntArrayValue();
      assertEquals(19L, tiffField0.getCount());
      assertEquals(76, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2225, 2225, fieldTypeShort0, 2225, 2225, byteArray0, byteOrder0, 2225);
      tiffField0.getIntArrayValue();
      assertEquals(2225, tiffField0.getOffset());
      assertEquals(2225, tiffField0.getTag());
      assertEquals(4450, tiffField0.getBytesLength());
      assertEquals(2225, tiffField0.getDirectoryType());
      assertEquals(2225, tiffField0.getSortHint());
      assertEquals(2225L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 28, 28, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getIntArrayValue();
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 12);
      tiffField0.getIntArrayValue();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(96, 96, fieldTypeByte0, 96, 96, byteArray0, byteOrder0, 96);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@46cee829 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeAscii0, 39, 39, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(39, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2089443577, 2089443577, fieldTypeByte0, 2089443577, 2089443577, byteArray0, byteOrder0, 2089443577);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@2aaf86d7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2225, 2225, fieldTypeShort0, 2225, 2225, byteArray0, byteOrder0, 2225);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8b1)", string0);
      assertEquals(2225, tiffField0.getSortHint());
      assertEquals(2225, tiffField0.getDirectoryType());
      assertEquals(2225, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(51041, 51041, fieldTypeDouble0, 51041, 51041, byteArray0, byteOrder0, 51041);
      String string0 = tiffField0.getTagName();
      assertEquals(51041, tiffField0.getDirectoryType());
      assertEquals(51041, tiffField0.getSortHint());
      assertEquals("NoiseProfile", string0);
      assertEquals(51041, tiffField0.getTag());
      assertEquals(51041, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1378, 1378, fieldTypeFloat0, 1378, 1378, byteArray0, byteOrder0, 1378);
      String string0 = tiffField0.toString();
      assertEquals(1378, tiffField0.getOffset());
      assertEquals("1378 (0x562: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55) (1378 Float)", string0);
      assertEquals(5512, tiffField0.getBytesLength());
      assertEquals(1378, tiffField0.getDirectoryType());
      assertEquals(1378, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[187];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(766, 766, fieldTypeByte0, 52, 766, byteArray0, byteOrder0, 766);
      String string0 = tiffField0.getValueDescription();
      assertEquals(766, tiffField0.getDirectoryType());
      assertEquals(766, tiffField0.getSortHint());
      assertEquals(766, tiffField0.getTag());
      assertEquals(766, tiffField0.getOffset());
      assertEquals(52L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeByte0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      String string0 = tiffField0.toString();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals("12 (0xc: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (12 SByte)", string0);
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[188];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1378, 1378, fieldTypeFloat0, 1378, 1378, byteArray0, byteOrder0, 1378);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1378, tiffField0.getOffset());
      assertEquals(5512, tiffField0.getBytesLength());
      assertEquals(1378, tiffField0.getSortHint());
      assertEquals(1378, tiffField0.getDirectoryType());
      assertEquals(1378L, tiffField0.getCount());
      assertEquals(1378, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(51041, 51041, fieldTypeDouble0, 51041, 51041, byteArray0, byteOrder0, 51041);
      String string0 = tiffField0.getValueDescription();
      assertEquals(51041, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(51041L, tiffField0.getCount());
      assertEquals(51041, tiffField0.getSortHint());
      assertEquals(51041, tiffField0.getDirectoryType());
      assertEquals(51041, tiffField0.getTag());
      assertEquals(408328, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51041, 10, fieldTypeLong0, 51041, (-69L), byteArray0, byteOrder0, 2460);
      String string0 = tiffField0.getValueDescription();
      assertEquals(51041, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(51041L, tiffField0.getCount());
      assertEquals(204164, tiffField0.getBytesLength());
      assertEquals(2460, tiffField0.getSortHint());
      assertEquals((-69), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0, 19, 19, byteArray0, byteOrder0, 19);
      String string0 = tiffField0.toString();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(76, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals("19 (0x13: Unknown Tag): 0, 0, 0 (19 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3672, 3672, fieldTypeShort0, 3672, 2124L, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3672, tiffField0.getDirectoryType());
      assertEquals(3672, tiffField0.getTag());
      assertEquals(2124, tiffField0.getOffset());
      assertEquals(3672L, tiffField0.getCount());
      assertEquals(7344, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2995, (-1016), fieldTypeAscii0, 1539, (-1016), byteArray0, byteOrder0, 24);
      tiffField0.dump();
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-1016), tiffField0.getOffset());
      assertEquals(1539, tiffField0.getBytesLength());
      assertEquals(1539L, tiffField0.getCount());
      assertEquals(2995, tiffField0.getTag());
      assertEquals((-1016), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(37, 2313, fieldTypeAscii0, 1L, 2313, byteArray0, byteOrder0, 2313);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(37, tiffField0.getTag());
      assertEquals(2313, tiffField0.getOffset());
      assertEquals(2313, tiffField0.getSortHint());
      assertEquals(2313, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3672, 1, fieldTypeShort0, 1, 3672, byteArray0, byteOrder0, 3672);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3672, tiffField0.getTag());
      assertEquals(3672, tiffField0.getOffset());
      assertEquals(3672, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-121), (byte) (-121), fieldTypeShort0, 1798, (byte) (-121), byteArray0, byteOrder0, (byte) (-121));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-121), 1798);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-121), tiffField0.getTag());
      assertEquals((-121), tiffField0.getOffset());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals(3596, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3160, 3160, fieldTypeShort0, 3160, 3160, byteArray0, byteOrder0, 3160);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3160, 3160);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(3160, tiffField0.getDirectoryType());
      assertEquals(3160, tiffField0.getSortHint());
      assertEquals(3160, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertNotNull(string0);
      assertEquals(3160, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeLong0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getFieldTypeName();
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(96, 96, fieldTypeByte0, 96, 96, byteArray0, byteOrder0, 96);
      int int0 = tiffField0.getSortHint();
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(96, int0);
      assertEquals(96, tiffField0.getTag());
      assertEquals(96, tiffField0.getOffset());
      assertEquals(96, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2465), fieldTypeRational0, (-1337L), 76L, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18249, (-3611), fieldTypeRational0, (-3611), 3207L, (byte[]) null, byteOrder0, 1505);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, byteArray0, byteOrder0, 16);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(16, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(16L, tiffElement0.offset);
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
  }
}
