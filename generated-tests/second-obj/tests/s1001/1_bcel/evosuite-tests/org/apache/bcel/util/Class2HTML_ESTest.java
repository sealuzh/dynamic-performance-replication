/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:49:07 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class2HTML.toHTML("java.util.Iterator");
      ClassPath classPath0 = new ClassPath("java.lang.reflect.GenericDeclaration");
      ClassPath classPath1 = new ClassPath(classPath0, "java.lang.reflect.GenericDeclaration");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath1);
      classPath1.equals(syntheticRepository0);
      classPath1.getResources("void");
      JavaClass javaClass0 = syntheticRepository0.loadClass("java.lang.reflect.GenericDeclaration");
      JavaClass javaClass1 = javaClass0.copy();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "java.util.Iterator");
      Class2HTML.referenceType("java.lang.reflect.GenericDeclaration");
      Pattern.quote("O5zscxbwS&:Bq39<n");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(60);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 60. Constant pool size is: 13
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-ip";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "u!|R^1b!n4AV>*=";
      stringArray0[1] = "-zip";
      stringArray0[2] = "FULL";
      stringArray0[3] = ":aFv$0PLN;T";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // FULL (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = Class2HTML.referenceType("d_)hL|uHKq&%[v7");
      java.lang.ClassLoader.getSystemClassLoader();
      String string1 = Pattern.quote("d_)hL|uHKq&%[v7");
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Pattern.quote("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "B5600n+Yt2v";
      ClassPath classPath0 = new ClassPath("B5600n+Yt2v");
      ClassPath classPath1 = new ClassPath(classPath0, "#<'DDI%");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath1);
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.setClassName("-d");
      classPathRepository0.clear();
      String string1 = "java.time.Clock";
      classPathRepository0.clear();
      classPathRepository0.clear();
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "-d");
      // Undeclared exception!
      try { 
        Class2HTML.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'_*";
      stringArray0[1] = "-d";
      stringArray0[2] = "{^OO/`bt?o";
      stringArray0[3] = "]D6HS[M*X";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "-d";
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = ".";
      stringArray0[1] = "java.lang.StringBuffer";
      stringArray0[2] = "-d";
      stringArray0[3] = "";
      stringArray0[4] = "$";
      stringArray0[5] = "byte";
      stringArray0[6] = "zF+,?OlXV '";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class2HTML.toHTML("_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NME=\"Attribtes\" SRC=\"");
      Pattern.quote("_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;FRAME NME=\"Attribtes\" SRC=\"");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">";
      stringArray0[1] = "-d";
      stringArray0[2] = "java.lang.StringBuilder/";
      ClassPath classPath0 = new ClassPath("_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;FRAME NME=\"Attribtes\" SRC=\"");
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
