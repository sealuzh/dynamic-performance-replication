/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:42:14 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[63];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1769, 1769, fieldTypeShort0, 1769, 1769, byteArray0, byteOrder0, 1769);
      tiffField0.dump();
      assertEquals(1769, tiffField0.getDirectoryType());
      assertEquals(3538, tiffField0.getBytesLength());
      assertEquals(1769L, tiffField0.getCount());
      assertEquals(1769, tiffField0.getOffset());
      assertEquals(1769, tiffField0.getTag());
      assertEquals(1769, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0, 2408, 2408, byteArray0, byteOrder0, 2408);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeFloat0, 2374, 2374, byteArray0, byteOrder0, 2374);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7e9a7c45 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[33];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1769, 1769, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 1769);
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      tiffField0.getDoubleArrayValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1769, tiffField0.getDirectoryType());
      assertEquals(1769, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1769, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[51];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0, 1778, 1778, byteArray0, byteOrder0, 1778);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1778 (0x6f2: Unknown Tag): ", string0);
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1778, tiffField0.getDirectoryType());
      assertEquals(1778, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1769, 1769, fieldTypeShort0, 1769, 1769, byteArray0, byteOrder0, 1769);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1769, tiffField0.getTag());
      assertEquals(1769, tiffField0.getSortHint());
      assertEquals(1769, int0);
      assertEquals(1769, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2379, 2379, fieldTypeFloat0, 2379, 2379, byteArray0, byteOrder0, 2379);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2379, 2379);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(2379, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(2379, tiffField0.getSortHint());
      assertEquals(2379, tiffField0.getDirectoryType());
      assertEquals(2379, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[101];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1791, 1791, fieldTypeLong0, 1791, 1791, byteArray0, byteOrder0, 1791);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1791, tiffField0.getOffset());
      assertEquals(1791, tiffField0.getDirectoryType());
      assertEquals(1791, tiffField0.getSortHint());
      assertEquals(1791, tiffField0.getTag());
      assertEquals(1791L, tiffField0.getCount());
      assertEquals(7164, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[95];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1791, 1791, fieldTypeLong0, 1791, 1791, byteArray0, byteOrder0, 1791);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@367a0a89
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0.BYTE, 2408, 2408, byteArray0, byteOrder0, 2408);
      tiffField0.dump();
      assertEquals(2408, tiffField0.getOffset());
      assertEquals(2408, tiffField0.getSortHint());
      assertEquals(2408, tiffField0.getDirectoryType());
      assertEquals(2408, tiffField0.getBytesLength());
      assertEquals(2408, tiffField0.getTag());
      assertEquals(2408L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1740, 1740, fieldTypeRational0, 84L, 1740, byteArray0, byteOrder0, 1740);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1740, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(84L, tiffField0.getCount());
      assertEquals(1740L, tiffElement0.offset);
      assertEquals(1740, tiffField0.getSortHint());
      assertEquals(1740, tiffField0.getTag());
      assertEquals(672, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0, 2408, 2408, byteArray0, byteOrder0, 2408);
      tiffField0.dump();
      assertEquals(2408, tiffField0.getOffset());
      assertEquals(2408L, tiffField0.getCount());
      assertEquals(19264, tiffField0.getBytesLength());
      assertEquals(2408, tiffField0.getDirectoryType());
      assertEquals(2408, tiffField0.getTag());
      assertEquals(2408, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[56];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0, 1778, 1778, byteArray0, byteOrder0, 1778);
      String string0 = tiffField0.getTagName();
      assertEquals(1778, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x6f2)", string0);
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1778, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[144];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36886, 36886, fieldTypeFloat0, 36886, 36886, byteArray0, byteOrder0, 36886);
      int int0 = tiffField0.getSortHint();
      assertEquals(36886, int0);
      assertEquals(36886, tiffField0.getDirectoryType());
      assertEquals(36886, tiffField0.getOffset());
      assertEquals(36886, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[162];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36884, 36884, fieldTypeFloat0, 36884, 36884, byteArray0, byteOrder0, 36884);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(36884, 36884);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(36884, tiffField0.getTag());
      assertEquals(147536, tiffField0.getBytesLength());
      assertEquals(36884L, tiffField0.getCount());
      assertNull(string0);
      assertEquals(36884, tiffField0.getDirectoryType());
      assertEquals(36884, tiffField0.getSortHint());
      assertEquals(36884, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[156];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36886, 36886, fieldTypeFloat0, 36886, 36886, byteArray0, byteOrder0, 36886);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1d08b315 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1761, 1761, fieldTypeAscii0.SLONG, 1761, 1761, byteArray0, byteOrder0, 1761);
      tiffField0.dump();
      assertEquals(1761, tiffField0.getTag());
      assertEquals(1761L, tiffField0.getCount());
      assertEquals(1761, tiffField0.getDirectoryType());
      assertEquals(7044, tiffField0.getBytesLength());
      assertEquals(1761, tiffField0.getSortHint());
      assertEquals(1761, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2356, 2356, fieldTypeFloat0, 2356, 2356, byteArray0, byteOrder0, 2356);
      tiffField0.getDoubleArrayValue();
      assertEquals(2356, tiffField0.getSortHint());
      assertEquals(2356, tiffField0.getTag());
      assertEquals(2356, tiffField0.getDirectoryType());
      assertEquals(9424, tiffField0.getBytesLength());
      assertEquals(2356, tiffField0.getOffset());
      assertEquals(2356L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0.BYTE, 2408, 2408, byteArray0, byteOrder0, 2408);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3b2a0fa5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[101];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1791, 1791, fieldTypeLong0, 1791, 1791, byteArray0, byteOrder0, 1791);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeAscii0, 1778, 1778, byteArray0, byteOrder0, 1778);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "p?uSU~?K|:ZwNHYXK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1769, 1769, fieldTypeShort0, 1769, 1769, byteArray0, byteOrder0, 1769);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1789, 1789, fieldTypeShort0, 1789, 1789, byteArray0, byteOrder0, 1789);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@5e957650
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 65535);
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      tiffField0.getDoubleArrayValue();
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0, 2408, 2408, byteArray0, byteOrder0, 2408);
      tiffField0.getDoubleArrayValue();
      tiffField0.getFieldTypeName();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50717, 50717, fieldTypeFloat0, 50717, 50717, byteArray0, byteOrder0, 50717);
      String string0 = tiffField0.getTagName();
      assertEquals(50717, tiffField0.getDirectoryType());
      assertEquals(50717, tiffField0.getOffset());
      assertEquals("WhiteLevel", string0);
      assertEquals(50717, tiffField0.getSortHint());
      assertEquals(50717, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(950, 950, fieldTypeDouble0, 950, 950, byteArray0, byteOrder0, 950);
      tiffField0.dump();
      assertEquals(950, tiffField0.getDirectoryType());
      assertEquals(950, tiffField0.getSortHint());
      assertEquals(950, tiffField0.getTag());
      assertEquals(950L, tiffField0.getCount());
      assertEquals(7600, tiffField0.getBytesLength());
      assertEquals(950, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeDouble0, 38, 38, byteArray0, byteOrder0, 38);
      tiffField0.dump();
      tiffField0.getDoubleArrayValue();
      assertEquals(38, tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(38L, tiffField0.getCount());
      assertEquals(38, tiffField0.getTag());
      assertEquals(304, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 2408, fieldTypeRational0, 2408, 2408, byteArray0, byteOrder0, 2408);
      tiffField0.getIntArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 1778);
      tiffField0.getIntArrayValue();
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1778, tiffField0.getDirectoryType());
      assertEquals(1778, tiffField0.getTag());
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2408, 41730, fieldTypeRational0, 41730, 400L, byteArray0, byteOrder0, 1577);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(277, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(277, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1776, 40960, fieldTypeAscii0, 40960, 40960, byteArray0, byteOrder0, 1776);
      tiffField0.dump();
      assertEquals(1776, tiffField0.getSortHint());
      assertEquals(40960, tiffField0.getBytesLength());
      assertEquals(40960L, tiffField0.getCount());
      assertEquals(40960, tiffField0.getOffset());
      assertEquals(1776, tiffField0.getTag());
      assertEquals(40960, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[82];
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-1931), 1769, fieldTypeByte0, 1769, 1769, byteArray0, byteOrder1, 1769);
      tiffField0.dump();
      assertEquals((-1931), tiffField0.getTag());
      assertEquals(1769, tiffField0.getOffset());
      assertEquals(1769L, tiffField0.getCount());
      assertEquals(1769, tiffField0.getDirectoryType());
      assertEquals(1769, tiffField0.getSortHint());
      assertEquals(1769, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1778, 1778, fieldTypeAscii0, 1778, 1778, byteArray0, byteOrder0, 1778);
      tiffField0.dump();
      String string0 = tiffField0.getStringValue();
      assertEquals(1778, tiffField0.getSortHint());
      assertEquals(1778, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1778L, tiffField0.getCount());
      assertEquals(1778, tiffField0.getTag());
      assertEquals(1778, tiffField0.getBytesLength());
      assertEquals(1778, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[108];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1782, 1782, fieldTypeShort0, 1782, 1782, byteArray0, byteOrder0, 1782);
      tiffField0.dump();
      assertEquals(1782, tiffField0.getOffset());
      assertEquals(3564, tiffField0.getBytesLength());
      assertEquals(1782L, tiffField0.getCount());
      assertEquals(1782, tiffField0.getDirectoryType());
      assertEquals(1782, tiffField0.getSortHint());
      assertEquals(1782, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(788, 788, fieldTypeFloat0, 788, 788, byteArray0, byteOrder0, 788);
      String string0 = tiffField0.toString();
      assertEquals(788, tiffField0.getOffset());
      assertEquals(788, tiffField0.getSortHint());
      assertEquals(788, tiffField0.getDirectoryType());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals("788 (0x314: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (788 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[384];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeLong0, 2374, 2374, byteArray0, byteOrder0, 2374);
      tiffField0.dump();
      assertEquals(2374, tiffField0.getOffset());
      assertEquals(2374, tiffField0.getSortHint());
      assertEquals(2374, tiffField0.getDirectoryType());
      assertEquals(9496, tiffField0.getBytesLength());
      assertEquals(2374, tiffField0.getTag());
      assertEquals(2374L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[417];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1795, 1795, fieldTypeDouble0, 2298L, (-1577L), byteArray0, byteOrder0, 1795);
      tiffField0.dump();
      assertEquals(1795, tiffField0.getDirectoryType());
      assertEquals(18384, tiffField0.getBytesLength());
      assertEquals((-1577), tiffField0.getOffset());
      assertEquals(1795, tiffField0.getTag());
      assertEquals(2298L, tiffField0.getCount());
      assertEquals(1795, tiffField0.getSortHint());
  }
}
