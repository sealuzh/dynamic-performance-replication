/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 09:49:56 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      classWriter0.index = (-1394);
      ByteVector byteVector0 = new ByteVector(43);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "A=!", ")eI", "%", (Object) null);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      classWriter0.visitField((-1316), "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wheel.asm.FieldWriter";
      stringArray0[1] = "heel.asm.FieldWriter";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "wheel.asm.FieldWriter";
      stringArray0[4] = "value ";
      classWriter0.visit(49, 50, "ConstantValue", "", "heel.asm.FieldWriter", stringArray0);
      ByteVector byteVector0 = new ByteVector(65535);
      classWriter0.lastField.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-1316), "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wheel.asm.FieldWriter";
      stringArray0[1] = "heel.asm.FieldWriter";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "wheel.asm.FieldWriter";
      stringArray0[4] = "value ";
      classWriter0.visit(49, 50, "ConstantValue", "", "heel.asm.FieldWriter", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      classWriter0.index = (-1963);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-1316), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-16), "eLS\"8Q", "'>2o(PE6W~=SD\"uwq6", "'>2o(PE6W~=SD\"uwq6", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048565));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D|Cs#h>8K39XyZ~ob`", "D|Cs#h>8K39XyZ~ob`", (String) null, "D|Cs#h>8K39XyZ~ob`");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048565));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D|Cs#h>8K39XyZ~ob`", "D|Cs#h>8K39XyZ~ob`", (String) null, "D|Cs#h>8K39XyZ~ob`");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-1048565);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 65535, "D|Cs#h>8K3XyZob`", "D|Cs#h>8K3XyZob`", "W#wv]7", "D|Cs#h>8K3XyZob`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3085);
      ByteVector byteVector0 = new ByteVector(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, ":AZaF_:@R^Yr6&S|W", ":AZaF_:@R^Yr6&S|W", ":AZaF_:@R^Yr6&S|W", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ByteVector@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4314);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(1);
      byteVector1.length = (-1931);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1), ";", "org.apache.commons.io.IOCase", "Signature", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(8, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(25165824, ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W");
      ByteVector byteVector0 = new ByteVector(4096);
      fieldWriter0.visitAnnotation(":AZaF_:@R^AYr6&S|W", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2356);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "`Dx", "`Dx", "`Dx", "`Dx");
      fieldWriter0.visitAnnotation("`Dx", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      classWriter0.visitField((-1316), "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wheel.asm.FieldWriter";
      stringArray0[1] = "heel.asm.FieldWriter";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "wheel.asm.FieldWriter";
      stringArray0[4] = "value ";
      classWriter0.visit(50, (-1316), "heel.asm.FieldWriter", "wheel.asm.FieldWriter", "value ", stringArray0);
      ByteVector byteVector0 = new ByteVector(65535);
      classWriter0.lastField.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      classWriter0.visitField((-1316), "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter");
      ByteVector byteVector0 = new ByteVector(65535);
      classWriter0.lastField.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1394), "A=!", "A=!", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(43);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(3, "i^bf", "i^bf", "i^bf", "i^bf");
      Attribute attribute0 = new Attribute("i^bf");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1316));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-1316), "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter", "heel.asm.FieldWriter");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "wheel.asm.FieldWriter";
      stringArray0[1] = "heel.asm.FieldWriter";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "wheel.asm.FieldWriter";
      stringArray0[4] = "value ";
      classWriter0.visit(50, (-1316), "heel.asm.FieldWriter", "wheel.asm.FieldWriter", "value ", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "A=!", ")eI", "%", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1394), "A=!", "A=!", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1337));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1337), "wheel.asm.FieldWriter", "", "", "~tB[-{|$3NIcQR!>4HL");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1394), "A=!", "A=!", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("7K|:o-Q ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1394));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1394), "A=!", "A=!", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "A=!", ")eI", "%", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1337));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1337), "wheel.asm.FieldWriter", "", "", "~tB[-{|$3NIcQR!>4HL");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(25165824, ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W", ":AZaF_:@R^AYr6&S|W");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
