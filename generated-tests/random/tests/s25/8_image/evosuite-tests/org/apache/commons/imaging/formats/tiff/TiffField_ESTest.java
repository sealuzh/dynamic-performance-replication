/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 09:54:25 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)102;
      byteArray0[4] = (byte)10;
      TiffField tiffField0 = new TiffField(373, 373, fieldTypeRational0, 373, 373, byteArray0, (ByteOrder) null, (-2146885961));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2611, int0);
      assertEquals((-2146885961), tiffField0.getSortHint());
      assertEquals(373, tiffField0.getDirectoryType());
      assertEquals(373, tiffField0.getTag());
      assertEquals(373, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)10;
      TiffField tiffField0 = new TiffField(373, 373, fieldTypeRational0, 373, 373, byteArray0, (ByteOrder) null, (-2146885961));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(373, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-2146885961), tiffField0.getSortHint());
      assertEquals(373, tiffField0.getOffset());
      assertEquals(373, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50833, 50833, fieldTypeDouble0, (-2147483648L), (-1659L), byteArray0, byteOrder0, (byte)124);
      assertEquals(0, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(50833, tiffField0.getDirectoryType());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals((-1659), tiffField0.getOffset());
      assertEquals(50833, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeAscii0, 1L, (-5800L), byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getSortHint();
      assertEquals((-5800), tiffField0.getOffset());
      assertEquals(930, tiffField0.getTag());
      assertEquals(930, tiffField0.getDirectoryType());
      assertEquals(73, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1285), (-1379), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (byte)38);
      tiffField0.getOffset();
      assertEquals((-1379), tiffField0.getDirectoryType());
      assertEquals((-1285), tiffField0.getTag());
      assertEquals(38, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      int int0 = tiffField0.getOffset();
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals((-3331), int0);
      assertEquals(462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)79;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(514, (-851), fieldTypeLong0, 30680L, 255L, byteArray0, byteOrder0, 50255);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-851), tiffField0.getDirectoryType());
      assertEquals(514, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(122720, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-11);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2816), int0);
      assertEquals(924, tiffField0.getBytesLength());
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals(462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-65);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 2147102685);
      tiffField0.getIntValue();
      assertEquals(2147102685, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      tiffField0.getCount();
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals(462, tiffField0.getTag());
      assertEquals((-3331), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147449476, 2147449476, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 1403);
      tiffField0.getByteOrder();
      assertEquals(2147449476, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1403, tiffField0.getSortHint());
      assertEquals(2147449476, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147449476, 2147449476, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 1403);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(2147449476, tiffField0.getTag());
      assertEquals(1, byteArray1.length);
      assertEquals(1403, tiffField0.getSortHint());
      assertEquals(2147449476, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(154, 8, fieldTypeLong0, 2147483647L, 8, byteArray0, byteOrder0, 48257);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1989, Integer.MAX_VALUE, fieldTypeShort0, 2660L, (-8L), (byte[]) null, byteOrder0, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 7856L, 4, byteArray0, byteOrder0, (byte) (-63));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 7856L, 4, byteArray0, byteOrder0, (byte) (-63));
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1902), ")r5}JLn9p");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1902), 37, fieldTypeFloat0, 0L, 37, byteArray0, byteOrder0, (byte)1);
      tiffField0.getValue();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1902), tiffField0.getTag());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1902), ")r5}JLn9p");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1902), 37, fieldTypeFloat0, 0L, 37, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1902), tiffField0.getTag());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      tiffField0.getTagInfo();
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals(462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 2147102685);
      int int0 = tiffField0.getBytesLength();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, int0);
      assertEquals(2147102685, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50833, 50833, fieldTypeDouble0, (-2147483648L), (-1659L), byteArray0, byteOrder0, (byte)124);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1902), ")r5}JLn9p");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1902), 37, fieldTypeFloat0, 0L, 37, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-884), (-884), fieldTypeAscii0, 1052L, 1052L, byteArray0, byteOrder0, (byte)10);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@54144f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-308), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-308), (-308), fieldTypeLong0, 1L, (-1169L), byteArray0, byteOrder0, (-1827));
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-308), tiffField0.getDirectoryType());
      assertEquals((-308), tiffField0.getTag());
      assertEquals((-1827), tiffField0.getSortHint());
      assertEquals((-1169), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1460, (byte) (-107), fieldTypeByte0, 144, (byte) (-107), byteArray0, (ByteOrder) null, (byte) (-89));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@470f7575 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, (-1789569705));
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1789569705), tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2864), (-2864), fieldTypeDouble0, 149L, (-2864), byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2864), tiffField0.getDirectoryType());
      assertEquals(1192, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2864), tiffField0.getTag());
      assertEquals((-2864), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 34855, fieldTypeLong0, 3044L, 65535, byteArray0, byteOrder0, (byte)7);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(34855, tiffField0.getDirectoryType());
      assertEquals(12176, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-559), (-559), fieldTypeRational0, 2868L, 1L, byteArray0, byteOrder0, (byte) (-66));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-559), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(22944, tiffField0.getBytesLength());
      assertEquals((-559), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 2147102685);
      tiffField0.getDoubleArrayValue();
      assertEquals(68, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2147102685, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      tiffField0.getDoubleArrayValue();
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals(924, tiffField0.getBytesLength());
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals(462, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 3718, fieldTypeByte0, 2147483647L, (-3160L), byteArray0, byteOrder0, (byte)35);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@717730e9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-69);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4124, 4124, fieldTypeRational0, 4124, (-2323L), byteArray0, byteOrder0, (byte)14);
      tiffField0.getIntArrayValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(4124, tiffField0.getDirectoryType());
      assertEquals((-2323), tiffField0.getOffset());
      assertEquals(4124, tiffField0.getTag());
      assertEquals(32992, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147449476, 2147449476, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 1403);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2147449476, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2147449476, tiffField0.getDirectoryType());
      assertEquals(1403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals(462, tiffField0.getTag());
      assertEquals(924, tiffField0.getBytesLength());
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals(462L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1789569705), (-1789569705), fieldTypeAscii0, (-8589934592L), (-8589934592L), byteArray0, byteOrder0, (byte)92);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1789569705), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1789569705), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2864), (-2864), fieldTypeDouble0, 149L, (-2864), byteArray0, (ByteOrder) null, (byte) (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@597e963c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(110, "W+APuR/z0AM`q/&OI!");
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeDouble0, 110, 110, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(110, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x6e)", string0);
      assertEquals(110, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(8, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50933, 50933, fieldTypeRational0, 8, (-2147483648L), byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(50933, tiffField0.getTag());
      assertEquals("ExtraCameraProfiles", string0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50933, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(287, 287, fieldTypeFloat0, 2480L, 4670L, byteArray0, byteOrder0, 2147483646);
      String string0 = tiffField0.getValueDescription();
      assertEquals(9920, tiffField0.getBytesLength());
      assertEquals(2147483646, tiffField0.getSortHint());
      assertEquals(287, tiffField0.getDirectoryType());
      assertEquals(287, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4670, tiffField0.getOffset());
      assertEquals(2480L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2209, (-1), fieldTypeFloat0, 2209, 1L, byteArray0, byteOrder0, 2146712558);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1853, "3:-]B");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 7856L, 7856L, byteArray0, byteOrder0, 0);
      MockFile mockFile0 = new MockFile("", "3:-]B");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(7856, tiffField0.getBytesLength());
      assertEquals(68L, mockFile0.length());
      assertEquals(7856, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1902), ")r5}JLn9p");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1902), 37, fieldTypeFloat0, 0L, 37, byteArray0, byteOrder0, (byte)1);
      File file0 = MockFile.createTempFile(")r5}JLn9p", ")r5}JLn9p");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, ")r5}JLn9p");
      assertEquals(63L, file0.length());
      assertEquals((-1902), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1877), (-1877), fieldTypeLong0, 2681L, 20896L, byteArray0, (ByteOrder) null, 520);
      String string0 = tiffField0.toString();
      assertEquals(20896, tiffField0.getOffset());
      assertEquals((-1877), tiffField0.getDirectoryType());
      assertEquals(10724, tiffField0.getBytesLength());
      assertEquals(520, tiffField0.getSortHint());
      assertEquals("-1877 (0xfffff8ab: Unknown Tag): 0, 0 (2681 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      tiffField0.dump();
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals(924, tiffField0.getBytesLength());
      assertEquals(462, tiffField0.getTag());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals(462L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1267), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1744), 2146734090, fieldTypeAscii0, 2146734090, 1187L, byteArray0, byteOrder0, 50255);
      tiffField0.dump();
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(2146734090L, tiffField0.getCount());
      assertEquals(2146734090, tiffField0.getBytesLength());
      assertEquals((-1744), tiffField0.getTag());
      assertEquals(2146734090, tiffField0.getDirectoryType());
      assertEquals(1187, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeAscii0, 1L, (-5800L), byteArray0, byteOrder0, (byte)73);
      tiffField0.toString();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(930, tiffField0.getTag());
      assertEquals((-5800), tiffField0.getOffset());
      assertEquals(930, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 2147102685);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(p$9$l9sYM80*S@)f");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2147102685, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeAscii0, 1L, (-5800L), byteArray0, byteOrder0, (byte)73);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(930, tiffField0.getDirectoryType());
      assertEquals(930, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-5800), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(110, "W+APuR/z0AM`q/&OI!");
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeDouble0, 110, 110, byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147473108, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(110, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(110, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(110, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(110, "W+APuR/z0AM`q/&OI!");
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeDouble0, 110, 110, byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147473108, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: W+APuR/z0AM`q/&OI!", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals(110, tiffField0.getTag());
      assertEquals(110, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 1, fieldTypeLong0, 1, 2147483647L, byteArray0, byteOrder0, 2147102685);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(2147102685, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, (byte)18);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 7856L, 4, byteArray0, byteOrder0, (byte) (-63));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, int0);
      assertEquals(7856L, tiffField0.getCount());
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(110, "W+APuR/z0AM`q/&OI!");
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeDouble0, 110, 110, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(110, tiffField0.getOffset());
      assertEquals(110, tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals(110, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(462, (-3331), fieldTypeShort0, 462, (-3331), byteArray0, byteOrder0, (-2146279225));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-3331), tiffField0.getDirectoryType());
      assertEquals((-2146279225), tiffField0.getSortHint());
      assertEquals((-3331), tiffField0.getOffset());
      assertEquals("462 (0x1ce: Unknown Tag): ", string0);
      assertEquals(462L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(110, "W+APuR/z0AM`q/&OI!");
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeDouble0, 110, 110, byteArray0, byteOrder0, (-1));
      tiffField0.dump();
      assertEquals(880, tiffField0.getBytesLength());
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals(110L, tiffField0.getCount());
      assertEquals(110, tiffField0.getTag());
      assertEquals(110, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2864), (-2864), fieldTypeDouble0, 149L, (-2864), byteArray0, (ByteOrder) null, (byte) (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-2864), tiffField0.getTag());
      assertEquals((-2864), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2864L), tiffElement0.offset);
  }
}
