/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 01:01:33 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.PushbackReader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", (-91));
      Object[] objectArray0 = new Object[0];
      jSONReaderScanner0.lexError("", objectArray0);
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 16384);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) jSONReaderScanner0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) jSONReaderScanner0;
      objectArray0[3] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.lexError((String) null, objectArray0);
      jSONReaderScanner0.stringVal();
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertTrue(boolean0);
      
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.indexOf('Y', 79);
      jSONReaderScanner0.close();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 4136);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 0);
      jSONReaderScanner0.sub_chars(0, 0);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("[Y\",}Oi:X1DJT");
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertFalse(boolean0);
      assertEquals('[', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'y';
      charArray0[2] = 'i';
      charArray0[3] = 'C';
      charArray0[4] = '@';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString((-214748364), (-214748364));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -214748364
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 4136);
      jSONReaderScanner0.subString(4136, 4136);
      jSONReaderScanner0.bytesValue();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Imhem\"AZh#");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      uTF8Decoder0.reset();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("Imhem\"AZh#");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      Charset.defaultCharset();
      CharBuffer charBuffer1 = charset0.decode(byteBuffer0);
      charBuffer0.read(charBuffer1);
      stringReader0.read(charBuffer0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, 1277);
      jSONReaderScanner0.indexOf('w', 1277);
      jSONReaderScanner0.scanInt('w');
      jSONReaderScanner0.subString(1162, 0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(1368, charArray0, 1368, 1391);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 969;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed string : ", 969);
      char char0 = ':';
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = 'b';
      charArray0[2] = ':';
      charArray0[3] = ':';
      charArray0[4] = ':';
      charArray0[5] = ':';
      JSON.DEFAULT_PARSER_FEATURE = 0;
      charArray0[6] = ':';
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.sp = 969;
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 65536, 65536);
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("xF'RugB");
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertTrue(boolean0);
      assertEquals('x', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      assertTrue(jSONReaderScanner0.isEOF());
      
      jSONReaderScanner0.nextToken(83);
      jSONReaderScanner0.putChar('s');
      String string0 = jSONReaderScanner0.numberString();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 0);
      jSONReaderScanner0.sub_chars(0, 0);
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertFalse(boolean0);
      
      jSONReaderScanner0.bytesValue();
      assertEquals('T', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("i", (-271));
      char char0 = JSONLexer.EOI;
      jSONReaderScanner0.indexOf('F', 16384);
      String string0 = jSONReaderScanner0.subString(16384, 16384);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'n';
      charArray0[4] = 'Y';
      charArray0[5] = 'V';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 38, 38);
      jSONReaderScanner1.longValue();
      char[] charArray1 = new char[7];
      charArray1[0] = 'V';
      charArray1[1] = 'n';
      charArray1[2] = 'V';
      charArray1[3] = 'n';
      charArray1[4] = 'V';
      charArray1[5] = '`';
      charArray1[6] = 'R';
      jSONReaderScanner0.scanFieldDate(charArray1);
      jSONReaderScanner1.indexOf('V', 0);
      jSONReaderScanner1.subString(7, 68);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.copyTo((-2), 323, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[8];
      charArray0[0] = 's';
      charArray0[1] = 'l';
      charArray0[2] = 'z';
      charArray0[3] = '[';
      charArray0[4] = 'K';
      charArray0[5] = 'U';
      charArray0[6] = '=';
      charArray0[7] = '~';
      jSONReaderScanner0.scanFieldFloat(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(65279, 65279);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'U';
      charArray0[2] = '$';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 397);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "x><r";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) jSONReaderScanner0;
      objectArray0[3] = (Object) jSONReaderScanner0;
      objectArray0[4] = (Object) "x><r";
      objectArray0[5] = (Object) charArray0;
      objectArray0[6] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.next();
      objectArray0[7] = (Object) charArray0;
      jSONReaderScanner0.lexError("x><r", objectArray0);
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.stringVal();
      SymbolTable symbolTable0 = new SymbolTable(1640);
      jSONReaderScanner0.addSymbol(1640, 1640, 1640, symbolTable0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(16384, charArray0, 77, 397);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2;6:;w");
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1962, 1962);
      jSONReaderScanner0.matchField(charArray0);
      jSONReaderScanner0.bytesValue();
      assertEquals(20, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      charArray0[1] = 'U';
      charArray0[2] = '$';
      int int0 = 3;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3, 3);
      String string0 = "8/-mxIB";
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        jSONReaderScanner0.matchField(charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 0);
      jSONReaderScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(0, (-1918));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1918
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-");
      jSONReaderScanner0.nextToken(1119);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO");
      jSONReaderScanner0.indexOf('y', 90);
      assertTrue(jSONReaderScanner0.isEOF());
      
      jSONReaderScanner0.close();
      assertEquals('T', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 0);
      jSONReaderScanner0.bp = 3;
      jSONReaderScanner0.next();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("5OR+L:ly_=]&9oB;", 0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.isBlankInput();
      BigDecimal bigDecimal0 = jSONReaderScanner0.decimalValue();
      assertEquals((short)5, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO", 0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      charArray0[1] = 'U';
      charArray0[0] = '3';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3, 3);
      jSONReaderScanner0.matchField(charArray0);
      jSONReaderScanner0.subString(3, 3);
      jSONReaderScanner0.charArrayCompare(charArray0);
      jSONReaderScanner0.bytesValue();
      assertEquals(20, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'E';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" l6k", 68);
      jSONReaderScanner0.nextToken(113);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0L-m}$0{y.-~'bq", (-816));
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.nextToken((-272));
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.decimalValue();
      assertEquals((-2), jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-S,?");
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.numberString();
      assertEquals(2, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("iA!\"F$RaEO\"8l^p");
      jSONReaderScanner0.eofPos = 3812;
      jSONReaderScanner0.scanString();
      jSONReaderScanner0.numberString();
      char[] charArray0 = new char[8];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("iA");
      jSONReaderScanner1.indexOf('}', 0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(pushbackReader0);
      charArrayReader0.reset();
      jSONReaderScanner2.nextToken((-2372));
      // Undeclared exception!
      try { 
        jSONReaderScanner2.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1SH?");
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.decimalValue();
      assertEquals('H', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("nM03G/@,>\"");
      jSONReaderScanner0.scanString();
      jSONReaderScanner0.numberString();
      assertTrue(jSONReaderScanner0.isEOF());
  }
}
