/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:40:27 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)66, (byte)66, fieldTypeLong0, (byte)66, (byte)66, byteArray0, byteOrder0, (byte)66);
      tiffField0.getDoubleArrayValue();
      assertEquals(66, tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(264, tiffField0.getBytesLength());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(340, 340, fieldTypeAscii0, 340, 340, byteArray0, byteOrder0, 340);
      tiffField0.getFieldTypeName();
      assertEquals(340, tiffField0.getOffset());
      assertEquals(340, tiffField0.getSortHint());
      assertEquals(340, tiffField0.getTag());
      assertEquals(340, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 3552L, 402L, (byte[]) null, byteOrder0, 32);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals("5 (0x5: Unknown Tag): ", string0);
      assertEquals(402, tiffField0.getOffset());
      assertEquals(3552L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeAscii0, 12, (-4187L), byteArray0, byteOrder0, 12);
      int int0 = tiffField0.getSortHint();
      int int1 = tiffField0.getBytesLength();
      assertTrue(int1 == int0);
      assertEquals((-4187), tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, int1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeLong0, 66, (-2838L), byteArray0, byteOrder0, (-2587));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(375, 1747);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2587), tiffField0.getSortHint());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals((-2838), tiffField0.getOffset());
      assertEquals(66, tiffField0.getTag());
      assertEquals(66L, tiffField0.getCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1075, 1075, fieldTypeAscii0, 369L, 369L, byteArray0, byteOrder0, (-1489));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1075, tiffField0.getTag());
      assertEquals(369, tiffField0.getBytesLength());
      assertEquals(369L, tiffElement0.offset);
      assertEquals((-1489), tiffField0.getSortHint());
      assertEquals(1075, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3460, 97, fieldTypeRational0, 3460, 97, byteArray0, byteOrder0, 97);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3460, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(3460L, tiffField0.getCount());
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(27680, tiffField0.getBytesLength());
      assertEquals(97, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[353];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(60, 60, fieldTypeAscii0, 60, (-2147483648L), byteArray0, byteOrder1, 60);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      int int0 = tiffField0.getTag();
      assertEquals(60, tiffField0.getBytesLength());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(60, int0);
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-761), " ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)40;
      TiffField tiffField0 = new TiffField((-761), (-761), fieldTypeRational0, 8456L, 8456L, byteArray0, (ByteOrder) null, 518);
      tiffField0.getIntArrayValue();
      assertEquals((-761), tiffField0.getTag());
      assertEquals((-761), tiffField0.getDirectoryType());
      assertEquals(8456L, tiffField0.getCount());
      assertEquals(518, tiffField0.getSortHint());
      assertEquals(67648, tiffField0.getBytesLength());
      assertEquals(8456, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-430), (-3268), fieldTypeAscii0, 20L, (-930L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: F for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeAscii0, 12, 12, byteArray0, byteOrder0, 12);
      int int0 = Pattern.UNICODE_CASE;
      int int1 = Double.BYTES;
      String string0 = tiffField0.getStringValue();
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(131, 131, fieldTypeDouble0, 48L, 131, byteArray0, byteOrder0, 131);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@78a39ba7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-105);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(614, 614, fieldTypeByte0, 614, 128L, byteArray0, byteOrder0, 4035);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getByteOrder();
      assertEquals(614L, tiffField0.getCount());
      assertEquals(614, tiffField0.getTag());
      assertEquals(614, tiffField0.getDirectoryType());
      assertEquals(614, tiffField0.getBytesLength());
      assertEquals(4035, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)31, (byte)37, fieldTypeShort0, 1L, 1939L, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1939, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(810, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)19;
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte) (-7);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(810, 2726, fieldTypeDouble0, 2726, 2726, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2726L, tiffField0.getCount());
      assertEquals(2726, tiffField0.getDirectoryType());
      assertEquals(810, tiffField0.getTag());
      assertEquals(21808, tiffField0.getBytesLength());
      assertEquals(2726, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2670), (-2670), (FieldType) null, (-2670), (-136L), byteArray0, byteOrder0, (byte)85);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " (");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2283), (-2283), fieldTypeFloat0, (-2283), (-2283), byteArray0, byteOrder0, (-2283));
      int int0 = tiffField0.getOffset();
      int int1 = tiffField0.getDirectoryType();
      assertTrue(int1 == int0);
      
      String string0 = tiffField0.getTagName();
      assertEquals((-2283), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffff715)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 0L, byteArray0, (ByteOrder) null, 50716);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3465fc9a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1075, 1075, fieldTypeAscii0, 1075, 1075, byteArray0, byteOrder0, 1075);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1075, 1075);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)66, 1, fieldTypeLong0, 369L, (-2677L), byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, (byte) (-103));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(66, tiffField0.getTag());
      assertEquals((-2677), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "o{");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1746, 65535, fieldTypeByte0, 65535, 638L, byteArray0, byteOrder0, (-631));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7f78e0f0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/8_image/Unknown Tag (0x419)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "stu>h[\"N/dC");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ByteBuffer.wrap(byteArray0);
      TiffField tiffField0 = new TiffField(1049, 37382, fieldTypeFloat0, 1L, 3141L, byteArray0, byteOrder0, 3600);
      tiffField0.getDoubleArrayValue();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3141, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(37382, tiffField0.getDirectoryType());
      assertEquals(1049, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(3600, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1572, "`M0(XQK\"vC/fO>lQ2\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-30), 1671, fieldTypeRational0, 0L, (byte) (-30), byteArray0, byteOrder0, 2124);
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(5, ":mi");
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-30), tiffField0.getOffset());
      assertEquals(1671, tiffField0.getDirectoryType());
      assertEquals(2124, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-30), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      TiffField tiffField0 = new TiffField(42, (-919), fieldTypeLong0, 595L, 480L, byteArray0, byteOrder0, 700);
      tiffField0.getIntArrayValue();
      assertEquals(700, tiffField0.getSortHint());
      assertEquals((-919), tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getTag());
      assertEquals(595L, tiffField0.getCount());
      assertEquals(480, tiffField0.getOffset());
      assertEquals(2380, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[201];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ET,{+R5 }");
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-601), 13, fieldTypeRational0, 33, (-601), byteArray0, byteOrder0, (-720));
      tiffField0.getDoubleArrayValue();
      assertEquals((-720), tiffField0.getSortHint());
      assertEquals((-601), tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals((-601), tiffField0.getOffset());
      assertEquals(264, tiffField0.getBytesLength());
      assertEquals(33L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-761), " ");
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)40;
      TiffField tiffField0 = new TiffField((-761), (-761), fieldTypeRational0, 8456L, 8456L, byteArray0, (ByteOrder) null, 518);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)31;
      byteArray0[3] = (byte)31;
      byteArray0[3] = (byte)31;
      TiffField tiffField0 = new TiffField(50736, 50736, fieldTypeShort0, 461, 8L, byteArray0, byteOrder0, 461);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(8, int0);
      assertEquals(50736, tiffField0.getDirectoryType());
      assertEquals(922, tiffField0.getBytesLength());
      assertEquals(461L, tiffField0.getCount());
      assertEquals(50736, tiffField0.getTag());
      assertEquals(461, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)122;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)43;
      byteArray0[6] = (byte)32;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(140, 19, fieldTypeShort0, 19, 400L, byteArray0, byteOrder0, (byte)24);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(400, tiffField0.getOffset());
      assertEquals(48661, int0);
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getBytesLength());
      assertEquals(140, tiffField0.getTag());
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-2898), 50733, fieldTypeShort0, 50733, 127L, byteArray0, byteOrder1, 7);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2898), tiffField0.getTag());
      assertEquals(50733, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(101466, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(50733L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[148];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(555, "p6]Lm@sB");
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50728, 145, fieldTypeRational0, 4L, 4L, byteArray0, byteOrder3, 31);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)50, fieldTypeLong0, 50, (-149L), byteArray0, byteOrder0, (-919));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-919), tiffField0.getSortHint());
      assertEquals((-149), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(343, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte) (-80);
      byteArray0[6] = (byte) (-101);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)34);
      ByteBuffer byteBuffer1 = byteBuffer0.compact();
      CharBuffer charBuffer0 = byteBuffer1.asCharBuffer();
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(343, 343, fieldTypeLong0, 293L, 293L, byteArray0, byteOrder0, (byte) (-80));
      tiffField0.getIntValueOrArraySum();
      String string0 = tiffField0.getTagName();
      assertEquals(293L, tiffField0.getCount());
      assertEquals(343, tiffField0.getTag());
      assertEquals(1172, tiffField0.getBytesLength());
      assertEquals("ClipPath", string0);
      assertEquals(343, tiffField0.getDirectoryType());
      assertEquals(293, tiffField0.getOffset());
      assertEquals((-80), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      Integer integer0 = new Integer(109);
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1, 109, fieldTypeByte0, 1L, 833L, byteArray0, byteOrder0, 315);
      assertEquals(1L, tiffField0.getCount());
      
      int int0 = Float.SIZE;
      tiffField0.getIntValueOrArraySum();
      int int1 = Pattern.CASE_INSENSITIVE;
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(833, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(315, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(109, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[264];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeFloat0.DOUBLE, 33, 33, byteArray0, byteOrder1, 33);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(33L, tiffElement0.offset);
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-57);
      byteArray0[2] = (byte) (-57);
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte) (-57);
      byteArray0[6] = (byte)39;
      byteArray0[7] = (byte) (-57);
      byteArray0[8] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1313, 1313, fieldTypeShort0, 17128L, 17128L, byteArray0, byteOrder0, (byte)39);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {50959, 18375, 50976, 50983}, intArray0);
      assertEquals(1313, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(34256, tiffField0.getBytesLength());
      assertEquals(17128, tiffField0.getOffset());
      assertEquals(1313, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(275, (byte)34, fieldTypeFloat0, 3004L, 2203L, byteArray0, byteOrder0, (byte) (-116));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-116), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2203, tiffField0.getOffset());
      assertEquals(12016, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(275, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(28, "");
      byte[] byteArray0 = new byte[4];
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(281);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeFloat0, 281, (-115L), byteArray0, byteOrder0, 281);
      tiffField0.getDoubleArrayValue();
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(281, tiffField0.getTag());
      assertEquals(281, tiffField0.getSortHint());
      assertEquals(1124, tiffField0.getBytesLength());
      assertEquals(281, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[186];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 65524;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(65524, 65524, fieldTypeByte0, 1042, 1042, byteArray0, (ByteOrder) null, 1042);
      ByteOrder byteOrder3 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder4 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getValueDescription();
      try { 
        fieldTypeByte0.writeData(byteOrder3, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: LITTLE_ENDIAN (java.nio.ByteOrder)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[291];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50736, 50736, fieldTypeShort0, 50736, 50736, byteArray0, byteOrder0, (-911));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(50736, tiffField0.getTag());
      assertEquals(50736, int0);
      assertEquals((-911), tiffField0.getSortHint());
      assertEquals(101472, tiffField0.getBytesLength());
      assertEquals(50736, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TiffField tiffField0 = new TiffField((-919), 7, fieldTypeLong0, 506L, (byte)50, byteArray0, byteOrder0, (-903));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-919), tiffField0.getTag());
      assertEquals((-903), tiffField0.getSortHint());
      assertEquals(2024, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[264];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-776), (-776), fieldTypeFloat0, (byte)92, (byte)92, byteArray0, byteOrder1, (-776));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (66)", string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(92L, tiffElement0.offset);
      assertEquals((-776), tiffField0.getTag());
      assertEquals((-776), tiffField0.getSortHint());
      assertEquals((-776), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[417];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeFloat0, 3079L, 3079L, byteArray0, byteOrder0, 72);
      tiffField0.dump();
      fieldTypeFloat0.getValue(tiffField0);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField1 = new TiffField(72, 72, fieldTypeFloat0.DOUBLE, 72, 72, byteArray0, byteOrder0, 72);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.UK;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      ByteOrder.nativeOrder();
      tiffField1.getOversizeValueElement();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      tiffField1.toString();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      TiffField tiffField2 = new TiffField(72, 417, fieldTypeFloat0, 72, (-1L), byteArray1, byteOrder0, 72);
      // Undeclared exception!
      try { 
        tiffField2.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
