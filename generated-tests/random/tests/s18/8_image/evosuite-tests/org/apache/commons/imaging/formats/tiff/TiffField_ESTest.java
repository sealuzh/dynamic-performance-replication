/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 03:04:53 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2570, "Unknown: ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)57;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Unknown: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(905, 2570, fieldTypeShort0, 1211L, 2570, byteArray0, byteOrder0, (byte)57);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2570, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(2570, tiffField0.getOffset());
      assertEquals(905, tiffField0.getTag());
      assertEquals(57, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34852, 34852, fieldTypeRational0, 34852, 34852, byteArray0, byteOrder0, (byte)97);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(34852, tiffField0.getTag());
      assertEquals(34852, tiffField0.getDirectoryType());
      assertEquals(34852, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "ql(\"Zui+(<G-^BKO_");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 0L, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeShort0, 0L, 2426L, byteArray0, byteOrder0, 2306);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2426, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2306, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)28;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2832, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)28;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2832, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33447, 50, fieldTypeRational0, 0L, (-2457L), byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getCount();
      assertEquals(33447, tiffField0.getTag());
      assertEquals((-2457), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "6Em");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-1036), fieldTypeAscii0, 6, (-1036), byteArray0, byteOrder0, 1103);
      tiffField0.getCount();
      assertEquals((-1036), tiffField0.getDirectoryType());
      assertEquals(1103, tiffField0.getSortHint());
      assertEquals((-1036), tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeShort0, 0L, 2426L, byteArray0, byteOrder0, 2306);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2426, tiffField0.getOffset());
      assertEquals(2306, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33447, 50, fieldTypeRational0, 0L, (-2457L), byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getByteOrder();
      assertEquals(33447, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals((-2457), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1263, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 8L, 8L, byteArray0, byteOrder0, 50);
      tiffField0.getByteArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, 108);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34, "T9p*7M9E\"($K#HI");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(829, 829, fieldTypeAscii0, (-1787L), 829, byteArray0, byteOrder0, (byte) (-50));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-976), "{%{y\u0003");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(75, 4619, fieldTypeRational0, 5412L, 4619, (byte[]) null, byteOrder0, 75);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41992, 41992, fieldTypeRational0, 41992, (-2763L), byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(41992, tiffField0.getTag());
      assertEquals((-2763), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(41992, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "$cQ!A>TSeGgD@q");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 3248, fieldTypeDouble0, 909L, 65535, byteArray0, byteOrder0, 50975);
      String string0 = tiffField0.toString();
      assertEquals(3248, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(50975, tiffField0.getSortHint());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0 (909 $cQ!A>TSeGgD@q)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33447, 50, fieldTypeRational0, 0L, (-2457L), byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getFieldType();
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(33447, tiffField0.getTag());
      assertEquals((-2457), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "6Em");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-1036), fieldTypeAscii0, 6, (-1036), byteArray0, byteOrder0, 1103);
      tiffField0.getValue();
      assertEquals((-1036), tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-1036), tiffField0.getDirectoryType());
      assertEquals(1103, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147035975, 40965, fieldTypeShort0, 40965, (-2L), byteArray0, byteOrder0, 1028);
      int int0 = tiffField0.getOffset();
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(2147035975, tiffField0.getTag());
      assertEquals((-2), int0);
      assertEquals(1028, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2570, "Unknown: ");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Unknown: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(905, 2570, fieldTypeShort0, 1211L, 2570, byteArray0, byteOrder0, (byte)57);
      tiffField0.getTagInfo();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(2570, tiffField0.getOffset());
      assertEquals(905, tiffField0.getTag());
      assertEquals(2570, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147035975, 40965, fieldTypeShort0, 40965, (-2L), byteArray0, byteOrder0, 1028);
      int int0 = tiffField0.getTag();
      assertEquals(1028, tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(2147035975, int0);
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(556, " for: ");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " for: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(322, 556, fieldTypeRational0, 1598L, (-1735L), byteArray0, byteOrder0, 2479);
      tiffField0.getBytesLength();
      assertEquals((-1735), tiffField0.getOffset());
      assertEquals(556, tiffField0.getDirectoryType());
      assertEquals(322, tiffField0.getTag());
      assertEquals(2479, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3118), (-752), fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, (-756));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, "[]Z7F<+N:gVI12.");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-244), 50, fieldTypeShort0, 50, (-244), byteArray0, byteOrder0, 1684);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33423, 1, fieldTypeByte0, 33423, 33423, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6e5982d4 for: 33423 (0x828f: BatteryLevel): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(482, (-1125), fieldTypeLong0, 482, (-1125), byteArray0, (ByteOrder) null, (byte)90);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1125), tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(482, tiffField0.getTag());
      assertEquals((-1125), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, " (");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, 0, (-2928L), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@73840be for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (-2146737215), (byte)0, byteArray0, byteOrder0, (-972));
      assertEquals(2985732, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-972), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18246, 18246, fieldTypeLong0, 1841L, 1841L, byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleArrayValue();
      assertEquals(18246, tiffField0.getDirectoryType());
      assertEquals(18246, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1841, tiffField0.getOffset());
      assertEquals(7364, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, 108);
      tiffField0.getDoubleArrayValue();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)87, (byte) (-12), fieldTypeShort0, 852L, 8589934588L, byteArray0, byteOrder0, 929);
      tiffField0.getDoubleArrayValue();
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(87, tiffField0.getTag());
      assertEquals(1704, tiffField0.getBytesLength());
      assertEquals((-12), tiffField0.getDirectoryType());
      assertEquals(929, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41992, 41992, fieldTypeRational0, 41992, (-2763L), byteArray0, byteOrder0, 50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(41992, tiffField0.getDirectoryType());
      assertEquals(41992, tiffField0.getTag());
      assertEquals((-2763), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(335936, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2832, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1582, 50726, fieldTypeDouble0, 50726, 2147483647L, byteArray0, byteOrder0, 40960);
      tiffField0.getDoubleArrayValue();
      assertEquals(40960, tiffField0.getSortHint());
      assertEquals(50726, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1582, tiffField0.getTag());
      assertEquals(405808, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (-2146737215), (byte)0, byteArray0, byteOrder0, (-972));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@30ae2552 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, 108);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3118), (-752), fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, (-756));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, "[]Z7F<+N:gVI12.");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-244), 50, fieldTypeShort0, 50, (-244), byteArray0, byteOrder0, 1684);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1684, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-244), tiffField0.getOffset());
      assertEquals((-244), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50879, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50879, (-55), fieldTypeDouble0, (byte)1, (-327L), byteArray0, byteOrder0, 32897);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(32897, tiffField0.getSortHint());
      assertEquals((-55), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(50879, tiffField0.getTag());
      assertEquals((-327), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(556, " for: ");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " for: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(322, 556, fieldTypeRational0, 1598L, (-1735L), byteArray0, byteOrder0, 2479);
      tiffField0.getIntArrayValue();
      assertEquals(1598L, tiffField0.getCount());
      assertEquals(556, tiffField0.getDirectoryType());
      assertEquals((-1735), tiffField0.getOffset());
      assertEquals(12784, tiffField0.getBytesLength());
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals(322, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte) (-103);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4189), (-1670), fieldTypeAscii0, 1012L, (-1670), byteArray0, byteOrder0, 639);
      String string0 = tiffField0.getStringValue();
      assertEquals((-4189), tiffField0.getTag());
      assertEquals(639, tiffField0.getSortHint());
      assertEquals((-1670), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1012, tiffField0.getBytesLength());
      assertEquals((-1670), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "$cQ!A>TSeGgD@q");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 3248, fieldTypeDouble0, 909L, 65535, byteArray0, byteOrder0, 50975);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@467e6e76
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3118), (-752), fieldTypeRational0, 4L, 0L, byteArray0, byteOrder0, (-756));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffff3d2)", string0);
      assertEquals((-756), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-752), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(556, " for: ");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " for: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(322, 556, fieldTypeRational0, 1598L, (-1735L), byteArray0, byteOrder0, 2479);
      String string0 = tiffField0.getTagName();
      assertEquals(556, tiffField0.getDirectoryType());
      assertEquals((-1735), tiffField0.getOffset());
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals("TileWidth", string0);
      assertEquals(322, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3007), (-3007), (FieldType) null, (-3007), 4L, byteArray0, byteOrder0, 1717986918);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147035975, 2147035975, fieldTypeByte0, 2147035975, 2147035975, byteArray0, byteOrder0, (-1135));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1582, 50726, fieldTypeDouble0, 50726, 2147483647L, byteArray0, byteOrder0, 40960);
      MockFile mockFile0 = new MockFile("VIU]PHT\"V)J\u0000nC'", "O*=dcWQ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(56L, mockFile0.length());
      assertEquals(50726, tiffField0.getDirectoryType());
      assertEquals(405808, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(40960, tiffField0.getSortHint());
      assertEquals(1582, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(686, 2, fieldTypeFloat0, 2, 2, byteArray0, byteOrder0, (byte) (-56));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("686 (0x2ae: Unknown Tag): 0.0, 0.0 (2 Float)\n", byteArrayOutputStream0.toString());
      assertEquals(686, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(482, (-1125), fieldTypeLong0, 482, (-1125), byteArray0, (ByteOrder) null, (byte)90);
      String string0 = tiffField0.getValueDescription();
      assertEquals(482, tiffField0.getTag());
      assertEquals((-1125), tiffField0.getOffset());
      assertEquals(482L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-1125), tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(1928, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1263, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 8L, 8L, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "6Em");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)105;
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-1036), fieldTypeAscii0, 6, (-1036), byteArray0, byteOrder0, 1103);
      File file0 = MockFile.createTempFile("iJBeZ7 ;Yw3VYf", "vj{B=v$c-7");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(objectOutputStream0, charsetEncoder0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(66L, file0.length());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2832, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2832, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, 2832);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4191), (byte) (-86));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2832, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeShort0, 0L, 2426L, byteArray0, byteOrder0, 2306);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2306, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(2426, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(556, " for: ");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " for: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(322, 556, fieldTypeRational0, 1598L, (-1735L), byteArray0, byteOrder0, 2479);
      tiffField0.getFieldTypeName();
      assertEquals((-1735), tiffField0.getOffset());
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals(322, tiffField0.getTag());
      assertEquals(556, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(556, " for: ");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " for: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(322, 556, fieldTypeRational0, 1598L, (-1735L), byteArray0, byteOrder0, 2479);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription(false);
      assertEquals(556, tiffField0.getDirectoryType());
      assertEquals((-1735L), tiffElement0.offset);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: TileWidth, fieldType:  for: ", string0);
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals(322, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeShort0, 0L, 2426L, byteArray0, byteOrder0, 2306);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(2306, tiffField0.getSortHint());
      assertEquals(2426, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-976), "{%{y\u0003");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-156), 50972, fieldTypeRational0, 75, (-976), byteArray0, byteOrder0, (byte)100);
      int int0 = tiffField0.getSortHint();
      assertEquals((-156), tiffField0.getTag());
      assertEquals(50972, tiffField0.getDirectoryType());
      assertEquals(100, int0);
      assertEquals((-976), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "$cQ!A>TSeGgD@q");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 3248, fieldTypeDouble0, 909L, 65535, byteArray0, byteOrder0, 50975);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      assertEquals(50975, tiffField0.getSortHint());
      assertEquals(3248, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147035975, 40965, fieldTypeShort0, 40965, (-2L), byteArray0, byteOrder0, 1028);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("2147035975 (0x7ff92b47: Unknown Tag): 0, 0, 0 (40965 SShort)\n", charArrayWriter0.toString());
      assertEquals(40965, tiffField0.getDirectoryType());
  }
}
