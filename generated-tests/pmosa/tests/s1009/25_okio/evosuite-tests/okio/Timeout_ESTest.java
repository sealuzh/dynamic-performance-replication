/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 13:52:33 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InterruptedIOException;
import java.util.concurrent.TimeUnit;
import okio.Timeout;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Timeout_ESTest extends Timeout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Timeout timeout0 = Timeout.NONE;
      Timeout timeout1 = timeout0.clearDeadline();
      timeout1.NONE.clearDeadline();
      Timeout timeout2 = timeout0.clearTimeout();
      long long0 = 87L;
      timeout0.clearTimeout();
      Timeout timeout3 = timeout0.clearTimeout();
      timeout3.throwIfReached();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      Timeout timeout4 = timeout2.deadline(87L, timeUnit0);
      timeout4.NONE.deadlineNanoTime(0L);
      // Undeclared exception!
      try { 
        timeout4.waitUntilNotified("");
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      timeout1.deadline(2352L, timeUnit0);
      assertTrue(timeout0.hasDeadline());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.clearTimeout();
      long long0 = (-4255L);
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      // Undeclared exception!
      try { 
        timeout1.timeout((-4255L), timeUnit0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout < 0: -4255
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.deadlineNanoTime((-2905L));
      try { 
        timeout1.throwIfReached();
        fail("Expecting exception: InterruptedIOException");
      
      } catch(InterruptedIOException e) {
         //
         // deadline reached
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.deadlineNanoTime((-1004L));
      Timeout timeout2 = timeout1.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Timeout timeout3 = timeout2.deadline(306L, timeUnit0);
      timeout2.deadlineNanoTime();
      timeout0.deadlineNanoTime();
      timeout1.throwIfReached();
      Timeout timeout4 = timeout0.deadlineNanoTime(1392409281626000L);
      Timeout timeout5 = timeout4.NONE.deadlineNanoTime((-1004L));
      timeout0.NONE.throwIfReached();
      timeout0.timeoutNanos();
      timeout0.hasDeadline();
      timeout1.hasDeadline();
      timeout0.clearTimeout();
      Timeout timeout6 = timeout0.deadlineNanoTime(0L);
      TimeUnit timeUnit1 = TimeUnit.DAYS;
      timeout3.timeout(1392409281626000L, timeUnit1);
      timeout5.timeoutNanos();
      timeout6.clearTimeout();
      timeout0.hasDeadline();
      timeout5.deadline(1L, timeUnit0);
      TimeUnit timeUnit2 = TimeUnit.MICROSECONDS;
      // Undeclared exception!
      try { 
        timeout5.deadline(0L, timeUnit2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duration <= 0: 0
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      timeout0.NONE.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Timeout timeout1 = timeout0.timeout(0L, timeUnit0);
      assertSame(timeout0, timeout1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Timeout timeout0 = Timeout.NONE;
      long long0 = 1L;
      Timeout timeout1 = timeout0.deadlineNanoTime(1L);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Timeout timeout2 = timeout1.timeout(1L, timeUnit0);
      Timeout timeout3 = timeout2.clearTimeout();
      timeout3.hasDeadline();
      // Undeclared exception!
      try { 
        timeout1.NONE.waitUntilNotified(timeout3);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      timeout0.throwIfReached();
      timeout0.hasDeadline();
      Object object0 = new Object();
      Timeout timeout1 = timeout0.NONE.deadlineNanoTime(0L);
      timeout1.clearTimeout();
      // Undeclared exception!
      try { 
        timeout1.NONE.deadlineNanoTime();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No deadline
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Timeout timeout2 = timeout1.deadline(1767L, timeUnit0);
      Timeout timeout3 = timeout2.timeout(3439L, timeUnit0);
      Timeout timeout4 = timeout3.deadlineNanoTime(3439L);
      timeout4.hasDeadline();
      Timeout timeout5 = timeout2.timeout(1189L, timeUnit0);
      timeout0.NONE.deadlineNanoTime(0L);
      Timeout timeout6 = timeout5.clearDeadline();
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      timeout6.NONE.timeout(1000000L, timeUnit1);
      Timeout timeout7 = timeout3.clearDeadline();
      long long0 = 4551L;
      timeout7.NONE.throwIfReached();
      TimeUnit timeUnit2 = TimeUnit.MINUTES;
      // Undeclared exception!
      try { 
        timeout1.waitUntilNotified(timeout0);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      long long0 = (-821L);
      Timeout timeout1 = timeout0.deadlineNanoTime((-821L));
      timeout1.deadlineNanoTime(2475L);
      timeout0.clearTimeout();
      Object object0 = new Object();
      Object object1 = new Object();
      try { 
        timeout1.waitUntilNotified(object1);
        fail("Expecting exception: InterruptedIOException");
      
      } catch(InterruptedIOException e) {
         //
         // timeout
         //
         verifyException("okio.Timeout", e);
      }
  }
}
