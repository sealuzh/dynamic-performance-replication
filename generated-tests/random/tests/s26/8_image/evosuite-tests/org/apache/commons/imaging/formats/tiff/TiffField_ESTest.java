/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 10:30:17 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2143898533, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte)4);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(2143898533, tiffField0.getDirectoryType());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(36, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)39;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 40, fieldTypeRational0, 40, 2536L, byteArray0, byteOrder0, 50708);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2536, tiffField0.getOffset());
      assertEquals(320, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(50708, tiffField0.getSortHint());
      assertEquals(40L, tiffField0.getCount());
      assertEquals(40, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, (-1842));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1842), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 0, 297L, byteArray0, (ByteOrder) null, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals("", string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2, 255L, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(0, int0);
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-96);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34892, 1773, fieldTypeLong0, 1773, 131070L, byteArray0, byteOrder0, 2147400195);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1773, tiffField0.getDirectoryType());
      assertEquals(1773L, tiffField0.getCount());
      assertEquals(7092, tiffField0.getBytesLength());
      assertEquals(131070, tiffField0.getOffset());
      assertEquals(34892, tiffField0.getTag());
      assertEquals(2147400195, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, (-2150));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2150), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-16777216), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 40, fieldTypeRational0, 40, 2536L, byteArray0, byteOrder0, 50708);
      tiffField0.getByteArrayValue();
      assertEquals(50708, tiffField0.getSortHint());
      assertEquals(2536, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(320, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 50, (FieldType) null, 1L, 1195L, byteArray0, byteOrder0, 37397);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, (-1842));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37522, 37522, (FieldType) null, 0L, 37522, byteArray0, byteOrder0, 37522);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1583), (-1583), fieldTypeRational0, (-1583), (-1583), byteArray0, (ByteOrder) null, (byte) (-80));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeRational0, 50721, 50721, byteArray0, byteOrder0, (byte)75);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50721, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(50721, tiffField0.getTag());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(50721, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeRational0, 50721, 50721, byteArray0, byteOrder0, (byte)75);
      tiffField0.getByteOrder();
      assertEquals(50721, tiffField0.getDirectoryType());
      assertEquals(50721, tiffField0.getTag());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(50721, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, (-578L), (-942L), byteArray0, byteOrder0, 1021);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-942), tiffField0.getOffset());
      assertEquals((-578), tiffField0.getBytesLength());
      assertEquals(1021, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1563, "mkZ]@@SKWx");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1563, 1563, fieldTypeAscii0, 1563, 1563, byteArray0, byteOrder0, (byte) (-44));
      tiffField0.getValue();
      assertEquals(1563, tiffField0.getDirectoryType());
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(1563, tiffField0.getOffset());
      assertEquals(1563, tiffField0.getTag());
      assertEquals(1563, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34892, 1773, fieldTypeLong0, 1773, 131070L, byteArray0, byteOrder0, 2147400195);
      int int0 = tiffField0.getOffset();
      assertEquals(131070, int0);
      assertEquals(2147400195, tiffField0.getSortHint());
      assertEquals(34892, tiffField0.getTag());
      assertEquals(1773, tiffField0.getDirectoryType());
      assertEquals(7092, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)1, 780, fieldTypeAscii0, 50L, 0L, byteArray0, byteOrder0, (byte) (-9));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(50L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(780, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, (-1842));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1842), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 40, fieldTypeRational0, 40, 2536L, byteArray0, byteOrder0, 50708);
      long long0 = tiffField0.getCount();
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2536, tiffField0.getOffset());
      assertEquals(50708, tiffField0.getSortHint());
      assertEquals(40L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-280), "]4D");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33434, 3455, fieldTypeRational0, 279L, 1L, byteArray0, byteOrder0, 33434);
      int int0 = tiffField0.getBytesLength();
      assertEquals(33434, tiffField0.getTag());
      assertEquals(33434, tiffField0.getSortHint());
      assertEquals(2232, int0);
      assertEquals(3455, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1353, "");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1353, (-1), fieldTypeShort0, 1353, 542L, byteArray0, (ByteOrder) null, 72);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 3720L, 3720L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(602, (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(602, 602, fieldTypeAscii0, 602, 602, byteArray0, byteOrder0, 440);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@195be599 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(102, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeDouble0, 6L, 135L, byteArray0, byteOrder0, 0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(135, tiffField0.getOffset());
      assertEquals(6L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1315L, (-2147483648L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(5260, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1315L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34892, 1773, fieldTypeLong0, 1773, 131070L, byteArray0, byteOrder0, 2147400195);
      tiffField0.getDoubleArrayValue();
      assertEquals(1773, tiffField0.getDirectoryType());
      assertEquals(131070, tiffField0.getOffset());
      assertEquals(2147400195, tiffField0.getSortHint());
      assertEquals(34892, tiffField0.getTag());
      assertEquals(1773L, tiffField0.getCount());
      assertEquals(7092, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 372, fieldTypeLong0, 372, 0, byteArray0, byteOrder0, (-468));
      tiffField0.getDoubleArrayValue();
      assertEquals(372, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1488, tiffField0.getBytesLength());
      assertEquals((-468), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(372L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 0, 297L, byteArray0, (ByteOrder) null, 50);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@39b48757 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(36, "Expected String value(");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 2460L, 4181L, byteArray0, byteOrder0, (byte)80);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(36, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(4181, tiffField0.getOffset());
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(2460L, tiffField0.getCount());
      assertEquals(19680, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-2147483648L), byteArray0, byteOrder0, (-2150));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2150), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37520, 65109, fieldTypeShort0, 2L, 37520, byteArray0, byteOrder0, (-408));
      tiffField0.getDoubleArrayValue();
      assertEquals(65109, tiffField0.getDirectoryType());
      assertEquals(37520, tiffField0.getTag());
      assertEquals(37520, tiffField0.getOffset());
      assertEquals((-408), tiffField0.getSortHint());
      assertEquals(2L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1563, "mkZ]@@SKWx");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1563, 1563, fieldTypeAscii0, 1563, 1563, byteArray0, byteOrder0, (byte) (-44));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37381, 2147478355, fieldTypeLong0, 4016L, 4016L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntArrayValue();
      assertEquals(2147478355, tiffField0.getDirectoryType());
      assertEquals(4016L, tiffField0.getCount());
      assertEquals(37381, tiffField0.getTag());
      assertEquals(16064, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(4016, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-6);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeRational0, 50721, 50721, byteArray0, byteOrder0, (byte)75);
      tiffField0.getIntArrayValue();
      assertEquals(50721, tiffField0.getOffset());
      assertEquals(405768, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(50721, tiffField0.getTag());
      assertEquals(50721, tiffField0.getDirectoryType());
      assertEquals(50721L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 293);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(293, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37520, 65109, fieldTypeShort0, 2L, 37520, byteArray0, byteOrder0, (-408));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(37520, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(37520, tiffField0.getOffset());
      assertEquals(65109, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
      assertEquals((-408), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(602, (String) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(602, 602, fieldTypeAscii0, 602, 602, byteArray0, byteOrder0, 440);
      String string0 = tiffField0.getStringValue();
      assertEquals(440, tiffField0.getSortHint());
      assertEquals(602, tiffField0.getBytesLength());
      assertEquals(602, tiffField0.getDirectoryType());
      assertEquals(602, tiffField0.getTag());
      assertEquals(602, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37520, 65109, fieldTypeShort0, 2L, 37520, byteArray0, byteOrder0, (-408));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@400ac1ea
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-280), "]4D");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33434, 3455, fieldTypeRational0, 279L, 1L, byteArray0, byteOrder0, 33434);
      String string0 = tiffField0.getTagName();
      assertEquals(3455, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x829a)", string0);
      assertEquals(33434, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(279L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40094, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (-2145068029), fieldTypeDouble0, 4, 1030L, byteArray0, byteOrder0, (byte)99);
      String string0 = tiffField0.getTagName();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-2145068029), tiffField0.getDirectoryType());
      assertEquals(1030, tiffField0.getOffset());
      assertEquals("GPSLongitude", string0);
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1613, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1822, 1421, fieldTypeAscii0, 3408L, 882L, byteArray0, (ByteOrder) null, 1613);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "IL$T$Uoyis|*$^z");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1765, 50, fieldTypeFloat0, 25736L, 4330L, byteArray0, byteOrder0, 3542);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3542, tiffField0.getSortHint());
      assertEquals(1765, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4330, tiffField0.getOffset());
      assertEquals(102944, tiffField0.getBytesLength());
      assertEquals(25736L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(102, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeDouble0, 6L, 135L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("50 (0x32: Unknown Tag): 0.0, 0.0 (6 org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts)", string0);
      assertEquals(135, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2146175801, 2146175801, fieldTypeByte0, 2146175801, 2146175801, byteArray0, (ByteOrder) null, (-482));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(82, pipedInputStream0.available());
      assertEquals(2146175801, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1560), "!<(8C$9FnE785=#.69h");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1560), (-1560), fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1560), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1560), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2147478355, fieldTypeAscii0, 182L, 182L, byteArray0, byteOrder0, (byte) (-70));
      tiffField0.dump();
      assertEquals(2147478355, tiffField0.getDirectoryType());
      assertEquals(182, tiffField0.getBytesLength());
      assertEquals(182L, tiffField0.getCount());
      assertEquals(182, tiffField0.getOffset());
      assertEquals((-70), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2, 255L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)19);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2533, 1, fieldTypeByte0, 1, 448L, byteArray0, byteOrder0, (byte)19);
      tiffField0.toString();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(448, tiffField0.getOffset());
      assertEquals(2533, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1583), (-1583), fieldTypeRational0, (-1583), (-1583), byteArray0, (ByteOrder) null, (byte) (-80));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1583), tiffField0.getTag());
      assertEquals((-1583), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-1583), tiffField0.getOffset());
      assertEquals((-80), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2143898533, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte)4);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 19);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(4, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(2143898533, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1764), (-1764), fieldTypeLong0, (-1764), (-1764), byteArray0, byteOrder0, (-813));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147048316), (-1712));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1764), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1764), tiffField0.getTag());
      assertEquals((-813), tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string0);
      assertEquals((-1764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-280), "]4D");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33434, 3455, fieldTypeRational0, 279L, 1L, byteArray0, byteOrder0, 33434);
      tiffField0.getFieldTypeName();
      assertEquals(33434, tiffField0.getSortHint());
      assertEquals(33434, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(279L, tiffField0.getCount());
      assertEquals(3455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 293);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(293, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-280), "]4D");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33434, 3455, fieldTypeRational0, 279L, 1L, byteArray0, byteOrder0, 33434);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(33434, tiffField0.getTag());
      assertEquals(33434, int0);
      assertEquals(279L, tiffField0.getCount());
      assertEquals(3455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, "fw(]&>9&I).9q.(V(=");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(687, (-4254), fieldTypeShort0, (byte)0, 0L, byteArray0, byteOrder0, (-4254));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("687 (0x2af: Unknown Tag): ", string0);
      assertEquals((-4254), tiffField0.getSortHint());
      assertEquals((-4254), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 3720L, 3720L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3720, tiffField0.getOffset());
      assertEquals(3720L, tiffField0.getCount());
      assertEquals(14880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50940, 5, fieldTypeDouble0, 5973L, 1L, byteArray0, byteOrder0, 2146176597);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1L, tiffElement0.offset);
      assertEquals(50940, tiffField0.getTag());
      assertEquals(5973L, tiffField0.getCount());
      assertEquals(5, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(2146176597, tiffField0.getSortHint());
  }
}
