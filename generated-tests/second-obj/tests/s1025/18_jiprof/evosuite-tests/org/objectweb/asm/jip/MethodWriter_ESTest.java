/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:05:59 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "-", "-", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 248, stringArray0);
      methodWriter0.exceptions = null;
      methodWriter0.visitIincInsn(2, (-404));
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn((Label) null, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      ClassWriter classWriter0 = new ClassWriter((-1));
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777213, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, false);
      classWriter0.newFieldItem("~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 71, (Object[]) null, 3380, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-3405);
      intArray0[1] = (-2497);
      intArray0[2] = 2934;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 1199, (-3405));
      assertEquals((-2107), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "P*od";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "P*od", "=", stringArray0, false, false);
      classWriter0.newField("}qE`v#b@5", "}qE`v#b@5", "=");
      methodWriter0.visitMaxs(7, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 101, stringArray0, 7, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      classWriter0.newField("-", "SourceFile", "-");
      Attribute attribute0 = new Attribute("-");
      Edge edge0 = new Edge();
      Frame frame0 = new Frame();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2000), "-", "SourceFile", "-", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(5, "-", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.visitInnerClass("wmP*", "-", "-", (-1490));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1490), "-", "-", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 2, stringArray0);
      classWriter0.newDouble((-404));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(73, (-2762), (Object[]) null, 73, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String string0 = "Code";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.thisName = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 863, "Code", ">", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 20, ".class", "N<79s", ".class", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "P*od";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "W", "P*od", "W", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(1, "O$k3-8-zc^", "RuntimeVisibleAnnotations", "P*od");
      methodWriter0.visitVarInsn(2, 2513);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 99, "Bs5oyHiH*O", "Bs5oyHiH*O", "E-ahA;]OTT%V>FC", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("boolean", 512);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[0];
      classWriter0.newClass("~Rp{JI)#NE|n3#o");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", stringArray0, true, true);
      classWriter0.invalidFrames = true;
      int int0 = Type.OBJECT;
      methodWriter0.visitFieldInsn((-1), "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", "'qD+3'GL^GXR)]|/)! (");
      methodWriter0.visitFrame((-1), 2, stringArray0, 2, stringArray0);
      methodWriter0.visitAnnotation("}<TPG", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(67, "'qD+3'GL^GXR)]|/)! (", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      stringArray0[0] = "<init>";
      Attribute attribute0 = new Attribute("<init>");
      Edge edge0 = new Edge();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newLong(3661);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "<init>", "w?F)D tl", "<init>", stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-1852), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      int[] intArray0 = new int[4];
      methodWriter0.visitIincInsn(2, 2518);
      Edge edge1 = new Edge();
      Frame frame0 = new Frame();
      Label label1 = frame0.owner;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitLocalVariable("=", "=", "!}", (Label) null, (Label) null, 90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      int int0 = Frame.TOP;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1007), "PCode", "PCode", "PCode", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitInsn(1);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.getSize();
      byteVector0.put12((-1007), 16777216);
      methodWriter0.visitFrame(249, 47, (Object[]) null, 1, (Object[]) null);
      methodWriter0.put(byteVector0);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.firstMethod = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-268435443), "-", "^as] vY", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 1, stringArray0);
      methodWriter0.visitIincInsn(2, (-404));
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn((-268435443), "-", "-", "^as] vY");
      methodWriter0.visitFrame(2, 60, stringArray0, 1, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      classWriter0.newField("-", "SourceFile", "-");
      Attribute attribute0 = new Attribute("-");
      Edge edge0 = new Edge();
      Frame frame0 = new Frame();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2000), "rC", "SourceFile", "-", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitEnd();
      methodWriter0.visitIincInsn((-1441), 40);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.firstMethod = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-268435456), "-", "^as] vY", "-", stringArray0, false, false);
      methodWriter0.visitFrame((-404), 1, stringArray0, 1, stringArray0);
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn((-268435456), "-", "-", "^as] vY");
      methodWriter0.visitFrame(2, 28, stringArray0, 1, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PCode";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "PCode", "=", stringArray0, false, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      Edge edge1 = new Edge();
      edge1.successor = null;
      edge0.next = edge1;
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      methodWriter0.visitIincInsn(12, 2518);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitFieldInsn(2, "byte", "byte", "^s] vY");
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("PCode", (String) null, (String) null, (Label) null, (Label) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K<";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K<");
      Attribute attribute0 = new Attribute("Consa#tVale");
      classWriter0.newNameTypeItem("Consa#tVale", "K<");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3700, "K<", "w`DF)D tl", "Consa#tVale", stringArray0, true, false);
      methodWriter0.visitFrame(2, 1, stringArray0, 1, stringArray0);
      Label label0 = new Label();
      methodWriter0.visitInsn(1);
      methodWriter0.visitLocalVariable("Consa#tVale", "Consa#tVale", "K<", label0, label0, 274);
      classWriter0.visitAnnotation("Consa#tVale", true);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Consa#tVale");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(512);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "(!{SE8awh]X):";
      stringArray0[1] = "(!{SE8awh]X):";
      stringArray0[2] = "(!{SE8awh]X):";
      stringArray0[3] = "(!{SE8awh]X):";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2093), "(!{SE8awh]X):", "(!{SE8awh]X):", "(!{SE8awh]X):", stringArray0, true, true);
      methodWriter0.visitIincInsn(792, (-1999));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      ClassWriter classWriter0 = new ClassWriter((-1));
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[0];
      classWriter0.newClass(".s.IFJDCS");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, false);
      classWriter0.newFieldItem("~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMultiANewArrayInsn("", (-1));
      methodWriter0.visitAnnotationDefault();
      methodWriter1.visitVarInsn(2, (-1));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 75, stringArray0, 75, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 101, "^s] vY", "^s] vY", "^s] vY", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(362, 101);
      methodWriter1.visitMultiANewArrayInsn("(ce", 1);
      Attribute attribute0 = new Attribute("=");
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(82, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = Type.ARRAY;
      Attribute attribute0 = new Attribute("ConstaztValu6");
      int int1 = Frame.ELEMENT_OF;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "'qD+3!GLtGR)]|/)! (", "w`?F)D tl", "ConstaztValu6", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstaztValu6");
      methodWriter0.getSize();
      methodWriter0.visitInsn(9);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(96);
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.RESIZE;
      stringArray0[0] = ")niD>";
      Attribute attribute0 = new Attribute((String) null);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, ")niD>", "w`?F)D tl", (String) null, stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector(96);
      boolean boolean1 = classWriter0.invalidFrames;
      methodWriter1.visitVarInsn(96, 2);
      methodWriter1.visitVarInsn(2, 2);
      methodWriter1.visitFrame(2, 1, stringArray0, 1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "Code", "=", stringArray0, false, false);
      methodWriter0.visitTypeInsn((-124), "Code");
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      MethodWriter.getNewOffset(intArray0, intArray0, 0, 101);
      methodWriter0.visitMethodInsn((-124), "Code", "Code", "=");
      methodWriter0.visitFrame((-2014651118), 101, stringArray0, (-2014651118), stringArray0);
      methodWriter0.visitLdcInsn("=");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      Attribute attribute0 = new Attribute("=");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qD+3!GLtGR)]|/)! (", "w`?F)D tl", "=", stringArray0, true, false);
      Item item0 = new Item(103);
      methodWriter0.visitVarInsn(1, 104);
      classWriter0.visitSource("=", "=");
      methodWriter0.visitAttribute(attribute0);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("w`?F)D tl", "=", "].ps;Y?n", label0, label0, 104);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(23);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Code", "Code", "Code", stringArray0, false, false);
      methodWriter0.visitTypeInsn(2, "wmP*");
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      classWriter0.visitInnerClass("Deprecated", "p>fY", "'r6+Zs", 49);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "SourceDebugExtension";
      stringArray0[1] = "SourceDebugExtension";
      stringArray0[2] = "SourceDebugExtension";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1181), "SourceDebugExtension", "SourceDebugExtension", "SourceDebugExtension", stringArray0, false, false);
      methodWriter0.visitFrame(1, 2, stringArray0, 8, stringArray0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      int int0 = Frame.TOP;
      Edge edge0 = new Edge();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1007), "PCode", "PCode", "PCode", (String[]) null, false, false);
      Edge edge1 = edge0.next;
      edge0.next = null;
      methodWriter0.visitInsn(1);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.getSize();
      byteVector0.put12((-1007), 16777216);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "R4holOv:0");
      methodWriter0.visitMaxs((-2167), 16777216);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      stringArray0[1] = "-";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1490), "-", "-", "-", stringArray0, false, false);
      methodWriter1.visitFrame((-404), 1, stringArray0, 2, stringArray0);
      classWriter0.newDouble((-404));
      int int0 = 73;
      int int1 = (-2762);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter1.visitLineNumber((-2045365406), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      classWriter0.newNameType("-", "org.objectweb.asm.jip.ClassWriter");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "-", "-", "-", stringArray0, false, false);
      ClassWriter classWriter1 = new ClassWriter((-1363));
      ClassWriter classWriter2 = new ClassWriter(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter1.newDouble(1);
      methodWriter0.visitVarInsn((-2482), 2);
      methodWriter0.visitFrame(3, 1350, stringArray0, (-404), stringArray0);
      methodWriter0.visitFieldInsn((-1), "-", "float", "-");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "float", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.exceptionCount = 2715;
      methodWriter1.visitFrame((-20), 2715, stringArray0, 1, stringArray0);
      methodWriter0.visitMaxs((-20), (-20));
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11((-20), 2);
      ByteVector byteVector2 = byteVector1.putLong((-20));
      ByteVector byteVector3 = new ByteVector();
      methodWriter0.visitMethodInsn(1, "<i nit>", "org.objectweb.asm.jip.ClassWriter", "p>fY");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.ClassWriter");
      methodWriter0.visitAttribute(attribute0);
      String string0 = "6r>\\u44[\\;";
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      int int0 = Frame.TOP;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1007), "vy", "vy", "vy", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitInsn(1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 28;
      int int1 = Type.ARRAY;
      classWriter0.visit((-1007), 16777216, "vy", "vy", "vy", (String[]) null);
      methodWriter0.put(byteVector0);
      methodWriter0.visitCode();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("vy", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(125);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 125, "=", "=", "=", (String[]) null, false, false);
      Label label0 = new Label();
      Edge edge0 = new Edge();
      Edge edge1 = new Edge();
      methodWriter0.visitIincInsn(16777220, (-959));
      methodWriter0.visitFieldInsn(2518, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "Qx'");
      methodWriter0.visitInsn((-777));
      methodWriter0.visitLabel(label0);
      label0.toString();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((-1271), 267386880, label0, labelArray0);
      methodWriter0.visitMaxs((-959), 179);
      Attribute attribute0 = new Attribute((String) null);
      methodWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(2, 2);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(23);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Code", "Code", "Code", stringArray0, false, false);
      methodWriter0.visitIntInsn(248, 2);
      methodWriter0.visitTypeInsn(2, "Code");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Rp{JI)#En3#o", "Rp{JI)#En3#o", "Rp{JI)#En3#o", stringArray0, false, false);
      methodWriter0.visitMaxs(185, (-20));
      methodWriter0.visitMethodInsn(185, "Rp{JI)#En3#o", "", "Rp{JI)#En3#o");
      methodWriter0.visitAnnotationDefault();
      classWriter0.newMethod("", "Rp{JI)#En3#o", "", false);
      classWriter0.newConstItem("");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11((-20), 185);
      methodWriter0.put(byteVector1);
      ClassWriter classWriter1 = new ClassWriter(1749);
      Frame frame0 = new Frame();
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.getSize();
      methodWriter0.visitInsn(525);
      ByteVector byteVector2 = new ByteVector(1);
      assertFalse(byteVector2.equals((Object)byteVector1));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      Attribute attribute0 = new Attribute("{\u0001r(I\"c9$");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1451), "@C%1-IZ", "CZ3o", "CZ3o", stringArray0, false, false);
      methodWriter0.visitAnnotation("", false);
      classWriter0.newFloat((-1613.1F));
      methodWriter0.visitInsn((-1669606703));
      methodWriter0.visitCode();
      int int0 = methodWriter0.getSize();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "<init>", "XNF)D tl", (String[]) null, false, false);
      methodWriter0.visitMaxs(3661, 2);
      methodWriter0.visitInsn(1);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      methodWriter0.visitLocalVariable("<init>", "-", " W.IC0T* ;3~)bK~", label0, label0, 3661);
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, label0, (Label) null, "XNF)D tl");
      methodWriter0.visitMaxs(1, 2);
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = null;
      labelArray0[2] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(4972, (-54), label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      classWriter0.newMethodItem("Ljava/lang/Synthetic;", "yzTB", "9S T]L&j3n]$", true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yzTB", "n)Av*R%MMfh$JW3A8@!", (String) null, stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitIntInsn(12, 2);
      methodWriter0.visitMethodInsn(1, "9S T]L&j3n]$", "Ljava/lang/Synthetic;", "M6LF^n[ f83nI");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(95, "M6LF^n[ f83nI", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 95
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Zw,*=1b1#B}|b=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "Zw,*=1b1#B}|b=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      methodWriter0.visitFrame(2518, 0, stringArray0, (-1576), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "Zw,*=1b1#B}|b=");
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-473), "Zw,*=1b1#B}|b=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber((-473), label0);
      assertSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(1307, label0);
      assertSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1007), "PCode", "PCode", "PCode", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      edge0.next = null;
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put12((-1007), 2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector2 = byteVector1.putByte(2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertNotNull(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      ByteVector byteVector3 = byteVector0.putInt(2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertNotNull(byteVector3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("-({+9su9@BTS>q1r44", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector4 = byteVector0.put11((-1007), 180);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertNotNull(byteVector4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector5 = byteVector2.putByte(47);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector5);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector5);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector4);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector5);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector5, byteVector1);
      assertSame(byteVector5, byteVector0);
      assertSame(byteVector5, byteVector4);
      assertSame(byteVector5, byteVector3);
      assertSame(byteVector5, byteVector2);
      assertNotNull(byteVector5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector5);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector5);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = edge0.successor;
      assertNull(label0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(101);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newField("}qE.v#b]M", "<init>", "=");
      assertEquals(7, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(7, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      edge0.next = edge0;
      Label label0 = edge0.next.successor;
      assertNull(label0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "=");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "=");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "P*od";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "P*od", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newField("}qE`v#b@5", "}qE`v#b@5", "=");
      assertEquals(7, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(7, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("ConstantValue");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-1052), "=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[9];
      classWriter0.thisName = "ConstantValue";
      intArray0[0] = (-1052);
      intArray0[1] = 2;
      intArray0[2] = 90;
      intArray0[3] = 101;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitInsn((-1052));
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 829;
      methodWriter0.visitLabel(label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("ConstantValue", true);
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "}qE`v#b@5");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge2 = new Edge();
      assertFalse(edge2.equals((Object)edge0));
      assertFalse(edge2.equals((Object)edge1));
      assertNotNull(edge2);
      
      methodWriter0.visitIincInsn(1, 1486);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.threshold = 1486;
      Item item0 = classWriter0.newLong(916L);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      methodWriter0.visitFieldInsn(119, "=", "Exceptions", "OHUN%?[#\";%zt>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("=", "Exceptions", "=", label0, label0, 958);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, (-1740));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1807;
      intArray0[1] = 64;
      intArray0[2] = (-1666);
      intArray0[3] = (-2314);
      intArray0[4] = 21;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {1807, 64, (-1666), (-2314), 21}, intArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777213, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      methodWriter0.visitFrame((-49), 71, (Object[]) null, 3380, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(125);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 125, "=", "=", "=", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      Edge edge2 = new Edge();
      assertFalse(edge2.equals((Object)edge0));
      assertFalse(edge2.equals((Object)edge1));
      assertNotNull(edge2);
      
      methodWriter0.visitIincInsn(1, (-959));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2518, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "Qx'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((-1271), 267386880, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-959), 179);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute((String) null);
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yzTB", "n)Av*R%MMfh$JW3A8@!", (String) null, stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      int int1 = Type.BYTE;
      assertEquals(3, int1);
      assertFalse(int1 == int0);
      
      boolean boolean1 = true;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "";
      int int2 = methodWriter0.getSize();
      assertEquals(24, int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-2482));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(135);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("yh~1d{de,Pa#cKze4", "yh~1d{de,Pa#cKze4");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PCode";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "PCode", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 2506);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "yh~1d{de,Pa#cKze4", "yh~1d{de,Pa#cKze4", "byte");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("PCode", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2506, "`");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      methodWriter0.visitMaxs(3, 135);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put12(2506, 91);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(91, "SourceDebugExtension", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "StackMapTable");
      assertFalse(boolean0);
      
      stringArray0[0] = "Lj}va/lang/Sythetic;";
      Attribute attribute0 = new Attribute("Lj}va/lang/Sythetic;");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qD+3'GL^GXR)]|/)! (", "w`?F)tl", "Lj}va/lang/Sythetic;", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((byte)121, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitFieldInsn((byte)121, "'qD+3'GL^GXR)]|/)! (", "'qD+3'GL^GXR)]|/)! (", "Lj}va/lang/Sythetic;");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.thisName = "PCode";
      classWriter0.threshold = 1486;
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      methodWriter0.visitJumpInsn((-389), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-9), "n", "w`?F)D tl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item((-9));
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("w`?F)D tl", "n", "/k5p${3Tj\"}EI,s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(59, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-1206), "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(93);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      stringArray0[0] = "<init>";
      Attribute attribute0 = new Attribute("<init>");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = "w`?F)D tl";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "w`?F)D tl", "<init>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute1 = new Attribute("<init>");
      assertFalse(attribute1.equals((Object)attribute0));
      assertNotNull(attribute1);
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      
      attribute0.next = attribute1;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      assertTrue(attribute0.next.isUnknown());
      assertFalse(attribute0.next.isCodeAttribute());
      
      methodWriter0.visitIntInsn(93, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(46);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(747);
      assertEquals(747, (int)integer0);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = (-1460);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-1460), 197);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1460
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      Attribute attribute0 = new Attribute("=");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 10, "'qD+3!GLtGR)]|/)! (", "w`?F)D tl", "=", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item(103);
      assertNotNull(item0);
      
      methodWriter0.visitVarInsn(10, 104);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = classWriter0.newNameType("=", "c3&lNO?Y]@{3bMh");
      assertEquals(6, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(103, "=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass("=", "=", "WPL<SF5", 103);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(104);
      assertEquals(104, (int)integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yzTB", "n)Av*R%MMfh$JW3A8@!", (String) null, stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.exceptionCount = 95;
      methodWriter0.visitIntInsn(12, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("yzTB", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-523), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-9), "n", "w`?F)D tl", "n", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 182;
      classWriter0.visitOuterClass("w`?F)D tl", "n", "n");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(182, "n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-9), "n", "w`?F)D tl", "n", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Item item0 = classWriter0.newNameTypeItem("n", "GC=$xZ");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(178, "<init", "RuntimeVisibleAnnotations", "<ilt");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-587), (-1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[2];
      intArray0[0] = (-587);
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {(-587), 1}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn((-164));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-9), "n", "w`?F)D tl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("w`?F)D tl", "n", "n");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(182, "n");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.next = methodWriter0;
      methodWriter1.visitIincInsn(314, 182);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitEnd();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter1.getSize();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(68, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn(826);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 826
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      int int0 = classWriter0.newField("=", "=", "=");
      assertEquals(4, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("ConstantValue");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "'qD+3GLtR)]|/)! pt(", "w`?F)D tl", "ConstantValue", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item(103);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      methodWriter0.visitFrame(4, 187, stringArray0, 103, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(170, "'qD+3GLtR)]|/)! pt(", "ConstantValue", "$/n'$8I|7Om?iM2'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1336);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v=";
      Attribute attribute0 = new Attribute("v=");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qi+3!GUtR)]|/)! pt(", "w`?F)D@ tl", "v=", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int[] intArray0 = new int[3];
      label0.info = (Object) (-1323);
      intArray0[2] = 1336;
      Integer integer0 = (Integer)label0.info;
      assertEquals((-1323), (int)integer0);
      assertNotNull(integer0);
      
      label0.info = (Object) integer0;
      Label[] labelArray0 = new Label[0];
      int int0 = Integer.remainderUnsigned(65535, 1336);
      assertEquals(71, int0);
      
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {0, 0, 1336}, intArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(56, int1);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(56);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 1336;
      boolean boolean0 = true;
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1336);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "4Pxl1JF|cI";
      String string0 = "RuntimeVisibleParameterAnnotations";
      Attribute attribute0 = new Attribute("4Pxl1JF|cI");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qi+3!GUtR)]|/)! pt(", "w`?F)D@ tl", "4Pxl1JF|cI", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int[] intArray0 = new int[3];
      label0.info = (Object) (-1323);
      intArray0[2] = 1336;
      int int1 = 17;
      Integer integer0 = (Integer)label0.info;
      assertEquals((-1323), (int)integer0);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      
      int int2 = Integer.sum(106, 106);
      assertEquals(212, int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      label0.info = (Object) integer0;
      Label[] labelArray0 = new Label[0];
      int int3 = Integer.remainderUnsigned(65535, 1336);
      assertEquals(71, int3);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {0, 0, 1336}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(1, "Class not found", "4Pxl1JF|cI", "4Pxl1JF|cI");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertNotNull(label1);
      
      methodWriter0.visitMethodInsn(1336, "Class not found", "4Pxl1JF|cI", "4Pxl1JF|cI");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      Attribute attribute0 = new Attribute("ConstantValue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qD+3!GLtR)]|/)! pt(", "w`?F)D tl", "ConstantValue", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item(103);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      Label label2 = label0.getFirst();
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertNotNull(label2);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label2;
      labelArray0[1] = label0;
      labelArray0[2] = label2;
      methodWriter0.visitTableSwitchInsn(103, 103, label2, labelArray0);
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.successor = null;
      Label label3 = label0.successor;
      assertNull(label3);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(256, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = (-432);
      ClassWriter classWriter0 = new ClassWriter((-432));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "-", "^as] vY", "-", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-432), 1, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, (-432));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(60, int1);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderOffset = 127;
      methodWriter0.visitFieldInsn(2, "-", "-", "^as] vY");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 60, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LocalVariableTypeTable";
      stringArray0[1] = "LocalVariableTypeTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTypeTable", "LocalVariableTypeTable", "LocalVariableTypeTable", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = classWriter1.newClass("LocalVariableTypeTable");
      assertNotSame(classWriter1, classWriter0);
      assertEquals(2, int0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(1, (-4901));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter1.newDouble(1);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitVarInsn((-4901), 1166);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      classWriter1.firstMethod = methodWriter0;
      Item item1 = classWriter0.newFloat(1);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(item1, item0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "LocalVariableTypeTable");
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.exceptionCount = 1;
      methodWriter0.visitMaxs(2, (-404));
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter1.firstMethod.signature = "Ljava/lang/Synthetic;";
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(2965, 1, stringArray0, 195, stringArray0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(32767, "Ljava/lang/Synthetic;", true);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter1.firstMethod.visitMultiANewArrayInsn("AnnotationDefault", 32767);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(classWriter1, classWriter0);
      assertSame(classWriter1.firstMethod, methodWriter1);
      assertSame(classWriter1.firstMethod, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      Attribute attribute0 = new Attribute("Consta#tValue");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newLong(3661);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "'qD+3!GLtGR)]|/)! (", "w`?F)D tl", "Consta#tValue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = new Item(91);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitMethodInsn(1, "=", "Consta#tValue", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item2 = classWriter0.newLong(3661);
      assertNotSame(item2, item1);
      assertSame(item2, item0);
      assertFalse(item2.equals((Object)item1));
      assertNotNull(item2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 73;
      methodWriter0.visitVarInsn(186, 73);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertSame(methodWriter0, methodWriter1);
      assertArrayEquals(new int[] {1, 1}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "K<";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K<");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Consa#tVale");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.newNameTypeItem("Consa#tVale", "K<");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "K<", "w`DF)D tl", "Consa#tVale", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 1, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.exceptionCount = 2;
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(172);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(172, "Consa#tVale", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "n", "w`?F)D tl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(179, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("w`?F)D tl", "n", "/k5p${3Tj\"}EI,s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-2006309244), 2, stringArray0, 22, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(56, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yzTB", "n)Av*R%MMfh$JW3A8@!", (String) null, stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      methodWriter0.exceptionCount = 95;
      methodWriter0.visitIntInsn(12, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]guI?@2Zj(oHfz02");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitFieldInsn(1, "n)Av*R%MMfh$JW3A8@!", "]guI?@2Zj(oHfz02", "]guI?@2Zj(oHfz02");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMultiANewArrayInsn("=", 95);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Consta#tValue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.newNameTypeItem("Q|R=++Hq7lZyI", "");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 56, "", "w`8F)D >l", "Consta#tValue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      item0.set(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1, "", "Consta#tValue", "w`8F)D >l");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newLong(56);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(182, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      methodWriter0.visitMultiANewArrayInsn("7&$Q,M", 56);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(70, "~f6W}i:5#]", "", "Consta#tValue");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(182, 12);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "U=";
      int int0 = classWriter0.newField("U=", "U=", "U=");
      assertEquals(4, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("CInstcantVaDue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean2 = ClassReader.ANNOTATIONS;
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "vD=", "w`?F)D tl", "CInstcantVaDue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector(1);
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putLong(1);
      assertSame(byteVector0, byteVector2);
      assertNotSame(byteVector0, byteVector1);
      assertNotSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
      assertNotSame(byteVector0, byteVector1);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(4, "Clss not found", "CInstcantVaDue", "U=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("vD=");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Rp{JI)#NE|n3#o");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      int int0 = classWriter0.newClass("~Rp{JI)#NE|n3#o");
      assertEquals(2, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = classWriter0.newField("~Rp{JI)#NE|n3#o", "}<TPG", "~Rp{JI)#NE|n3#o");
      assertEquals(5, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-1), "~Rp{JI)#NE|n3#o", "~Rp{JI)#NE|n3#o", "'qD+3'GL^GXR)]|/)! (");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 75, stringArray0, 75, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(545);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Signature";
      classWriter0.threshold = 545;
      stringArray0[1] = "Signature";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Signature", "int", "Z", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitVarInsn(186, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector();
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.put12(1, (-2921));
      assertNotSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertNotSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      
      ByteVector byteVector3 = byteVector2.put12((-2921), 1477);
      assertNotSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector3);
      assertNotSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertNotSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertFalse(byteVector3.equals((Object)byteVector1));
      assertNotNull(byteVector3);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitLdcInsn("Signature");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-2921), 1177);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(17, 2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Consa#tVale");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3647, "n", "w`DF)D tl", "Consa#tVale", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = new Item(115);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(2, 16711708, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 16711708;
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(512, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "StackMapTable");
      assertFalse(boolean0);
      
      stringArray0[0] = "Lj}va/lang/Sythetic;";
      Attribute attribute0 = new Attribute("Lj}va/lang/Sythetic;");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "'qD+3'GL^GXR)]|/)! (", "w`?F)tl", "Lj}va/lang/Sythetic;", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitFieldInsn((byte)121, "'qD+3'GL^GXR)]|/)! (", "'qD+3'GL^GXR)]|/)! (", "Lj}va/lang/Sythetic;");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      label0.inputStackTop = 103;
      methodWriter0.visitJumpInsn((byte)121, label0);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(1, "w`?F)tl", "-^", "'qD+3'GL^GXR)]|/)! (");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Consta#tValue");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Item item0 = classWriter0.newNameTypeItem("Q|R=++Hq7lZyI", "");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 56, "", "w`8F)D >l", "Consta#tValue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      item0.set(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newLong(56);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitMultiANewArrayInsn("7&$Q,M", 56);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(70, "~f6W}i:5#]", "", "Consta#tValue");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(121);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "hYg";
      int int0 = Frame.TOP;
      assertEquals(16777216, int0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "hYg", "XNF)D tl", "hYg", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      methodWriter0.visitMaxs(2, 121);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(185);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(132);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte)88, "hYg", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter((-2071213398));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.TOP;
      assertEquals(16777216, int0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2, "newFloat", "!", (String) null, (String[]) null, false, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = classWriter0.newNameType("value ", "!");
      assertNotSame(classWriter0, classWriter1);
      assertEquals(3, int1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn((-1821));
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter1.pool;
      assertNotNull(byteVector0);
      
      int int2 = methodWriter0.getSize();
      assertNotSame(classWriter1, classWriter0);
      assertEquals(27, int2);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 247, (Object[]) null, (-337), (Object[]) null);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter1.visit(16777216, 2, "newFloat", " _W,*g7W9-=<pr", "newFloat", (String[]) null);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1225, 22);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1225, "value ", (String) null, "!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[18];
      methodWriter0.visitInsn(114);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byteArray0[0] = (byte) (-66);
      byteArray0[3] = (byte)12;
      byteArray0[5] = (byte) (-125);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) "=";
      label0.position = 2;
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitLocalVariable("=", "Exceptions", "=", label0, label0, (byte)12);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = label0.resolve(methodWriter0, 114, byteArray0);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[1];
      label0.info = (Object) edge0;
      methodWriter0.visitJumpInsn((-389), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(80);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      int int0 = Type.ARRAY;
      assertEquals(9, int0);
      
      Attribute attribute0 = new Attribute("ConstaztValu6");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      int int1 = classWriter0.addUninitializedType("ConstaztValu6", (-3));
      assertEquals(1, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 9, "'qD+3!GLtGR)]|/)! (", "w`?F)D tl", "ConstaztValu6", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstaztValu6");
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(20, "<init>", "JMDkj_v5633r9", "JMDkj_v5633r9");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "U=";
      int int0 = Frame.ELEMENT_OF;
      assertEquals((-268435456), int0);
      
      Attribute attribute0 = new Attribute("CInstcantVaDue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean2 = ClassReader.ANNOTATIONS;
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-268435456), "vD=", "w`?F)D tl", "CInstcantVaDue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector(1);
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putLong(1);
      assertNotSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertNotSame(byteVector2, byteVector1);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertNotSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertFalse(byteVector0.equals((Object)byteVector1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(178, "U=", "CInstcantVaDue", "U=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("vD=");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1915));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1915), "n", "w`F)Dtl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`F)Dtl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitFieldInsn(179, "byte", "4v3H%Z", "Cssnot fod");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(62, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[2];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray0[0] = "";
      stringArray0[1] = "";
      int int0 = Frame.UNINITIALIZED_THIS;
      assertEquals(16777222, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter((-1363));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Item item0 = new Item((-404));
      assertNotNull(item0);
      
      methodWriter0.visitFrame(0, (-1363), stringArray0, 2, stringArray0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "");
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(0);
      assertNotSame(classWriter0, classWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotNull(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.put(byteVector1);
      assertNotSame(classWriter0, classWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("Consa#tVale");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n", "w`DF)D tl", "Consa#tVale", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = new Item(115);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(2, 16711708, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 16711708;
      label0.successor = null;
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("Consa#tVale", "KMQJ", "n", label0, label0, 274);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("n", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item2 = new Item(274);
      assertFalse(item2.equals((Object)item0));
      assertFalse(item2.equals((Object)item1));
      assertNotNull(item2);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(64, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("Consa#tVale");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "n", "w`D)D l", "Consa#tVale", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = new Item(115);
      assertNotNull(item0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(2, 16711708, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 16711708;
      label0.successor = null;
      label0.info = (Object) "LineNumberTable";
      label0.inputStackTop = (-1985051867);
      methodWriter0.visitLocalVariable("Consa#tVale", "n", "n", label0, label0, 274);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("n", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter1.visitEnd();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor2 = methodWriter1.visitAnnotation(",Jcd?", false);
      assertNotSame(annotationVisitor2, annotationVisitor1);
      assertNotSame(annotationVisitor2, annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor1));
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("=#=|Vg)M|R204", "D <\bRaHyS,5EZwy", "D <\bRaHyS,5EZwy", label0, (Label) null, 28);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "=", "=", "=", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[18];
      methodWriter0.visitInsn(114);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byteArray0[0] = (byte) (-66);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte) (-125);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) "=";
      label0.position = 2;
      methodWriter0.visitLocalVariable("=", "Exceptions", "=", label0, label0, (byte) (-16));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      int[] intArray0 = new int[1];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      methodWriter0.visitLdcInsn("SourcdDeFugEx6ension");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-1820), "h#.N]H#", "SourcdDeFugEx6ension", "SourcdDeFugEx6ension");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(86, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(187, label1);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("h#.N]H#", "SourcdDeFugEx6ension", "=", label1, label0, (-1129));
      assertNotSame(label1, label0);
      assertNotSame(label0, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      assertArrayEquals(new int[] {0}, intArray0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 114);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 114
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[0] = "<init>";
      Attribute attribute0 = new Attribute("<init>");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "w`?F)D tl", "<init>", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.line = 83;
      methodWriter0.visitMaxs((-1852), (-785));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock((Label) null, label0, label0, "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(83, (-2167));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(3);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n)Av*R%MMfh$J3A8@!";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "LineNumberTable", "n)Av*R%MMfh$J3A8@!", "n)Av*R%MMfh$J3A8@!", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newClassItem("n)Av*R%MMfh$J3A8@!");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(60, "Lj}va/lang/Sythetic;", "LineNumberTable", "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label0.successor = label1;
      methodWriter0.visitMaxs(3, 1792);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.inputStackTop = 16777221;
      methodWriter0.visitVarInsn(47, 24);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Lj}va/lang/Sythetic;");
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0.successor);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertNotSame(label0.successor, label0);
      assertSame(label0.successor, label1);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label0.successor.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[0] = "<init";
      Attribute attribute0 = new Attribute("<init");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      Item item0 = classWriter0.newFieldItem("<init", "<init", "<init");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newClassItem("<init");
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init", "w`?F)D tl", "<init", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(285212673, "<init");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.successor = label0;
      label0.info = (Object) null;
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "<init");
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, (-2167));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(55, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Rp{JI)#E|n3#o");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-6));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777234, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitInsn((-6));
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertSame(methodWriter0, methodWriter1);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(185, (-6));
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      Item[] itemArray0 = new Item[9];
      classWriter0.typeTable = itemArray0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "~Rp{JI)#E|n3#o");
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put11(16777234, 1008);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector2 = new ByteVector();
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertNotNull(byteVector2);
      
      methodWriter2.put(byteVector1);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      assertSame(byteVector0, byteVector1);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertNotSame(byteVector1, byteVector2);
      assertFalse(byteVector0.equals((Object)byteVector2));
      assertFalse(byteVector1.equals((Object)byteVector2));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = classWriter0.newField("", "< XNvit>", "");
      assertEquals(5, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("ConstantValue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "RuntimeInvisibleParameterAnnotations", "w`?F)D tl", "ConstantValue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(91, "VIDQj|}=,nj*{ak1<]", "fl^6Cl9Pmk9%R", "ConstantValue");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(5, (-3133));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.visitFrame(179, 2, stringArray0, 103, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = new Item(16777226);
      assertNotNull(item0);
      
      methodWriter0.visitFrame(3, 3, stringArray0, 608, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", "~Rp{JI)#E|n3#o", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(185, (-20));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(185, "~Rp{JI)#E|n3#o", "org.objectweb.asm.jip.ClassWriter", "~Rp{JI)#E|n3#o");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("org.objectweb.asm.jip.ClassWriter", "StackMapTable", "org.objectweb.asm.jip.ClassWriter", 1204);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("StackMapTable", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotNull(annotationVisitor1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[1];
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[0] = "<init>";
      Attribute attribute0 = new Attribute("<init>");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Item item0 = classWriter0.newLong(3661);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "<init>", "w`?F)D tl", "<init>", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "<init>", "<init>", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.line = 83;
      ByteVector byteVector1 = byteVector0.putInt(83);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      methodWriter0.visitMaxs((-1852), (-785));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitMaxs(3661, (-2167));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 255);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(32);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Lj}va/lang/Sythetic;";
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 1280;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "ja1a/langThro_wabe", "n)Av*R%MMfh$J3A8@!", "n)Av*R%MMfh$J3A8@!", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newClassItem("Lj}va/lang/Sythetic;");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(60, "Lj}va/lang/Sythetic;", "ja1a/langThro_wabe", "ja1a/langThro_wabe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1280, 1792);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(47, 24);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Lj}va/lang/Sythetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1280, "ja1a/langThro_wabe", "Lj}va/lang/Sythetic;", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(3);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Lj}va/lang/Sythetic;";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 1;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "Lj}va/lang/Sythetic;", "n)Av*R%MMfh$J3A8@!", "n)Av*R%MMfh$J3A8@!", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newNameTypeItem("Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(60, "Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(3, 1792);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(47, (-6));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Lj}va/lang/Sythetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1, "", "n)Av*R%MMfh$J3A8@!", "AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1111), 47);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(3);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Lj}va/lang/Sythetic;";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 1;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "Lj}va/lang/Sythetic;", "n)Av*R%MMfh$J3A8@!", "n)Av*R%MMfh$J3A8@!", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(60, "Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;", "Lj}va/lang/Sythetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(3, 1792);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(47, 24);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Lj}va/lang/Sythetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "", "n)Av*R%MMfh$J3A8@!", "AnnotationDefault");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-1111), 47);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(3);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      int int0 = Frame.NULL;
      assertEquals(16777221, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n)Av*R%MMfh$J3A8@!";
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.line = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3381), "LineNumberTable", "n)Av*R%MMfh$J3A8@!", "n)Av*R%MMfh$J3A8@!", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newClassItem("n)Av*R%MMfh$J3A8@!");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(3, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(47, 24);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Lj}va/lang/Sythetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("#?", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2325, 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1, "", "n)Av*R%MMfh$J3A8@!", "AnnotationDefault");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1111), 47);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(8, 256);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "n";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6^@");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Consta#tValue");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.newFieldItem("Consta#tValue", "L@..Ht1^b?", "Q|R=++Hq7lZyI");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "n", "w`DF)D tl", "Consta#tValue", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = new Item(74);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      Item item2 = classWriter0.newLong(3661);
      assertNotSame(item2, item1);
      assertNotSame(item2, item0);
      assertFalse(item2.equals((Object)item1));
      assertFalse(item2.equals((Object)item0));
      assertNotNull(item2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(182, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) classWriter0;
      objectArray0[1] = (Object) "Consta#tValue";
      objectArray0[2] = (Object) item1;
      objectArray0[2] = (Object) "w`DF)D tl";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 182, objectArray0, 3661, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.ClassWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q;<%");
      assertFalse(boolean0);
      
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "n", "w`?F)D tl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = new Item(22);
      assertNotNull(item0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newLong(3661);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(179, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("w`?F)D tl", "n", "/k5p${3Tj\"}EI,s");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-2006309244), 2, stringArray0, 22, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(57, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("G!%rjr&mzn", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(57, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 182, stringArray0, 182, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      stringArray0[0] = "<init";
      Attribute attribute0 = new Attribute("<init");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      
      Item item0 = classWriter0.newFieldItem("<init", "<init", "<init");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newClassItem("<init");
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init", "w`?F)D tl", "<init", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(285212673, "<init");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.successor = label0;
      label0.info = (Object) null;
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label2 = edge0.successor;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label1, "<init");
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      methodWriter0.visitMaxs(1, (-2167));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray0[0] = "n";
      Attribute attribute0 = new Attribute("n");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3661, "n", "w`?F)D tl", "n", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, "n", "n", "w`?F)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newLong(3661);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)24;
      byteArray0[2] = (byte) (-69);
      byteArray0[7] = (byte)30;
      byteArray0[8] = (byte) (-69);
      attribute0.value = byteArray0;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      classWriter0.visitOuterClass("w`?F)D tl", "n", "/k5p${3Tj\"}EI,s");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-2006309244), 2, stringArray0, 22, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(55, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("G!Cs%rjr&mzn", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray1 = new byte[3];
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      byteArray0[8] = (byte)32;
      byteArray1[1] = (byte)6;
      byteArray1[2] = (byte)10;
      attribute0.value = byteArray1;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitVarInsn(55, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((byte)30, 182, (Object[]) null, 182, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=";
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Attribute attribute0 = new Attribute(")<\"?%G$;xw*(X.0(uv");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8388607, ")<\"?%G$;xw*(X.0(uv", "wlvMF)D tl", ")<\"?%G$;xw*(X.0(uv", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("wlvMF)D tl", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(103);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.next = methodWriter1;
      methodWriter0.classReaderLength = (-3537);
      methodWriter0.visitInsn(179);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)42;
      byteArray0[4] = (byte) (-7);
      byteArray0[3] = (byte)42;
      int int1 = methodWriter0.getSize();
      assertSame(methodWriter0, methodWriter1);
      assertEquals(70, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((byte)42, 103);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitMultiANewArrayInsn("krr?3Hf)5u[rS]", 2682);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(119);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.TOP;
      assertEquals(16777216, int0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777216, "I", "xHb%TH8JzB~ge", "tjc3U?c4{GkMuJ", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(35, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(644, 35, (Object[]) null, 251, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visit((-1444), 35, "I", "LocalVariableTable", "1bEyi$yxc", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-1007), 192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 1492;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1492);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.threshold = 1492;
      String string0 = "~Rp{J;)#E|z3#xo";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "~Rp{J;)#E|z3#xo";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yYzTB", "~Rp{J;)#E|z3#xo", "yYzTB", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      label0.line = 1;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-3381), "ja1a/langThro_wabe", "~Rp{J;)#E|z3#xo", "~Rp{J;)#E|z3#xo", stringArray0, false, true);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotNull(methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = 60;
      methodWriter1.visitMethodInsn(60, "yYzTB", "ja1a/langThro_wabe", "ja1a/langThro_wabe");
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.signature = "m<TPG";
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      classWriter0.firstMethod.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitCode();
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter2 = methodWriter1.next;
      assertNull(methodWriter2);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("yYzTB", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(2, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      Attribute attribute0 = new Attribute("z7");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Item item0 = classWriter0.newNameTypeItem("z7", "");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 19, "", "w`8F)D >l", "z7", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newLong(19);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(167);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderOffset = 19;
      int int0 = classWriter0.addType("69N;pU");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(6, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(10);
      assertNotNull(byteVector0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2281));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Lb?+88@#BW4g*";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Lb?+88@#BW4g*");
      assertFalse(boolean0);
      
      Attribute attribute0 = new Attribute("Lb?+88@#BW4g*");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Attribute attribute1 = new Attribute("Lb?+88@#BW4g*");
      assertFalse(attribute1.equals((Object)attribute0));
      assertNotNull(attribute1);
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      
      attribute0.next = attribute1;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      assertTrue(attribute0.next.isUnknown());
      assertFalse(attribute0.next.isCodeAttribute());
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Lb?+88@#BW4g*", "w`DF)D tl", "Lb?+88@#BW4g*", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("Lb?+88@#BW4g*", "w`DF)D tl", "Lb?+88@#BW4g*");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(181, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("7&$Q,M", (-2281));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      int int0 = Frame.ELEMENT_OF;
      assertEquals((-268435456), int0);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) classWriter0;
      methodWriter0.visitFieldInsn(131072, "5W+{vhrIH-Ek)Bb0Y)]", "THq3|-|B]a9'H@<C0", "Deprecated");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = classWriter0.newMethod("w`DF)D tl", "7&$Q,M", "~Rp{J;)#E|z3#xo", false);
      assertEquals(17, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 181, objectArray0, 1, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.ClassWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-400));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "U";
      Attribute attribute0 = new Attribute("U");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      Item item0 = classWriter0.newFieldItem("U", "U", "U");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newNameTypeItem("U", "U");
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "U", "w`DF)D tl", "U", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item2 = classWriter0.newClassItem("U");
      assertNotSame(item2, item1);
      assertNotSame(item2, item0);
      assertFalse(item2.equals((Object)item1));
      assertFalse(item2.equals((Object)item0));
      assertNotNull(item2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitMethodInsn(1, "U", "U", "w`DF)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(25, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("w`DF)D tl", "U", "w`DF)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-2006309244), 2, stringArray0, (-400), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(56, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(56, "U", "U", "w`DF)D tl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn((-2006309244), (String) null, "U", "Synthetic");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
