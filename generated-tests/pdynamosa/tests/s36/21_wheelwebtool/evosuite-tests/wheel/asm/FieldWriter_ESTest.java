/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 23:59:51 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65561);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "/k2p(xos";
      stringArray0[5] = "";
      stringArray0[6] = "/k2p(xos";
      classWriter0.visit(49, 49, "", "", "/k2p(xos", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4097, "", "p%L.r6", "", (Object) null);
      ByteVector byteVector0 = new ByteVector(4097);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-881));
      classWriter0.index = (-1466);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-881), "Xwt([", "Xwt([", "Xwt([", "Xwt([");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-881));
      classWriter0.index = (-881);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-881), "Xwt([", "Xwt([", "Xwt([", "Xwt([");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 69, "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9");
      fieldWriter0.next = fieldWriter0;
      // Undeclared exception!
      try { 
        fieldWriter0.next.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2115));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "$!Gv7r,m^{", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "$!Gv7r,m^{");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1587));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 73, "-Vr6\"2#Dd", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@3764b923
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "$!Gv7r,m^{", "$!Gv7r,m^{", "$!Gv7r,m^{", "$!Gv7r,m^{");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("|ne%<$");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-348), "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9");
      fieldWriter0.visitAnnotation("&QM\"D^Ni;N% (g9", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "8MQcC)q;P_{!`>$#apE";
      classWriter0.visit(83, 83, "", "8MQcC)q;P_{!`>$#apE", "8MQcC)q;P_{!`>$#apE", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "jmkI$M*A", "jmkI$M*A", "jmkI$M*A", "jmkI$M*A");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "org.apDche.commons.Do.file:ilter.NotFileFilter", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(4);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 69, "$!Gv7r,m^{", "$!Gv7r,m^{", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9");
      Attribute attribute0 = new Attribute("$!Gv7r,m^{");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "$!Gv7r,m^{", "&QM\"D^Ni;N% (g9", "&QM\"D^Ni;N% (g9", "$!Gv7r,m^{");
      fieldWriter0.visitAnnotation("qfOajjYU", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 69, "RuntimeInvisibleAnnotations", "O+*,j", "`Llz", "`Llz");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1819, "8=c}AX%", "org.apDche.commons.Do.file:ilter.NotFileFilter", (String) null, "Deprecated");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "8MQcC)q;P_{!`>$#apE";
      classWriter0.visit(83, 83, "", "8MQcC)q;P_{!`>$#apE", "8MQcC)q;P_{!`>$#apE", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "jmkI$M*A", "jmkI$M*A", "jmkI$M*A", "jmkI$M*A");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 69, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-26), "", "$!Gv7r,m^{", "", "$!Gv7r,m^{");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1587));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2531), "ConstantValue", "ConstantValue", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "-Vr6\"2#Dd", "", "", "ConstantValue");
      fieldWriter1.next = fieldWriter0;
      AnnotationVisitor annotationVisitor0 = fieldWriter1.next.visitAnnotation("ConstantValue", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1587));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2531), "ConstantValue", "ConstantValue", "", "");
      fieldWriter0.visitEnd();
  }
}
