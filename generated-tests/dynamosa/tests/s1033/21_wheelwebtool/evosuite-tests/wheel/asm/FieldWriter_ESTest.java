/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 05:51:24 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.index = (-3548);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "gUl", "gUl", "gUl", "gUl");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      classWriter0.index = (-2404);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "do(+;imQvwK]fKWKO", "do(+;imQvwK]fKWKO", (String) null, "do(+;imQvwK]fKWKO");
      ByteVector byteVector0 = new ByteVector(56);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      classWriter0.index = (-19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "^7!Yd@q,M", "^7!Yd@q,M", "^7!Yd@q,M", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      classWriter0.index = (-2404);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "do(+;imQvwK]fKWKO", "do(+;imQvwK]fKWKO", (String) null, "do(+;imQvwK]fKWKO");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "^7!Yd@q,M", "^7!Yd@q,M", "^7!Yd@q,M", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "gUl", "gUl", "gUl", "gUl");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4072, "lIv/jKX7`Pd'7%;lk", "lIv/jKX7`Pd'7%;lk", "lIv/jKX7`Pd'7%;lk", "lIv/jKX7`Pd'7%;lk");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-277), "`|.B%i$Y#dr", "vCh<6O[=lA-E", (String) null, "o5ES");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "{]cun~|jii", "{]cun~|jii", "{]cun~|jii", "{]cun~|jii");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-913), "9>8", "apN$:A;`tNzo", (String) null, "Deprecated");
      Attribute attribute0 = new Attribute("ConstantValue");
      byte[] byteArray0 = new byte[4];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      classWriter0.index = 62464;
      classWriter0.newClassItem("The FilenameFilter must not be null");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 14, "The FilenameFilter must not be null", "$mkCaazZ,$(p/e86(K", "y~;p[:A40b0h`+", "");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1817), (String) null, (String) null, "o5ES", sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(549);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-5123), "The FilenameFilter must not be null", "I<x!v9H/+^x3eokU", "org.apache.commons.io.filefilter.WildcardFileFilter", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("yp[:A40b0h`+", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-22));
      classWriter0.version = (-22);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-22), "hXHiR^^}.", "hXHiR^^}.", "hXHiR^^}.", "hXHiR^^}.");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-913), "9>8", "apN$:A;`tNzo", (String) null, "Deprecated");
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3045));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3045), "z#MdP0sQ6", "z#MdP0sQ6", "z#MdP0sQ6", "z#MdP0sQ6");
      fieldWriter0.visitAnnotation("z#MdP0sQ6", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3045));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3045), "ez#MdP0sQ6", "ez#MdP0sQ6", "ez#MdP0sQ6", "ez#MdP0sQ6");
      fieldWriter0.visitAnnotation("ez#MdP0sQ6", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-10), "The_array of prefixe must not benull", "The_array of prefixe must not benull", "The_array of prefixe must not benull", "The_array of prefixe must not benull");
      classWriter0.version = (-10);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3057));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3057), "NJX", "NJX", "NJX", "NJX");
      fieldWriter0.visitAnnotation("NJX", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(519);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 14, "The FilenameFilter must not be null", "", "yp[:A40b0h`+", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2599, ")9p}P8~'VUXDP", "", "", (Object) null);
      fieldWriter0.visitEnd();
  }
}
