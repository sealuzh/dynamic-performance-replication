/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 21 21:51:37 GMT 2019
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.attributeSelection.PrincipalComponents;
import weka.classifiers.AbstractClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.functions.SMO;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.RegOptimizer;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.RegSMOImproved;
import weka.classifiers.functions.supportVector.SMOset;
import weka.classifiers.functions.supportVector.StringKernel;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instances;
import weka.core.tokenizers.AlphabeticTokenizer;
import weka.core.tokenizers.NGramTokenizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMOImproved regSMOImproved0 = new RegSMOImproved();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 2;
      regSMOImproved0.m_alpha = doubleArray0;
      regSMOImproved0.setSeed(2);
      regSMOImproved0.getTechnicalInformation();
      String[] stringArray0 = new String[0];
      regSMOImproved0.setOptions(stringArray0);
      regSMOImproved0.m_alphaStar = doubleArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMOImproved0.m_bUp = (-1.7976931348623157E308);
      regSMOImproved0.findOptimalPointOnLine(3, 3, 3, 3, 3, 1237.0, (-1046.8960392), 3, 1237.0, (-2698.6442002863787), (-1046.8960392));
      double[] doubleArray1 = new double[3];
      regSMOImproved0.m_target = doubleArray1;
      regSMOImproved0.epsilonTipText();
      regSMOImproved0.getOptions();
      regSMOImproved0.getTechnicalInformation();
      try { 
        regSMOImproved0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMOImproved regSMOImproved0 = new RegSMOImproved();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 4;
      doubleArray0[1] = (double) 2;
      regSMOImproved0.m_alpha = doubleArray0;
      regSMOImproved0.setSeed(2);
      regSMOImproved0.getTechnicalInformation();
      String[] stringArray0 = new String[0];
      regSMOImproved0.setOptions(stringArray0);
      regSMOImproved0.m_alphaStar = doubleArray0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMOImproved0.findOptimalPointOnLine(3, 3, 3, 3, 3, 1237.0, (-1046.8960392), 3, 1237.0, (-2698.6442002863787), (-1046.8960392));
      double[] doubleArray1 = new double[0];
      regSMOImproved0.m_target = doubleArray1;
      regSMOImproved0.epsilonTipText();
      regSMOImproved0.getOptions();
      regSMOImproved0.getTechnicalInformation();
      regSMOImproved0.optimize();
      regSMOImproved0.globalInfo();
      regSMOImproved0.optimize();
      regSMOImproved0.secondChoiceHeuristic(34);
      regSMOImproved0.optimize();
      regSMOImproved0.optimize();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getTechnicalInformation();
      double[] doubleArray0 = new double[1];
      regSMO0.m_target = doubleArray0;
      regSMO0.getOptions();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_W";
      regSMO0.m_nInstances = 80;
      stringArray0[1] = "_W";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_W");
      stringArray0[2] = "";
      regSMO0.findOptimalPointOnLine((-1), (-1), (-1), (-1), (-1), 2520.8488392727, 2520.8488392727, (-0.4400881911037838), 166.061, (-1), (-1551.992366));
      stringArray0[3] = "";
      stringArray0[4] = "D-l4ef^QJ^vP+a0lh)";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      regSMO0.setOptions(stringArray0);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMOImproved regSMOImproved0 = new RegSMOImproved();
      regSMOImproved0.setSeed(2500);
      regSMOImproved0.m_alpha2Star = (double) 0;
      String[] stringArray0 = new String[0];
      regSMOImproved0.setOptions(stringArray0);
      boolean boolean0 = regSMOImproved0.findOptimalPointOnLine(0, 0, 0, 0, 0, 3191.6420488, (-1046.8960392), 0.1, 3191.6420488, (-2709.9), (-144.8331459781));
      assertFalse(boolean0);
      
      double[] doubleArray0 = new double[0];
      regSMOImproved0.globalInfo();
      regSMOImproved0.m_target = doubleArray0;
      regSMOImproved0.epsilonTipText();
      String[] stringArray1 = regSMOImproved0.getOptions();
      assertEquals(8, stringArray1.length);
      
      regSMOImproved0.optimize();
      regSMOImproved0.globalInfo();
      assertEquals(1.0E-12, regSMOImproved0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.modelBuilt();
      int int0 = 1;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      regSMO0.m_nInstances = 0;
      String[] stringArray0 = null;
      regSMO0.setOptions((String[]) null);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMOImproved regSMOImproved0 = new RegSMOImproved();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 15.0;
      doubleArray0[1] = 1.0;
      doubleArray0[2] = 812.5506233077482;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 8;
      doubleArray0[5] = (double) 8;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = 3670.404780984039;
      doubleArray0[8] = (double) 4;
      regSMOImproved0.m_target = doubleArray0;
      regSMOImproved0.m_eps = 15.0;
      regSMOImproved0.getTechnicalInformation();
      try { 
        regSMOImproved0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      regSMO0.m_SVM = sMOreg0;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg0.setC(3394.6250015886385);
      AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
      regSMO0.m_eps = (double) 0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      regSMO0.listOptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMO0.m_SVM.setC(1);
      NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
      regSMO0.listOptions();
      boolean boolean0 = regSMO0.m_bModelBuilt;
      regSMO0.secondChoiceHeuristic(1);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 357.76234, 357.76234, 0.01, (-100), (-1), (-5.0E-11), 1658.06390233, (-3505.77), 351.5244901397531, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -100
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      doubleArray0[4] = (double) 2;
      regSMO0.m_SVM = sMOreg0;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg0.setC(3394.6250015886385);
      AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
      regSMO0.m_eps = (double) 0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      String[] stringArray0 = regSMO0.m_SVM.getOptions();
      regSMO0.listOptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SMOreg.main(stringArray0);
      regSMO0.m_SVM.setC((-4611.1463182342));
      NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
      regSMO0.listOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-5560.3464882), 1, 1658.06390233, 0, 358.904458, 1, (-1188.9320815444487), 1020.256757695, 351.5244901397531, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = (double) 2;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      SMOset sMOset0 = regSMO0.m_supportVectors;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_SVM.setC(1);
      regSMO0.m_eps = (double) 2;
      regSMO0.m_alphaStar = doubleArray0;
      NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-0.002), 2.0, 0, 0, 489.0, 3394.6250015886385, 4518.559999548144, (-1188.9320815444487), 2, 489.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      doubleArray0[4] = (double) 2;
      regSMO0.m_SVM = sMOreg0;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg0.setC(3394.6250015886385);
      Enumeration enumeration0 = new AlphabeticTokenizer();
      regSMO0.m_eps = (double) 0;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      String[] stringArray0 = regSMO0.m_SVM.getOptions();
      regSMO0.listOptions();
      regSMO0.setOptions(stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[1] = "b\u0006G|oKHY^7*";
      boolean boolean0 = regSMO0.m_bModelBuilt;
      regSMO0.getOptions();
      regSMO0.getTechnicalInformation();
      regSMO0.listOptions();
      regSMO0.secondChoiceHeuristic(884257973);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Instances instances0 = new Instances(stringArray1[0], arrayList1, 517);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b\u0006G|oKHY^7*");
      try { 
        regSMO0.init(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // weka.classifiers.functions.supportVector.PolyKernel: No attributes!
         //
         verifyException("weka.core.Capabilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = (double) 2;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      SMOset sMOset0 = regSMO0.m_supportVectors;
      regSMO0.m_alpha = doubleArray0;
      sMOreg1.setC(3394.6250015886385);
      sMOreg1.getCapabilities();
      NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
      regSMO0.m_eps = (double) 1;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.listOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-0.002), 2.0, 0, 0, (-0.5), 3394.6250015886385, 4515.763928527153, (-1188.9320815444487), 2, (-0.5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = (double) 2;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg1.setC(3394.6250015886385);
      sMOreg1.getCapabilities();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      regSMO0.listOptions();
      regSMO0.m_eps = 2375.4;
      regSMO0.m_alphaStar = doubleArray0;
      SMOreg sMOreg2 = new SMOreg();
      regSMO0.m_SVM.getOptions();
      RegSMO regSMO1 = new RegSMO();
      regSMO0.getOptions();
      Locale.getISOLanguages();
      regSMO0.m_SVM.toString();
      regSMO0.findOptimalPointOnLine(2, (-1798.102018582588), (-1798.102018582588), 2.0, 0, 2267.11206116, 1, 4519.122570257093, 2554.034, 2591.42365314741, 2375.4);
      assertEquals(2375.4, regSMO0.getEpsilon(), 0.01);
      
      String string0 = regSMO1.globalInfo();
      assertEquals("Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = (double) 2;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg1.setC(3394.6250015886385);
      sMOreg1.getCapabilities();
      regSMO0.listOptions();
      regSMO0.m_eps = 2375.4;
      String[] stringArray0 = new String[18];
      stringArray0[0] = "weka/core/Capabilities.props";
      regSMO0.m_alphaStar = doubleArray0;
      stringArray0[1] = "b\u0006G|oKHY^7*";
      SMOreg.main(stringArray0);
      SMOreg sMOreg2 = new SMOreg();
      regSMO0.m_SVM.getOptions();
      regSMO0.listOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-0.002), 2.0, (-2298), 0, (-0.5), 3394.6250015886385, 4518.559999548144, (-1188.9320815444487), 2, (-0.5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[14];
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = (double) 2;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      SMOset sMOset0 = new SMOset(0);
      regSMO0.m_SVM.setRegOptimizer(regSMO0);
      regSMO0.m_alpha = doubleArray0;
      sMOreg1.setC(3394.6250015886385);
      sMOreg1.getCapabilities();
      regSMO0.listOptions();
      regSMO0.m_eps = 2375.4;
      String[] stringArray0 = new String[18];
      stringArray0[0] = "weka/core/Capabilities.props";
      regSMO0.m_alphaStar = doubleArray0;
      stringArray0[1] = "b\u0006G|oKHY^7*";
      SMOreg.main(stringArray0);
      SMOreg sMOreg2 = new SMOreg();
      regSMO0.m_SVM.getOptions();
      regSMO0.listOptions();
      regSMO0.m_bModelBuilt = false;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1298.223338785777, 2, 0, (-2298), 376.70470518, 1, 376.70470518, 2, 1298.223338785777, 376.70470518);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2298
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      doubleArray0[2] = 4519.538519022093;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      RegSMO regSMO1 = new RegSMO();
      regSMO0.m_SVM.setRegOptimizer(regSMO1);
      doubleArray0[3] = 1742.0;
      regSMO0.getOptions();
      doubleArray0[3] = 4519.538519022093;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "ms{tzA`*6zaSDf(y";
      stringArray0[1] = "\tSet maximum number of instances in a leaf node\n\t(default: 40)";
      stringArray0[2] = "";
      stringArray0[3] = "The epsilon for round-off error (shouldn't be changed).";
      SMOreg.main(stringArray0);
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextDouble();
      // Undeclared exception!
      try { 
        regSMO1.findOptimalPointOnLine(1, 0, 1, 1790.45, 93, (-1220.818), 2, 1, (-1325.939792599), 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~L*SS3%B7");
      int int0 = 3427;
      int int1 = 1079;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("~L*SS3%B7", arrayList0, 210);
      try { 
        regSMO0.init(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[3] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = 321.0;
      SMOreg sMOreg1 = new SMOreg();
      regSMO0.m_SVM = sMOreg1;
      RegOptimizer regOptimizer0 = new RegOptimizer();
      regSMO0.m_SVM.setRegOptimizer(regOptimizer0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<yaAE");
      regSMO0.m_alpha = doubleArray0;
      RegSMO regSMO1 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2331.68, (-2182), 529.3051, 0, 256.7487362355719, 2, 6.7, 2.0035760244364047, 321.0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 4518.56;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      RegSMO regSMO1 = new RegSMO();
      regSMO0.m_SVM.setRegOptimizer(regSMO1);
      doubleArray0[3] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = 321.0;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      regSMO0.m_SVM = sMOreg1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<yaAE");
      regSMO0.m_alpha = doubleArray0;
      AbstractClassifier.makeCopy(sMOreg1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<yaAE";
      stringArray0[1] = "<yaAE";
      SMOreg.main(stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "<yaAE";
      stringArray1[1] = "<yaAE";
      stringArray1[2] = "mo?JG}ZZ";
      stringArray1[3] = "<yaAE";
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextDouble();
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2, 2, 0, 1, 0, 0.0, 0, 1, 1.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon((-76.03781613837599));
      Instances instances0 = regSMO0.m_data;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-634), 2686.257365188241, (-257.4873392858), (-634), 1431655765, (-834.4709717739468), 0.0, 2, (-834.4709717739468), 1.7976931348623157E308, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      double[] doubleArray0 = new double[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The epsilon for round-off error (shouldn't be changed).");
      doubleArray0[0] = 0.489070138021937;
      doubleArray0[1] = (-0.002);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.takeStep((-2298), (-2298), (-0.002), (-0.002), (-25.80694274200215));
      regSMO0.secondChoiceHeuristic((-2298));
      regSMO0.epsilonTipText();
      regSMO0.listOptions();
      regSMO0.getEpsilon();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon((-76.090306));
      Instances instances0 = regSMO0.m_data;
      int int0 = (-2298);
      regSMO0.getEpsilon();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      doubleArray0[3] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = 321.0;
      SMOreg sMOreg1 = regSMO0.m_SVM;
      regSMO0.m_SVM = sMOreg1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<yaAE");
      regSMO0.m_alpha = doubleArray0;
      AbstractClassifier.makeCopy(sMOreg1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "<yaAE";
      stringArray0[1] = "<yaAE";
      stringArray0[2] = "mo?JG}ZZ";
      stringArray0[3] = "<yaAE";
      sMOreg1.setOptions(stringArray0);
      regSMO0.listOptions();
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      MockRandom mockRandom1 = new MockRandom();
      mockRandom1.nextDouble();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2, 2, 0, 1, 0, 0.0, (-2298), 1, 1.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      regSMO0.m_alphaStar = doubleArray0;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = (-1211.3521851590435);
      doubleArray0[3] = (-1211.3521851590435);
      SMOreg sMOreg1 = regSMO0.m_SVM;
      regSMO0.m_SVM = sMOreg1;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 2, 2.5E-7, 2.003576024636762, (-2298), 376.70470518, 1, 0.1, 2.0, 2.5E-7, 0.1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2298
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon((-76.090306));
      Instances instances0 = regSMO0.m_data;
      String[] stringArray0 = new String[0];
      regSMO0.setOptions(stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@data");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "No base classifier has been set!");
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1162), 0.0, 2, 2500.0, (-2298), 785.59639352149, 3.0000000000000004E-8, 2, (-0.002), 2500, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = 1742.0;
      doubleArray0[3] = (-2188.6870376122);
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      AbstractClassifier.makeCopy((Classifier) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\tSets search method for subset evaluators.\n");
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1538.0, 2388.2, 1742.0, 2393, 1742.0, 1363.089383813, (-940.2122202361661), 0, 105.76, 4518.56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      int int0 = 2500;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = 1.7976931348623157E308;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (double) (-1162);
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = 3.0000000000000004E-8;
      regSMO0.m_weights = doubleArray0;
      regSMO0.m_alpha2 = 0.0;
      double double0 = 1775.9891068935394;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2.242625933729357, 3.0000000000000004E-8, 1.7976931348623157E308, 2500, 0.0, 0.024604976334166695, 65498.015321633866, (-1162), 1775.9891068935394, (-1162));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 4518.56;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      doubleArray0[0] = 1742.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      regSMO0.getOptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".arff");
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-438.8), 4518.56, 1.7976931348623157E308, 1, (-1.0), (-1823.43), (-1403.6), 4323.94, 0.1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      double double0 = (-5.0662854889970355);
      double double1 = (-4.57826535);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The epsilon for round-off error (shouldn't be changed).";
      regSMO0.m_alpha1 = (-489.38489207548);
      stringArray0[1] = "";
      stringArray0[2] = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[3] = "The epsilon for round-off error (shouldn't be changed).";
      stringArray0[4] = "HFB,Q&r1yS=@";
      SMOreg.main(stringArray0);
      double double2 = 615.4681290580262;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 0, (-5.0662854889970355), 1, (-1538), (-1538), 0, (-4.57826535), (-1538), 615.4681290580262, (-5.0662854889970355));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      double double0 = 321.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      regSMO0.m_alpha2 = 1742.0;
      double double1 = 1538.0;
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      regSMO0.getOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-757.54081), 2, 0.0, 0, (-1.0), 1, 803.0, 2, 1742.0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2556;
      regSMO0.m_nInstances = 2556;
      regSMO0.getRevision();
      regSMO0.setOptions((String[]) null);
      Random.setNextRandom((-1285));
      regSMO0.getTechnicalInformation();
      regSMO0.epsilonTipText();
      int int1 = 3880;
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_SVM = null;
      regSMO0.m_alpha2 = 1742.0;
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      regSMO0.getOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 2.242625933729357, 0.0, 1742.0, 506, (-2288.353), 4518.56, 4518.56, 2.242625933729357, 321.0, 4518.56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("Ns\"EVodV[tjU4", arrayList0, 1);
      try { 
        regSMO0.buildClassifier(instances0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = 3268.461530405893;
      doubleArray0[2] = 15.533992153054896;
      doubleArray0[3] = 2475.118555;
      doubleArray0[4] = (-1.0);
      regSMO0.m_alpha = doubleArray0;
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureEntropyScore();
      int int0 = (-871);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-871));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      regSMO0.setSeed(67);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      double double0 = 1742.0;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      regSMO0.setEpsilon(4518.56);
      doubleArray0[3] = (-2188.6870376122);
      regSMO0.m_alpha2 = 1742.0;
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1363.089383813, 1, 1.0E-12, (-1148), 1363.089383813, 718.62705964, (-973.2935393329), 4.5, 2169.086441571, 80.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      regSMO0.m_C = 4518.56;
      doubleArray0[3] = (-2188.6870376122);
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(93);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(93);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      int int0 = (-1148);
      int int1 = 0;
      double double0 = (-2275.718904168057);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1148), 3.0, 718.62705964, 0.0, 0, 0.0, 0.0, (-2275.718904168057), 6066.60012, 619.71779, (-0.002));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1491), (-1166), 321.0, 20, 1805, 0.1, 1, 1716.1, (-2.0), 4.9E-324, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      double double0 = 1742.0;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      regSMO0.m_alpha2 = 1742.0;
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1363.089383813, 1, 1.0E-12, (-1148), 1363.089383813, 718.62705964, (-973.2935393329), 4.5, 2169.086441571, 80.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2574, (-1148), 0.0, 1, (-1148), 556.9, 1.0E-12, 65498.015321633866, 1.0E-12, 65498.015321633866, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, (-975.652651), 0.7, 2500, (-1148), 65498.015321633866, 29.9084932, 1923.6488187144625, 2, 1615.3617955506134, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 65498.015321633866, 1538.0, 4518.56, 59, 0.001, 0.0, 1, 1742.0, 1923.3, 1.764004425E9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 59
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      double double0 = 3.0000000000000004E-8;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2.356268552191457E-7, 3.0000000000000004E-8, 1.7976931348623157E308, 2500, 0.0, 0.7, 65498.015321633866, (-1148), 1775.9891068935394, (-1148));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      String[] stringArray0 = new String[0];
      regSMO0.setOptions(stringArray0);
      RegSMO regSMO1 = new RegSMO();
      regSMO0.epsilonTipText();
      try { 
        regSMO1.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-1080.55666368), 4302.620941, (-476.3602668654195), 0, 805.9802828, 1.0E-4, 4302.620941, 1.7976931348623157E298, 967.22, 1.7976931348623157E298);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = (-2.0);
      int int0 = 2;
      double double1 = 0.1;
      double double2 = (-392.788018816261);
      double double3 = (-0.14369884454726753);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(20, 1215.82462639, (-2.0), 1.7976931348623157E308, 2, 0.1, (-392.788018816261), 300.0, 9.223372036854776E18, 9.223372036854776E18, (-0.14369884454726753));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double double0 = 1.7976931348623157E308;
      int int0 = 2;
      double double1 = 1.7976931348623157E308;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 1.0E-10, 1.0E-10, 0.1, (-1178), 300.0, (-1921.832383), 1.7976931348623157E308, 2.1403455631753736E9, 1215.8246264, 300.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 4518.56;
      doubleArray0[1] = 1742.0;
      doubleArray0[2] = 321.0;
      doubleArray0[3] = (-2188.6870376122);
      doubleArray0[4] = 1538.0;
      regSMO0.m_alpha = doubleArray0;
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 6066.60012, 6066.60012, 0.0, (-1148), (-979.9017355339232), (-0.002), 0.1, 718.62705964, 3.4, 793.7428);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1932735283), (-493.1829805371969), 155.36, 1.0E-12, 2013, (-493.1829805371969), 2861.83227398, 2013, (-1.0), 3415.03542, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(20, 1215.82462639, (-2.0), 1.7976931348623157E308, 2, 0.1, (-392.788018816261), 300.0, 9.223372036854776E18, 9.223372036854776E18, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1764004425, 773.21946749, 756.6100131503357, 773.21946749, 1764004425, 301.227, 1764004425, 1.7976931348623157E308, 0.0, 773.21946749, (-52.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 1.0;
      double double1 = 2334.0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(80, 1.0, 2013265920, 2334.0, 2146392726, 1922.3, 2741.27, 9.223372036854776E18, 1.0, 80, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(80, 2741.27, 1922.3, 1764004425, 2013265920, 2741.27, 1764004425, 2013265920, 80, 1.0E10, 1922.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-2145294764);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2145294764), 1764004425, 0.5, 1000.0, (-1538), (-1538), 1764004425, 2356.268552191457, (-1538), 618.5398, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RegSMO regSMO1 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO1.findOptimalPointOnLine(1764004425, (-688.53806), 0.0, (-688.53806), 200, 904.4219985127908, (-1966.4267877), 0.2, (-688.53806), 1922.3, (-2.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      regSMO0.m_alpha1Star = 1.0E-8;
      regSMO0.getTechnicalInformation();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(413, (-2.0), 0.0, (-364.4763042), (-2243), (-1.0), (-1.0), (-1693.826), 1.0E-8, 74.420728484842, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nInstances = (-1);
      regSMO0.globalInfo();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2145827788), 495.2676841844303, (-0.002), 0.10014005303568672, 1681, (-610.6107), 2866.46540074, 407.0760720438, 1.684255542307065E-7, 495.2676841844303, 1668.72155015401);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Implementation of SMO for support vector regression as described in :\n\n");
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-627), 1922.3, 473.0518, (-627), (-627), (-1295.9), (-1295.9), 5.70001, 1922.3, 4057.9409664, (-1389.64));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double double0 = 2637.1;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1633, 1633, (-479.0), (-83.2), 1633, 0.0, 1918.8929187711, (-83.2), (-295.74813774596726), 1633, (-3336.51));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      regSMO0.m_alpha1Star = 1.0E-8;
      double double0 = 0.0;
      regSMO0.getTechnicalInformation();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(413, (-1154.755), 0.0, 413, (-4862), (-719.03), 24.473066637797984, (-1364.26), 2637.1, 15.0, 5.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1764004425, 1764004425, 1764004425, 1764004425, 1764004425, 1764004425, 1922.3, 1922.3, 1922.3, 1922.3, 1922.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(20, (-2.0), 1.0, 1.684255542307065E-7, 20, 1.0, 15.0, 20, 1.684255542307065E-7, 1.7976931348623157E308, 1215.82462639);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.takeStep(3914, 3914, (-1195), 3914, (-1195));
      try { 
        regSMO0.takeStep(2500, 0, 3914, (-1195), 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-319.0);
      doubleArray0[1] = 3268.461530405893;
      doubleArray0[2] = 15.533992153054896;
      doubleArray0[3] = 2475.118555;
      doubleArray0[4] = (-944.79977677693);
      regSMO0.m_alpha = doubleArray0;
      BayesNet bayesNet0 = new BayesNet();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-871));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1764004425, 1764004425, 1764004425, 1764004425, 1764004425, 1764004425, 1922.3, 1922.3, 1.684255542307065E-7, 1.684255542307065E-7, 1.684255542307065E-7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "No training instance structure set!";
      regSMO0.findOptimalPointOnLine(0, (-1481.4688753), 0.0, 814.6703190662716, 1145, (-124.7), (-1481.4688753), 3.4, (-2008.0), 0.0, 719.0);
      stringArray0[2] = "";
      regSMO0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-321));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nInstances = (-321);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(45, 4.6, (-321), 396.420349694816, (-321), (-321), 45, 45, (-2180.0), 300.0, 1.3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1668.72155015401;
      doubleArray0[1] = 15.0;
      doubleArray0[2] = 1668.72155015401;
      doubleArray0[3] = 1684.2555423070648;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1084, 1668.72155015401, 1684.2555423070648, 1684.2555423070648, 1084, 1684.2555423070648, 927.94107335971, 1684.2555423070648, 15.0, 1668.72155015401, (-493.1829805371969));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1084
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String string0 = regSMO0.globalInfo();
      assertEquals("Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.", string0);
      
      regSMO0.setOptions((String[]) null);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RegSMO regSMO0 = new RegSMO();
      EvoSuiteFile evoSuiteFile0 = null;
      int int0 = 1782;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1782, Double.NaN, 2331.68, 7.0, 1782, 892.076898, (-780.75), (-2941.0), 7.0, 7.0, Double.NaN);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 6066.60012, (-4066.7497248776), 0.0, (-1148), (-980.0864536623177), (-0.002), 0.1, 718.62705964, 3.4, 793.7428);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMO sMO0 = new SMO();
      sMO0.setC((-980.0864536623177));
      regSMO0.getRevision();
      try { 
        regSMO0.examineExample(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = regSMO0.m_supportVectors;
      regSMO0.m_supportVectors = null;
      regSMO0.findOptimalPointOnLine((-455), (-980.0864536623177), (-4.13265899086), 1329, 1309, 473.191, (-52.0), 1.0E-75, (-0.002), 0.0, (-52.0));
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2143009723), 2637.1, (-1540.0), 1357.362974, 1309, 0.75, 473.191, (-52.0), (-2180.0), 1836.667, 1357.362974);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      regSMO0.findOptimalPointOnLine(97, 97, 0.0, 0.0, (-455), 2381.52262, (-3363.6031243), (-980.0864536623177), (-455), (-980.0864536623177), (-479));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W. H. Press and B. P. Flannery and S. A. Teukolsky and W. T. Vetterling");
      regSMO0.setEpsilon((-966.0));
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "6P-3";
      stringArray0[1] = "";
      stringArray0[2] = "y.Ju{{Lc?Ou~";
      stringArray0[3] = "";
      double double0 = 0.0;
      try { 
        regSMO0.takeStep((-505), (-3140), (-3140), 0.0, 2637.1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = regSMO0.getOptions();
      regSMO0.m_nSeed = (-479);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (-479);
      doubleArray0[1] = (double) (-479);
      regSMO0.m_target = doubleArray0;
      int[] intArray0 = new int[0];
      regSMO0.m_nCacheHits = (-479);
      regSMO0.m_sparseIndices = intArray0;
      RegSMO regSMO1 = new RegSMO();
      regSMO1.setOptions(stringArray0);
      assertEquals(1.0E-12, regSMO1.getEpsilon(), 0.01);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nInstances = (-1);
      regSMO0.globalInfo();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[1] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[2] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), 0.0, (-493.1829805371969), (-479.0), (-1), (-479.0), (-83.2), (-313.6147091791566), 0.0, 2637.1, 2637.1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-1713);
      regSMO0.modelBuilt();
      regSMO0.setEpsilon((-479.0));
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-949));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 359;
      regSMO0.m_alpha2 = (double) 359;
      regSMO0.m_classIndex = 359;
      regSMO0.setEpsilon(0.0);
      PrincipalComponents principalComponents0 = new PrincipalComponents();
      try { 
        principalComponents0.transformedHeader();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Principal components hasn't been built yet
         //
         verifyException("weka.attributeSelection.PrincipalComponents", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 500;
      regSMO0.m_C = (double) 3951;
      try { 
        regSMO0.takeStep(3951, 500, 3951, 500, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = (-2456.316504075);
      regSMO0.listOptions();
      int[] intArray0 = new int[3];
      intArray0[0] = 237;
      intArray0[1] = 237;
      intArray0[2] = 237;
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.takeStep(237, 237, (-425.79), (-3857.313465694), (-2456.316504075));
      regSMO0.getOptions();
      double double1 = 0.0;
      try { 
        regSMO0.takeStep(0, 237, 0.0, 0.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.toString();
      regSMO0.m_nCacheHits = 0;
      int[] intArray0 = new int[4];
      intArray0[0] = 214;
      intArray0[1] = 0;
      intArray0[2] = 214;
      intArray0[3] = 0;
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.setSeed(0);
      regSMO0.m_alpha2 = (-980.0864536623177);
      regSMO0.findOptimalPointOnLine(214, (-4.799963), 214, (-980.0864536623177), 214, 0.0, 0.2, (-980.0864536623177), 214, (-980.0864536623177), 2023.54128);
      regSMO0.getEpsilon();
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0);
      // Undeclared exception!
      try { 
        binarySparseInstance0.relationalValue(214);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.examineExample((-579));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 2272.091155923197;
      regSMO0.setEpsilonParameter(2272.091155923197);
      regSMO0.getEpsilon();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-479);
      regSMO0.getOptions();
      regSMO0.m_nSeed = (-479);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) (-479);
      doubleArray0[1] = (double) (-479);
      regSMO0.m_target = doubleArray0;
      int[] intArray0 = new int[0];
      regSMO0.m_nCacheHits = (-479);
      regSMO0.m_sparseIndices = intArray0;
      regSMO0.findOptimalPointOnLine((-479), 0.0, 0.0, 0.0, (-479), 0.0, 0.0, 0.0, 0.0, (-479), (-479));
      regSMO0.setEpsilon(0.1);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha1 = 0.0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      regSMO0.epsilonTipText();
      Instances instances0 = regSMO0.m_data;
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      regSMO0.getOptions();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 0;
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      int int0 = 250007;
      regSMO0.findOptimalPointOnLine(250007, 0.9, 4.9E-324, 0.0, 250007, 266.08142655336, 0.0, 250007, 0.0, (-83.2), 0.0);
      BinarySparseInstance binarySparseInstance0 = null;
      try {
        binarySparseInstance0 = new BinarySparseInstance(4.9E-324, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.BinarySparseInstance", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.takeStep(104, 676, 0.0, 1724.4755, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "^@(O vmvUl";
      stringArray0[1] = "#";
      stringArray0[2] = "nf`=i9F^I";
      stringArray0[3] = "?TofD0)Hkjd\"Mnl4u&";
      stringArray0[4] = "";
      stringArray0[5] = "e%W(Ld[iHR";
      stringArray0[6] = "";
      stringArray0[7] = "0*,`i6mZ";
      regSMO0.setOptions(stringArray0);
      regSMO0.globalInfo();
      try { 
        regSMO0.examineExample(794);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      boolean boolean0 = regSMO0.findOptimalPointOnLine(1329, 2475.118555, 0.0, 2475.118555, 1329, (-874.64128), 2475.118555, 4.94E-321, 473.191, 0.0, 0.0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      regSMO0.m_epsilon = 1618.11;
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 3382.621;
      regSMO0.getTechnicalInformation();
      doubleArray0[2] = (-1577.618030814064);
      double double0 = 1196.28;
      doubleArray0[3] = 1196.28;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_sparseWeights = doubleArray0;
      regSMO0.setEpsilon(1.0);
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      try { 
        regSMO0.takeStep((-455), 850, 0.0, 0.2, 850);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 366;
      try { 
        regSMO0.examineExample(366);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }
}
