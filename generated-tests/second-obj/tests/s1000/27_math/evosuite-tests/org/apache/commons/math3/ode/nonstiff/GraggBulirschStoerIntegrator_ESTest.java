/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:18:36 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BisectionSolver;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(16, 16, 2881.9107);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-2508.493909158738);
      doubleArray0[1] = (-2508.493909158738);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2508.493909158738), (-2508.493909158738), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(271, 271, (-895.60634));
      assertEquals(2508.493909158738, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2022.57, 0.94, 4.0, 0.94);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(1641.0991061314, 0.0, 2265.298, (-1338.23537289));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.01, 0.01, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1216, 1216, 1216);
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-6.8043266460700173E17);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.65, (-6.8043266460700173E17), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl((-127), (-946.6358765), (-6.8043266460700173E17));
      graggBulirschStoerIntegrator0.setControlFactors((-6.8043266460700173E17), 547.9261384, 2067.8257912226004, (-127));
      assertEquals(6.650422783511971E8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3638.5631614169), 1.0, (-1.8597195170797078E14), 1.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(676).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0, (-1.8597195170797078E14), 0.9999, 676);
      assertEquals(1.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, (-148.06602754302637), 3244.9022708634, 1296.9336958252204);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = (-8.748845108127752E16);
      graggBulirschStoerIntegrator0.setControlFactors(3244.9022708634, 1414.824259359302, (-5.082878676401967E10), 1296.9336958252204);
      graggBulirschStoerIntegrator0.setOrderControl(2359, 1773.4844, (-2507.642078));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2508.493909158738), (-2508.493909158738), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(3, 0.94, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(656, 1378.0, 3);
      assertEquals(2508.493909158738, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 0.7937005259840998, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.7976931348623157E308, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init(1.7976931348623157E308, doubleArray0, 0.7937005259840998);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(0.7937005259840998, 0.7937005259840998, 1.7976931348623157E308, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0.7937005259840998, 0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2043.05472488, 2043.05472488, doubleArray0, doubleArray0);
      SecantSolver secantSolver0 = new SecantSolver(2675);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 2043.05472488, 2043.05472488, 2675, (UnivariateSolver) secantSolver0);
      graggBulirschStoerIntegrator0.setControlFactors(2043.05472488, (-12348.134719576996), (-12348.134719576996), 2675);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-4666.70036);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-4666.70036);
      doubleArray0[3] = (-4666.70036);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3240.0), (-4666.70036), (-4666.70036), 1505.43);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1514), 610, (-3240.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(610).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1408.479203868708);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-4666.70036));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-4666.70036);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-4666.70036);
      doubleArray0[3] = (-4666.70036);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3240.0), (-4666.70036), (-4666.70036), 1505.43);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1514), 610, (-3240.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(610).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-4666.70036));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1800.1), (-1800.1), 1.0E-10, 1.0E-10);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2067.8258);
      PegasusSolver pegasusSolver0 = new PegasusSolver(12);
      PegasusSolver pegasusSolver1 = new PegasusSolver(721.293550598671);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 8.757941916723339E-21);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-2547));
      assertEquals(20, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.500201674336832E-8, 1.500201674336832E-8, 1.500201674336832E-8, 1.500201674336832E-8);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.clearStepHandlers();
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 6, 4, 793);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(786).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertNotNull(firstOrderConverter0);
      assertEquals(1572, firstOrderConverter0.getDimension());
      
      int int0 = (-1);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-1));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertNotNull(expandableStatefulODE0);
      assertEquals(1572, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 9.118258438280656E-13);
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
      int int1 = 6;
      boolean boolean1 = false;
      int int2 = 1465;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean1, int2);
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.500201674336832E-8, 1.500201674336832E-8, 1.500201674336832E-8, 1.500201674336832E-8);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.clearStepHandlers();
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.500201674336832E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertNotNull(firstOrderConverter0);
      assertEquals(12, firstOrderConverter0.getDimension());
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertNotNull(expandableStatefulODE0);
      assertEquals(12, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      PegasusSolver pegasusSolver0 = new PegasusSolver(6);
      assertNotNull(pegasusSolver0);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, pegasusSolver0.getEvaluations());
      assertEquals(1.0E-14, pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, pegasusSolver0.getMaxEvaluations());
      assertEquals(6.0, pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.500201674336832E-8);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-5.234055273962444E-8), (-5.234055273962444E-8), 4304.1932164, 4304.1932164);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(54).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3.612356038181234E-110);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1801.4441163733159), (-1801.4441163733159), 1.0E-10, 1.0E-10);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-968.17253576463));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      PegasusSolver pegasusSolver0 = new PegasusSolver((-1689.5033426));
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType1);
      PegasusSolver pegasusSolver1 = new PegasusSolver((-4.115797571786574E19));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter2, (-1801.4441163733159), (-229661.35542943483), (-959), (UnivariateSolver) pegasusSolver0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 721.293550598671);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 33, (-2642), 0.5);
      graggBulirschStoerIntegrator0.setOrderControl((-2976), (-2083), 8.757941916723339E-21);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-4666.70036);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-4666.70036);
      doubleArray0[3] = (-4666.70036);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3240.0), (-4666.70036), (-4666.70036), 1505.43);
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1514), 610, (-3240.0));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1746).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-4666.70036));
      int int0 = 2145838509;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, (-88.79), 0.9999, (-1024.095647664562));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType1);
      int int0 = (-5999);
      graggBulirschStoerIntegrator0.setOrderControl(24, (-1024.095647664562), (-5999));
      int int1 = 675;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(675).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      BisectionSolver bisectionSolver0 = new BisectionSolver(24);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 24, 173.3292135706, 24, (UnivariateSolver) bisectionSolver0);
      double double0 = 0.0;
      graggBulirschStoerIntegrator0.setOrderControl(24, (-1024.095647664562), 0.0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.94);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter1, double0, (double) int0, int0, (UnivariateSolver) bisectionSolver0);
      double double1 = 0.65;
      int int2 = 76;
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter2, (double) int1, double1, int2, (UnivariateSolver) bisectionSolver0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, (-4.8465821804075345E-8), (-4.8465821804075345E-8), 1221);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1), 1221, 1221);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-1));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2790).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1801.1745891), (-1801.1745891), 1.0E-10, 1.0E-10);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 31);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(31).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2067.8258);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.5, 1869.44102).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      PegasusSolver pegasusSolver0 = new PegasusSolver((-5999));
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      PegasusSolver pegasusSolver1 = new PegasusSolver(639.924427929);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 86.0467008, (-1801.1745891), 7, (UnivariateSolver) pegasusSolver0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 666.9297983272446);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-4666.70036);
      doubleArray0[3] = (-4666.70036);
      doubleArray0[4] = (-4666.70036);
      doubleArray0[5] = (-4666.70036);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4666.70036), (-4666.70036), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setStepSizeControl((-4666.70036), (-4666.70036), doubleArray0, doubleArray0);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, (FilterType) null);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      EventFilter eventFilter2 = new EventFilter(eventFilter0, filterType0);
      PegasusSolver pegasusSolver0 = new PegasusSolver((-4666.70036));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.8, 0.0, 3, (UnivariateSolver) pegasusSolver0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(907.203255, 1509.7762213, (-4666.70036), (-4136.4894));
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 86.0467008);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.events.EventFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1464.59254, 1464.59254, 4304.1932164, 4304.1932164);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 54);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(54).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 54, 54, 1952.6450078642927);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 4);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-7.207022875977515E70), (-4279.0), (-4279.0), (-7.207022875977515E70));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-435), (-435), 0.9);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-5.47315553588771E-8);
      doubleArray0[1] = 0.06977382302284241;
      doubleArray0[2] = (-5.47315553588771E-8);
      doubleArray0[3] = (-5.47315553588771E-8);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-5.47315553588771E-8), (-5.47315553588771E-8), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(2, (-728.99432), 0.06977382302284241);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1800.1043106820116), (-1800.1043106820116), 1.0E-10, 1.0E-10);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(12).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2067.8258);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.5, (double)12).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      PegasusSolver pegasusSolver0 = new PegasusSolver(12);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      PegasusSolver pegasusSolver1 = new PegasusSolver(639.924427929);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 86.0467008, 2.5996166206245285E172, 7, (UnivariateSolver) pegasusSolver0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 666.9297983272446);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1027.13520991), 1.0E-10, 1.0E-10, 1081.2588);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 31);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1.0);
      expandableStatefulODE0.getSecondaryMappers();
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType1);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      FilterType filterType2 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter((EventHandler) null, filterType2);
      PegasusSolver pegasusSolver0 = new PegasusSolver(1081.2588);
      EventFilter eventFilter3 = new EventFilter((EventHandler) null, filterType0);
      EventFilter eventFilter4 = new EventFilter(eventFilter2, filterType1);
      PegasusSolver pegasusSolver1 = new PegasusSolver(811.783135);
      FilterType filterType3 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter5 = new EventFilter((EventHandler) null, filterType3);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter2, 0.5, 1.0E-10, 31, (UnivariateSolver) pegasusSolver1);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.events.EventFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(31).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2067.8258);
      expandableStatefulODE0.getSecondaryMappers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.5, 1869.44102).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      PegasusSolver pegasusSolver0 = new PegasusSolver((-5999));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.7976931348623157E308;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter0, filterType1);
      eventFilter2.init(1869.44102, doubleArray0, (-1801.1745891));
      PegasusSolver pegasusSolver1 = new PegasusSolver(1869.44102);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5, 1.0E-10, 2.0, 1.0E-10);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter1, 3.336180982537055E-9, 3.336180982537055E-9, (-5999), (UnivariateSolver) pegasusSolver0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.7976931348623157E308);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (5.00E-01) reached, integration needs 2.11E-10
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1801.1745891), (-1801.1745891), 1.0E-10, 1.0E-10);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 31);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(31).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(2067.8258);
      expandableStatefulODE0.getSecondaryMappers();
      expandableStatefulODE0.setTime((-1801.1745891));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      PegasusSolver pegasusSolver0 = new PegasusSolver(5.332900939354667E-277);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType1);
      PegasusSolver pegasusSolver1 = new PegasusSolver(1.0E-10);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter1, 2067.8258, 5.332900939354667E-277, 7, (UnivariateSolver) pegasusSolver1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 666.9297983272446);
  }
}
