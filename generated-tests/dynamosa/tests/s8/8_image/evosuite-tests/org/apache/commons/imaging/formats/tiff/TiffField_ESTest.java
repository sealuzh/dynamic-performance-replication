/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 17:47:29 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-56);
      TiffField tiffField0 = new TiffField((byte) (-56), (byte)0, fieldTypeDouble0.SSHORT, 1323, 4L, byteArray0, byteOrder0, 2131090643);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2646, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-14336), int0);
      assertEquals(2131090643, tiffField0.getSortHint());
      assertEquals((-56), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2147451518, 50, fieldTypeFloat0, (byte)1, (byte) (-71), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-71), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(2147451518, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[329];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2120), fieldTypeDouble0, 27, 1952L, byteArray0, byteOrder0, 37395);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37395, tiffField0.getSortHint());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-2120), tiffField0.getDirectoryType());
      assertEquals(1952, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeShort0, 50712, 50712, byteArray0, (ByteOrder) null, 50712);
      tiffField0.dump();
      assertEquals(50712, tiffField0.getOffset());
      assertEquals(101424, tiffField0.getBytesLength());
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals(50712, tiffField0.getTag());
      assertEquals(50712, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(106, 106, fieldTypeRational0, 106, (-364L), byteArray0, byteOrder0, (-1080));
      String string0 = tiffField0.getValueDescription();
      assertEquals(848, tiffField0.getBytesLength());
      assertEquals(106, tiffField0.getDirectoryType());
      assertEquals(106, tiffField0.getTag());
      assertEquals((-1080), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-364), tiffField0.getOffset());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1077, 1077, fieldTypeAscii0, 1077, 1077, byteArray0, byteOrder0, 1077);
      tiffField0.getValue();
      assertEquals(1077, tiffField0.getSortHint());
      assertEquals(1077, tiffField0.getOffset());
      assertEquals(1077, tiffField0.getTag());
      assertEquals(1077, tiffField0.getBytesLength());
      assertEquals(1077, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[12];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40965, 0, fieldTypeShort0, 40965, 0, byteArray0, byteOrder0, 40965);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
      assertEquals(40965, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2541, 1323, fieldTypeShort0.DOUBLE, 2541, 4542L, byteArray0, (ByteOrder) null, 3);
      int int0 = tiffField0.getTag();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(2541, int0);
      assertEquals(1323, tiffField0.getDirectoryType());
      assertEquals(4542, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-222), 59933, fieldTypeFloat0, 59933, 59933, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getTag();
      assertEquals(59933, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-222), int0);
      assertEquals(59933, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)104;
      TiffField tiffField0 = new TiffField(491, 491, fieldTypeRational0.ASCII, 180L, 56L, byteArray0, byteOrder0, 2752);
      String string0 = tiffField0.getStringValue();
      assertEquals(2752, tiffField0.getSortHint());
      assertEquals(491, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(491, tiffField0.getDirectoryType());
      assertEquals(180, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40965, (byte)104, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(40965, tiffField0.getTag());
      assertEquals(104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (-1048));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1048), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[12];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (-3507), fieldTypeShort0, 2120L, 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3507), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(980, (-2955), fieldTypeRational0.DOUBLE, (byte)0, (byte) (-48), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2955), tiffField0.getDirectoryType());
      assertEquals((-48), int0);
      assertEquals(980, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-56);
      byteArray0[7] = (byte) (-1);
      TiffField tiffField0 = new TiffField(2330, 2557, fieldTypeRational0, 2330, 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2557, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(18640, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2330, tiffField0.getTag());
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1271), "atcJVKK3:");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-48);
      TiffField tiffField0 = new TiffField(1323, (byte)0, fieldTypeLong0, 1323, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1323, tiffField0.getTag());
      assertEquals(5292, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)50, 3533, fieldTypeFloat0, 1L, 88L, byteArray0, byteOrder0, (-286));
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-286), tiffField0.getSortHint());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3533, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)104;
      byteArray0[4] = (byte)104;
      TiffField tiffField0 = new TiffField(88, 88, fieldTypeRational0, 1L, 88, byteArray0, (ByteOrder) null, 2268);
      tiffField0.getIntValue();
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals(2268, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(88, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-9);
      TiffField tiffField0 = new TiffField(34030, 112, fieldTypeShort0, 1L, 832L, byteArray0, byteOrder0, 396);
      tiffField0.getIntValue();
      assertEquals(34030, tiffField0.getTag());
      assertEquals(832, tiffField0.getOffset());
      assertEquals(396, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(112, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-5288), (String) null);
      TiffField tiffField0 = new TiffField((byte)93, 50, fieldTypeShort0, (-13592L), (byte)93, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(93, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(93, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-95), "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1437), (-1927), fieldTypeRational0, 32L, (-1927), byteArray0, byteOrder0, (-1437));
      tiffField0.getFieldTypeName();
      assertEquals((-1437), tiffField0.getTag());
      assertEquals((-1437), tiffField0.getSortHint());
      assertEquals((-1927), tiffField0.getOffset());
      assertEquals((-1927), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "%t]o0DXD1nO&1]eBJJ");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "%t]o0DXD1nO&1]eBJJ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 3315, fieldTypeFloat0, 3315, 0, byteArray0, byteOrder0, 405);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(405, tiffField0.getSortHint());
      assertEquals(3315, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-225), (String) null);
      TiffField tiffField0 = new TiffField((-225), (-225), fieldTypeDouble0, 1185L, (-225), byteArray0, byteOrder0, (-225));
      tiffField0.getFieldType();
      assertEquals((-225), tiffField0.getDirectoryType());
      assertEquals((-225), tiffField0.getSortHint());
      assertEquals((-225), tiffField0.getTag());
      assertEquals((-225), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField((-225), (-225), fieldTypeFloat0.DOUBLE, 1185L, (-225), byteArray0, byteOrder0, (-225));
      tiffField0.getFieldType();
      assertEquals((-225), tiffField0.getDirectoryType());
      assertEquals((-225), tiffField0.getOffset());
      assertEquals((-225), tiffField0.getSortHint());
      assertEquals((-225), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField(2760, 1514, fieldTypeFloat0, 1L, 1514, byteArray0, byteOrder0, 24);
      tiffField0.getDoubleValue();
      assertEquals(2760, tiffField0.getTag());
      assertEquals(1514, tiffField0.getDirectoryType());
      assertEquals(1514, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)116;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeRational0.UNDEFINED, 1, (byte)116, byteArray0, byteOrder0, 1132);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(116, tiffField0.getOffset());
      assertEquals(1132, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-112);
      TiffField tiffField0 = new TiffField((byte)104, 1, fieldTypeRational0.LONG, 1, 1581L, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(104, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1581, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(483, 483, fieldTypeFloat0, 3151L, 3151L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3151, tiffField0.getOffset());
      assertEquals(483, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(483, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3116), fieldTypeLong0, (-3116), (-2023L), byteArray0, byteOrder0, (-3667));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3116), int0);
      assertEquals((-2023), tiffField0.getOffset());
      assertEquals((-3667), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40965, (byte)104, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (byte) (-19), fieldTypeRational0, 703L, 3184L, byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals(703L, long0);
      assertEquals(3184, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-19), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3588), (-3588), fieldTypeShort0, (-3588), 613L, byteArray0, byteOrder0, (byte)32);
      long long0 = tiffField0.getCount();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-3588), tiffField0.getTag());
      assertEquals(613, tiffField0.getOffset());
      assertEquals((-3588), tiffField0.getDirectoryType());
      assertEquals((-3588L), long0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 50, fieldTypeAscii0, 0L, (-5145L), byteArray0, byteOrder0, (byte)43);
      int int0 = tiffField0.getBytesLength();
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(18, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-5145), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2650), fieldTypeRational0, (-2650), (-2650), byteArray0, byteOrder0, (byte)44);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-21200), int0);
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-2650), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1038), (-3877), fieldTypeByte0, (-1964L), (-1L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals((-1038), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3877), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte) (-56), fieldTypeRational0, 0L, (byte) (-56), byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-56), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-56), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2531, "X");
      TiffField tiffField0 = new TiffField(4, (-3642), fieldTypeRational0, (byte)36, 50735, byteArray0, byteOrder0, (byte)53);
      tiffField0.getByteArrayValue();
      assertEquals((-3642), tiffField0.getDirectoryType());
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(50735, tiffField0.getOffset());
      assertEquals(288, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(980, (-2955), fieldTypeRational0.DOUBLE, (byte)0, (byte) (-48), byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-48), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(980, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals((-2955), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1092, 2557, fieldTypeRational0, 1092, 0L, byteArray0, (ByteOrder) null, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(3835);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(106, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 1150, fieldTypeShort0, 0L, 0, byteArray0, (ByteOrder) null, 64);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1150, tiffField0.getDirectoryType());
      assertEquals(33L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeRational0, (byte)32, (byte)32, (byte[]) null, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField((-2917), (-2917), fieldTypeFloat0, (-2917), (-2917), byteArray0, byteOrder0, (-2917));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)32, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41728, 41728, (FieldType) null, (-1244L), 0L, byteArray0, byteOrder0, 41728);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeRational0, (byte)40, (byte)40, (byte[]) null, (ByteOrder) null, (byte)40);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-1599), (-1599), fieldTypeByte0, (-1599), (-1599), byteArray0, byteOrder0, (-1599));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(27, (-990), fieldTypeFloat0, 47, 255L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4100), 696, fieldTypeLong0, (-4100), (-4100), byteArray0, byteOrder0, (-4100));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-108), (byte) (-108), fieldTypeRational0, (byte) (-108), (byte) (-108), byteArray0, (ByteOrder) null, (byte) (-108));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)124, 1224, fieldTypeRational0, (byte)124, (-473L), (byte[]) null, (ByteOrder) null, (byte)124);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(2992, 2992, (FieldType) null, 2992, 2992, byteArray0, byteOrder0, 2992);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-125), (byte) (-125), fieldTypeRational0, (byte) (-125), (byte) (-125), byteArray0, (ByteOrder) null, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeShort0, (-1L), 40095, byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeShort0, 67, 67, (byte[]) null, byteOrder0, 67);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[51];
      TiffField tiffField0 = new TiffField((-2935), (-2935), fieldTypeFloat0.DOUBLE, (-2935), (-2935), byteArray0, byteOrder0, (-2935));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-3315), 93, fieldTypeRational0, 1L, 93, byteArray0, (ByteOrder) null, 2147357005);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1331, 1331, (FieldType) null, 1331, 1331, byteArray0, byteOrder0, 1331);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-28), (byte) (-28), fieldTypeRational0, (byte) (-28), (byte) (-28), byteArray0, (ByteOrder) null, (byte) (-28));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)9, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, (FieldType) null, 106L, 1778L, byteArray0, byteOrder0, (byte)74);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[329];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2120), fieldTypeDouble0, 27, 1952L, byteArray0, byteOrder0, 37395);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-228), (-228), (FieldType) null, (-228), (-228), byteArray0, byteOrder0, (-228));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[51];
      TiffField tiffField0 = new TiffField((-2935), (-2935), fieldTypeFloat0.DOUBLE, (-2935), (-2935), byteArray0, byteOrder0, (-2935));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)124, (byte)124, fieldTypeRational0, (byte)124, (byte)124, (byte[]) null, (ByteOrder) null, (byte)124);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-14), (byte) (-14), fieldTypeRational0, (byte) (-14), (byte) (-14), byteArray0, (ByteOrder) null, (byte) (-14));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(345, 345, (FieldType) null, 345, 345, (byte[]) null, byteOrder0, 345);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-526), (-526), fieldTypeShort0, (-526), (-526), byteArray0, byteOrder0, (-526));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1907), (-1907), fieldTypeDouble0, (-1907), (-1907), byteArray0, byteOrder0, (-1907));
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)25, (byte)25, fieldTypeRational0, (byte)25, (byte)25, byteArray0, byteOrder0, (byte)25);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50711, 50706, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50711);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-118), (byte) (-118), fieldTypeRational0, (byte) (-118), (byte) (-118), byteArray0, (ByteOrder) null, (byte) (-118));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, (ByteOrder) null, (byte)82);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "?`K `u.{(/m!{)y%");
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2146671130, 1, fieldTypeShort0, (-1L), (-2147483648L), byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(2146671130, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1323, 1323, byteArray0, byteOrder0, (-1048));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-1048), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1323, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 1377L, byteArray0, byteOrder0, (byte)103);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(1377, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32809, (byte)0, fieldTypeRational0.BYTE, 341, 682L, byteArray0, byteOrder0, (-505));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(682, tiffField0.getOffset());
      assertEquals(32809, tiffField0.getTag());
      assertEquals((-505), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (byte)9, fieldTypeRational0, (-1), 0L, byteArray0, byteOrder0, (byte)9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1701), (-1701), (FieldType) null, (-1057L), (-1057L), byteArray0, (ByteOrder) null, (-1701));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "u");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2573, 0, fieldTypeByte0, (-1), 2573, byteArray0, byteOrder0, (-2038));
      int int0 = tiffField0.getOffset();
      assertEquals(2573, int0);
      assertEquals(2573, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2038), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1765, 0, fieldTypeAscii0, 1765, 0L, byteArray0, byteOrder0, 1765);
      tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1765, tiffField0.getTag());
      assertEquals(1765, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[12];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (-3507), fieldTypeShort0, 2120L, 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3507), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1323, "atcJVKK3:");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(40965);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1323, 1323, byteArray0, byteOrder0, (-1048));
      int int0 = tiffField0.getBytesLength();
      assertEquals(1323, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2646, int0);
      assertEquals((-1048), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50708, 50708, fieldTypeShort0, 50708, 50708, byteArray0, byteOrder0, 50708);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50708, 50708, fieldTypeShort0, 50708, 50708, byteArray0, byteOrder0, 50708);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeFloat0, 1747, 1747, byteArray0, byteOrder0, 1747);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4b502e2e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1596, 1596, fieldTypeLong0, 1596, 1596, byteArray0, byteOrder0, 1596);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1596, tiffField0.getOffset());
      assertEquals(6384, tiffField0.getBytesLength());
      assertEquals(1596, tiffField0.getDirectoryType());
      assertEquals(1596, tiffField0.getTag());
      assertEquals(1596, tiffField0.getSortHint());
      assertEquals(1596L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)86, (byte)86, fieldTypeRational0, (byte)86, (byte)86, byteArray0, (ByteOrder) null, (byte)86);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[261];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeByte0, (byte)95, (byte)95, byteArray0, byteOrder0, (byte)95);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3141e9a2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[158];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeDouble0, 19, 19, byteArray0, byteOrder0, 19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, doubleArray0.length);
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)5, (byte)5, fieldTypeLong0, (byte)5, (byte)5, byteArray0, byteOrder0, (byte)5);
      tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1762, 1762, fieldTypeFloat0, 1762, 1762, byteArray0, byteOrder0, 1762);
      tiffField0.getDoubleArrayValue();
      assertEquals(7048, tiffField0.getBytesLength());
      assertEquals(1762L, tiffField0.getCount());
      assertEquals(1762, tiffField0.getSortHint());
      assertEquals(1762, tiffField0.getDirectoryType());
      assertEquals(1762, tiffField0.getTag());
      assertEquals(1762, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeRational0, (byte)8, (byte)8, byteArray0, (ByteOrder) null, (byte)8);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(8L, tiffField0.getCount());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50708, 50708, fieldTypeShort0, 50708, 50708, byteArray0, byteOrder0, 50708);
      tiffField0.getDoubleArrayValue();
      assertEquals(50708, tiffField0.getTag());
      assertEquals(50708L, tiffField0.getCount());
      assertEquals(101416, tiffField0.getBytesLength());
      assertEquals(50708, tiffField0.getSortHint());
      assertEquals(50708, tiffField0.getOffset());
      assertEquals(50708, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1762, 1762, fieldTypeFloat0, 1762, 1762, byteArray0, byteOrder0, 1762);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@224debae for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[124];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeShort0.IFD, 28, 28, byteArray0, byteOrder0, 28);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, intArray0.length);
      assertEquals(28L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[21];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(50711, 50711, fieldTypeRational0, 50711, 50711, byteArray0, byteOrder0, 50711);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[37];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50735, 50735, fieldTypeShort0, 50735, 50735, byteArray0, byteOrder0, 50735);
      tiffField0.getIntArrayValue();
      assertEquals(50735, tiffField0.getDirectoryType());
      assertEquals(101470, tiffField0.getBytesLength());
      assertEquals(50735L, tiffField0.getCount());
      assertEquals(50735, tiffField0.getOffset());
      assertEquals(50735, tiffField0.getTag());
      assertEquals(50735, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)124, (byte)124, fieldTypeRational0, (byte)124, (byte)124, byteArray0, (ByteOrder) null, (byte)124);
      tiffField0.getIntArrayValue();
      assertEquals(992, tiffField0.getBytesLength());
      assertEquals(124, tiffField0.getOffset());
      assertEquals(124L, tiffField0.getCount());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(124, tiffField0.getTag());
      assertEquals(124, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2756, 1005, fieldTypeAscii0, 2756, (-1L), byteArray0, byteOrder0, 2756);
      String string0 = tiffField0.getStringValue();
      assertEquals(2756, tiffField0.getSortHint());
      assertEquals(2756, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1005, tiffField0.getDirectoryType());
      assertEquals(2756, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50708, 50708, fieldTypeShort0, 50708, 50708, byteArray0, byteOrder0, 50708);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(50708 (0xc614: UniqueCameraModel): ): [S@62693ec0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeRational0, (byte)32, (byte)32, byteArray0, (ByteOrder) null, (byte)32);
      String string0 = tiffField0.getTagName();
      assertEquals(32, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x20)", string0);
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[31];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50735, 50735, fieldTypeShort0, 50735, 50735, byteArray0, byteOrder0, 50735);
      String string0 = tiffField0.getTagName();
      assertEquals(50735, tiffField0.getOffset());
      assertEquals("CameraSerialNumber", string0);
      assertEquals(50735, tiffField0.getSortHint());
      assertEquals(50735, tiffField0.getTag());
      assertEquals(50735, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeRational0, (byte)95, (byte)95, byteArray0, (ByteOrder) null, (byte)95);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "xH'pX4CbN2~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeFloat0, 67, 67, byteArray0, byteOrder0, 67);
      String string0 = tiffField0.getValueDescription();
      assertEquals(67, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(67, tiffField0.getOffset());
      assertEquals(67, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (56)", string0);
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1403, 1403, fieldTypeByte0, 7252L, 1403, byteArray0, byteOrder0, 1403);
      String string0 = tiffField0.toString();
      assertEquals(1403, tiffField0.getDirectoryType());
      assertEquals(7252, tiffField0.getBytesLength());
      assertEquals("1403 (0x57b: Unknown Tag): 0, 0, 0 (7252 Byte)", string0);
      assertEquals(1403, tiffField0.getOffset());
      assertEquals(1403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeFloat0, 1747, 1747, byteArray0, byteOrder0, 1747);
      String string0 = tiffField0.toString();
      assertEquals(1747, tiffField0.getOffset());
      assertEquals(6988, tiffField0.getBytesLength());
      assertEquals(1747, tiffField0.getDirectoryType());
      assertEquals(1747, tiffField0.getSortHint());
      assertEquals("1747 (0x6d3: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1747 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), 4001, fieldTypeDouble0, 4001, (-2), byteArray0, byteOrder0, (-2));
      String string0 = tiffField0.toString();
      assertEquals("-2 (0xfffffffe: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (4001 Double)", string0);
      assertEquals(4001, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(32008, tiffField0.getBytesLength());
      assertEquals((-2), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[207];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeByte0, 70, (-33376L), byteArray0, (ByteOrder) null, 70);
      String string0 = tiffField0.getValueDescription();
      assertEquals(70, tiffField0.getTag());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals((-33376), tiffField0.getOffset());
      assertEquals(70, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(70L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[261];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(42032, 42032, fieldTypeLong0, 42032, 42032, byteArray0, byteOrder0, 26);
      String string0 = tiffField0.toString();
      assertEquals(168128, tiffField0.getBytesLength());
      assertEquals(42032, tiffField0.getDirectoryType());
      assertEquals("42032 (0xa430: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (65) (42032 Long)", string0);
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(42032, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 1352, fieldTypeShort0.IFD, 1352, 17, byteArray0, byteOrder0, 1352);
      String string0 = tiffField0.getValueDescription();
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getOffset());
      assertEquals(1352, tiffField0.getDirectoryType());
      assertEquals(5408, tiffField0.getBytesLength());
      assertEquals(1352L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1352, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeDouble0, 67, 67, byteArray0, (ByteOrder) null, 67);
      String string0 = tiffField0.toString();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(536, tiffField0.getBytesLength());
      assertEquals("67 (0x43: Unknown Tag): 0.0 (67 Double)", string0);
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[55];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1077, 1077, fieldTypeAscii0, 1077, 1077, byteArray0, byteOrder0, 1077);
      tiffField0.toString();
      assertEquals(1077, tiffField0.getBytesLength());
      assertEquals(1077L, tiffField0.getCount());
      assertEquals(1077, tiffField0.getTag());
      assertEquals(1077, tiffField0.getSortHint());
      assertEquals(1077, tiffField0.getDirectoryType());
      assertEquals(1077, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(546, 546, fieldTypeAscii0, (byte)32, (byte)32, byteArray0, (ByteOrder) null, 546);
      tiffField0.toString();
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(546, tiffField0.getTag());
      assertEquals(546, tiffField0.getSortHint());
      assertEquals(546, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-56), fieldTypeRational0, 49L, (byte) (-56), byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), (byte)104);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-56), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-56), tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-3961), 40964, fieldTypeShort0, 50736, (-3961), byteArray0, byteOrder0, 2071);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(40964, 50736);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(2071, tiffField0.getSortHint());
      assertEquals((-3961), tiffField0.getOffset());
      assertEquals((-3961), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(101472, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(40964, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, fieldTypeRational0, (byte)16, (byte)16, byteArray0, (ByteOrder) null, (byte)16);
      tiffField0.getFieldTypeName();
      assertEquals(16, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, (ByteOrder) null, (byte)82);
      int int0 = tiffField0.getSortHint();
      assertEquals(82, tiffField0.getTag());
      assertEquals(82, tiffField0.getDirectoryType());
      assertEquals(82, int0);
      assertEquals(656, tiffField0.getBytesLength());
      assertEquals(82, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50736, 50736, fieldTypeShort0, 50736, 50736, byteArray0, byteOrder0, 50736);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50736, tiffField0.getOffset());
      assertEquals(50736, tiffField0.getDirectoryType());
      assertEquals(50736, tiffField0.getSortHint());
      assertEquals("50736 (0xc630: DNGLensInfo): ", string0);
      assertEquals(101472, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeRational0, (byte)39, (byte)39, (byte[]) null, byteOrder0, (byte)39);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50709, 50709, fieldTypeShort0, 50709, 50709, byteArray0, byteOrder0, 50709);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(50709, tiffField0.getDirectoryType());
      assertEquals(50709, tiffField0.getTag());
      assertEquals(50709, tiffField0.getSortHint());
      assertEquals(50709L, tiffElement0.offset);
  }
}
