/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 09:08:24 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-74);
      byteArray0[4] = (byte)95;
      TiffField tiffField0 = new TiffField(486, 486, fieldTypeRational0, 3718L, 2306L, byteArray0, byteOrder0, (-554));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(29744, tiffField0.getBytesLength());
      assertEquals(1, int0);
      assertEquals((-554), tiffField0.getSortHint());
      assertEquals(486, tiffField0.getTag());
      assertEquals(486, tiffField0.getDirectoryType());
      assertEquals(2306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)95;
      TiffField tiffField0 = new TiffField(486, 486, fieldTypeRational0, 3718L, 2306L, byteArray0, byteOrder0, (-554));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(2306, tiffField0.getOffset());
      assertEquals(486, tiffField0.getDirectoryType());
      assertEquals((-554), tiffField0.getSortHint());
      assertEquals(486, tiffField0.getTag());
      assertEquals(29744, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1596), (-1596), fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte) (-3));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals((-1596), tiffField0.getTag());
      assertEquals((-1596), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-519), "<W");
      TiffField tiffField0 = new TiffField(40094, (byte)126, fieldTypeFloat0, (-1695L), 1915L, byteArray0, byteOrder0, (-3265));
      tiffField0.dump();
      assertEquals(40094, tiffField0.getTag());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals((-3265), tiffField0.getSortHint());
      assertEquals(1915, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 283, fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(283, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-3608), "OversizeValueElement, tag: ");
      TiffField tiffField0 = new TiffField((byte)0, (-2127031421), fieldTypeLong0, 1499L, 255L, byteArray0, byteOrder0, (byte)126);
      tiffField0.getValue();
      assertEquals(5996, tiffField0.getBytesLength());
      assertEquals((-2127031421), tiffField0.getDirectoryType());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 513, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getOffset());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getDirectoryType());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      int int0 = tiffField0.getTag();
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(42, tiffField0.getOffset());
      assertEquals(2178, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65107, 73, fieldTypeFloat0, 14440L, (byte)18, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65107, int0);
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)50, (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)50;
      TiffField tiffField0 = new TiffField((byte)18, (byte)18, fieldTypeAscii0, (byte)18, (-2304), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2304), tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(18, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 7, (-1788L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1788), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147465057, 2147465057, fieldTypeByte0, (-17179869208L), (-2301L), (byte[]) null, byteOrder0, 1618);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147465057, tiffField0.getTag());
      assertEquals(2147465057, tiffField0.getDirectoryType());
      assertEquals((-2301), tiffField0.getOffset());
      assertEquals(1618, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeShort0, 79, 79, byteArray0, byteOrder0, 79);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79L, tiffElement0.offset);
      assertEquals(79, tiffField0.getTag());
      assertEquals(79, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 283, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getOffset();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1789569705), 568, fieldTypeLong0, (byte)20, (byte) (-97), byteArray0, byteOrder0, (-1610));
      int int0 = tiffField0.getOffset();
      assertEquals(568, tiffField0.getDirectoryType());
      assertEquals((-1789569705), tiffField0.getTag());
      assertEquals((-97), int0);
      assertEquals((-1610), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-34);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 1548, fieldTypeShort0, 1576L, 4L, byteArray0, byteOrder0, 1548);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1548, tiffField0.getSortHint());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals(1548, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getTag());
      assertEquals(222, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1596), (-1596), fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte) (-3));
      tiffField0.getIntValueOrArraySum();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1596), tiffField0.getTag());
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1596), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2133628914, (-3178), fieldTypeShort0, 1L, (-3359L), byteArray0, byteOrder0, (-2147375084));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-3178), tiffField0.getDirectoryType());
      assertEquals((-2147375084), tiffField0.getSortHint());
      assertEquals(2133628914, tiffField0.getTag());
      assertEquals((-3359), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byteArray0[4] = (byte)12;
      TiffField tiffField0 = new TiffField(3002, (-1), fieldTypeRational0, 1L, (-3928L), byteArray0, byteOrder0, (byte)87);
      tiffField0.getIntValue();
      assertEquals(3002, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-3928), tiffField0.getOffset());
      assertEquals(87, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1596), (-1596), fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte) (-3));
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1596), tiffField0.getTag());
      assertEquals((-1596), tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-3), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-85), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40963, 2147465057, fieldTypeFloat0, (-85), 2147465057, byteArray0, byteOrder0, (byte)59);
      tiffField0.getFieldTypeName();
      assertEquals(2147465057, tiffField0.getOffset());
      assertEquals(2147465057, tiffField0.getDirectoryType());
      assertEquals(40963, tiffField0.getTag());
      assertEquals(59, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2147, "");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)108);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(875, 32781, fieldTypeShort0, 1L, (-2024L), byteArray0, byteOrder0, 1942);
      tiffField0.getFieldTypeName();
      assertEquals(1942, tiffField0.getSortHint());
      assertEquals(875, tiffField0.getTag());
      assertEquals((-2024), tiffField0.getOffset());
      assertEquals(32781, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "u=dhB)<1!tn<Ri%");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-274), fieldTypeFloat0, 0L, (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(968, "!-Y>n<(? ``");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-2943), fieldTypeFloat0, 1305L, (-551L), byteArray0, byteOrder0, (-468));
      tiffField0.getFieldType();
      assertEquals((-2943), tiffField0.getDirectoryType());
      assertEquals((-551), tiffField0.getOffset());
      assertEquals((-468), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-519), "<W");
      TiffField tiffField0 = new TiffField(2133628914, (byte)126, fieldTypeAscii0, (byte)126, 2133628914, byteArray0, byteOrder0, (byte)126);
      tiffField0.getFieldType();
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(2133628914, tiffField0.getOffset());
      assertEquals(2133628914, tiffField0.getTag());
      assertEquals(126, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-751), 6, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, 41485);
      tiffField0.getDoubleValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(41485, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-751), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      TiffField tiffField0 = new TiffField(3002, (-1), fieldTypeRational0, 1L, (-3928L), byteArray0, byteOrder0, (byte)87);
      tiffField0.getDoubleValue();
      assertEquals(3002, tiffField0.getTag());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-3928), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-25);
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(56, (-2146770907), fieldTypeShort0, 1L, (-2706L), byteArray0, byteOrder0, 405);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(405, tiffField0.getSortHint());
      assertEquals((-2706), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getTag());
      assertEquals((-2146770907), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.UNDEFINED, 3759L, (-1700L), byteArray0, byteOrder0, (-2283));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1700), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-2283), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3759, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65107, 73, fieldTypeFloat0, 14440L, (byte)18, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(57760, tiffField0.getBytesLength());
      assertEquals(73, int0);
      assertEquals(65107, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      long long0 = tiffField0.getCount();
      assertEquals(2178, tiffField0.getDirectoryType());
      assertEquals(0L, long0);
      assertEquals(42, tiffField0.getOffset());
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2304), (-2304), fieldTypeDouble0, 1355, (-2304), byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals((-2304), tiffField0.getDirectoryType());
      assertEquals((-2304), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1355L, long0);
      assertEquals((-2304), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      int int0 = tiffField0.getBytesLength();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2178, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3304, "eF4*qC}7D%");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 129, fieldTypeShort0, 1L, (-486L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-486), tiffField0.getOffset());
      assertEquals(129, tiffField0.getDirectoryType());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "u=dhB)<1!tn<Ri%");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-274), fieldTypeFloat0, 0L, (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-75), 0, fieldTypeShort0, 165L, 345L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(330, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(345, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-75), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      tiffField0.getByteArrayValue();
      assertEquals(2178, tiffField0.getDirectoryType());
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48325, 48325, fieldTypeShort0, 48325, 48325, (byte[]) null, byteOrder0, 48325);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-11), (-11), fieldTypeRational0, (-11), (-11), byteArray0, byteOrder0, (-11));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(771, 771, fieldTypeShort0, 771, 771, (byte[]) null, byteOrder0, 771);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeRational0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-2889), fieldTypeRational0, (-2889), 1168L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4639), (-4639), fieldTypeLong0, (-4639), (-4639), byteArray0, byteOrder0, (-4639));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-282), (-282), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeDouble0, 67, 67, (byte[]) null, byteOrder0, 67);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4669), (-4669), fieldTypeLong0, (-4669), (-4669), byteArray0, byteOrder0, (-4669));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48331, 48331, fieldTypeRational0, 48331, 48331, (byte[]) null, byteOrder0, 48331);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-32), (-32), fieldTypeRational0, (-32), (-32), byteArray0, byteOrder0, (-32));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48343, 48343, fieldTypeRational0, 48343, 48343, (byte[]) null, byteOrder0, 48343);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3210), (-3210), fieldTypeRational0, (-3210), (-3210), byteArray0, byteOrder0, (-3210));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeShort0, 67, 67, byteArray0, byteOrder0, 67);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48343, 48343, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 48343);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48343, 48343, fieldTypeRational0, 48343, 48343, (byte[]) null, byteOrder0, 48343);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2219), (-2219), fieldTypeRational0, (-2219), (-2219), byteArray0, byteOrder0, (-2219));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48329, 48329, fieldTypeRational0, 1L, 48329, byteArray0, byteOrder0, 48329);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(557, 1618, (FieldType) null, 1618, 1618, (byte[]) null, byteOrder0, 1618);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[378];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeShort0, 27, 27, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(82, 82, fieldTypeLong0, 82, 82, (byte[]) null, (ByteOrder) null, 82);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1911), (-1911), fieldTypeRational0, (-1911), (-1911), byteArray0, byteOrder0, (-1911));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48335, 48335, fieldTypeRational0, 48335, 48335, (byte[]) null, byteOrder0, 48335);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeRational0, (-14), (-14), byteArray0, byteOrder0, (-14));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-450), (-450), fieldTypeRational0, (-450), (-450), byteArray0, byteOrder0, (-450));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, (-2L), 19, byteArray0, byteOrder0, 19);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("A_LE.U3[Z!is");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "A_LE.U3[Z!is");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 4L, byteArray0, byteOrder0, 1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (-235L), 925L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3025, 54, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 54);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[233];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48319, 48319, (FieldType) null, 48319, (-1L), byteArray0, byteOrder0, 48319);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 65535, fieldTypeRational0, 1L, (-3322L), byteArray0, byteOrder0, 51);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2147, "");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)108);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(875, 32781, fieldTypeShort0, 1L, (-2024L), byteArray0, byteOrder0, 1942);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1827, (-4334), fieldTypeShort0, (-4334), (-1305L), byteArray0, byteOrder0, 1362);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1827, tiffField0.getTag());
      assertEquals(1362, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-8668), tiffField0.getBytesLength());
      assertEquals((-4334), tiffField0.getDirectoryType());
      assertEquals((-1305), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 5126, fieldTypeByte0, 11L, (-265L), byteArray0, byteOrder0, (byte) (-48));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-265), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals(5126, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-480), (-480), fieldTypeRational0, 3915L, 3915L, (byte[]) null, byteOrder0, (-480));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(46, 46, (FieldType) null, (-17179869208L), 46, (byte[]) null, byteOrder0, 46);
      tiffField0.getFieldType();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getOffset());
      assertEquals((-17179869208L), tiffField0.getCount());
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-224), fieldTypeRational0, (-224), (-224), (byte[]) null, byteOrder0, 51022);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-224), int0);
      assertEquals(51022, tiffField0.getSortHint());
      assertEquals((-224), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3222), 113, fieldTypeFloat0, 42L, 1L, byteArray0, byteOrder0, 1285);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(467, 467, fieldTypeRational0, 467, 467, (byte[]) null, byteOrder0, 467);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 283, fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147465057, 2147465057, fieldTypeByte0, (-17179869208L), (-2301L), (byte[]) null, byteOrder0, 1618);
      tiffField0.getTagInfo();
      assertEquals(1618, tiffField0.getSortHint());
      assertEquals(2147465057, tiffField0.getDirectoryType());
      assertEquals((-2301), tiffField0.getOffset());
      assertEquals(2147465057, tiffField0.getTag());
      assertEquals((-24), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "u=dhB)<1!tn<Ri%");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-274), fieldTypeFloat0, 0L, (-1), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1796, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1796, 1796, fieldTypeDouble0, (-2006L), (-827L), byteArray0, byteOrder0, (byte)112);
      long long0 = tiffField0.getCount();
      assertEquals(112, tiffField0.getSortHint());
      assertEquals(1796, tiffField0.getTag());
      assertEquals((-2006L), long0);
      assertEquals((-827), tiffField0.getOffset());
      assertEquals(1796, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2366, 2366, fieldTypeShort0, (-3454L), 963L, byteArray0, byteOrder0, 4145);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2366, tiffField0.getTag());
      assertEquals(2366, tiffField0.getDirectoryType());
      assertEquals(963, tiffField0.getOffset());
      assertEquals(4145, tiffField0.getSortHint());
      assertEquals((-6908), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeShort0, 79, 79, byteArray0, byteOrder0, 79);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 3577, fieldTypeRational0, 1, 30, byteArray0, byteOrder0, 20);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0.DOUBLE, 3002, 3002, byteArray0, byteOrder0, 3002);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2594ac6f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1463, 1463, fieldTypeLong0, 1463, 1463, byteArray0, (ByteOrder) null, 1463);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1463, tiffField0.getSortHint());
      assertEquals(1463, tiffField0.getDirectoryType());
      assertEquals(1463, tiffField0.getTag());
      assertEquals(1463L, tiffField0.getCount());
      assertEquals(5852, tiffField0.getBytesLength());
      assertEquals(1463, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0.DOUBLE, 3002, 3002, byteArray0, byteOrder0, 3002);
      tiffField0.getDoubleArrayValue();
      assertEquals(3002, tiffField0.getDirectoryType());
      assertEquals(3002, tiffField0.getSortHint());
      assertEquals(3002, tiffField0.getTag());
      assertEquals(3002L, tiffField0.getCount());
      assertEquals(3002, tiffField0.getOffset());
      assertEquals(24016, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(32897, 32897, fieldTypeAscii0, 32897, 32897, byteArray0, byteOrder0, 32897);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2b1d910 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0, 3002, 3002, byteArray0, byteOrder0, 3002);
      tiffField0.getDoubleArrayValue();
      assertEquals(3002, tiffField0.getDirectoryType());
      assertEquals(3002, tiffField0.getSortHint());
      assertEquals(3002, tiffField0.getTag());
      assertEquals(12008, tiffField0.getBytesLength());
      assertEquals(3002, tiffField0.getOffset());
      assertEquals(3002L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeShort0, 72, 72, byteArray0, byteOrder0, 72);
      tiffField0.getDoubleArrayValue();
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(144, tiffField0.getBytesLength());
      assertEquals(72L, tiffField0.getCount());
      assertEquals(72, tiffField0.getTag());
      assertEquals(72, tiffField0.getOffset());
      assertEquals(72, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeRational0, 31, 31, byteArray0, byteOrder0, 31);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
      assertEquals(248, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(59, 59, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).ASCII).FLOAT, 59, 59, byteArray0, (ByteOrder) null, 59);
      tiffField0.getDoubleArrayValue();
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(59L, tiffField0.getCount());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(236, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0, 3002, 3002, byteArray0, byteOrder0, 3002);
      tiffField0.getIntArrayValue();
      assertEquals(3002, tiffField0.getOffset());
      assertEquals(3002, tiffField0.getTag());
      assertEquals(12008, tiffField0.getBytesLength());
      assertEquals(3002, tiffField0.getSortHint());
      assertEquals(3002L, tiffField0.getCount());
      assertEquals(3002, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0.DOUBLE, 3002, 3002, byteArray0, byteOrder0, 3002);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7c263e37 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeRational0, 79, 79, byteArray0, byteOrder0, 79);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeShort0, 79, 79, byteArray0, byteOrder0, 79);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(79L, tiffField0.getCount());
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getTag());
      assertEquals(158, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 41);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, byteArray0, byteOrder0, 3);
      tiffField0.getIntArrayValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeShort0, 79, 79, byteArray0, byteOrder0, 79);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6f1ea9c1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeAscii0, 36, 1L, byteArray0, byteOrder0, 36);
      String string0 = tiffField0.getStringValue();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0, (-48L), (byte)0, (byte[]) null, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-48L), tiffField0.getCount());
      assertEquals("Unknown Tag (0xffffffff)", string0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[378];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeFloat0, 64, 64, byteArray0, byteOrder0, 64);
      String string0 = tiffField0.toString();
      assertEquals("64 (0x40: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (64) (64 Float)", string0);
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeByte0, 5852L, 5852L, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.toString();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals("3 (0x3: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (80) (5852 Undefined)", string0);
      assertEquals(5852, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(5852, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-262), 41475, fieldTypeLong0.UNDEFINED, 41475, 41475, byteArray0, byteOrder0, (-262));
      tiffField0.dump();
      assertEquals(41475, tiffField0.getBytesLength());
      assertEquals(41475L, tiffField0.getCount());
      assertEquals(41475, tiffField0.getDirectoryType());
      assertEquals(41475, tiffField0.getOffset());
      assertEquals((-262), tiffField0.getSortHint());
      assertEquals((-262), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0.DOUBLE, 3002, 3002, byteArray0, byteOrder0, 3002);
      String string0 = tiffField0.toString();
      assertEquals(24016, tiffField0.getBytesLength());
      assertEquals("3002 (0xbba: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3002 Double)", string0);
      assertEquals(3002, tiffField0.getSortHint());
      assertEquals(3002, tiffField0.getDirectoryType());
      assertEquals(3002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(426, 426, fieldTypeDouble0, 426, 426, byteArray0, byteOrder0, 426);
      String string0 = tiffField0.toString();
      assertEquals(426, tiffField0.getSortHint());
      assertEquals(426, tiffField0.getDirectoryType());
      assertEquals(426, tiffField0.getOffset());
      assertEquals("426 (0x1aa: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (426 Double)", string0);
      assertEquals(3408, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3002, 3002, fieldTypeLong0, 3002, 3002, byteArray0, byteOrder0, 3002);
      String string0 = tiffField0.toString();
      assertEquals(3002, tiffField0.getDirectoryType());
      assertEquals(3002, tiffField0.getSortHint());
      assertEquals(12008, tiffField0.getBytesLength());
      assertEquals("3002 (0xbba: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (3002 Long)", string0);
      assertEquals(3002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[233];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 386352L, 386352L, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.toString();
      assertEquals(386352, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(1545408, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals("25 (0x19: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (386352 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48329, 48329, fieldTypeShort0, 48329, 48329, byteArray0, byteOrder0, 48329);
      String string0 = tiffField0.toString();
      assertEquals(48329, tiffField0.getSortHint());
      assertEquals(96658, tiffField0.getBytesLength());
      assertEquals(48329, tiffField0.getDirectoryType());
      assertEquals(48329, tiffField0.getOffset());
      assertEquals("48329 (0xbcc9: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (48329 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeShort0, 79, 79, byteArray0, byteOrder0, 79);
      String string0 = tiffField0.toString();
      assertEquals(158, tiffField0.getBytesLength());
      assertEquals("79 (0x4f: Unknown Tag): 0, 0 (79 Short)", string0);
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[162];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(48317, 48317, fieldTypeAscii0, 48317, 50L, byteArray0, byteOrder0, 48317);
      tiffField0.toString();
      assertEquals(48317L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(48317, tiffField0.getTag());
      assertEquals(48317, tiffField0.getSortHint());
      assertEquals(48317, tiffField0.getDirectoryType());
      assertEquals(48317, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48331, 48331, fieldTypeRational0, 48331, 48331, byteArray0, byteOrder0, 48331);
      tiffField0.toString();
      assertEquals(48331, tiffField0.getOffset());
      assertEquals(48331, tiffField0.getDirectoryType());
      assertEquals(48331, tiffField0.getTag());
      assertEquals(48331, tiffField0.getSortHint());
      assertEquals(386648, tiffField0.getBytesLength());
      assertEquals(48331L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(59, 59, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).ASCII).FLOAT, 59, 59, byteArray0, (ByteOrder) null, 59);
      String string0 = tiffField0.getValueDescription();
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(236, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(59L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeFloat0, (-838L), 0L, byteArray0, (ByteOrder) null, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)73, (byte) (-10));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-838L), tiffField0.getCount());
      assertNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeShort0, 72, 72, byteArray0, byteOrder0, 72);
      tiffField0.getFieldTypeName();
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(72, tiffField0.getTag());
      assertEquals(72, tiffField0.getOffset());
      assertEquals(144, tiffField0.getBytesLength());
      assertEquals(72, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeRational0, 107, 400L, (byte[]) null, byteOrder0, 107);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2304), "qi#kMbjd#WG!?95>J");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2304), (-2304), fieldTypeFloat0, (-2304), (-2304), byteArray0, byteOrder0, (-680));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2304), tiffField0.getTag());
      assertEquals((-2304L), tiffField0.getCount());
      assertEquals((-2304), tiffField0.getDirectoryType());
      assertEquals((-680), int0);
      assertEquals((-2304), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1134), fieldTypeShort0, (-1134), (-1134), (byte[]) null, byteOrder0, 49);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeShort0, 1717986918, 1717986918, byteArray0, byteOrder0, 72);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0, (-48L), (byte)0, (byte[]) null, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-48), tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeFloat0, (-838L), 0L, byteArray0, (ByteOrder) null, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)73, (byte) (-10));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3352), tiffField0.getBytesLength());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }
}
