/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:09:24 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2648), "org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter", "LocalVaribeTable");
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("tI?wh4");
      fieldWriter0.visitAttribute(attribute0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, (-2190), (-1616));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("uV?<'4F5U%h3", true);
      Attribute attribute0 = new Attribute("uV?<'4F5U%h3");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      int int0 = Type.SHORT;
      fieldWriter0.getSize();
      Attribute attribute1 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "8*", "long", "8*", (Object) null);
      Attribute attribute0 = new Attribute("6VPjE.;(9+''R?~");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)105;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)105, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 113
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      classWriter0.visitField(49, "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "Deprecated", "Deprecated");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector(2);
      classWriter0.visitInnerClass("Deprecated", "L", "L", (-3636));
      fieldWriter1.put(byteVector0);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2047);
      classWriter0.visitInnerClass("WxFF|p(XJf=P[", "'PL7 I,a|F", "'PL7 I,a|F", 2047);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "'PL7 I,a|F", "org.apache.commons.io.filefilter.FileFileFilter", "j31x", "'PL7 I,a|F");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      classWriter0.visitField(49, "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "Deprecated", "Deprecated");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstField = fieldWriter0;
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter1.put(byteVector0);
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, (-3636), "@pFjyUjKydF#Q0Wg'O", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3636), "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.firstField = fieldWriter1;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      classWriter0.firstField.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter2.visitAnnotation("@pFjyUjKydF#Q0Wg'O", true);
      fieldWriter2.put(byteVector0);
      Attribute attribute0 = new Attribute("@pFjyUjKydF#Q0Wg'O");
      fieldWriter2.visitAttribute(attribute0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, (-3636), (-1368));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = new ByteVector(9);
      Attribute attribute0 = new Attribute("");
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 73, "", "", (String) null, mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@6bb1fdcb
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("uV?<'4F5U%h3", false);
      Attribute attribute0 = new Attribute("uV?<'4F5U%h3");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      Attribute attribute1 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      String string0 = "D>OCyXQg+#v/3\"L9@";
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3636), "@pFjJ_jKydF#Q0Wg'O", "@pFjJ_jKydF#Q0Wg'O", "D>OCyXQg+#v/3\"L9@", "D>OCyXQg+#v/3\"L9@");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.firstField = fieldWriter1;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      Attribute attribute0 = new Attribute("@pFjJ_jKydF#Q0Wg'O");
      fieldWriter1.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2);
      // Undeclared exception!
      try { 
        fieldWriter2.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "LocalVaribeTable", "", (String) null, (Object) null);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("gpI9PGdx");
      ByteVector byteVector1 = byteVector0.putInt((-2648));
      ByteVector byteVector2 = byteVector1.putLong(0L);
      ByteVector byteVector3 = classWriter0.pool;
      byteVector1.putUTF8("O=oe8");
      ByteVector byteVector4 = byteVector2.put12(2523, (-1406));
      byteVector4.putByte((-1406));
      fieldWriter0.put(byteVector2);
      int int0 = Edge.NORMAL;
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("lr|Qr:I");
      fieldWriter0.visitAttribute(attribute0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3636), "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O", "@pFjyUjKydF#Q0Wg'O");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.firstField = fieldWriter1;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      classWriter0.firstField.next = fieldWriter1;
      classWriter0.firstField.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter2.put(byteVector0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, (-3636), (-1368));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3636));
      String string0 = "D>OCyXQg+#v/3\"L9@";
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3636), "@pFjJ_jKydF#Q0Wg'O", "@pFjJ_jKydF#Q0Wg'O", "D>OCyXQg+#v/3\"L9@", "D>OCyXQg+#v/3\"L9@");
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.firstField = fieldWriter1;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      Attribute attribute0 = new Attribute("@pFjJ_jKydF#Q0Wg'O");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2648), "org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter", "LocalVariableTable");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(1);
      ByteVector byteVector2 = byteVector0.putInt((-2648));
      byteVector2.putUTF8("float");
      ByteVector byteVector3 = byteVector1.putByte(2523);
      fieldWriter0.put(byteVector3);
      fieldWriter0.put(byteVector2);
      classWriter0.version = (-128);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("{IJk<");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1370);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector4 = new ByteVector(2665);
      FieldWriter fieldWriter2 = fieldWriter1.next;
      fieldWriter0.put(byteVector1);
      fieldWriter1.visitAnnotation("{IJk<", false);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      FieldWriter fieldWriter3 = null;
      try {
        fieldWriter3 = new FieldWriter(classWriter1, 6610, "LocalVariableTable", "org.apache.commons.io.filefilter.CanWriteFileFilter", "{IJk<", classWriter1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@15
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
