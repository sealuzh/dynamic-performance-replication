/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:46:30 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.catalog.AliasInfo;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.h2.engine.Session;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.ds.PGPooledConnection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Proxy proxy0 = (Proxy)DBUtil.createLoggingStatementHandler((Statement) null, true);
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.queryLong("n2#(", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      String string0 = "--]>l40)e{s#5_1hh";
      ErrorHandler errorHandler1 = new ErrorHandler("--]>l40)e{s#5_1hh");
      DBUtil.runScript("--]>l40)e{s#5_1hh", ',', (Connection) null, false, errorHandler1);
      String string1 = ";a?\"7aE&9~";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, ";a?\"7aE&9~", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: ;a?\"7aE&9~
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = null;
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false, 106, 59, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ");
      DBUtil.close((ResultSet) null);
      SessionRemote sessionRemote0 = new SessionRemote();
      DBUtil.getOpenStatementCount();
      boolean boolean0 = DBUtil.available("", "29w3\"};i>\":gxZVoJ", "cPX`}VL_[4kt;qs'", "c013800d-00d7-ddbe-b99d-000a0a411400");
      boolean boolean1 = DBUtil.existsEnvironment("29w3\"};i>\":gxZVoJ");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      ErrorHandler errorHandler1 = new ErrorHandler("--]>l40)e{s#5_1hh");
      DBUtil.runScript("--]>l40)e{s#5_1hh", ',', (Connection) null, false, errorHandler1);
      DBUtil.available("--]>l40)e{s#5_1hh", "Ek)I(A~}.CaI}b*", "Ek)I(A~}.CaI}b*", "5a=2");
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "=?";
      boolean boolean0 = false;
      int int0 = 32;
      Connection connection0 = null;
      char char0 = 'B';
      ErrorHandler errorHandler0 = new ErrorHandler("=?");
      // Undeclared exception!
      try { 
        DBUtil.runScript("=?", 'B', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      DBUtil.close((ResultSet) null);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.close((ResultSet) null);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Connection connection0 = null;
      String string0 = "QBfw5GBW$VvIQ8O";
      DBUtil.escape("QBfw5GBW$VvIQ8O");
      boolean boolean0 = true;
      ErrorHandler errorHandler0 = new ErrorHandler("QBfw5GBW$VvIQ8O");
      // Undeclared exception!
      try { 
        errorHandler0.handleError("QBfw5GBW$VvIQ8O");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // QBfw5GBW$VvIQ8O
         //
         verifyException("org.databene.commons.ErrorHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.available("", (String) null, (String) null, (String) null);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "--/Z9#6n9r.@G?.};Txe>");
      DBUtil.available("=?", "{ <*qrN=/S", "org.h2.value.ValueByte", "; SQL statement:\n");
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.countRows("{ <*qrN=/S", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = true;
      Connection connection0 = null;
      Class<DBSequence> class0 = DBSequence.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.close((Connection) null);
      String string0 = ")o";
      ErrorHandler errorHandler1 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript(")o", (Connection) null, true, errorHandler1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.close((Connection) null);
      Object object0 = new Object();
      Session session0 = new Session();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("1bkn(Q YXI8", "uj", 'O', (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: 1bkn(Q YXI8
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "29w3\"};i>\"\\:gxZVoJ";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ", "29w3\"};i>\":gxZVoJ");
      boolean boolean0 = true;
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 29w3\"};i>\":gxZVoJ failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      Level level0 = Level.trace;
      ErrorHandler errorHandler1 = new ErrorHandler("J>U/Oij7", level0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      simpleResultSet1.getWarnings();
      SQLWarning sQLWarning0 = new SQLWarning((Throwable) null);
      errorHandler1.handleError("J>U/Oij7", (Throwable) sQLWarning0);
      Connection connection0 = null;
      DBUtil.runScript("COMMENT", 'l', (Connection) null, true, errorHandler0);
      String string0 = ",Q@y/";
      DBUtil.available("PreparedStatement.set", "PreparedStatement.set", "J>U/Oij7", ",Q@y/");
      // Undeclared exception!
      try { 
        DBUtil.queryLong("PreparedStatement.set", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBSchema dBSchema0 = new DBSchema("=?");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("=?", dBSchema0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      String string0 = "null";
      try { 
        DBUtil.getMetaData((Connection) null, "/Z", "/Z", true, true, true, true, "KC|Ud", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      simpleResultSet0.getWarnings();
      SQLWarning sQLWarning0 = new SQLWarning((Throwable) null);
      DBUtil.getOpenConnectionCount();
      DBUtil.getStatement(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("pr", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.close((Connection) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("--SYSDEPENDS", (String) null, "SY", "SY");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = null;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      PGPooledConnection pGPooledConnection0 = new PGPooledConnection(jdbcConnection0, true, true);
      Proxy proxy0 = (Proxy)pGPooledConnection0.getConnection();
      Proxy proxy1 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) proxy0, false);
      try { 
        DBUtil.prepareStatement((Connection) proxy1, (String) null, false, 59, 106, (-1473));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000007
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(false);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "--SYSDEPENDS", "--SYSDEPENDS", "Empty SQL string in executeUpdate()");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Level level0 = Level.trace;
      ErrorHandler errorHandler1 = new ErrorHandler("J>U/Oij7", level0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.available("{ <*qrN=/S", "{ <*qrN=/S", "{ <*qrN=/S", "5a=2");
      ErrorMessages errorMessages0 = new ErrorMessages();
      String string0 = DBUtil.format(simpleResultSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      String string0 = "J>U/Oij7";
      Level level0 = Level.trace;
      ErrorHandler errorHandler1 = new ErrorHandler("J>U/Oij7", level0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.queryLong("Er", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = null;
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("moveToCurrentRow", 257);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      PGPooledConnection pGPooledConnection0 = new PGPooledConnection(jdbcConnection0, true, true);
      Proxy proxy0 = (Proxy)pGPooledConnection0.getConnection();
      DBUtil.wrapWithPooledConnection((Connection) proxy0, false);
      String string1 = "TIME ";
      // Undeclared exception!
      try { 
        DBUtil.runScript("TIME ", 'q', (Connection) jdbcConnection0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Connection connection0 = null;
      Class<DBUtil> class0 = DBUtil.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(false);
      boolean boolean0 = false;
      errorHandler0.setLoggingStackTrace(false);
      String string0 = "--]>l40)e{s#5_1hh";
      ErrorHandler errorHandler1 = new ErrorHandler("--]>l40)e{s#5_1hh");
      // Undeclared exception!
      try { 
        DBUtil.runScript("--]>l40)e{s#5_1hh", "--]>l40)e{s#5_1hh", (Connection) null, false, errorHandler1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --]>l40)e{s#5_1hh
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }
}
