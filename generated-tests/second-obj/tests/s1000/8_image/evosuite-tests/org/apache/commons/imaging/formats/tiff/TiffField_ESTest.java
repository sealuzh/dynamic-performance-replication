/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:01:36 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, (-3511L), 0, (byte[]) null, byteOrder0, 3122);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3122, tiffField0.getSortHint());
      assertEquals((-3511L), tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1249, "Q\u0007,S$ot*vdoF#9&,H");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2441, (-2147373502), fieldTypeDouble0, 0L, (-517L), byteArray0, byteOrder0, (-882));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@42d1b0d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeLong0, 8, 0L, byteArray0, byteOrder1, 9);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@2ef376ec
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(262, (-118), fieldTypeByte0, 4L, (-1258L), byteArray0, byteOrder0, (-1717986917));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2f2edf24 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(30, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1156, (-642), fieldTypeShort0, 30, 1156, byteArray0, byteOrder0, 0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(30L, tiffField0.getCount());
      assertEquals(1156, tiffField0.getOffset());
      assertArrayEquals(new double[] {270.0}, doubleArray0, 0.01);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-642), tiffField0.getDirectoryType());
      assertEquals(1156, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeLong0, 8, 0L, byteArray0, byteOrder0, (-26));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-26), int0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), (-95), fieldTypeByte0.ASCII, 1L, (byte) (-37), byteArray0, byteOrder1, 3385);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      fieldTypeByte0.writeData(byteArray0, (ByteOrder) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeByte0, 65535L, 2353L, byteArray0, byteOrder0, 48132);
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "VxoqBWzA");
      int int0 = Float.MAX_EXPONENT;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)13;
      byteArray1[1] = (byte) (-43);
      byteArray1[2] = (byte) (-70);
      byteArray1[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(0, (-2269), fieldTypeByte0, 526L, 835L, byteArray1, byteOrder1, (-2377));
      tiffField0.dump();
      assertEquals(526, tiffField0.getBytesLength());
      assertEquals(835, tiffField0.getOffset());
      assertEquals(526L, tiffField0.getCount());
      assertEquals((-2377), tiffField0.getSortHint());
      assertEquals((-2269), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "[long[]: ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte)74, fieldTypeRational0, 0L, (byte)50, byteArray0, byteOrder0, (-2044));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffffff)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2044), tiffField0.getSortHint());
      assertEquals(74, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1642, "}J`2y)O V`x*da");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-360), (-2210), fieldTypeAscii0, 8, 1642, byteArray0, byteOrder0, (-261));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals((-360), tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1642, tiffField0.getOffset());
      assertEquals((-261), int0);
      assertEquals((-2210), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1795), (-1385), fieldTypeLong0, (-1385), 4L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "X'E,~T#JB6{@kB\"=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)1;
      TiffField tiffField0 = new TiffField((-2039), (-2039), (FieldType) null, 3934L, 0L, byteArray0, (ByteOrder) null, (byte)1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1351), (-1351));
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), (-95), fieldTypeByte0.ASCII, 1L, (byte) (-37), byteArray0, byteOrder1, 3385);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(3385, tiffField0.getSortHint());
      assertEquals((-95), tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getOffset());
      assertEquals((-37), int0);
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeLong0, 8, 0L, byteArray0, byteOrder1, 9);
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(30, (-4435), fieldTypeLong0, 30, (-4435), byteArray0, byteOrder0, 9);
      tiffField1.getIntArrayValue();
      tiffField0.getOffset();
      tiffField0.getDirectoryType();
      int int0 = tiffField1.getDirectoryType();
      assertEquals((-4435), int0);
      
      tiffField1.dump();
      assertEquals((-4435), tiffField1.getOffset());
      assertEquals(30L, tiffField1.getCount());
      assertEquals(9, tiffField1.getSortHint());
      assertEquals(120, tiffField1.getBytesLength());
      assertEquals(30, tiffField1.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "[long[]: ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-84);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-84), (byte) (-84), fieldTypeRational0, (byte)5, (byte)5, byteArray0, byteOrder0, (byte)50);
      tiffField0.getCount();
      ByteOrder.nativeOrder();
      tiffField0.getIntArrayValue();
      tiffField0.getOffset();
      tiffField0.getBytesLength();
      tiffField0.getTagInfo();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField1 = new TiffField((-2147176732), 40, fieldTypeShort0, (byte)50, (-145L), byteArray0, byteOrder1, (byte) (-84));
      // Undeclared exception!
      try { 
        tiffField1.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42007, 2099761789, fieldTypeFloat0, 4L, (-835L), byteArray0, byteOrder0, (-722));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@67ddf665 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(38, "3|!cFG&>gE]2G");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)43;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)17;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3235), (-3235), fieldTypeLong0, 38, (-3235), byteArray0, byteOrder0, 50733);
      long long0 = tiffField0.getCount();
      assertEquals(38L, long0);
      
      tiffField0.getFieldTypeName();
      tiffField0.getIntValueOrArraySum();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-3235), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals((-3235), tiffField0.getDirectoryType());
      assertEquals(50733, tiffField0.getSortHint());
      assertEquals((-3235L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, (-209), fieldTypeLong0, 271, 0L, byteArray0, byteOrder0, (byte)101);
      tiffField0.getDoubleArrayValue();
      fieldTypeLong0.getValue(tiffField0);
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)29;
      byteArray1[2] = (byte)29;
      byteArray1[3] = (byte)29;
      byteArray1[4] = (byte)29;
      byteArray1[5] = (byte)101;
      byteArray1[6] = (byte)101;
      byteArray1[7] = (byte)29;
      byteArray1[8] = (byte)101;
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-209), tiffField0.getDirectoryType());
      assertEquals(271L, tiffField0.getCount());
      assertEquals(29, tiffField0.getTag());
      assertEquals(1084, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(25885, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)1, "UaqQ,zTzK8zD");
      ByteOrder byteOrder0 = null;
      TiffField tiffField0 = new TiffField((-388), (byte)1, fieldTypeDouble0, 0L, 255L, byteArray0, (ByteOrder) null, (-388));
      tiffField0.getValue();
      TiffField tiffField1 = new TiffField((-388), (-1), fieldTypeDouble0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (-1));
      tiffField0.getDoubleArrayValue();
      tiffField1.getByteOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getDirectoryType();
      try { 
        Long.decode("UaqQ,zTzK8zD");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"UaqQ,zTzK8zD\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "[long[]: ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)74, (-2044), fieldTypeRational0, 1084L, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.toString();
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {(-0.06300587296801959)}, doubleArray0, 0.01);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.toString();
      tiffField0.getByteArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string1 = tiffField0.toString();
      assertEquals(8672, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2044), tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getTag());
      assertFalse(string1.equals((Object)string0));
      assertEquals(1084L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-100);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 658, fieldTypeLong0, 7, 400L, byteArray0, byteOrder0, 287);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-1710));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(7, tiffField0.getTag());
      assertEquals(658, tiffField0.getDirectoryType());
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)119;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, (-595), fieldTypeFloat0, (byte)50, (-1L), byteArray0, byteOrder0, (byte)119);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-595), tiffField0.getDirectoryType());
      assertNotNull(string0);
      
      TiffField tiffField1 = new TiffField(4070, (byte)0, fieldTypeFloat0, (byte)119, 203876L, byteArray0, byteOrder1, 8);
      int int0 = tiffField1.getSortHint();
      assertEquals(8, int0);
      
      TiffElement tiffElement0 = tiffField1.getOversizeValueElement();
      assertEquals(203876L, tiffElement0.offset);
      assertEquals(476, tiffField1.getBytesLength());
      assertEquals(119L, tiffField1.getCount());
      assertEquals(4070, tiffField1.getTag());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147235928, "CurrentPreProfileMatrix");
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)0, 50969, fieldTypeFloat0, 50969, 9992L, byteArray0, byteOrder0, 2147268663);
      Object object0 = new Object();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      
      tiffField0.getDoubleArrayValue();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      String string1 = tiffField0.getValueDescription();
      assertNotNull(string1);
      
      Integer integer0 = new Integer((-2447));
      int int0 = tiffField0.getTag();
      assertEquals(50969, tiffField0.getDirectoryType());
      assertEquals(2147268663, tiffField0.getSortHint());
      assertEquals(203876, tiffField0.getBytesLength());
      assertEquals(50969L, tiffField0.getCount());
      assertEquals(9992, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(4274, "+T'a>");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeFloat0, (byte)1, 908L, byteArray0, byteOrder0, 269);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      tiffField0.toString();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(908, tiffField0.getOffset());
      assertEquals(269, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(709, (byte)1, fieldTypeLong0, (byte)0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField1 = new TiffField(0, 9, fieldTypeShort0, 1L, (-1437L), byteArray0, byteOrder1, (byte)0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)0;
      TiffField tiffField2 = new TiffField((byte)0, (-209), fieldTypeLong0, (-1437L), (byte)0, byteArray1, byteOrder0, (byte)0);
      tiffField2.getTagName();
      tiffField1.getDoubleArrayValue();
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField2.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeShort0, 0L, (-283L), byteArray0, byteOrder0, 271);
      TiffField tiffField1 = new TiffField(50, (byte)101, fieldTypeShort0, (byte)55, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField1.getIntValueOrArraySum();
      assertEquals(101, tiffField1.getDirectoryType());
      assertEquals(50, tiffField1.getTag());
      assertEquals(110, tiffField1.getBytesLength());
      assertEquals(25857, int0);
      assertEquals((-1), tiffField1.getSortHint());
      assertEquals((-1), tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)1;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)1, "NumberOfInks");
      byte byte1 = (byte)39;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (-2655), fieldTypeDouble0, 4L, (-226L), byteArray0, byteOrder0, (-2655));
      fieldTypeDouble0.getValue(tiffField0);
      tiffField0.dump();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(50);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      try { 
        fieldTypeDouble0.writeData("'}nG~,V", byteOrder1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: '}nG~,V (java.lang.String)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)111;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeShort0, 2656, 2656, byteArray0, byteOrder0, 2656);
      tiffField0.dump();
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2656, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {28416, 0, 0, 0, 0}, intArray0);
      assertEquals(2656, tiffField0.getOffset());
      assertEquals(111, tiffField0.getTag());
      assertEquals(5312, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1022, (byte)111, fieldTypeShort0, 1L, 13, byteArray0, byteOrder0, 13);
      tiffField0.dump();
      tiffField0.getIntArrayValue();
      assertEquals(13, tiffField0.getOffset());
      assertEquals(1022, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }
}
