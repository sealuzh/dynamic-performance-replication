/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:20:51 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.nio.ByteOrder;
import java.util.Locale;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(174, 174, fieldTypeLong0, 174, (-299L), byteArray0, byteOrder0, 31);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(174, tiffField0.getDirectoryType());
      assertEquals((-299), tiffField0.getOffset());
      assertEquals(174L, tiffField0.getCount());
      assertEquals(696, tiffField0.getBytesLength());
      assertEquals(174, tiffField0.getTag());
      assertEquals(281129744, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34671, 34671, fieldTypeAscii0, 34671, 34671, byteArray0, byteOrder0, 34671);
      System.setCurrentTimeMillis(34671);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1484), (-1484), fieldTypeShort0, (-1L), 4044, byteArray0, byteOrder0, 51);
      tiffField0.isLocalValue();
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, (-705), fieldTypeDouble0, 24, 494L, byteArray0, byteOrder1, 24);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3255, (-98));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(24L, tiffField0.getCount());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(494, tiffField0.getOffset());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-705), tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)30, 2147202743, fieldTypeByte0, 2147202743, (byte) (-3), byteArray0, byteOrder0, 3);
      tiffField0.getByteOrder();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@66cff9de for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(990, 990, fieldTypeRational0, 990, 990, (byte[]) null, byteOrder0, (-462));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("990 (0x3de: Unknown Tag): ", string0);
      assertEquals(990, tiffField0.getOffset());
      assertEquals(990, tiffField0.getDirectoryType());
      assertEquals((-462), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34671, 34671, fieldTypeAscii0, 34671, 34671, byteArray0, byteOrder0, 34671);
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis(34671);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1076, 1076, fieldTypeShort0, 1076, (-2126L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals((-2126), tiffField0.getOffset());
      assertEquals(1076, tiffField0.getDirectoryType());
      assertEquals(1076, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1076L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-837), (-837), fieldTypeLong0, (-1L), 1907L, byteArray0, byteOrder0, 11);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1907, tiffField0.getOffset());
      assertEquals((-837), int0);
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-837), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1076, 1076, fieldTypeShort0, 1076, (-2126L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      System.setCurrentTimeMillis((byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1076L, tiffField0.getCount());
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals(1076, tiffField0.getDirectoryType());
      assertEquals((-2126L), tiffElement0.offset);
      assertEquals(1076, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)83, 66, fieldTypeFloat0, (byte)23, 66, byteArray0, byteOrder1, (byte)83);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(66, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(83, tiffField0.getSortHint());
      assertEquals(83, tiffField0.getTag());
      assertEquals(23L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(65110, 41989, fieldTypeLong0, 84L, 255L, byteArray0, byteOrder0, 887);
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.getValueDescription();
      Long long0 = new Long(887);
      assertEquals(887L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      String string0 = File.separator;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, (-11), fieldTypeLong0, 2632, (-11), byteArray0, byteOrder0, (-11));
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType((-1709));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -1709 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2006, 2006, fieldTypeAscii0, 255L, 4L, (byte[]) null, byteOrder0, 2006);
      tiffField0.isLocalValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1073741823), "");
      TiffField tiffField0 = new TiffField(449, 1511, fieldTypeRational0, 4L, 4L, byteArray0, byteOrder0, 85);
      tiffField0.getIntArrayValue();
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(449, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1511, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(87, 4389, fieldTypeByte0, 335L, 1334L, byteArray0, byteOrder0, 87);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@61d7426f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte) (-45);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65112, 1873, fieldTypeLong0, 1873, 65112, byteArray0, byteOrder0, 5859);
      tiffField0.getIntArrayValue();
      assertEquals(65112, tiffField0.getTag());
      assertEquals(7492, tiffField0.getBytesLength());
      assertEquals(1873, tiffField0.getDirectoryType());
      assertEquals(5859, tiffField0.getSortHint());
      assertEquals(65112, tiffField0.getOffset());
      assertEquals(1873L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 1, fieldTypeLong0, 3, 1, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-32);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34661, (-2140709250), fieldTypeAscii0, (-2140709250), 34661, byteArray0, byteOrder0, (-2140709250));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-32), (byte) (-32));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2140709250), tiffField0.getDirectoryType());
      assertEquals(34661, tiffField0.getTag());
      assertEquals(34661, tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-2140709250), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte) (-79);
      byteArray0[2] = (byte) (-52);
      byteArray0[5] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeAscii0, 1564L, 1L, byteArray0, byteOrder0, (byte)43);
      String string0 = tiffField0.getValueDescription();
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1564, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 301;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 46, fieldTypeRational0, 29, 29, byteArray0, byteOrder0, 1);
      PrintWriter printWriter0 = null;
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " (0x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3442, (byte)55, fieldTypeByte0, 2048L, (byte)55, byteArray0, byteOrder0, 3442);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2048L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(2048, tiffField0.getBytesLength());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(3442, tiffField0.getSortHint());
      assertEquals(3442, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1507, 1507, fieldTypeShort0, 1507, 1507, byteArray0, byteOrder0, 1507);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x5e3)", string0);
      
      tiffField0.getFieldTypeName();
      assertEquals(1507, tiffField0.getSortHint());
      assertEquals(1507, tiffField0.getOffset());
      assertEquals(1507, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[156];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@[,");
      TiffField tiffField0 = new TiffField((-2441), (byte)1, fieldTypeLong0, (byte)1, (-2441), byteArray0, byteOrder0, (byte)1);
      int int0 = Pattern.LITERAL;
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-796), (-796));
      tiffField0.getTagInfo();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2441), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2441), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[0];
      Object object0 = new Object();
      TiffField tiffField0 = new TiffField(2147202747, (-2094), fieldTypeByte0, 1L, 2147202747, byteArray0, (ByteOrder) null, 50935);
      tiffField0.getTagInfo();
      tiffField0.getDoubleArrayValue();
      String string0 = "*Or/%Y\"z]I";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null, "*Or/%Y\"z]I");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // *Or/%Y\"z]I
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(20, "");
      TiffField tiffField0 = new TiffField(20, (-3743), fieldTypeByte0, 20, (-3743), (byte[]) null, (ByteOrder) null, (-3743));
      String string0 = tiffField0.getTagName();
      assertEquals("GPSDestLatitude", string0);
      assertEquals((-3743), tiffField0.getDirectoryType());
      assertEquals((-3743), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getTag());
      assertEquals((-3743), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1748, (-2597), (FieldType) null, (-2597), 1748, byteArray0, byteOrder0, (-2597));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2597), (-2597));
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34671, 34671, fieldTypeAscii0, 34671, 34671, byteArray0, byteOrder0, 34671);
      tiffField0.getStringValue();
      System.setCurrentTimeMillis(34671);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[397];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1974), 32, fieldTypeAscii0, 2147483647L, 18216L, byteArray0, byteOrder0, 32);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@758a65c3
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeLong0, 27, 27, byteArray0, byteOrder0, (-1234));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2037, 2037, fieldTypeByte0, (-1302L), (-2600L), byteArray0, byteOrder0, 2037);
      tiffField0.getOversizeValueElement();
      tiffField0.getSortHint();
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 2776L, 12088L, byteArray0, byteOrder0, (-2196));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2196), tiffField0.getSortHint());
      assertArrayEquals(new int[] {14206, 267}, intArray0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(12088, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(5552, tiffField0.getBytesLength());
      assertEquals(2776L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[372];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2442), (-2442), fieldTypeDouble0, 1L, (-270L), byteArray0, byteOrder1, (byte)34);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals((-270), tiffField0.getOffset());
      assertEquals((-2442), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2442), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte)1;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2196), 65535, fieldTypeShort0, (byte)55, 12088L, byteArray0, byteOrder0, (byte)55);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(12088, tiffField0.getOffset());
      assertEquals(55L, tiffField0.getCount());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(110, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {14135.0, 256.0}, doubleArray0, 0.01);
      assertEquals((-2196), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[248];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(551, (byte)14, fieldTypeShort0, (byte)50, 3029L, byteArray0, byteOrder0, 1194);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)29;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(317, 317, fieldTypeShort0, 317, 317, byteArray0, byteOrder0, (-323));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-323), tiffField0.getSortHint());
      assertEquals(317, tiffField0.getDirectoryType());
      assertEquals(317, tiffField0.getTag());
      assertEquals(634, tiffField0.getBytesLength());
      assertEquals(317, tiffField0.getOffset());
      assertEquals(20004, int0);
      assertEquals(317L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      String string0 = File.pathSeparator;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34, (-1981), fieldTypeFloat0, 34, (-1981), byteArray0, byteOrder0, (-1981));
      int int0 = (-25);
      tiffField0.getDoubleArrayValue();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      int int1 = 33437;
      Object object0 = new Object();
      try { 
        fieldTypeFloat0.BYTE.writeData(object0, byteOrder2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: java.lang.Object@7b3b88c6 (java.lang.Object)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)84;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)0, "The list of names must not be null");
      TiffField tiffField0 = new TiffField(33432, (-2125), fieldTypeRational0, (-1073741823), (byte)0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 12088L, byteArray0, byteOrder0, (-2196));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2196), tiffField0.getSortHint());
      assertEquals(12088, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1511, "");
      TiffField tiffField0 = new TiffField(76, 1511, fieldTypeRational0, 1511, 449, byteArray0, byteOrder1, 18);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1511, "");
      TiffField tiffField0 = new TiffField(449, 1511, fieldTypeRational0, 4L, 449, byteArray0, byteOrder0, 76);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.getDoubleArrayValue();
      tiffField0.getFieldType();
      assertEquals(449, tiffField0.getOffset());
      assertEquals(1511, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(449, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-78);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2712, 50, fieldTypeDouble0, 770L, 50, byteArray0, byteOrder0, 1243);
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(1024);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 1024 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[163];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      StringWriter stringWriter0 = new StringWriter();
      TiffField tiffField0 = new TiffField(120, (byte)78, fieldTypeAscii0, (byte)78, (-1L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getValueDescription();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      assertFalse(byteOrder1.equals((Object)byteOrder0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[184];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      System.setCurrentTimeMillis(57);
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(814, 57, fieldTypeByte0, 2147483647L, 57, byteArray0, byteOrder0, 3);
      tiffField0.getValueDescription();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(57, 57);
      System.setCurrentTimeMillis(57);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2632, 2632, fieldTypeShort0, 2632, 2632, byteArray0, byteOrder0, 19);
      tiffField0.getValueDescription();
      int int0 = Double.MIN_EXPONENT;
      byte byte0 = (byte) (-113);
      MockFile mockFile0 = new MockFile("Invalid value: ");
      mockFile0.getCanonicalFile();
      MockFile mockFile1 = new MockFile("Invalid value: ", "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54)");
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile1, "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54)");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong1 = FieldType.LONG;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1514), (-1514), fieldTypeFloat0, 897, 2184L, byteArray0, byteOrder0, (-1514));
      tiffField0.toString();
      TiffField tiffField1 = new TiffField(897, 897, fieldTypeLong0, 897, (-4467L), byteArray0, byteOrder0, (-1514));
      try { 
        FieldType.getFieldType(897);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 897 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[430];
      ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50242, 50242, fieldTypeDouble0, 172L, 319L, byteArray0, (ByteOrder) null, 34026);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*");
      tiffField0.dump();
      String string0 = "";
      URI uRI0 = MockURI.URI("");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }
}
