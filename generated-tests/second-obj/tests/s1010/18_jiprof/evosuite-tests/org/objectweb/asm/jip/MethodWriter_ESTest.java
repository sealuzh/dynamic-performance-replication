/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:19:10 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[4];
      int[] intArray0 = new int[8];
      intArray0[1] = 16777227;
      intArray0[2] = 2719;
      intArray0[4] = 2719;
      intArray0[2] = 2719;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 147, 2719);
      assertEquals(8010, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(268435456);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "t4|HX-#";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 3082, "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", "t4|HX-#", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 171;
      intArray0[1] = 49;
      intArray0[2] = (-82);
      intArray0[3] = (-2535);
      intArray0[4] = 167;
      intArray0[5] = 202;
      intArray0[6] = 17;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {171, 49, (-82), (-2535), 167, 202, 17}, intArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "zdv8iWK88.}d=eU";
      int[] intArray0 = new int[8];
      intArray0[1] = 16;
      intArray0[2] = 16;
      intArray0[3] = 16777227;
      intArray0[4] = 16;
      intArray0[2] = 2719;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 147, 15);
      assertEquals((-164), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(396);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("'Stac<Map", true);
      methodWriter0.visitMaxs(396, 396);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:Qz0)s\",RJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitFrame(0, 285212674, (Object[]) null, 285212674, (Object[]) null);
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("'Stac<Map", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(396, 396);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "om:|\"{", (String[]) null, true, true);
      classWriter0.toByteArray();
      methodWriter0.visitAnnotation("om:|\"{", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(22, "EnclosingMethod", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 88, "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitIincInsn(267386880, (-1827));
      ByteVector byteVector1 = byteVector0.put12(377, (-1827));
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("StackMap", false);
      Attribute attribute0 = new Attribute("kN,:\u0000)s\"eRJ-%( ");
      methodWriter0.visitIntInsn(2, 1922);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(396);
      byteVector0.put12(396, (-2433));
      ByteVector byteVector2 = byteVector1.put12((-3423), 396);
      methodWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("StackMap", false);
      Attribute attribute0 = new Attribute("kN,:\u0000)s\"eRJ-%( ");
      Attribute attribute1 = attribute0.next;
      int int0 = methodWriter0.getSize();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ%( ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)108;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 1953);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1953
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "GDXl!tSPJNT)i!{a", "GDXl!tSPJNT)i!{a", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      Label label0 = new Label();
      label0.position = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "GDXl!tSPJNT)i!{a");
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      methodWriter0.visitVarInsn(198, 2);
      int int0 = Type.OBJECT;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDXl!tSPJNT)i!{a");
      Attribute attribute0 = new Attribute("LineNumberTable");
      methodWriter0.visitAttribute(attribute0);
      classWriter0.visitOuterClass("Ljava/lang/Synthetic;", ".:TeK6m&f[=g", "GDXl!tSPJNT)i!{a");
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int[] intArray0 = new int[3];
      String string0 = "\"Be_q.N?Z2{";
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "/W(lwpb'l}b]}_", (String[]) null, false, true);
      Attribute attribute0 = new Attribute("\"Be_q.N?Z2{");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = new Attribute("\"Be_q.N?Z2{");
      methodWriter1.visitAttribute(attribute2);
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(749);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitIntInsn(1, 1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-3));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.ClassWriter", "*/", "*/", stringArray0, false, false);
      methodWriter0.visitFrame(8064, 8, stringArray0, (-3), stringArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitAnnotationDefault();
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 396, ".H}&mn", "\"Be_q.N?Z2{", "\"Be_q.N?Z2{", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[] intArray0 = new int[1];
      String string0 = ".TTew8Km&f[=\\g";
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".TTew8Km&f[=g", ".TTew8Km&f[=g", ".TTew8Km&f[=g", (String[]) null, false, false);
      methodWriter0.visitInsn(2);
      boolean boolean1 = ClassReader.WRITER;
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(184, ".TTew8Km&f[=g", ".TTew8Km&f[=g", ")?3Y'Ps");
      classWriter0.visitAnnotation("P9VnR Pn4m0xY2{$?", true);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassWriter classWriter1 = new ClassWriter(159);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "RuntimeInvisibleAnnotations", "kN,:\u0000)s\"eRJ-%( ", "RuntimeInvisibleAnnotations", (String[]) null, false, true);
      methodWriter0.visitFrame(2, 127, (Object[]) null, 159, (Object[]) null);
      methodWriter0.visitIntInsn(2, 1);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("u3O[gROEO9e*vI\"R6Wm", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter(2081);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"Ie_q.N?Z2", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitLdcInsn("\"Ie_q.N?Z2");
      int int0 = Type.BYTE;
      classWriter0.visitInnerClass("\"Be_q.N?Z2{", "\"Ie_q.N?Z2", "\"Be_q.N?Z2{", 2081);
      methodWriter0.visitFieldInsn(1, "J/msGETIo", "J/msGETIo", "\"Ie_q.N?Z2");
      Attribute attribute0 = new Attribute("\"Ie_q.N?Z2");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-223), "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-e(E", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      methodWriter0.visitFrame(0, 0, (Object[]) null, 0, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(270, "%*oh497rKJ^.]", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newField(".TTeKm&f[=g", ".TTeKm&f[=g", ".TTeKm&f[=g");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, ".TTeKm&f[=g", "k,:\u0000s)s\"eRJ-%( ", ".TTeKm&f[=g", (String[]) null, true, false);
      methodWriter0.getSize();
      classWriter0.newNameType(".TTeKm&f[=g", ".TTeKm&f[=g");
      Label label0 = new Label();
      methodWriter0.visitIincInsn(704, 1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitMaxs((-1076), 16);
      methodWriter0.visitMultiANewArrayInsn("k,:\u0000s)s\"eRJ-%( ", 1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = (-942);
      String string0 = "KN,:\\3)(EeRJ-%( ";
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-942), "char", "KN,:\u0003)(EeRJ-%( ", "char", (String[]) null, true, true);
      boolean boolean1 = ClassReader.RESIZE;
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitIincInsn((byte) (-40), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -40
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(155);
      ClassWriter classWriter1 = new ClassWriter(155);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "RuntimeInvisibleAnnotations", "kN,:\u0000)s\"eRJ-%( ", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      int int0 = 127;
      methodWriter0.visitFrame(2, 127, (Object[]) null, 155, (Object[]) null);
      methodWriter0.visitIincInsn(127, 1734);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(987, "RuntimeInvisibleAnnotations", (String) null, "kN,:\u0000)s\"eJ-%( ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(106);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "8,se'Vpan";
      stringArray0[1] = "8,se'Vpan";
      stringArray0[2] = "'opxJI";
      stringArray0[3] = "8,se'Vpan";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 106, "'opxJI", "'opxJI", "8,se'Vpan", stringArray0, false, false);
      methodWriter0.visitVarInsn(292552704, 292552704);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(1634, (-2510));
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Label label0 = new Label();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-4202));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4202), "", "", "", stringArray0, false, false);
      methodWriter0.signature = "1";
      byte[] byteArray0 = new byte[5];
      Item item0 = new Item();
      methodWriter0.visitMultiANewArrayInsn("Zt(3}", (-4202));
      classWriter0.thisName = "";
      methodWriter0.visitIntInsn((-353), (-4202));
      methodWriter0.visitInsn(3544);
      methodWriter0.getSize();
      methodWriter0.visitMaxs(2, 64);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 16777217);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16777217
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(267386880);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 88, "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", (String[]) null, false, false);
      methodWriter0.visitVarInsn(396, 88);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(396, (-1827));
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2761));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'opxJI";
      stringArray0[1] = "'opxJI";
      stringArray0[2] = "'opxJI";
      stringArray0[3] = "'opxJI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2761), "'opxJI", "'opxJI", "", stringArray0, false, false);
      methodWriter0.visitFrame((-2761), 319, stringArray0, 2, stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8("'opxJI");
      methodWriter0.visitTypeInsn(1, "");
      methodWriter0.visitFrame(1236, (-3694), stringArray0, 0, stringArray0);
      ByteVector byteVector1 = byteVector0.putInt(319);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      Label label0 = new Label();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ%( ");
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", false);
      Integer integer0 = new Integer(2);
      methodWriter0.visitTypeInsn(1, "Ljava/lang/Synthetic;");
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      methodWriter0.visitLocalVariable("Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", label0, label0, 1380);
      methodWriter0.visitMaxs(1, 153);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "GDXl!tSPJNT)i!{a", "GDXl!tSPJNT)i!{a", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      Label label0 = new Label();
      label0.position = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "GDXl!tSPJNT)i!{a");
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitVarInsn(198, 2);
      int int0 = Type.BYTE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("GDXl!tSPJNT)i!{a");
      methodWriter0.put(byteVector0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Frame frame0 = new Frame();
      methodWriter1.visitMultiANewArrayInsn("GDXl!tSPJNT)i!{a", 2);
      methodWriter1.classReaderOffset = 2;
      Label label1 = frame0.owner;
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      byte[] byteArray0 = new byte[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "ABe_q.N!?Ze{", "kN,:\u0000)s\"eRJ-%( ", "ABe_q.N!?Ze{", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.next = methodWriter1;
      methodWriter0.visitInsn(0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-4187));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "'opxJI";
      stringArray0[1] = "'opxJI";
      stringArray0[2] = "'opxJI";
      stringArray0[3] = "'opxJI";
      stringArray0[4] = "'opxJI";
      stringArray0[5] = "Synthetic";
      stringArray0[6] = "Synthetic";
      stringArray0[7] = "'opxJI";
      stringArray0[8] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "Synthetic", "QmP", "Synthetic", stringArray0, false, false);
      methodWriter0.visitVarInsn((-4187), 2);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put12(396, 1);
      methodWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("'");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-398);
      ClassWriter classWriter0 = new ClassWriter((-398));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-398), "\"Be_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"Be_q.N?Z2{", (String[]) null, false, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitAnnotation("StackMap", false);
      Attribute attribute0 = new Attribute("kN,:\u0000)s\"eRJ-%( ");
      methodWriter0.visitIntInsn(2, 1922);
      methodWriter0.classReaderOffset = (-2882);
      int int0 = methodWriter0.getSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "GD.l`$GPe:JNT)i!{a", "GD.l`$GPe:JNT)i!{a", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      Label label0 = new Label();
      label0.position = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "GD.l`$GPe:JNT)i!{a");
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitVarInsn(198, 2);
      int int0 = Type.BYTE;
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(3, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1768);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "l,8e8(R*Bnhu", "l,8e8(R*Bnhu", ">", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter0.visitIntInsn((-2049870752), 521);
      methodWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      methodWriter0.visitLineNumber(1619, label0);
      methodWriter0.visitFieldInsn(90, "kN,:\u0000)s\"eRJ- ", "kN,:\u0000)s\"eRJ- ", "kN,:\u0000)s\"eRJ- ");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"Ie_q.N?Z2", "kN,:\u0000)s\"eRJ-%( ", "\"Ie_q.N?Z2", (String[]) null, true, true);
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ-%( ");
      int int0 = Type.BYTE;
      classWriter0.visitInnerClass("kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", 4);
      methodWriter0.visitFieldInsn(4, "kN,:\u0000)s\"eRJ-%( ", "Ax/F6cl5|(3rU.HI", "J/msGETIo");
      Attribute attribute0 = new Attribute("\"Ie_q.N?Z2");
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      ClassWriter classWriter1 = new ClassWriter(159);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "RuntimeInvisibleAnnotations", "kN,:\u0000)s\"eRJ-%( ", "RuntimeInvisibleAnnotations", (String[]) null, false, false);
      methodWriter0.visitFrame(2, 127, (Object[]) null, 159, (Object[]) null);
      methodWriter0.visitIntInsn(2, 1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(187);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 187, "Be_q*|N?Z,2{", "Be_q*|N?Z,2{", "Be_q*|N?Z,2{", (String[]) null, false, false);
      ClassWriter classWriter1 = new ClassWriter(285212681);
      Attribute attribute0 = new Attribute("Be_q*|N?Z,2{");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitVarInsn(1, (-1458));
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(168);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "c%$#we", "N,:\u0000)\"eRJ-%(<", "Deprecated", (String[]) null, false, false);
      methodWriter0.visitIntInsn((-1501), 1);
      methodWriter0.visitMultiANewArrayInsn("", 1);
      methodWriter0.visitIincInsn((-1815), (-1501));
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int int0 = 18;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(18, "c%$#we", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      Integer integer0 = new Integer(2);
      methodWriter0.visitTypeInsn(1, "Ljava/lang/Synthetic;");
      int int0 = Type.OBJECT;
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      MethodWriter.getNewOffset(intArray0, intArray0, 10, 10);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newField(".TTeKm&f[=g", "w[&{Qg[B._,R~kXyAp", ".TTeKm&f[=g");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 169, ".TTeKm&f[=g", "k,:\u0000s)s\"eRJ-%( ", ".TTeKm&f[=g", (String[]) null, true, false);
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(17, 2);
      classWriter0.newNameType(".TTeKm&f[=g", "w[&{Qg[B._,R~kXyAp");
      methodWriter0.visitIntInsn(2, 2);
      methodWriter0.visitInsn(16);
      Integer integer0 = new Integer(169);
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(169, ".TTeKm&f[=g");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(40, "w[&{Qg[B._,R~kXyAp", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1768);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "l,8e8(R*Bnhu", "l,8e8(R*Bnhu", ">", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitIntInsn((-2049870752), 521);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(187);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 187, "Be_q*|N?Z,2{", "Be_q*|N?Z,2{", "Be_q*|N?Z,2{", (String[]) null, false, false);
      ClassWriter classWriter1 = new ClassWriter(285212681);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute("<XBBt");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitInsn(77);
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("<XBBt", "<XBBt", (String) null, (Label) null, (Label) null, (-1458));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int[] intArray0 = new int[12];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 366, "\"Be_q.N?Z2{", "7", "\"Be_q.N?Z2{", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(0, label0);
      methodWriter0.visitTypeInsn(1, "\"Be_q.N?Z2{");
      methodWriter0.getSize();
      methodWriter0.visitFrame(262170, 49, (Object[]) null, 0, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1011, "7", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-929), "char", "KN,:\u0003)(EeRJ-%( ", "char", (String[]) null, true, false);
      boolean boolean1 = ClassReader.RESIZE;
      classWriter0.firstMethod.visitIincInsn((byte) (-40), 2);
      Label label0 = new Label();
      Label label1 = new Label();
      classWriter0.toByteArray();
      classWriter0.firstMethod.classReaderOffset = 1;
      classWriter0.visitSource("KN,:\u0003)(EeRJ-%( ", "p{");
      classWriter0.firstMethod.visitLocalVariable("p{", "KN,:\u0003)(EeRJ-%( ", "p{", label1, label1, (-929));
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-1076));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1076
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(198, 72);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kN,:\u0000)s\"eRJ%( ");
      assertFalse(boolean0);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"Ie_q.N?Z2", "kN,:\u0000)s\"eRJ-%( ", "\"Ie_q.N?Z2", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitFrame(3, 570, (Object[]) null, 3, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(168, 168, (Object[]) null, 3, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.addUninitializedType("\"BIe_q.N?ZT2{", 1141048066);
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(1, "PV$KHCcIGSEH^\"N*", "PV$KHCcIGSEH^\"N*", "\"BIe_q.N?Z2{", "\"BIe_q.N?ZT2{");
      assertNotNull(fieldVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 188, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1141048066, 1, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Type.BYTE;
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 0, (Object[]) null, 3, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(0, 0, (Object[]) null, 0, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(270, "~Kj", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(897, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(54, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(270, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.position = 396;
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".:TeK6m&f[=g", "*d1o", "byte", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByteArray((byte[]) null, 1, 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      Attribute attribute0 = new Attribute("yp(#f");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitJumpInsn(396, label0);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter((-4202));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4202), "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[5];
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = label0.resolve(methodWriter0, (-1446896232), byteArray0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean3 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      Item item1 = classWriter0.newLong((-4202));
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "<C");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn((-4202), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int[] intArray0 = new int[3];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"BIe_q.N?Z2{");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "kN,:\u0000)s\"eRJ-%( ", "AErs%Dm|<&I-H%q", "$ZFrzR{$]J.epB", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2757));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "8,se'Vpan";
      stringArray0[1] = "8,se'Vpan";
      stringArray0[2] = "'opxJI";
      stringArray0[3] = "8,se'Vpan";
      Item item0 = classWriter0.newLong(2);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2757), "8,se'Vpan", "'opxJI", "LocalVariableTable", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(169, (-2757));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ByteVector byteVector1 = byteVector0.putInt(54);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(4, 169);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "\"Ie_q.N?Z2";
      ClassWriter classWriter0 = new ClassWriter(1024);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string1 = "<=Cp";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<=Cp", "kN,:0)s\"eRJ%( ", "<=Cp", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      
      int int0 = (-1);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-2409), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2409
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int[] intArray0 = new int[1];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitVarInsn(30, (-507));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("kN,:\u0000)s\"eRJ-%( ", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      int int1 = classWriter0.newUTF8("@#a}i2-qKK");
      assertFalse(int1 == int0);
      assertEquals(3, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(3, label1);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "ABe_q.N!?Ze{", "kN,:\u0000)s\"eRJ-%( ", "ABe_q.N!?Ze{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1), 2, (Object[]) null, (byte)10, (Object[]) null);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int[] intArray0 = new int[8];
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      
      ClassWriter classWriter0 = new ClassWriter((-4187));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "'opxJI", "'opxJI", "'opxJI", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-385), 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      methodWriter0.visitLineNumber(106, label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.inputStackTop = 602;
      label2.visitSubroutine(label1, 2, (-2291));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label2);
      assertNotSame(label1, label0);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      Item item0 = classWriter0.newFloat((-2291));
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label2;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(602, 12, label0, labelArray0);
      assertFalse(label0.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(168, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitFrame(168, 0, (Object[]) null, 3, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      label0.status = 3;
      methodWriter0.visitInsn(3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("\"BIe_q.N?Z2{", (-911));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(3, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(0, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@367f20cd
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4062), "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newClass("kN\u0000)s\"eRJ-%( ");
      assertEquals(3, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", (-4062));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(20);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(20, (int)integer0);
      
      int int1 = classWriter0.addType("kN\u0000)s\"eRJ-%( ");
      assertFalse(int1 == int0);
      assertEquals(2, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn(3, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = Member.DECLARED;
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, int2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(20, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newConstItem(".:TeK6m&f[=g");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, ".:TeK6m&f[=g", "kN,:\u0000)s\"eRJ-%( ", ".:TeK6m&f[=g", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.visitSubroutine(label0, 396, 2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      Label label2 = label1.next;
      assertNull(label2);
      
      methodWriter0.visitMultiANewArrayInsn("LocalVariableTable", (-1446896304));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(34, 396);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(34, 4103, (Object[]) null, 3, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation(3, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(50, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("Ljava/lang/Synthetic;", (-1064));
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "BIe_q.N?Z2{", "k,:\u0000)s\"eRJ- ", "BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(3);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(3, (int)integer0);
      
      label0.outputStackMax = 54;
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitMaxs(54, 54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(54, 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(178, "Po*x{", "BIe_q.N?Z2{", "W=$&Fh");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(396);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.next;
      assertNull(label2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("LocalVariableTable", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(285212681, 4341);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("LocalVariableTable");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitFrame(1, (-164), (Object[]) null, 192, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1048575, 256, (Object[]) null, 1975, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("org.objectweb.asm.jip.Type", "kN,:\u0000)s\"eRJ-%( ", "{Zp,L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ClassWriter classWriter1 = new ClassWriter(285212681);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newUTF8("/upr)C1+2");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(7, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "kN,:\u0000)s\"eRJ-%( ");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.status = (-291);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("\"BIe_q.N?Z2{");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitFieldInsn(7, "java/lang/Throwable", "\"BIe_q.N?Z2{", "=-N{J^UjGfaAoYGz");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 396, (Object[]) null, 67, (Object[]) null);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(57, 285212682);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kN,:\u0000)ts\"eRJ( ");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, ":8z", "kN,:\u0000)ts\"eRJ( ", ":8z", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass(":8z", ":8z", ":8z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {168, 0, 0}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(168, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitIntInsn(168, 17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(168, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "kN,:\u0000)ts\"eRJ( ", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int[] intArray0 = new int[4];
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation(":z", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, ":z", "kN,:\u0000)ts\"eRJ( ", ":z", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass(":z", ":z", ":z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(168, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(168, 26);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(168, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(38, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("StackMap", false);
      assertNotNull(annotationVisitor1);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("StackMap");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(169, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int[] intArray0 = new int[3];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertSame(label0, label1);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      
      String[] stringArray0 = new String[0];
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label1;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertSame(label0, label1);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int[] intArray0 = new int[3];
      String string0 = "\"BIe_q.N?Z2{";
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.next;
      assertNull(label2);
      
      String string1 = "LocalVariableTable";
      methodWriter0.visitTryCatchBlock(label1, (Label) null, (Label) null, "\"BIe_q.N?Z2{");
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("LocalVariableTable", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("LocalVariableTable");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      int int0 = 32767;
      methodWriter0.visitIntInsn(82, 32767);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(1, label1);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(32767, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32767
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kN,:\u0000)s\"eRJ-%( ");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ClassWriter classWriter1 = new ClassWriter(285212681);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber((-3), label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newUTF8("/upr)C1+2");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "kN,:\u0000)s\"eRJ-%( ");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.status = (-291);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "java/lang/Throwable", "bB*A;", "bB*A;", (String[]) null, false, false);
      assertNotNull(methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter0, methodWriter1);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("\"BIe_q.N?Z2{");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter1.visitFrame(201, (-1409), (Object[]) null, (-1409), (Object[]) null);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(256, 396, (Object[]) null, 67, (Object[]) null);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)83;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte)49;
      byteArray0[3] = (byte)49;
      byteArray0[8] = (byte)0;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)49, (byte)0, (byte)24, (byte)49, (byte)0, (byte)0}, byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "Lava/lagSynhetic;", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newInteger(68);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertNotNull(byteArray1);
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertNotSame(byteArray1, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.thisName = "Cwde";
      methodWriter0.visitLocalVariable("Cwde", "Cwde", "kN,:\u0000)s\"eRJ-%( ", label0, label0, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.line = 1;
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      assertTrue(boolean1 == boolean0);
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertNotSame(byteArray1, byteArray0);
      assertFalse(boolean1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((byte)0, 166, (Object[]) null, (byte)49, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(396);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(314, "Signature", "1`9r5%?e", "\"BIe_q.N?Z2{");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(176);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = Integer.toUnsignedString((-5937));
      assertNotNull(string0);
      assertEquals("4294961359", string0);
      
      int int0 = Frame.INTEGER;
      assertEquals(16777217, int0);
      
      Item item0 = classWriter0.newFieldItem("\"BIe_q.N?Z2{", "1`9r5%?e", "Signature");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn(".:TeK6m&f[=g");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, ".:TeK6m&f[=g", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(396);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label0.status = 1;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("LocalVariableTable", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(285212681, 396);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("LocalVariableTable");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitIntInsn(82, 32767);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Member.DECLARED;
      assertEquals(1, int0);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-695), 5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-1643), "<init>", "LocalVariableTable", "hgat%1^P7..lw", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?ZOL#2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?ZOL#2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kN,:\u0000)s\"eRJ-%( ");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ClassWriter classWriter1 = new ClassWriter(285212681);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(285212681, label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.status = (-291);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "java/lang/Throwable", "bB*A;", "bB*A;", (String[]) null, false, false);
      assertNotNull(methodWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitTableSwitchInsn(24117260, 63, label0, labelArray0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(24, label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 24, 285212681);
      assertEquals(285212657, int0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      methodWriter0.visitTypeInsn(1, "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.line = 1;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Code", label0, label0, 1331);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 179);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 3075;
      Item item0 = classWriter0.newInteger(3075);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("C&de", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("Cwde", "Cwde", "kN,:\u0000)s\"eRJ-%( ", label0, label0, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.line = 1;
      label0.addToSubroutine(3313L, 1);
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(2, (int)integer0);
      
      String string0 = Integer.toUnsignedString(3075);
      assertNotNull(string0);
      assertEquals("3075", string0);
      
      int int1 = 40;
      item0.intVal = 40;
      methodWriter0.visitMethodInsn(2, "C&de", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = 120;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(120, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(396);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "!RGM3:6%i({|T\"u?", "kN,:\u0000)s\"eRJ-%( ", "!RGM3:6%i({|T\"u?", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.next;
      assertNull(label2);
      
      Attribute attribute0 = new Attribute("AbvMiB\"^(#-p");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitLocalVariable("value ", "AbvMiB\"^(#-p", "!RGM3:6%i({|T\"u?", label0, label1, 1125);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitCode();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, (-431));
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitLdcInsn("kN,:\u0000)s\"eRJ-%( ");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMaxs(691, 1439);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      int int0 = methodWriter2.getSize();
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertEquals(73, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 168;
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"Ie_q.N?Z2", "kN,:\u0000)s\"eRJ( ", "\"Ie_q.N?Z2", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      
      methodWriter0.visitIincInsn(168, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label1.visitSubroutine((Label) null, 1, 1);
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(168, label1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, ":8z", "kN,:\u0000)s\"eRJ( ", ":8z", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass(":8z", ":8z", ":8z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitMethodInsn(5, "Po*x{", "RuntimeInvisibleParameterAnnotations", "kN,:\u0000)s\"eRJ( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", ",%_", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation(",%_", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("EnclosingMethod", "EnclosingMethod", "kN,:\u0000)s\"eRJ-%( ", label0, label0, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertEquals(1, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(1, 2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector2 = byteVector0.put12(1, 2690);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(1896, "*m1O$h+", "EnclosingMethod", "InnerClasses");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 2, 1000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 81
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Code", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("Code", "AnnotationDefault", "kN,:\u0000)s\"eRJ-%( ", label0, label0, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      String string0 = Integer.toUnsignedString((-3677));
      assertNotNull(string0);
      assertEquals("4294963619", string0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitLdcInsn(":lMf,j6R|)'1kDj9G%");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("Code", "Ljava/lang/Synthetic;", "Code", label0, label0, 1331);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "a[5FO", "k,:\u0000)s\"eRJ- ", "a[5FO", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Integer integer0 = new Integer(3);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(3, (int)integer0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      String string0 = label1.toString();
      assertNotNull(string0);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals("L14", string0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "a[5FO");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(7, 198);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1127, "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("kN\u0000)s\"eRJ-%( ");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.thisName = "\"BIe_q.N?Z2{";
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"BIe_q.N?Z2{");
      assertFalse(boolean0);
      
      methodWriter0.visitInsn(162);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = classWriter0.newNameType("\"BIe_q.N?Z2{", "\"BIe_q.N?Z2{");
      assertFalse(int1 == int0);
      assertEquals(4, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitIincInsn(1831, 33);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitIntInsn((-680), 1831);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(4065, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"Ie_q.N?Z2", "kN,:\u0000)s\"eRJ-%( ", "\"Ie_q.N?Z2", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      classWriter0.visitInnerClass("kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ", 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-2761), "kN,:\u0000)s\"eRJ-%( ", "Ax/F6cl5|(3rU.HI", "J/msGETIo");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute((String) null);
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(168, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitMultiANewArrayInsn("kN,:\u0000)s\"eRJ-%( ", 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      assertEquals((short) (-21267), short0);
      
      methodWriter0.visitFieldInsn(2473, ";CM}>;2|5fP(", "LineNumberTable", "LineNumberTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(168, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitFrame(168, 0, (Object[]) null, 3, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      label0.status = 512;
      methodWriter0.visitInsn(3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("\"BIe_q.N?Z2{", (-911));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(3, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(0, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "kN,:\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-942), "org.objectweb.asm.jip.MethodWriter", "YN,:\u0000)(EeRJ-%( ", "org.objectweb.asm.jip.MethodWriter", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      int[] intArray1 = new int[3];
      assertFalse(intArray1.equals((Object)intArray0));
      
      methodWriter0.visitIincInsn(1, 24117235);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.MethodWriter", 2);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "YN,:\u0000)(EeRJ-%( ";
      methodWriter1.visitTypeInsn(0, "YN,:\u0000)(EeRJ-%( ");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitFieldInsn((-942), "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, 704, objectArray0, 704, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-942), "org.objectweb.asm.jic.MethodWriter", "KN,:\u0003)(EeRJ-%( ", "org.objectweb.asm.jic.MethodWriter", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      classWriter0.firstMethod.visitIincInsn((byte) (-40), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = ClassReader.RESIZE;
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.firstMethod.visitLineNumber((byte) (-40), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      classWriter0.visitOuterClass("RuntimeViibleParameterAnnotations", "KN,:\u0003)(EeRJ-%( ", "RuntimeViibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.classReaderOffset = 1;
      classWriter0.visitSource("KN,:\u0003)(EeRJ-%( ", "ps{");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, (-942));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label2 = label1.getFirst();
      assertNotNull(label2);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertSame(label2, label1);
      assertNotSame(label2, label0);
      
      Label label3 = label1.getFirst();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label0));
      assertFalse(label1.equals((Object)label0));
      assertSame(label3, label1);
      assertNotSame(label3, label0);
      assertSame(label3, label2);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertSame(label1, label3);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter((-4202));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4202), "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[5];
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = label0.resolve(methodWriter0, (-1446896287), byteArray0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean3 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      int int0 = classWriter0.addUninitializedType("", (-4202));
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newLong(3310L);
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(187, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitMultiANewArrayInsn("yo", 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("org.objectweb.asm.jip.MethodWriter", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertEquals(1, (int)integer0);
      
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      Integer integer1 = new Integer(20);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(20, (int)integer1);
      
      methodWriter0.visitLdcInsn(integer1);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-58);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int[] intArray0 = new int[7];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "GDXl!tSPJNT)i!{a", "GDXl!tSPJNT)i!{a", "Ljava/lang/Synthetic;", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("GDXl!tSPJNT)i!{a", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newDouble(212.3054512738);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "GDXl!tSPJNT)i!{a");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L14", string0);
      
      methodWriter0.visitMultiANewArrayInsn("Ljava/lang/Synthetic;", 198);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(1, 198);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[] intArray0 = new int[9];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "kN,:\u0000)s\"eRJ%( ", "kN,:\u0000)s\"eRJ%( ", "Ljava/lang/Synthetic;", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN,:\u0000)s\"eRJ%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Ljava/lang/Synthetic;", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      methodWriter0.visitTypeInsn(1, "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitLdcInsn("Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kN,:\u0000)s\"eRJ%( ");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Attribute attribute0 = new Attribute("Kif/zI /");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(1, (-217));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "cn5.<7-@ik7Lu");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("I4U_7@`", "I4U_7@`");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?~2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?~2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(192);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = classWriter0.thisName;
      assertNull(string0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("GD.l`$GPe:JNT)i!{a", "k,:\u0000)s\"eRJ- ", "e");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 187, "BIe_q.N?Z2{", "k,:\u0000)s\"eRJ- ", "BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = 183;
      classWriter0.visitOuterClass("R", (String) null, "ga:3r \"D]qI0jc'X-");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitVarInsn(54, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      Label label0 = edge0.successor;
      assertNull(label0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 396;
      ClassWriter classWriter0 = new ClassWriter(396);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(314, "Signature", "Signature", "\"BIe_q.N?Z2{");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(176);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = Integer.toUnsignedString((-5937));
      assertNotNull(string0);
      assertEquals("4294961359", string0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Frame.INTEGER;
      assertEquals(16777217, int0);
      
      Item item0 = classWriter0.newFieldItem("\"BIe_q.N?Z2{", ".:TeK6m&f[=g", "Signature");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn(".:TeK6m&f[=g");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, ".:TeK6m&f[=g", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2747));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'xJI";
      stringArray0[1] = "'xJI";
      stringArray0[2] = "'xJI";
      stringArray0[3] = "'xJI";
      String string0 = "k]uC0*rv-=B9:o'YMp";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2747), "'xJI", "'xJI", "k]uC0*rv-=B9:o'YMp", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderOffset = 2;
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      methodWriter0.visitFrame((-2747), (-2747), stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string1 = "t_LjH";
      classWriter0.index = 192;
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("'xJI");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(193, 1);
      assertNotNull(byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector0, byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"Ie_q.N?Z2", "kN,:\u0000)s\"eRJ( ", "\"Ie_q.N?Z2", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("kN,:\u0000)s\"eRJ( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      assertEquals(2, int0);
      
      Item item0 = classWriter0.newNameTypeItem("kN,:\u0000)s\"eRJ( ", "Qv`O");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(168, 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      int int2 = Type.BYTE;
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(3, int2);
      
      int[] intArray1 = new int[6];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[0] = 168;
      intArray1[1] = 63;
      intArray1[4] = 2;
      intArray1[5] = 3;
      int int3 = Type.BYTE;
      assertFalse(int3 == int0);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertEquals(3, int3);
      
      methodWriter0.visitMaxs(168, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Item item0 = classWriter0.newClassItem("kN,:\u0000)s\"eRJ- ");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ- ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitFieldInsn(178, "\"BIe_q.N?Z2{", "Cn1cGM", "=7sI]r:FY9|");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("dIe_q.N?Z2", "dIe_q.N?Z2", "/*}4-");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2, 171);
      assertEquals(169, int0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitMultiANewArrayInsn("yo", 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.exceptions = intArray0;
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertEquals(1, (int)integer0);
      
      methodWriter0.visitTypeInsn(168, "yo");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitMethodInsn(184, "kN,:\u0000)s\"eRJ-%( ", "Kif/ zI /", "}iIr5(BpZ:mx)59");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("YPg]d:zn}RzYs{&E?O");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int[] intArray0 = new int[2];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-942), "org.objectweb.asm.jip.MethodWriter", "KN,:\u0003)(EeRJ-%( ", "org.objectweb.asm.jip.MethodWriter", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitInsn(192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      int[] intArray1 = new int[3];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[1] = 192;
      methodWriter0.visitIincInsn(1, (-942));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("GDXl!tSPJNT)i!{a", 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(188, 192);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.ARRAY;
      assertEquals(9, int0);
      
      classWriter0.firstMethod.visitMaxs(2, 192);
      assertSame(methodWriter0, methodWriter1);
      assertSame(classWriter0.firstMethod, methodWriter0);
      assertSame(classWriter0.firstMethod, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte) (-71);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 255);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ- ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitMultiANewArrayInsn("\"BIe_q.N?Z2{", 3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      methodWriter0.visitVarInsn(57, 1515);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Frame.UNINITIALIZED_THIS;
      assertFalse(int1 == int0);
      assertEquals(16777222, int1);
      
      methodWriter0.visitIincInsn(2, 178);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(185, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("\"BIe_q.N?Z2{", "", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("QDD|Ha9", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4062), "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "kN\u0000)s\"eRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", (-4062));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit(1828, 1, "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("\"BIe_q.N?Z2{", "\"BIe_q.N?Z2{", "\"BIe_q.N?Z2{", 495);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(20);
      assertNotNull(integer0);
      assertEquals(20, (int)integer0);
      
      int int0 = Frame.BASE;
      assertEquals(16777216, int0);
      
      classWriter0.firstMethod = methodWriter0;
      Item item0 = classWriter0.newInteger(495);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitFrame(2, 167, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(20, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      classWriter0.firstMethod.visitLdcInsn("\"BIe_q.N?Z2{");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 1828, 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1828
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4062), "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "kN\u0000)s\"eRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", (-4062));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit((-4062), 1, "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("\"BIe_q.N?Z2{", "\"BIe_q.N?Z2{", "\"BIe_q.N?Z2{", 495);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(20);
      assertNotNull(integer0);
      assertEquals(20, (int)integer0);
      
      int int0 = Frame.BASE;
      assertEquals(16777216, int0);
      
      classWriter0.firstMethod = methodWriter0;
      Item item0 = classWriter0.newInteger(495);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitFrame(2, 195, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(20, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 396, "ABe_q.N!?Ze{", "kN,:\u0000)s\"eRJ-%( ", "ABe_q.N!?Ze{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2, (Object[]) null, (byte)10, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 133, "\"BIe_q.N?Z2{", "kN,:\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newClass("kN,:\u0000)s\"eRJ-%( ");
      assertEquals(3, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitMultiANewArrayInsn("yo", 133);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("org.objectweb.asm.jip.MethodWriter", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(1, (int)integer0);
      
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Type.OBJECT;
      assertFalse(int1 == int0);
      assertEquals(10, int1);
      
      Integer integer1 = new Integer(20);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)int0));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(20, (int)integer1);
      
      int int2 = Integer.max(20, 2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(20, int2);
      
      methodWriter0.visitLdcInsn(integer1);
      assertFalse(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)int0));
      assertTrue(integer1.equals((Object)int2));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      assertEquals((short) (-21267), short0);
      
      methodWriter0.visitFieldInsn(10, "Ljava/lang/Synthetic;", "yo", "DvH!/##^(va}:ocuwe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(186, 186);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newClass("kN\u0000)s\"eRJ-%( ");
      assertEquals(3, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("org.objectweb.asm.jip.MethodWriter", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(1, (int)integer0);
      
      classWriter0.thisName = "\"BIe_q.N?Z2{";
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Type.OBJECT;
      assertFalse(int1 == int0);
      assertEquals(10, int1);
      
      classWriter0.visitInnerClass("org.objectweb.asm.jip.MethodWriter", (String) null, "l&$", 251);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-2761), 1, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, 3, (Object[]) null, (-710), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int[] intArray0 = new int[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-942), "4xm#", "YN,:\u0000)(EeRJ-%( ", "4xm#", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      classWriter0.firstMethod.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderLength = (-1);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4xm#");
      assertFalse(boolean0);
      
      int[] intArray1 = new int[3];
      assertFalse(intArray1.equals((Object)intArray0));
      
      intArray1[1] = (-1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.visitOuterClass("4xm#", "4xm#", "YN,:\u0000)(EeRJ-%( ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "YN,:\u0000)(EeRJ-%( ";
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((-1), 198, objectArray0, 198, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "BIe_q.N?Z2{", "k,:\u0000)s\"ehRJ- ", "BIe_q.N?Z2{", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Integer integer0 = new Integer(3);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(3, (int)integer0);
      
      byte[] byteArray0 = new byte[6];
      boolean boolean0 = label0.resolve(methodWriter0, 167, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitInsn(3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("k,:\u0000)s\"ehRJ- ", (-852));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(198, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      int int1 = Member.DECLARED;
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      
      label0.successor = label0;
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Item item0 = classWriter0.newInteger((-852));
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Frame frame1 = label0.frame;
      assertNull(frame1);
      
      methodWriter0.visitMaxs(1443, 3145);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1174536705, 8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "`I[)", "N,:\u0000)\"eRJ-%(<", "`I[)", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(168, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitMultiANewArrayInsn("N,:\u0000)\"eRJ-%(<", 168);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      classWriter0.index = Integer.MAX_VALUE;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("`I[)");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(168, "N,:\u0000)\"eRJ-%(<", "N,:\u0000)\"eRJ-%(<", "N,:\u0000)\"eRJ-%(<");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMaxs(1148, 168);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute((String) null);
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.signature = "kN,:0)s\"eRJ%( ";
      methodWriter1.exceptionCount = 3;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "kN,:0)s\"eRJ%( ";
      methodWriter1.visitFrame(178, 178, objectArray0, (-909), objectArray0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(3, "kN,:0)s\"eRJ%( ");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitTypeInsn((-1789), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int[] intArray0 = new int[3];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      intArray0[0] = 168;
      ClassWriter classWriter0 = new ClassWriter(168);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "`I[)", "N,:\u0000)\"eRJ-%(<", "`I[)", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "kN\u0000)s\"eRJ-%( ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(65280, 198);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)10;
      int int0 = 1278;
      String string0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1278, "w[&{Qg[B._,R~kXyAp", "w[&{Qg[B._,R~kXyAp", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(8, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1162, "GDXl!tSPJNT)i!(a", "kN\u0000)s\"eRJ-%( ", "GDXl!tSPJNT)i!(a", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", 1162);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.exceptions = intArray0;
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("kN\u0000)s\"eRJ-%( ", false);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      intArray0[1] = 1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitVarInsn(3, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1162, 3);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.exceptions = intArray0;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((-1), (-1), (Object[]) null, 50, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int[] intArray0 = new int[5];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4062), "\"BIe_q.N?Z2{", "kN\u0000)s\"eRJ-%( ", "\"BIe_q.N?Z2{", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("kN\u0000)s\"eRJ-%( ");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("kN\u0000)s\"eRJ-%( ", (-4062));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.thisName = "\"BIe_q.N?Z2{";
      Integer integer0 = new Integer(20);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(20, (int)integer0);
      
      int int1 = classWriter0.addType("kN\u0000)s\"eRJ-%( ");
      assertFalse(int1 == int0);
      assertEquals(2, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer1 = new Integer(2);
      assertNotNull(integer1);
      assertTrue(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(2, (int)integer1);
      
      methodWriter0.visitLdcInsn(integer1);
      assertTrue(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L20", string0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      Label label3 = label0.next;
      assertNull(label3);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label1);
      assertFalse(label1.equals((Object)label2));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label2);
      assertNotSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ".TTew8Km&f[=g", "Mh(yLWl\"|;-r<}S", ".TTew8Km&f[=g", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newMethodItem("LocalVariableTable", "LocalVariableTable", ">ID0&'\"7ltId@Rz|", false);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn(".TTew8Km&f[=g", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(184, 34);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.visit(184, 8, "Mh(yLWl\"|;-r<}S", (String) null, "<init>", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(184, 184, (Object[]) null, (-122), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(101);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(16, 16);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int[] intArray0 = new int[1];
      ClassWriter classWriter0 = new ClassWriter(187);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 187, "org.objectweb.asm.jip.MethodWriter", "\"BIe_q.N?Z2{", "k,:\u0000)s\"eRJ- ", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0}, intArray0);
      
      methodWriter0.visitIntInsn(186, 186);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitMultiANewArrayInsn("", 2349);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = new Integer(186);
      assertNotNull(integer0);
      assertEquals(186, (int)integer0);
      
      methodWriter0.visitTypeInsn(2, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = Type.OBJECT;
      assertEquals(10, int0);
      
      methodWriter0.visitMethodInsn(186, "InnerClasses", "kN,:\u0000)s\"eRJ-%( ", "GD.l`$GPe:JNT)i!{a");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("GD.l`$GPe:JNT)i!{a");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(0);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "a[5FO", "k,:\u0000)s\"eRJ- ", "a[5FO", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(3);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(3, (int)integer0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label1.frame = null;
      label0.next = label1;
      String string0 = label1.toString();
      assertNotNull(string0);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals("L14", string0);
      
      methodWriter0.visitLabel(label0.next);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label0.next.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertNotSame(label0.next, label0);
      assertSame(label0.next, label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "a[5FO");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(7, 198);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-77);
      byteArray0[5] = (byte)76;
      MethodWriter.writeShort(byteArray0, (byte)2, (byte)76);
      assertArrayEquals(new byte[] {(byte)87, (byte)84, (byte)0, (byte)76, (byte) (-77), (byte)76}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter((-4202));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-4202), "", "", "", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter((-4202));
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter1.lastMethod;
      assertNull(methodWriter1);
      
      methodWriter0.next = null;
      byte[] byteArray0 = new byte[5];
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = label0.resolve(methodWriter0, (-1446896232), byteArray0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(boolean2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean3 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      classWriter0.threshold = (-1793861364);
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      Item item1 = classWriter0.newLong(3310L);
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(item1, item0);
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("H~P72TA", "", (String) null, label0, label0, 132);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "O^");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertNotSame(classWriter0, classWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(8, (-1446896232));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }
}
