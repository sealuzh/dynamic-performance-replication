/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:12:27 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1232, 1232, fieldTypeShort0, 1232, 1232, byteArray0, byteOrder0, 1232);
      int int0 = tiffField0.getSortHint();
      assertEquals(1232, int0);
      
      tiffField0.getByteOrder();
      assertEquals(1232, tiffField0.getOffset());
      assertEquals(1232, tiffField0.getTag());
      assertEquals(1232, tiffField0.getDirectoryType());
      assertEquals(1232L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1068, 1068, fieldTypeShort0, 1068, 1068, byteArray0, byteOrder0, 1068);
      tiffField0.getIntArrayValue();
      assertEquals(1068, tiffField0.getDirectoryType());
      assertEquals(1068, tiffField0.getOffset());
      assertEquals(1068, tiffField0.getTag());
      assertEquals(1068, tiffField0.getSortHint());
      assertEquals(2136, tiffField0.getBytesLength());
      assertEquals(1068L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1780, 1780, fieldTypeShort0.FLOAT, 1780, 1780, byteArray0, byteOrder0, 1780);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2a49a6f9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33925, 33925, fieldTypeShort0.LONG, 33925, 33925, byteArray0, byteOrder0, 33925);
      tiffField0.getIntArrayValue();
      tiffField0.getFieldTypeName();
      assertEquals(135700, tiffField0.getBytesLength());
      assertEquals(33925L, tiffField0.getCount());
      assertEquals(33925, tiffField0.getTag());
      assertEquals(33925, tiffField0.getSortHint());
      assertEquals(33925, tiffField0.getDirectoryType());
      assertEquals(33925, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41996, 41996, fieldTypeShort0, 41996, 41996, byteArray0, byteOrder0, 41996);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@633957f8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0.FLOAT, 1255, 1255, byteArray0, byteOrder0, 1255);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x4e7)", string0);
      assertEquals(1255, tiffField0.getSortHint());
      assertEquals(1255, tiffField0.getOffset());
      assertEquals(1255, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0.FLOAT, 1255, 1255, byteArray0, byteOrder0, 1255);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1255, tiffField0.getSortHint());
      assertEquals(1255, tiffField0.getDirectoryType());
      assertEquals("1255 (0x4e7: Unknown Tag): ", string0);
      assertEquals(1255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 66, 66, byteArray0, byteOrder0, 66);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(66L, tiffField0.getCount());
      assertEquals(66, tiffField0.getTag());
      assertEquals(528, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(66, tiffField0.getOffset());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(66, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0.FLOAT, 1255, 1255, byteArray0, byteOrder0, 1255);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(153, 153, fieldTypeDouble0, 153, 153, byteArray0, byteOrder0, 153);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0.FLOAT, 1255, 1255, byteArray0, byteOrder0, 1255);
      tiffField0.dump();
      assertEquals(1255L, tiffField0.getCount());
      assertEquals(5020, tiffField0.getBytesLength());
      assertEquals(1255, tiffField0.getDirectoryType());
      assertEquals(1255, tiffField0.getTag());
      assertEquals(1255, tiffField0.getSortHint());
      assertEquals(1255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 66, 66, byteArray0, byteOrder0, 66);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(66, tiffField0.getTag());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(66, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0, 1255, 1255, byteArray0, byteOrder0, 1255);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1255, 1255);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1255, tiffField0.getTag());
      assertEquals(1255, tiffField0.getSortHint());
      assertEquals(1255L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1255, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(1255, tiffField0.getOffset());
      assertEquals(2510, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      TiffField tiffField0 = new TiffField(2850, 1089, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(1089, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2850, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33925, 33925, fieldTypeShort0.LONG, 33925, 33925, byteArray0, byteOrder0, 33925);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(33925, 33925);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(33925, tiffField0.getSortHint());
      assertEquals(33925, tiffField0.getDirectoryType());
      assertEquals(33925L, tiffField0.getCount());
      assertEquals(135700, tiffField0.getBytesLength());
      assertEquals(33925, tiffField0.getTag());
      assertEquals(33925, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-66), (-66), fieldTypeRational0, (-66), (-66), byteArray0, byteOrder0, (-66));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getTag());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-66), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 135700L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(135700, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[246];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1218, 1218, fieldTypeByte0, 1218, 1218, byteArray0, byteOrder0, 1218);
      tiffField0.dump();
      assertEquals(1218, tiffField0.getSortHint());
      assertEquals(1218, tiffField0.getDirectoryType());
      assertEquals(1218L, tiffField0.getCount());
      assertEquals(1218, tiffField0.getOffset());
      assertEquals(1218, tiffField0.getTag());
      assertEquals(1218, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48129, 48129, fieldTypeByte0, 24L, 48129, byteArray0, byteOrder0, 48129);
      String string0 = tiffField0.getValueDescription();
      assertEquals(48129, tiffField0.getOffset());
      assertEquals(24L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(48129, tiffField0.getTag());
      assertEquals(48129, tiffField0.getDirectoryType());
      assertEquals(48129, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0, 1255, 1255, byteArray0, byteOrder0, 1255);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2510, tiffField0.getBytesLength());
      assertEquals(1255, tiffField0.getOffset());
      assertEquals(1255, tiffField0.getDirectoryType());
      assertEquals(1255, tiffField0.getTag());
      assertEquals(1255, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, 87, 87, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2d4f05cf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0.DOUBLE, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, 87, 87, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      tiffField0.getDirectoryType();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@43d27ada for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(87, 87, fieldTypeRational0, 87, 87, byteArray0, byteOrder0, 87);
      tiffField0.getIntArrayValue();
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(696, tiffField0.getBytesLength());
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(87L, tiffField0.getCount());
      assertEquals(87, tiffField0.getTag());
      assertEquals(87, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(87, 87, fieldTypeRational0, 87, 87, byteArray0, byteOrder0, 87);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33925, 33925, fieldTypeShort0.LONG, 33925, 33925, byteArray0, byteOrder0, 33925);
      tiffField0.dump();
      tiffField0.getIntValueOrArraySum();
      assertEquals(33925, tiffField0.getOffset());
      assertEquals(135700, tiffField0.getBytesLength());
      assertEquals(33925, tiffField0.getDirectoryType());
      assertEquals(33925, tiffField0.getTag());
      assertEquals(33925, tiffField0.getSortHint());
      assertEquals(33925L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(87, 87, fieldTypeRational0, 87, 87, byteArray0, byteOrder0, 87);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2022), "55P7mIQ5T7v\"rZc");
      TiffField tiffField0 = new TiffField((-2022), (-2022), fieldTypeRational0, 0L, 24L, byteArray0, byteOrder0, (-2022));
      tiffField0.getCount();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2022), tiffField0.getSortHint());
      assertEquals((-2022), tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getOffset());
      assertEquals((-2022), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33925, 33925, fieldTypeShort0.LONG, 33925, 33925, byteArray0, byteOrder0, 33925);
      int int0 = tiffField0.getTag();
      assertEquals(33925, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(135700, tiffField0.getBytesLength());
      assertEquals(33925, tiffField0.getDirectoryType());
      assertEquals(33925L, tiffField0.getCount());
      assertEquals(33925, tiffField0.getOffset());
      assertEquals(33925, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1255, 1255, fieldTypeShort0, 1255, 1255, byteArray0, byteOrder0, 1255);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33723, 33723, fieldTypeShort0.FLOAT, 33723, 33723, byteArray0, byteOrder0, 33723);
      String string0 = tiffField0.getTagName();
      assertEquals(33723, tiffField0.getOffset());
      assertEquals("IPTC-NAA", string0);
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals(33723, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[246];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(153, 153, fieldTypeDouble0, 153, 153, byteArray0, byteOrder0, 153);
      tiffField0.dump();
      assertEquals(153, tiffField0.getOffset());
      assertEquals(1224, tiffField0.getBytesLength());
      assertEquals(153, tiffField0.getTag());
      assertEquals(153, tiffField0.getSortHint());
      assertEquals(153, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[352];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1762, 1762, fieldTypeAscii0, 518L, 1762, byteArray0, byteOrder0, 1762);
      tiffField0.toString();
      assertEquals(1762, tiffField0.getTag());
      assertEquals(1762, tiffField0.getDirectoryType());
      assertEquals(518, tiffField0.getBytesLength());
      assertEquals(1762, tiffField0.getSortHint());
      assertEquals(1762, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[370];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1762, 34020, fieldTypeShort0, 34020, 1762, byteArray0, byteOrder0, 1762);
      String string0 = tiffField0.toString();
      assertEquals(68040, tiffField0.getBytesLength());
      assertEquals("1762 (0x6e2: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (185) (34020 Short)", string0);
      assertEquals(34020, tiffField0.getDirectoryType());
      assertEquals(1762, tiffField0.getOffset());
      assertEquals(1762, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[339];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1765, 1765, fieldTypeLong0, 2455L, 2455L, byteArray0, byteOrder0, 1765);
      String string0 = tiffField0.toString();
      assertEquals("1765 (0x6e5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (84) (2455 Long)", string0);
      assertEquals(9820, tiffField0.getBytesLength());
      assertEquals(1765, tiffField0.getSortHint());
      assertEquals(1765, tiffField0.getDirectoryType());
      assertEquals(2455, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[339];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeFloat0, 434L, 3500L, byteArray0, byteOrder0, 23);
      String string0 = tiffField0.getValueDescription();
      assertEquals(23, tiffField0.getTag());
      assertEquals(1736, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(3500, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeDouble0, 341, 341, byteArray0, byteOrder0, 341);
      tiffField0.dump();
      assertEquals(2728, tiffField0.getBytesLength());
      assertEquals(341, tiffField0.getDirectoryType());
      assertEquals(341, tiffField0.getOffset());
      assertEquals(341, tiffField0.getTag());
      assertEquals(341, tiffField0.getSortHint());
  }
}
