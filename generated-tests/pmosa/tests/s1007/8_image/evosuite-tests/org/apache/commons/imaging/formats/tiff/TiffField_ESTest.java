/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 09:42:27 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(144, "^k'Ov}CQTKch");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(144, 144, fieldTypeFloat0, 144, 144, byteArray0, byteOrder0, 144);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(144, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(576, tiffField0.getBytesLength());
      assertEquals(144, tiffField0.getTag());
      assertEquals(144, tiffField0.getSortHint());
      assertEquals(144L, tiffField0.getCount());
      assertEquals(144, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1075, "_");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1075, 1075, fieldTypeAscii0, 369L, 0L, byteArray0, byteOrder0, (-1489));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0L, tiffElement0.offset);
      assertEquals((-1489), tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1075, tiffField0.getTag());
      assertEquals(1075, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(551, 551, fieldTypeFloat0, 551, 551, byteArray0, byteOrder0, 551);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(551, tiffField0.getSortHint());
      assertEquals(551L, tiffField0.getCount());
      assertEquals(551, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(2204, tiffField0.getBytesLength());
      assertEquals(551L, tiffElement0.offset);
      assertEquals(551, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-126);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      fieldTypeByte0.getValue(tiffField0);
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte) (-1));
      tiffField1.getOversizeValueElement();
      tiffField1.getTagInfo();
      tiffField1.getDescriptionWithoutValue();
      tiffField1.getByteOrder();
      tiffField1.getSortHint();
      tiffField1.getFieldTypeName();
      tiffField1.getSortHint();
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, 2, 2, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(138, 138, fieldTypeFloat0, 138, 138, byteArray0, byteOrder0, 138);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(138, 138);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string1);
      assertEquals(552, tiffField0.getBytesLength());
      assertEquals(138, tiffField0.getTag());
      assertEquals(138, tiffField0.getOffset());
      assertEquals(138, tiffField0.getDirectoryType());
      assertEquals(138, tiffField0.getSortHint());
      assertEquals(138L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)65;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)110;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(194, 194, fieldTypeRational0, 194, 194, byteArray0, byteOrder0, (byte)1);
      tiffField0.dump();
      assertEquals(194, tiffField0.getOffset());
      assertEquals(194L, tiffField0.getCount());
      assertEquals(194, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(194, tiffField0.getTag());
      assertEquals(1552, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(171, 171, fieldTypeFloat0, 171, 171, byteArray0, byteOrder0, 171);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(119, 119, fieldTypeRational0, 119, 119, byteArray0, byteOrder0, (-858));
      String string0 = tiffField0.getValueDescription();
      assertEquals(119, tiffField0.getOffset());
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(952, tiffField0.getBytesLength());
      assertEquals(119, tiffField0.getTag());
      assertEquals(119L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-858), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-430), (-3268), fieldTypeAscii0, 20L, (-930L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: F for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1590, "`Me(XQK\"vC/flr2\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-30);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1590, fieldTypeRational0, 240L, (byte) (-30), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-30), tiffField0.getOffset());
      assertEquals(240L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1920, tiffField0.getBytesLength());
      assertEquals(1590, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeAscii0, 58, 58, byteArray0, byteOrder1, 58);
      String string0 = tiffField0.getStringValue();
      assertEquals(58, tiffField0.getBytesLength());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(58, tiffField0.getTag());
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1572, "`Me(XQK\"vC/flr2\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-108);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-108), (-995), fieldTypeRational0, 2539L, (byte) (-30), byteArray0, byteOrder0, (byte) (-30));
      fieldTypeRational0.getValue(tiffField0);
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte) (-16);
      byteArray0[5] = (byte)1;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(1572, 1572, fieldTypeRational0, 2664L, 3133L, byteArray0, byteOrder1, 0);
      tiffField1.getByteOrder();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@570c11a9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(224, "?8");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-142), 224, fieldTypeByte0, 224, (-2911L), byteArray0, byteOrder0, 224);
      int int0 = tiffField0.getSortHint();
      assertEquals(224, int0);
      
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.getFieldType();
      tiffField0.dump();
      long long0 = tiffField0.getCount();
      assertEquals(224L, long0);
      
      tiffField0.getTagInfo();
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2911), tiffField0.getOffset());
      assertEquals(224, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(224, tiffField0.getDirectoryType());
      assertEquals((-142), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeByte0, 64, 400L, byteArray0, byteOrder0, 64);
      String string0 = tiffField0.getValueDescription();
      assertEquals(400, tiffField0.getOffset());
      assertEquals(64, tiffField0.getTag());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(64L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(119, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1919, (byte)26, fieldTypeDouble0, 810, 119, byteArray0, byteOrder0, (byte)26);
      tiffField0.getDoubleArrayValue();
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(810L, tiffField0.getCount());
      assertEquals(6480, tiffField0.getBytesLength());
      assertEquals(1919, tiffField0.getTag());
      assertEquals(119, tiffField0.getOffset());
      assertEquals(26, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(175, 175, fieldTypeFloat0, 175, 175, byteArray0, byteOrder0, 175);
      byteOrder0.toString();
      tiffField0.getDoubleArrayValue();
      assertEquals(175, tiffField0.getTag());
      assertEquals(175, tiffField0.getDirectoryType());
      assertEquals(175L, tiffField0.getCount());
      assertEquals(175, tiffField0.getOffset());
      assertEquals(175, tiffField0.getSortHint());
      assertEquals(700, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)68;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1149, 1149, fieldTypeLong0, 1149, (-2885L), byteArray0, byteOrder0, (byte)68);
      ByteOrder.nativeOrder();
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.getValueDescription();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "1149 (0x47d: Unknown Tag): ");
      stringWriter1.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, true);
      ByteOrder.nativeOrder();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "");
      mockPrintWriter0.write(1149);
      tiffField0.dump(printWriter0, "W${XfE");
      tiffField0.getTagName();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3546, 2147462581, fieldTypeLong0, 3546, 255L, byteArray0, byteOrder0, 3546);
      tiffField0.getDoubleArrayValue();
      assertEquals(14184, tiffField0.getBytesLength());
      assertEquals(3546, tiffField0.getTag());
      assertEquals(3546, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2147462581, tiffField0.getDirectoryType());
      assertEquals(3546L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1520), (-1520), fieldTypeRational0, (byte)66, (byte) (-103), byteArray0, byteOrder0, 1401);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2, 34016);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertNotNull(string0);
      assertEquals((-1520), tiffField0.getTag());
      assertEquals((-1520), tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getOffset());
      assertEquals(1401, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)25;
      byteArray0[6] = (byte) (-93);
      byteArray0[7] = (byte)54;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeLong0, 4L, (-410L), byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-410), tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1572, "`Me(XQK\"vC/flr2\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-108);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-108), (-995), fieldTypeRational0, 2539L, (byte) (-30), byteArray0, byteOrder0, (byte) (-30));
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField(34850, 671, fieldTypeRational0, 369L, 369L, byteArray0, byteOrder1, (byte) (-108));
      tiffField0.getIntArrayValue();
      assertEquals((-995), tiffField0.getDirectoryType());
      assertEquals(2539L, tiffField0.getCount());
      assertEquals((-108), tiffField0.getTag());
      assertEquals((-30), tiffField0.getOffset());
      assertEquals(20312, tiffField0.getBytesLength());
      assertEquals((-30), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)95, 41489, fieldTypeRational0, (byte)0, (byte)95, byteArray0, byteOrder0, (byte)95);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(41489, tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getTag());
      assertEquals(95, tiffField0.getOffset());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)65;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)110;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)0, 1575, fieldTypeByte0, (byte)0, (-2440L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getTagInfo();
      tiffField0.getValueDescription();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@19b5f350 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeDouble0, 2, 2, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-430), (-1309), fieldTypeAscii0, 440L, 224L, byteArray0, byteOrder0, (-3268));
      fieldTypeAscii0.RATIONAL.getValue(tiffField0);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField((byte) (-35), (byte) (-1), fieldTypeAscii0, (-1833L), 0L, byteArray0, byteOrder1, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)100;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1284), fieldTypeLong0, (byte)100, 4L, byteArray0, byteOrder0, (byte)100);
      tiffField0.getIntArrayValue();
      ByteOrder byteOrder1 = tiffField0.getByteOrder();
      TiffField tiffField1 = new TiffField((-1284), (-2721), fieldTypeLong0, 1321L, 2147483647L, byteArray0, byteOrder1, 1805);
      tiffField1.getIntValueOrArraySum();
      tiffField1.getIntArrayValue();
      assertEquals(5284, tiffField1.getBytesLength());
      assertEquals(1321L, tiffField1.getCount());
      assertEquals(1805, tiffField1.getSortHint());
      assertEquals((-1284), tiffField1.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField1.getOffset());
      assertEquals((-2721), tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      ByteOrder.nativeOrder();
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)49;
      TiffField tiffField0 = new TiffField((-3268), 5, fieldTypeShort0, 5, 20L, byteArray0, byteOrder0, 50940);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(20, tiffField0.getOffset());
      assertEquals(10, tiffField0.getBytesLength());
      assertEquals(5L, tiffField0.getCount());
      assertEquals((-3268), tiffField0.getTag());
      assertEquals(50940, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {12593.0, 257.0, 12545.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)64, (byte)64, fieldTypeRational0, (byte)64, (byte)64, byteArray0, byteOrder0, 1401);
      Long long0 = new Long(1401);
      fieldTypeRational0.writeData(long0, byteOrder0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getOffset());
      assertEquals(64L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(64, tiffField0.getTag());
      assertEquals(512, tiffField0.getBytesLength());
      assertEquals(1401, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1010, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)1;
      ByteOrder.nativeOrder();
      byteArray0[4] = (byte)26;
      TiffField tiffField0 = new TiffField((byte)1, (byte)0, fieldTypeRational0, 137L, (byte)1, byteArray0, byteOrder0, 3510);
      tiffField0.getDoubleArrayValue();
      assertEquals(3510, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1096, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(137L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-24), (-430), fieldTypeAscii0, 19L, (-930L), byteArray0, (ByteOrder) null, (-430));
      String string0 = tiffField0.getStringValue();
      assertEquals((-24), tiffField0.getTag());
      assertEquals((-430), tiffField0.getSortHint());
      assertEquals((-430), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-930), tiffField0.getOffset());
      assertEquals(19, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1368, fieldTypeAscii0, 440L, (byte)70, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: F for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1572, (String) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte) (-24);
      byteArray0[5] = (byte) (-24);
      TiffField tiffField0 = new TiffField((byte) (-24), (-1939), fieldTypeShort0, 1572, (-1939), byteArray0, (ByteOrder) null, 2141616206);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-17736), int0);
      
      tiffField0.getIntArrayValue();
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3144, tiffField0.getBytesLength());
      assertEquals((-24), tiffField0.getTag());
      assertEquals(2141616206, tiffField0.getSortHint());
      assertArrayEquals(new int[] {59624, 59624, 59624}, intArray0);
      assertEquals((-1939), tiffField0.getDirectoryType());
      assertEquals(1572L, tiffField0.getCount());
      assertEquals((-1939), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)51;
      TiffField tiffField0 = new TiffField(2141616206, (byte)0, fieldTypeRational0, 440L, 0L, byteArray0, byteOrder0, (-1522));
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x7fa6784e)", string1);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3520, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(440L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1522), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(119, "^k'Ov}CQTKch");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-50);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1765, 119, fieldTypeFloat0, (byte) (-10), 1765, byteArray0, byteOrder1, 103);
      tiffField0.getSortHint();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      FieldType fieldType0 = tiffField0.getFieldType();
      TiffField tiffField1 = new TiffField(48131, 801, fieldType0, 2728, 0L, byteArray0, byteOrder3, (-2592));
      tiffField1.dump();
      TiffField tiffField2 = new TiffField(2137766527, 0, fieldTypeFloat0, (byte)100, 440L, byteArray0, byteOrder2, (-3466));
      try { 
        tiffField2.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@72c0abe2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, 10, fieldTypeAscii0, (-2132L), 32909, byteArray0, byteOrder1, (-1));
      String string0 = tiffField0.getTagName();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(42112, tiffField0.getTag());
      assertEquals(32909, tiffField0.getOffset());
      assertEquals("GDALMetadata", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(119, "^k'Ov}CQTKch");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-50);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(501, 1709, fieldTypeFloat0, 1765, (-1L), byteArray0, byteOrder0, (byte) (-50));
      assertEquals(1765L, tiffField0.getCount());
      assertEquals(7060, tiffField0.getBytesLength());
      
      TiffField tiffField1 = new TiffField(33450, (-509), fieldTypeFloat0, 0L, 33450, byteArray0, byteOrder0, 501);
      tiffField1.getDoubleArrayValue();
      assertEquals(33450, tiffField1.getOffset());
      assertEquals((-509), tiffField1.getDirectoryType());
      assertEquals(33450, tiffField1.getTag());
      assertEquals(501, tiffField1.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(119, "^k'Ov}CQTKch");
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-50);
      byteArray0[4] = (byte) (-50);
      byteArray0[4] = (byte) (-50);
      byteArray0[5] = (byte) (-50);
      TiffField tiffField0 = new TiffField(119, (byte) (-50), fieldTypeFloat0, 119, 103, byteArray0, byteOrder0, (-1));
      tiffField0.getSortHint();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField1 = new TiffField((-1), (byte) (-50), fieldTypeFloat0, (byte) (-50), (byte) (-50), byteArray0, byteOrder0, (byte)66);
      tiffField1.getOversizeValueElement();
      FieldType fieldType0 = tiffField0.getFieldType();
      TiffField tiffField2 = new TiffField((byte) (-50), (byte) (-50), fieldType0, 119, (byte)66, byteArray0, byteOrder0, 48131);
      tiffField2.dump();
      TiffField tiffField3 = new TiffField(0, 0, fieldType0, 908L, 1L, byteArray0, byteOrder2, 2141616206);
      try { 
        tiffField3.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3588f958 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte) (-10), " (0x");
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte) (-10);
      TiffField tiffField0 = new TiffField(41988, 119, fieldTypeShort0, 119, 311L, byteArray0, byteOrder0, 279);
      tiffField0.dump();
      assertEquals(311, tiffField0.getOffset());
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(279, tiffField0.getSortHint());
      assertEquals(41988, tiffField0.getTag());
      assertEquals(238, tiffField0.getBytesLength());
      assertEquals(119L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(119, "");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)49;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)49, 540, fieldTypeDouble0, (byte)25, (byte)49, byteArray0, byteOrder0, (byte)49);
      tiffField0.dump();
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(540, tiffField0.getDirectoryType());
      assertEquals(49, tiffField0.getOffset());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getSortHint());
  }
}
