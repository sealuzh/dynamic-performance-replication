/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 09:13:27 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "";
      int int0 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-1));
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureCall1.addParam(0, "-%q/K%iig<aT[,");
      // Undeclared exception!
      try { 
        fBProcedureCall1.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(false);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-1), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(0, "");
      fBProcedureCall0.addParam(0, "Specified parameter does not exist.");
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int0);
      
      fBProcedureCall0.setName("Y`4NJF");
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getOutputParam(63);
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1707);
      assertEquals(1707, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-147));
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1648, "You cannot set value of an non-existing parameter.");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.setName("y]U|Fb2hmJ(3h3");
      fBProcedureCall0.getOutputParams();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(1648);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("y]U|Fb2hmJ(3h3");
      fBProcedureCall0.equals("y]U|Fb2hmJ(3h3");
      fBProcedureCall0.getName();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-848), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "pvs$Pc$EGW{^\"E,)");
      fBProcedureCall0.clone();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-5), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "hno5 set anK ");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.registerOutParam((-1), 0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType((-1390));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getInputParam(941);
      fBProcedureCall0.setName((String) null);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "SELECT * FROM null");
      fBProcedureParam1.setType(1110);
      fBProcedureCall0.equals(fBProcedureParam1);
      fBProcedureParam1.setIndex(0);
      fBProcedureParam1.clone();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 37;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(37);
      Object object0 = new Object();
      fBProcedureParam0.clone();
      try { 
        fBProcedureParam0.setValue(object0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.mapOutParamIndexToPosition(41);
      fBProcedureCall0.mapOutParamIndexToPosition((-1138));
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "EXECUTE PROCEDURE");
      fBProcedureParam0.clone();
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2294);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      String string0 = "K^Ea";
      fBProcedureCall0.setName("K^Ea");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(2294, "TTueN#Q?f");
      fBProcedureParam1.setIndex(2608);
      fBProcedureParam1.setIndex(250);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.mapOutParamIndexToPosition(2608);
      fBProcedureCall0.addParam(37, "K^Ea");
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getName();
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.addParam(0, "TTueN#Q?f");
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-796), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -797
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "(0l$`/?(I");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null((0l$`/?(I)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2294);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName("K^Ea");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(2294, "TTueN#Q?f");
      fBProcedureParam1.setIndex(2608);
      fBProcedureParam1.setIndex(250);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2608);
      assertEquals(2608, int0);
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(37, "K^Ea");
      assertEquals(37, fBProcedureParam2.getPosition());
      
      int int1 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int1);
      
      fBProcedureCall0.getName();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(38, list0.size());
      
      fBProcedureCall0.addParam(0, "TTueN#Q?f");
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM K^Ea(TTueN#Q?f, K^Ea)", string0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
      
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam(0, "TTueN#Q?f");
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.mapOutParamIndexToPosition(2608, true);
      fBProcedureCall1.clone();
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall2));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(0, "TxY8Rw?JA@tpJO=T");
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(TxY8Rw?JA@tpJO=T)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 2294;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2294);
      fBProcedureParam0.setIndex((-1280));
      fBProcedureCall0.setName("K^Ea");
      String string0 = "TTueN#Q?f";
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(2294, "TTueN#Q?f");
      fBProcedureParam1.setIndex(2608);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(2608, "TTueN#Q?f");
      fBProcedureCall0.mapOutParamIndexToPosition(2608);
      boolean boolean0 = false;
      fBProcedureCall0.getSQL(false);
      fBProcedureParam2.clone();
      try { 
        fBProcedureCall0.registerOutParam(2294, 2608);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-462));
      fBProcedureCall0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("&yw");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.setName(" eTblCE6wSW1dxq.4 G");
      assertFalse(fBProcedureCall0.equals((Object)fBProcedureCall1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("m");
      fBProcedureCall0.mapOutParamIndexToPosition((-2453));
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "PZF>/?Nc(tQm)#");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getName();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam((-2453));
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3882, "Dp4qHkxXJ");
      fBProcedureParam0.setValue(fBProcedureParam1);
      fBProcedureCall0.mapOutParamIndexToPosition((-4098));
      fBProcedureCall0.setName("PZF>/?Nc(tQm)#");
      fBProcedureCall0.setName("PZF>/?Nc(tQm)#");
      String string0 = fBProcedureCall0.getSQL(false);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.setName("m");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      String string1 = fBProcedureCall0.getName();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(11, "INp{s]N^$wkA_1`q'");
      assertEquals(11, fBProcedureParam0.getPosition());
      assertEquals("INp{s]N^$wkA_1`q'", fBProcedureParam0.getParamValue());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1681, "=h{J~?=-8.MP*.Cr.I");
      fBProcedureParam0.setValue("=h{J~?=-8.MP*.Cr.I");
      assertEquals(1681, fBProcedureParam0.getPosition());
      
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), 0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(=h{J~?=-8.MP*.Cr.I)", string0);
  }
}
