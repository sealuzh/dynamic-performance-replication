/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 13:42:31 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.util.ArrayList;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.AbstractClassifier;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.functions.GaussianProcesses;
import weka.classifiers.functions.LinearRegression;
import weka.classifiers.functions.SMO;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.SMOset;
import weka.classifiers.lazy.IBk;
import weka.classifiers.lazy.kstar.KStarConstants;
import weka.classifiers.meta.FilteredClassifier;
import weka.classifiers.misc.InputMappedClassifier;
import weka.core.AbstractInstance;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.core.neighboursearch.CoverTree;
import weka.core.neighboursearch.KDTree;
import weka.filters.AllFilter;
import weka.filters.Filter;
import weka.filters.MultiFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      MockRandom mockRandom0 = new MockRandom(2539L);
      int int0 = 1;
      int int1 = 0;
      double double0 = (-2676.4);
      IBk iBk0 = new IBk(1);
      Instances instances0 = regSMO0.m_data;
      iBk0.pruneToK((Instances) null, (double[]) null, 4549);
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 5.3;
      doubleArray0[2] = 10.0;
      regSMO0.m_weights = doubleArray0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.1;
      regSMO0.m_target = doubleArray0;
      regSMO0.epsilonTipText();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1105);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[1];
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_SVM = sMOreg0;
      AbstractClassifier.makeCopies(sMOreg0, 0);
      regSMO0.getRevision();
      stringArray0[0] = "\tThe nearest neighbour search algorithm to use (default: weka.core.neighboursearch.LinearNNSearch).\n";
      regSMO0.setOptions(stringArray0);
      regSMO0.setOptions(stringArray0);
      regSMO0.getTechnicalInformation();
      regSMO0.getTechnicalInformation();
      RegSMO regSMO1 = new RegSMO();
      Instances instances0 = regSMO1.m_data;
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, (-1.0), 3, 3, 3, (-1.0), 2225.3925, (-1.0), 3, 2225.3925, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = GaussianProcesses.FILTER_NORMALIZE;
      RegSMO regSMO0 = new RegSMO();
      boolean boolean0 = regSMO0.findOptimalPointOnLine((-898), 0, 0, (-898), (-898), (-898), 0, 0, (-898), (-898), 0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_supportVectors = null;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1755), 0.0, (-1760.3228), (-1755), 664, 0.0, 664, (-2925.62424), (-1755), 522.30236122, 319.513);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2145076122, 0.0, 0.0, 1.0E-12, 2145076122, 1.0E-6, 1.0E-12, 1.0E-6, 0.0, 1.0E-12, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      double[] doubleArray0 = new double[4];
      regSMO0.m_alpha1 = 918.0;
      doubleArray0[0] = (-3107.193);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-2499.767625561341);
      doubleArray0[3] = 1.7976931348623157E308;
      regSMO0.m_sparseWeights = doubleArray0;
      regSMO0.globalInfo();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1070.47193;
      doubleArray0[1] = 3545.0;
      doubleArray0[2] = 0.1;
      doubleArray0[3] = 1.7976931348623157E308;
      doubleArray0[4] = (-1919.6633590862327);
      regSMO0.m_nCacheHits = 1822;
      doubleArray0[5] = 6.283185307179586;
      doubleArray0[6] = 427.5473104;
      doubleArray0[7] = 0.0;
      regSMO0.m_error = doubleArray0;
      regSMO0.takeStep(59, 59, 59, 59, 64.0);
      regSMO0.listOptions();
      try { 
        regSMO0.takeStep(116, 1467, 1.7976931348623157E308, 1467, 0.1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 0.23900534175313615, 3, 3, 3, 0.23900534175313615, 2225.3925, 0.23900534175313615, 3, 2225.3925, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      org.evosuite.runtime.Random.setNextRandom((-140));
      org.evosuite.runtime.Random.setNextRandom((-382));
      regSMO0.getOptions();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = (-4578.051322739196);
      int int0 = 10000;
      int int1 = 2149;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(10000, (-4578.051322739196), 522.30236122, 0.0, 2149, 10000, 629.18, (-4578.051322739196), 1178.992093979852, 3987.2, 3987.2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1474, (-170.919795), 1474, (-170.919795), 1474, 1474, 1474, 1474, (-170.919795), 1474, 2994.253051544628);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 2146644070, 2146644070, 2146644070, 2146644070, 0.0, 2146644070, 2146644070, 2146644070, 2146644070, 664.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3101, 1.0, 522.30236122, 522.30236122, 706, 3351.4853334160284, 592.28, 2928.0, 522.30236122, 1.7976931348623157E308, 2167.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 664;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1602), 0.0, 891.0, 522.30236122, 2146644070, (-1602), 664, 31.29649273, 664, 891.0, 521.30236122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_supportVectors = null;
      double double0 = 522.30236122;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1755), (-2.0), (-1760.3228), (-1755), 664, 0.0, 664, (-2925.62424), (-1755), 522.30236122, 319.513);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(76, (-2893.272605477), 76, 76, 991, 5.030337856965831, 1.0E-12, 3, 1.0E-12, 3, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 592.28;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2143368556, (-4118.84), 1178.992093979852, 706, 2143368556, 706, 522.30236122, 706, 0.0, 1983.302430765, (-1055.43513762587));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 2146644070, 2146644070, 2146644070, 2146644070, 0.0, 0.1, 2146644070, 0.1, 2146644070, 662.7556978743698);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 891.0, 99.0, 521.30236122, 664, 0.1, 891.0, 521.30236122, 31.29649273, 4.9E-324, 740.548837458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2134, 55, 2134, 2134, 1, 1290.62742235, 55, 1, 1, 2134, 2134);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(16, 16, 16, 16, (-1), 0.0, (-1), 0.0, 16, 16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(59, 2502.5747083445394, 2502.5747083445394, 59, 59, (-854.403), (-854.403), (-854.403), (-854.403), 2502.5747083445394, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 2511.06460302995;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2129780944, (-2815.31), 2511.06460302995, 891.0, 2142953016, 520.8556787092673, 520.8556787092673, 1393.343281, 2.0, 490.00586848999995, (-243.1005));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), (-1), 4.9E-324, 1.7976931348623157E308, (-1), 4.9E-324, 693.83143614963, 2.0, 0.0, 1.7976931348623157E308, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter(7.0);
      String[] stringArray0 = new String[0];
      regSMO0.setOptions(stringArray0);
      int int0 = (-2563);
      int int1 = (-1563);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2563), 1178.992093979852, (-1.0), 1243.85821908207, (-1563), (-5022.5071189), (-187.00195), 0.5, (-374.261306788), 160.0, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 2146644070;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 891.0, 99.0, 2146644070, 664, 0.1, 891.0, 2146644070, 31.29649273, 4.9E-324, 740.548837458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(427.51046633223);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 891.0, 664, 521.30236122, 664, 0.1, 891.0, 521.30236122, 31.29649273, 4.9E-324, 740.548837458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 664;
      regSMO0.setEpsilon(427.51046633223);
      int int1 = 2146644070;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 891.0, 664, 891.0, 664, 0.1, 891.0, 891.0, 31.29649273, 4.9E-324, 740.548837458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = null;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2795, 2795, 2795, 48.0, 124, 0.0, 0.0, 795.1360923064864, 48.0, 48.0, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(4968, 4968, 4968, 2146644070, 4968, 0.0, (-186.90158492513206), 3.4, 0.25, 2146644070, (-186.90158492513206));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter(2146644070);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 891.0, 664, 521.30236122, 664, 0.1, 891.0, 521.30236122, 31.29649273, 4.9E-324, 740.548837458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2340), 1633.20786145, 0.0, (-2033.53634), (-2340), (-2340), 0.0, (-2340), 3388.104281, 1633.20786145, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-3143), 4968, 429.778, 2146644070, (-3143), 0.0, (-187.00195), 3.4, 0.25, 2146644070, 664.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(4968, (-1686.522260766525), 0.0, (-187.00195), (-100), 0.0, (-1686.522260766525), 0.0, 255.0, 2146644070, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = null;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      String string0 = regSMO0.getRevision();
      assertEquals("8034", string0);
      
      doubleArray0[0] = (-2032.9736840985);
      regSMO0.m_alphaStar = doubleArray0;
      doubleArray0[1] = (-1.0);
      regSMO0.m_sparseWeights = doubleArray0;
      doubleArray0[2] = (-2078.157132181);
      regSMO0.listOptions();
      doubleArray0[3] = (-2.0);
      doubleArray0[4] = (-1676.8989);
      doubleArray0[5] = 1.677994E-8;
      doubleArray0[6] = 664.0;
      doubleArray0[7] = (-525.667);
      doubleArray0[8] = (-3219.208285);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alpha2 = (-2032.9736840985);
      regSMO0.getScore();
      int int0 = regSMO0.secondChoiceHeuristic((-456));
      assertEquals((-1), int0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      int int0 = regSMO0.secondChoiceHeuristic(0);
      assertEquals((-1), int0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146644070, 2146644070, 2146644070, 2146644070, 2146644070, 0.0, (-183.81095097443813), 2146644070, (-183.81095097443813), 2146644070, 664.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(106, 106, 0.0, 2225.3925, 0, (-90.7986), 2225.3925, 2225.3925, (-608.0), 0.0013480767999352883, (-2165.1772));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(106, 106, 106, 2225.3925, 0, (-3616.455103297132), 2225.3925, 2225.3925, (-608.0), 186.90158492513183, (-2165.1772));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      regSMO0.m_alphaStar = doubleArray0;
      doubleArray0[4] = 0.0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-3607), (-324.89697490012173), 0.0, 0.9999999999, (-2431), (-771.186529), 0.0, 0.9999999999, 4234.546963934, 22.0, 1.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3607
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      regSMO0.m_nEvals = (-3686);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(200003, 200003, 158.42444053006824, 158.42444053006824, (-3686), (-2162.851208933559), 412.720113589, 3109.78775756798, (-406.7990257230426), 200003, (-3686));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 3, 3394.2, 3, 2342.7602552865, 2342.7602552865, (-3361.0), 3394.2, 3, (-3361.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.toString();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 1.0E-12, 3, 1.0E-12, 3, (-31.880608028), 1.0E-12, (-191.9), (-3361.0), 1.0E-12, 3394.2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.globalInfo();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setEpsilon(8);
      boolean boolean0 = regSMO0.findOptimalPointOnLine(8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 3, 3, 3, (-28.320772308372664), 3, 3, 3, 3, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-3361.0), 2107.9999997892, 1128.2882, 2146879197, (-955.999999999999), (-31.880608028), (-955.5038281812105), 2146879197, 1.0E-12, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2146879197
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha2Star = 1458.439792659;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      int int0 = 3;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 3, 3, 3, 2.108E-7, 713.423, 3, 1127.8040805379796, 2.108E-7, 713.423);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 1.0E-12, 3, 3, 3, 1.0E-12, 8.263954783985E-8, 1.0E-12, 0.0, 8.263954783985E-8, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, 2823.010501412879, 3394.2, 2500, (-31.880608028), (-31.880608028), 3, 5.7, 2400.7983407429, (-1563.35754));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2500
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 8, 3423.782060273546, 8, 0, 0, 0, 0, 8, 8, (-191.9));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.setEpsilon(1422.06);
      boolean boolean0 = regSMO0.findOptimalPointOnLine(3, 1.0E-12, 3, 1.0E-12, 3, (-31.880608028), 1.0E-12, (-191.9), 3, 1.0E-12, 3394.2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, (-193.2815194879302), (-2486.57), 2410.819986, 3, (-193.2815194879302), (-2486.57), 6.7, 0.693147181, 0.693147181, 1919.83355892);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 1.0E-10, 721.7, (-572.9991), 558, 999.6042826, 3, 999.6042826, 721.7, 1.0E-10, 999.6042826);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 558
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.setEpsilon(3);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 1.0E-12, 3, 1.0E-12, 3, (-31.880608028), 1.0E-12, (-31.880608028), 3, 1.0E-12, 3394.2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2301.99;
      doubleArray0[1] = 0.1;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-854.403);
      doubleArray0[5] = 45.0;
      doubleArray0[6] = (-1.0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-854.403);
      doubleArray1[1] = 0.1;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 45.0;
      doubleArray1[4] = 0.0;
      regSMO0.m_alpha = doubleArray1;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.secondChoiceHeuristic(249);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(0.0, regSMO0.m_alpha);
      // Undeclared exception!
      try { 
        binarySparseInstance0.relationalValue(249);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DenseInstance doesn't have access to a dataset!
         //
         verifyException("weka.core.AbstractInstance", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 991;
      doubleArray0[1] = (double) 991;
      doubleArray0[2] = (double) 991;
      doubleArray0[3] = (double) 991;
      doubleArray0[4] = (double) 991;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.secondChoiceHeuristic(991);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 9.999999999E-11;
      doubleArray0[1] = 1.7976931348623157E308;
      regSMO0.m_alpha = doubleArray0;
      int int0 = SMO.FILTER_NORMALIZE;
      regSMO0.secondChoiceHeuristic(956);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(8, 1.0E-12, 8, 1.0E-12, 8, 8, 1.0E-12, 1.0E-12, 8, 1.0E-12, 8);
      assertTrue(boolean0);
      
      double double0 = regSMO0.getEpsilon();
      assertEquals(1.0E-12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.findOptimalPointOnLine(8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8);
      try { 
        regSMO0.examineExample(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 14;
      regSMO0.m_target = doubleArray1;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(8, 1.0E-12, 8, 1.0E-12, 8, 8, 1.0E-12, 1.0E-12, 8, 1.0E-12, 8);
      assertTrue(boolean0);
      
      regSMO0.optimize();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.findOptimalPointOnLine(1, 1.0E-12, 1, 1.0E-12, 1, 1, 1.0E-12, 1.0E-12, 1, 1.0E-12, 1);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.findOptimalPointOnLine(8, (-1298.2727529065114), 1.0E-12, (-972.76400059812), 1, (-1298.2727529065114), 14, 1.0E-12, 8, 1, 1.908874353E9);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOset sMOset0 = new SMOset(14);
      regSMO0.m_supportVectors = sMOset0;
      double[] doubleArray0 = new double[9];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_target = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.findOptimalPointOnLine(1, 37.0, 14, 1, 3, (-972.76400059812), 1.0E-12, 2437.818, 239.64609724356, 0.95, 1.0E-10);
      try { 
        regSMO0.examineExample(1444);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1444
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }
}
