/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 18:28:18 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeAscii0.BYTE, 110, 110, byteArray0, byteOrder0, 110);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2661), (-2661), fieldTypeFloat0, (-2661), (-2661), byteArray0, byteOrder0, (-2661));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2661), tiffField0.getDirectoryType());
      assertEquals((-2661), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-2661), tiffField0.getTag());
      assertEquals((-2661), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(75, 75, fieldTypeFloat0, 75, 75, byteArray0, (ByteOrder) null, 75);
      tiffField0.getDoubleArrayValue();
      assertEquals(75, tiffField0.getOffset());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getTag());
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(75L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[376];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0.DOUBLE, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeAscii0.BYTE, 110, 110, byteArray0, byteOrder0, 110);
      tiffField0.dump();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@51a5e73c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[84];
      TiffField tiffField0 = new TiffField(1273, 1273, fieldTypeFloat0, 1273, 1273, byteArray0, (ByteOrder) null, 1273);
      String string0 = tiffField0.toString();
      assertEquals("1273 (0x4f9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1273 Float)", string0);
      assertEquals(1273, tiffField0.getSortHint());
      assertEquals(5092, tiffField0.getBytesLength());
      assertEquals(1273, tiffField0.getOffset());
      assertEquals(1273, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeAscii0, 30, 30, byteArray0, byteOrder0, 30);
      tiffField0.toString();
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getOffset());
      assertEquals(30L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[280];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2909, 2909, fieldTypeFloat0.DOUBLE, 2909, 2909, byteArray0, byteOrder0, 2909);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 129, byteArray0, (ByteOrder) null, 129);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(129, tiffField0.getSortHint());
      assertEquals(129, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 9, 9, byteArray0, byteOrder0, 9);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeAscii0.BYTE, 110, 110, byteArray0, byteOrder0, 110);
      tiffField0.dump();
      int int0 = tiffField0.getDirectoryType();
      assertEquals(110, int0);
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(110, tiffField0.getOffset());
      assertEquals(110L, tiffField0.getCount());
      assertEquals(110, tiffField0.getTag());
      assertEquals(110, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeAscii0, 41, 41, byteArray0, byteOrder0, 41);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals("41 (0x29: Unknown Tag): ", string0);
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeFloat0, 41, 41, byteArray0, (ByteOrder) null, 41);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@cd82175
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147227705, 2147227705, fieldTypeAscii0, 2147227705, 2147227705, byteArray0, byteOrder0, 2147227705);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6eaa237e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeFloat0, 41, 41, byteArray0, (ByteOrder) null, 41);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(97, 97, fieldTypeAscii0.BYTE, 97, 97, byteArray0, byteOrder0, 97);
      int int0 = tiffField0.getSortHint();
      assertEquals(97, tiffField0.getOffset());
      assertEquals(97, tiffField0.getTag());
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(97, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(48, 103, fieldTypeShort0, 48, 103, byteArray0, byteOrder0, 48);
      String string0 = tiffField0.toString();
      assertEquals("48 (0x30: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (48 SShort)", string0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(103, tiffField0.getOffset());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[288];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2909, 2909, fieldTypeFloat0.DOUBLE, 2909, 2909, byteArray0, byteOrder0, 2909);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3212), 2909);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2909, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(2909, tiffField0.getSortHint());
      assertEquals(2909, tiffField0.getTag());
      assertEquals(2909, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[169];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(133, 133, fieldTypeFloat0, 133, 133, byteArray0, (ByteOrder) null, 133);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4ebe31e3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147227659, 2147227659, fieldTypeAscii0, 2147227659, 2147227659, byteArray0, byteOrder0, 2147227659);
      String string0 = tiffField0.toString();
      String string1 = tiffField0.toString();
      assertFalse(string1.equals((Object)string0));
      
      tiffField0.getTagInfo();
      assertEquals(2147227659, tiffField0.getOffset());
      assertEquals(2147227659, tiffField0.getSortHint());
      assertEquals(2147227659, tiffField0.getDirectoryType());
      assertEquals(2147227659, tiffField0.getBytesLength());
      assertEquals(2147227659L, tiffField0.getCount());
      assertEquals(2147227659, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(129, 129, fieldTypeFloat0, 129, 129, byteArray0, (ByteOrder) null, 129);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(129, 129);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string1);
      assertEquals(129, tiffField0.getOffset());
      assertEquals(129, tiffField0.getSortHint());
      assertEquals(516, tiffField0.getBytesLength());
      assertEquals(129, tiffField0.getTag());
      assertEquals(129L, tiffField0.getCount());
      assertNotNull(string1);
      assertEquals(129, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1857), 2163, fieldTypeLong0, 2163, (-1857), byteArray0, (ByteOrder) null, 2163);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(2163, tiffField0.getSortHint());
      assertEquals((-1857), tiffField0.getOffset());
      assertEquals(2163, tiffField0.getDirectoryType());
      assertEquals((-1857), tiffField0.getTag());
      assertEquals(8652, tiffField0.getBytesLength());
      assertEquals(2163L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(326, "w");
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeLong0, 326, 326, byteArray0, byteOrder0, 326);
      tiffField0.getIntArrayValue();
      assertEquals(326, tiffField0.getOffset());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(326, tiffField0.getTag());
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals(1304, tiffField0.getBytesLength());
      assertEquals(326L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(34853, 34853, fieldTypeFloat0, (-3269L), (-3269L), byteArray0, (ByteOrder) null, 34853);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSInfo", string0);
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(34853, tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getTag());
      assertEquals((-3269), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[97];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-323), (-323), fieldTypeRational0, 30, (-584L), byteArray0, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)17, (-561), fieldTypeAscii0.RATIONAL, 225L, (-2424L), byteArray1, byteOrder0, (byte)17);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-561), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2424), tiffField0.getOffset());
      assertEquals(1800, tiffField0.getBytesLength());
      assertEquals(225L, tiffField0.getCount());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 9, 9, byteArray0, byteOrder0, 65535);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getTag());
      assertEquals(9L, tiffField0.getCount());
      assertEquals(72, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(598, 598, fieldTypeShort0, 598, 598, byteArray0, (ByteOrder) null, 598);
      tiffField0.getDoubleArrayValue();
      assertEquals(598, tiffField0.getOffset());
      assertEquals(1196, tiffField0.getBytesLength());
      assertEquals(598L, tiffField0.getCount());
      assertEquals(598, tiffField0.getTag());
      assertEquals(598, tiffField0.getDirectoryType());
      assertEquals(598, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(38, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeAscii0, 38, 38, byteArray0, byteOrder0, 38);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(38, int0);
      
      String string0 = tiffField0.getStringValue();
      assertEquals(38, tiffField0.getTag());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getBytesLength());
      assertEquals(38, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[116];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2163, 2163, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 2163);
      tiffField0.getFieldTypeName();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(2163, tiffField0.getTag());
      assertEquals(2163, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2163, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(123, 1, fieldTypeFloat0, 1, 123, byteArray0, (ByteOrder) null, 123);
      tiffField0.getByteArrayValue();
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(123, tiffField0.getTag());
      assertEquals(123, tiffField0.getOffset());
      assertEquals(123, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3052, 3052, fieldTypeShort0, 3052, 253L, byteArray0, (ByteOrder) null, 3052);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3052, tiffField0.getSortHint());
      assertEquals(3052, tiffField0.getDirectoryType());
      assertEquals(3052, tiffField0.getTag());
      assertEquals(253, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(6104, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[140];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValueOrArraySum();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffff)", string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 9, 9, byteArray0, byteOrder0, 133);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(123, 1, fieldTypeFloat0, 1, 123, byteArray0, (ByteOrder) null, 123);
      tiffField0.getIntArrayValue();
      assertEquals(123, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(123, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(123, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeAscii0.RATIONAL, (byte)17, (-2439L), byteArray1, byteOrder0, (byte)17);
      tiffField0.getIntArrayValue();
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals((-2439), tiffField0.getOffset());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(593, 593, fieldTypeByte0, 593, 593, byteArray0, byteOrder0, 593);
      String string0 = tiffField0.toString();
      assertEquals(593, tiffField0.getDirectoryType());
      assertEquals(593, tiffField0.getSortHint());
      assertEquals(593, tiffField0.getBytesLength());
      assertEquals(593, tiffField0.getOffset());
      assertEquals("593 (0x251: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (71) (593 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[277];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2901, 2901, fieldTypeFloat0.ASCII, 2901, 2901, byteArray0, byteOrder0, 2901);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2901, tiffField0.getTag());
      assertEquals(2901, tiffField0.getOffset());
      assertEquals(2901, tiffField0.getBytesLength());
      assertEquals(2901, tiffField0.getSortHint());
      assertEquals(2901, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[150];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1022, 1022, fieldTypeShort0, 2372L, 1022, byteArray0, (ByteOrder) null, 1022);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1022, tiffField0.getTag());
      assertEquals(1022, tiffField0.getSortHint());
      assertEquals(4744, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1022, tiffField0.getOffset());
      assertEquals(1022, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[261];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2901, 2901, fieldTypeFloat0, 2901, 2901, byteArray0, byteOrder0, 2901);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2901, tiffField0.getOffset());
      assertEquals(2901, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2901, tiffField0.getTag());
      assertEquals(2901, tiffField0.getSortHint());
      assertEquals(11604, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[303];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34825, 23, fieldTypeFloat0.IFD, 34825, 23, byteArray0, byteOrder0, 34825);
      String string0 = tiffField0.toString();
      assertEquals("34825 (0x8809: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (75) (34825 IFD)", string0);
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(34825, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(139300, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0.DOUBLE, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65535 Double)", string0);
  }
}
