/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 04:09:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-813));
      classWriter0.version = (-813);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-813), "bCOJw0%9S", "bCOJw0%9S", "bCOJw0%9S", "bCOJw0%9S");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2144));
      classWriter0.index = (-2144);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2144), "rNy;J", "rNy;J", "rNy;J", "rNy;J");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-802));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-802), "bCOJw0%9S", "bCOJw0%9S", "bCOJw0%9S", "bCOJw0%9S");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2144));
      classWriter0.index = (-811);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2144), "rNyJ", "rNyJ", "rNyJ", "rNyJ");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "_0>7UAWZeL", "_0>7UAWZeL", "_0>7UAWZeL", "_0>7UAWZeL");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1489);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MoC+.n{O`hhzsA", "", "'", "MoC+.n{O`hhzsA");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1340));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Snthtic", "Snthtic", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "odGe", "odGe", "odGe", "odGe");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("odGe");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1736));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "{av|,v #TYfmZX", "{av|,v #TYfmZX", "{av|,v #TYfmZX", "{av|,v #TYfmZX");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 2;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, ".\",Ds\"M", ".\",Ds\"M", ".\",Ds\"M", ".\",Ds\"M");
      Attribute attribute0 = new Attribute(".\",Ds\"M");
      byte[] byteArray0 = new byte[5];
      fieldWriter0.visitAttribute(attribute0);
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "o3Ge", "Deprecated", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 1208;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1363));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1643), (String) null, "A<GH+FG}FLlq2>|[K7k", "!LgQt", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "nv", "nv", "nv", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-802));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4097, "", "bCOJw0%9S", "", "");
      Attribute attribute0 = new Attribute("df;dh)3L)]AQ?");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1489);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MoC+.n{O`hhzsA", "", "'", "MoC+.n{O`hhzsA");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("MoC+.n{O`hhzsA", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1489);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MoC+.n{O`hhzsA", "", "'", "MoC+.n{O`hhzsA");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-802));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4097, "", "bCOJw0%9S", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1489);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MoC+.n{O`hhzsA", "", "'", "MoC+.n{O`hhzsA");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-802));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4097, "", "bCOJw0%9S", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1340));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Snthtic", "Snthtic", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1489);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "MoC+.n{O`hhzsA", "", "'", "MoC+.n{O`hhzsA");
      fieldWriter0.visitAnnotation("MoC+.n{O`hhzsA", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1383));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "$nthti:G", "$nthti:G", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-4107), "", "Pxgvv4 xu;12)3W[/Wb", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "c?(AH=N$(_:N?Dv:34", "c?(AH=N$(_:N?Dv:34", "c?(AH=N$(_:N?Dv:34", "c?(AH=N$(_:N?Dv:34");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "o3Ge", "Deprecated", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
