/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 00:20:32 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1109), fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1109), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(512, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(261, 1, fieldTypeDouble0, 1L, 1, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(261, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-17), (-15), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3321));
      tiffField0.getOffset();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals((-3321), tiffField0.getSortHint());
      assertEquals((-17), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4403), (-4403), fieldTypeByte0, (-4403), (-4403), byteArray0, byteOrder0, (-54));
      int int0 = tiffField0.getOffset();
      assertEquals((-4403), tiffField0.getTag());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals((-4403), tiffField0.getDirectoryType());
      assertEquals((-4403), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)85;
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, 1, (-1609L), byteArray0, byteOrder0, (byte)85);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1609), tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-91);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146955621, 2146955621, fieldTypeShort0, 693L, 255L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2146955621, tiffField0.getDirectoryType());
      assertEquals((-23296), int0);
      assertEquals(2146955621, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1386, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)113;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, (-785), fieldTypeShort0, 1L, (-1469L), byteArray0, byteOrder0, (byte)101);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-785), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(33421, tiffField0.getTag());
      assertEquals((-1469), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(515, 515, fieldTypeShort0, 196L, (-2577L), byteArray0, byteOrder0, (byte)76);
      int int0 = tiffField0.getBytesLength();
      assertEquals(515, tiffField0.getTag());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(515, tiffField0.getDirectoryType());
      assertEquals(392, int0);
      assertEquals((-2577), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1354, ", fieldType: ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeFloat0, 1354, 1L, byteArray0, byteOrder0, 2146804064);
      tiffField0.getByteArrayValue();
      assertEquals(2146804064, tiffField0.getSortHint());
      assertEquals(5416, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1354, tiffField0.getDirectoryType());
      assertEquals(1354, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(664, (-1635), fieldTypeRational0, 664, (-1635), byteArray0, byteOrder0, (byte) (-1));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-1635), tiffField0.getOffset());
      assertEquals(5312, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1635), tiffField0.getDirectoryType());
      assertEquals(664, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4403), (-4403), fieldTypeByte0, (-4403), (-4403), byteArray0, byteOrder0, (-54));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeShort0, 77, 984L, byteArray0, byteOrder0, (byte)113);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1109), fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1109), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4070, 4070, fieldTypeByte0, 4070, 1L, byteArray0, byteOrder0, (-781));
      tiffField0.getByteOrder();
      assertEquals((-781), tiffField0.getSortHint());
      assertEquals(4070, tiffField0.getTag());
      assertEquals(4070, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "3B_+MCV");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-2368));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(285, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2368), tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "3B_+MCV");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-2368));
      tiffField0.getValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2368), tiffField0.getSortHint());
      assertEquals(285, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1610), fieldTypeByte0, (-3025L), (-1924L), byteArray0, byteOrder0, (byte) (-101));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1610), tiffField0.getDirectoryType());
      assertEquals((-1924), tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(4, tagInfo0.length);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "3B_+MCV");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-2368));
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(285, int0);
      assertEquals((-2368), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(515, 515, fieldTypeShort0, 196L, (-2577L), byteArray0, byteOrder0, (byte)76);
      tiffField0.getCount();
      assertEquals(515, tiffField0.getDirectoryType());
      assertEquals((-2577), tiffField0.getOffset());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(515, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1610), fieldTypeByte0, (-3025L), (-1924L), byteArray0, byteOrder0, (byte) (-101));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals((-1924), tiffField0.getOffset());
      assertEquals((-3025), int0);
      assertEquals((-1610), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(286, "BayerGreenSplit");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1523, 1523, fieldTypeRational0, 1523, (-3025L), byteArray0, byteOrder0, 676);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, (-785), fieldTypeShort0, 1L, (-1469L), byteArray0, byteOrder0, (byte)101);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(33421, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals((-1469), tiffField0.getOffset());
      assertEquals((-785), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2563, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2563, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, (byte)92);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1de4af4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146955621, 2146955621, fieldTypeShort0, 693L, 255L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(693L, tiffField0.getCount());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1386, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2146955621, tiffField0.getTag());
      assertEquals(2146955621, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(664, (-1635), fieldTypeRational0, 664, (-1635), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1635), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1635), tiffField0.getOffset());
      assertEquals(664L, tiffField0.getCount());
      assertEquals(664, tiffField0.getTag());
      assertEquals(5312, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(574, 2943, fieldTypeLong0, 2943, (-6130L), byteArray0, (ByteOrder) null, (byte) (-61));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-6130), tiffField0.getOffset());
      assertEquals(2943L, tiffField0.getCount());
      assertEquals(574, tiffField0.getTag());
      assertEquals(11772, tiffField0.getBytesLength());
      assertEquals(2943, tiffField0.getDirectoryType());
      assertEquals((-61), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.ASCII, 0, 0L, byteArray0, byteOrder0, 290);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147301178, "~dnE2\"cx=tX5?n[X()");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 2147301178, fieldTypeFloat0, 1429L, 305, byteArray0, byteOrder0, (-768));
      tiffField0.getDoubleArrayValue();
      assertEquals(1429L, tiffField0.getCount());
      assertEquals(305, tiffField0.getOffset());
      assertEquals(2147301178, tiffField0.getDirectoryType());
      assertEquals(5716, tiffField0.getBytesLength());
      assertEquals((-768), tiffField0.getSortHint());
      assertEquals(305, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(574, 2943, fieldTypeLong0, 2943, (-6130L), byteArray0, (ByteOrder) null, (byte) (-61));
      tiffField0.getDoubleArrayValue();
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals(11772, tiffField0.getBytesLength());
      assertEquals(574, tiffField0.getTag());
      assertEquals(2943L, tiffField0.getCount());
      assertEquals(2943, tiffField0.getDirectoryType());
      assertEquals((-6130), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(48, 32781, fieldTypeShort0, 32781, 2453L, byteArray0, byteOrder0, (-1431655764));
      tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getTag());
      assertEquals(2453, tiffField0.getOffset());
      assertEquals(32781, tiffField0.getDirectoryType());
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals(65562, tiffField0.getBytesLength());
      assertEquals(32781L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-6), "ColorMatrix2");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2122219134, fieldTypeRational0, 50, (-6), byteArray0, byteOrder0, 2448);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-6), tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(2448, tiffField0.getSortHint());
      assertEquals(2122219134, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(286, "BayerGreenSplit");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1523, 1523, fieldTypeRational0, 1523, (-3025L), byteArray0, byteOrder0, 676);
      tiffField0.getDoubleArrayValue();
      assertEquals(676, tiffField0.getSortHint());
      assertEquals(1523L, tiffField0.getCount());
      assertEquals(1523, tiffField0.getTag());
      assertEquals(1523, tiffField0.getDirectoryType());
      assertEquals(12184, tiffField0.getBytesLength());
      assertEquals((-3025), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, (-785), fieldTypeShort0, 1L, (-1469L), byteArray0, byteOrder0, (byte)101);
      tiffField0.getDoubleArrayValue();
      assertEquals(33421, tiffField0.getTag());
      assertEquals((-1469), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-785), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 4L, (-3660L), byteArray0, byteOrder0, (byte) (-63));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals((-3660), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, doubleArray0.length);
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(122);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3413), (-3413), fieldTypeLong0, 4775L, (-509L), byteArray0, byteOrder0, 2147307350);
      tiffField0.getIntArrayValue();
      assertEquals(4775L, tiffField0.getCount());
      assertEquals(19100, tiffField0.getBytesLength());
      assertEquals((-509), tiffField0.getOffset());
      assertEquals((-3413), tiffField0.getDirectoryType());
      assertEquals((-3413), tiffField0.getTag());
      assertEquals(2147307350, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-3306), fieldTypeShort0, (byte)5, (byte) (-1), byteArray0, byteOrder0, (byte)5);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-3306), tiffField0.getDirectoryType());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1917, "vhN91D<C");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 48129, fieldTypeRational0, 50, (-4346L), byteArray0, byteOrder0, (byte) (-81));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(286, "BayerGreenSplit");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1523, 1523, fieldTypeRational0, 1523, (-3025L), byteArray0, byteOrder0, 676);
      tiffField0.getIntArrayValue();
      assertEquals(1523, tiffField0.getTag());
      assertEquals(1523, tiffField0.getDirectoryType());
      assertEquals((-3025), tiffField0.getOffset());
      assertEquals(676, tiffField0.getSortHint());
      assertEquals(12184, tiffField0.getBytesLength());
      assertEquals(1523L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2214, 2214, fieldTypeLong0, 1L, (-3447L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2214, tiffField0.getDirectoryType());
      assertEquals((-3447), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2214, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 4L, (-3660L), byteArray0, byteOrder0, (byte) (-63));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@6dd9b6d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.ASCII, 0, 0L, byteArray0, byteOrder0, 290);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(290, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(817, 817, fieldTypeDouble0, 817, 817, byteArray0, byteOrder0, 1908874353);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@5fdbcc9f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(817, 817, fieldTypeDouble0, 817, 817, byteArray0, byteOrder0, 1908874353);
      String string0 = tiffField0.getTagName();
      assertEquals(817, tiffField0.getOffset());
      assertEquals(1908874353, tiffField0.getSortHint());
      assertEquals(817, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x331)", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1610), fieldTypeByte0, (-3025L), (-1924L), byteArray0, byteOrder0, (byte) (-101));
      String string0 = tiffField0.getTagName();
      assertEquals((-1610), tiffField0.getDirectoryType());
      assertEquals((-1924), tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals("GPSVersionID", string0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3317, 0, fieldTypeDouble0, 0L, 3317, byteArray0, byteOrder0, 1113);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "L04Ep,7]N-exhZA:t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1354, ", fieldType: ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeFloat0, 1354, 1L, byteArray0, byteOrder0, 2146804064);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1293, 1293, fieldTypeByte0, 1293, 1L, byteArray0, byteOrder0, (byte) (-126));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals(1293L, tiffField0.getCount());
      assertEquals(1293, tiffField0.getTag());
      assertEquals(1293, tiffField0.getDirectoryType());
      assertEquals(1293, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 4L, (-3660L), byteArray0, byteOrder0, (byte) (-63));
      String string0 = tiffField0.toString();
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-3660), tiffField0.getOffset());
      assertEquals("1 (0x1: Unknown Tag): 0.0, 0.0 (4 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(870, 870, fieldTypeLong0, 1439L, 870, byteArray0, byteOrder0, (byte) (-99));
      tiffField0.dump();
      assertEquals(870, tiffField0.getTag());
      assertEquals(870, tiffField0.getDirectoryType());
      assertEquals((-99), tiffField0.getSortHint());
      assertEquals(1439L, tiffField0.getCount());
      assertEquals(870, tiffField0.getOffset());
      assertEquals(5756, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147301178, "~dnE2\"cx=tX5?n[X()");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 2147301178, fieldTypeFloat0, 1429L, 305, byteArray0, byteOrder0, (-768));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1429L, tiffField0.getCount());
      assertEquals((-768), tiffField0.getSortHint());
      assertEquals(305, tiffField0.getTag());
      assertEquals(2147301178, tiffField0.getDirectoryType());
      assertEquals(5716, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(305, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(5, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2188), 5, fieldTypeShort0, 232L, 232L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.toString();
      assertEquals("-2188 (0xfffff774: Unknown Tag): 0, 0, 0, 0 (232 )", string0);
      assertEquals(232, tiffField0.getOffset());
      assertEquals(464, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(317, "CurrentICCProfile");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "CurrentICCProfile");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1982292598, 1982292598, fieldTypeAscii0, 1982292598, 1700L, byteArray0, byteOrder0, (byte)119);
      tiffField0.dump();
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(1982292598L, tiffField0.getCount());
      assertEquals(1982292598, tiffField0.getBytesLength());
      assertEquals(1982292598, tiffField0.getDirectoryType());
      assertEquals(1700, tiffField0.getOffset());
      assertEquals(1982292598, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "3B_+MCV");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-2368));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2368), tiffField0.getSortHint());
      assertEquals(285, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, (-785), fieldTypeShort0, 1L, (-1469L), byteArray0, byteOrder0, (byte)101);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-785), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals((-1469), tiffField0.getOffset());
      assertEquals(33421, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-6), "ColorMatrix2");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2122219134, fieldTypeRational0, 50, (-6), byteArray0, byteOrder0, 2448);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(2122219134, tiffField0.getDirectoryType());
      assertEquals(2448, tiffField0.getSortHint());
      assertEquals((-6L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeLong0, (-3435973834L), (-3435973834L), byteArray0, byteOrder0, 243);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147133608), (-2924));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getTag());
      assertNull(string0);
      assertEquals(858993462, tiffField0.getOffset());
      assertEquals(243, tiffField0.getSortHint());
      assertTrue(tiffField0.isLocalValue());
      assertEquals((-858993448), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1610), fieldTypeByte0, (-3025L), (-1924L), byteArray0, byteOrder0, (byte) (-101));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2147483646), (-3025));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1610), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: GPSVersionID, fieldType: Byte", string0);
      assertEquals((-1924), tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3025), tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 30, fieldTypeByte0, 0, 4L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(574, 2943, fieldTypeLong0, 2943, (-6130L), byteArray0, (ByteOrder) null, (byte) (-61));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(574, tiffField0.getTag());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals((-6130), tiffField0.getOffset());
      assertEquals(2943, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33421, (-785), fieldTypeShort0, 1L, (-1469L), byteArray0, byteOrder0, (byte)101);
      tiffField0.getFieldTypeName();
      assertEquals(33421, tiffField0.getTag());
      assertEquals((-1469), tiffField0.getOffset());
      assertEquals((-785), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147301178, "~dnE2\"cx=tX5?n[X()");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 2147301178, fieldTypeFloat0, 1429L, 305, byteArray0, byteOrder0, (-768));
      int int0 = tiffField0.getOffset();
      assertEquals(305, tiffField0.getTag());
      assertEquals((-768), tiffField0.getSortHint());
      assertEquals(2147301178, tiffField0.getDirectoryType());
      assertEquals(1429L, tiffField0.getCount());
      assertEquals(305, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(574, 2943, fieldTypeLong0, 2943, (-6130L), byteArray0, (ByteOrder) null, (byte) (-61));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2943, int0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals(574, tiffField0.getTag());
      assertEquals((-6130), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147301178, "~dnE2\"cx=tX5?n[X()");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 2147301178, fieldTypeFloat0, 1429L, 305, byteArray0, byteOrder0, (-768));
      int int0 = tiffField0.getSortHint();
      assertEquals(305, tiffField0.getTag());
      assertEquals((-768), int0);
      assertEquals(2147301178, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getOffset());
      assertEquals(1429L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147301178, "~dnE2\"cx=tX5?n[X()");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 2147301178, fieldTypeFloat0, 1429L, 305, byteArray0, byteOrder0, (-768));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-768), tiffField0.getSortHint());
      assertEquals(2147301178, tiffField0.getDirectoryType());
      assertEquals("305 (0x131: Software): ", string0);
      assertEquals(305, tiffField0.getOffset());
      assertEquals(1429L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1610), fieldTypeByte0, (-3025L), (-1924L), byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
}
