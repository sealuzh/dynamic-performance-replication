/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 23:49:05 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "", "", "");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wheel.asm.ByteVector";
      classWriter0.visit((-174), 36, "", "{=)!;Ak#U}3`Z ry", "wheel.asm.ByteVector", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      classWriter0.index = (-174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "", "", "");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-716));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "+$E[8-(ugXImP:tu";
      stringArray0[1] = "+$E[8-(ugXImP:tu";
      stringArray0[2] = "The filters must not be null";
      stringArray0[3] = "The filters must not be null";
      classWriter0.visit(4096, (-94), "The filters must not be null", "The filters must not be null", "+$E[8-(ugXImP:tu", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      classWriter0.index = (-174);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1788);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "tc", "tc", "tc", "tc");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-171));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-171), "*Cj6HyP!", "*Cj6HyP!", "*Cj6HyP!", "*Cj6HyP!");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-366), "gP2'N[?1bY0gO(", "gP2'N[?1bY0gO(", "@@.z2NRzP^wsX[aNDC", "gP2'N[?1bY0gO(");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "RuntimeInvisibleAnnotations", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(79);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9$Qc", "9$Qc", "9$Qc", "9$Qc");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 79;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4094);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-177));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-177), "888dr6fVar9", "^]6'EZ^l;Q", "888dr6fVar9", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2975;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2975, "", "", "The suffx must not be null", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "RuntimeInvisibleAnnotations", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Stetic", "Stetic", "Stetic", "Stetic");
      fieldWriter0.visitAnnotation("Stetic", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "RuntimeInvisibleAnnotations", "", "");
      fieldWriter0.visitAnnotation("]e", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "rN=T{.1R_Tbni", (String) null, "");
      ByteVector byteVector0 = new ByteVector(131072);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "", "", "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.visit(49, (-174), "", "", "", stringArray0);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-716));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "id3:vk7KXts5`&-@)", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "f`D[Eg3uKRic6ZRq", "", "", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "rN=T{.1R_Tbni", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "", "", "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      classWriter0.visit(49, (-174), "", "", "", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "RuntimeInvisibleAnnotations", "", "");
      fieldWriter0.visitAnnotation("]e", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "rN=T{.1R_Tbni", (String) null, "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-174));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-174), "", "RuntimeInvisibleAnnotations", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "", "", "The suffix must not be null", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "f`D[Eg3uKRic6ZRq", "f`D[Eg3uKRic6ZRq", "f`D[Eg3uKRic6ZRq", (Object) null);
      fieldWriter0.visitEnd();
  }
}
