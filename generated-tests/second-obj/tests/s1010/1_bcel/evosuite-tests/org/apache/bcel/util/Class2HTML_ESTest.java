/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:13:25 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.time.chrono.ChronoLocalDate;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-zip";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "XjKf/!XU";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "U@\"c]U8]C8E9";
      stringArray0[1] = "-zip";
      stringArray0[2] = "-zip";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // -zip (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = Class2HTML.referenceType("'{cA}oxF@[xS>g");
      assertEquals("<A HREF=\"'{cA}oxF@.html\" TARGET=_top>'{cA}oxF@[xS>g</A>", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--ip";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/longorg.evosuite.runtime.mock.java.time.chrono.MockMinguoDate_code.html");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ClassPath classPath0 = new ClassPath((ClassPath) null, "WS");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      int[] intArray0 = new int[10];
      javaClass0.getAnnotationEntries();
      intArray0[2] = (int) (byte)3;
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "long");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class2HTML.referenceType("U@\"c]U8]C8E9");
      Class2HTML.referenceType("<A HREF=\"U@\"c]U8]C8E9.html\" TARGET=_top>U@\"c]U8]C8E9</A>");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "U@\"c]U8]C8E9";
      stringArray0[1] = "-d";
      stringArray0[2] = "U@\"c]U8]C8E9";
      stringArray0[3] = "QR+";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "U@\"c]U8]C8E9";
      stringArray0[1] = "-d";
      stringArray0[2] = "U@\"c]U8]C8E9";
      stringArray0[2] = "QR+";
      Class2HTML.referenceType("-d");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("mfQ", false);
      ClassPath classPath0 = new ClassPath((ClassPath) null, "gOq,^Quc");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.isNested();
      javaClass0.isProtected(true);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "mfQ");
      Class2HTML.toHTML("\n\t\tthrows ");
      javaClass0.setClassName("gOq,^Quc");
      String string0 = Class2HTML.toHTML("mfQ");
      String string1 = Pattern.quote("\n\t\tthrows ");
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class2HTML.referenceType("U@\"c]U8]C8E9");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/QR+");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "U@\"c]U8]C8E9");
      FileSystemHandling.createFolder(evoSuiteFile0);
      java.lang.ClassLoader.getSystemClassLoader();
      FileSystemHandling.createFolder(evoSuiteFile0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("", true);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.setSuperclassName("java.time.temporal.TemporalAccessor");
      javaClass0.copy();
      Class2HTML.toHTML("Y~2*/ZR+");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "QR+";
      stringArray0[1] = "QR+";
      stringArray0[2] = "-d";
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // QR+ is not a Java .class file
         //
         verifyException("org.apache.bcel.classfile.ClassParser", e);
      }
  }
}
