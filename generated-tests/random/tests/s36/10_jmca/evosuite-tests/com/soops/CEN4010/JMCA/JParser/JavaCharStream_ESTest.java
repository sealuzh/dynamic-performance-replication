/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:18:21 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1), 4);
      javaCharStream0.inBuf = 80;
      javaCharStream0.tokenBegin = (-3599);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(4, 73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3599
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(9);
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 98);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4086, 4086, 238);
      javaCharStream0.inBuf = (-1930);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('m', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SGmzCwz)b:bRc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10, 937);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(10, javaCharStream0.getBeginColumn());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SGmzCwz)b:bRc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10, 937);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2441), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4057, 654);
      javaCharStream0.adjustBeginLineColumn(13, 654);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 1877, 1877);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('.', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&3 N7eq");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i#,(*2j`{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('i', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 79, 60, 0);
      String string0 = javaCharStream0.GetImage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('z');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&3 N7eq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.ReInit((Reader) stringReader0, 3, 2, 3);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-24), (byte) (-90));
      StringReader stringReader0 = new StringReader("n8Q>");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-24), 1324);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 88, 88);
      javaCharStream0.ReInit((Reader) null, 57, 98);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&3 N7eq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 38, 38);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1628), 339);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YK5jx");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8lx]lIVd-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(12);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1), 4);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(4, 73);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('N');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0++>k+i:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('0');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, 88, 14);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1040));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1), (-838));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'cig");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 76, 76, 526);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[7];
      intArray0[1] = (-1);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-189), (-189));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 1877, 1877);
      javaCharStream0.tokenBegin = 4096;
      javaCharStream0.adjustBeginLineColumn(3069, 1);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(9, (-5094));
      assertEquals((-5094), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(9);
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(9, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 98);
      javaCharStream0.backup(0);
      javaCharStream0.GetImage();
      assertEquals(97, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!3GQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-455), (-545), (-455));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UmW[YG<TNl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-583), (-583));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-583), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 79, 60, 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(128);
      javaCharStream0.readChar();
      assertEquals(3968, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 88, 88);
      javaCharStream0.available = 67;
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 98);
      javaCharStream0.inBuf = 89;
      javaCharStream0.backup(0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 98);
      javaCharStream0.inBuf = 89;
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SGmzCwz)b:bRc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10, 937);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      try { 
        JavaCharStream.hexval('%');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SGmzCwz)b:bRc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10, 937);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4057, 654);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6mubW<hbgXU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2441));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-3), (byte)96);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-90), (-1), (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 65, 308);
      javaCharStream0.backup(9);
      javaCharStream0.GetSuffix(65);
      assertEquals(4086, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<)3,hQ_U\"Lk!L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5664, 5664, 5664);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 0);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-24), (byte) (-90));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, 1450);
      assertEquals(8, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<)3,hQ_U\"Lk!L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5664, 5664, 5664);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.backup((-2219));
      assertEquals(2218, javaCharStream0.bufpos);
  }
}
