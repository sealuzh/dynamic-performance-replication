/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 02:57:43 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(2061);
      classWriter0.index = (-6507);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6507), "CSH``8j&!06.{@<Nw", "|)rD+", "|)rD+", "|)rD+");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "p)zs";
      stringArray0[1] = "int";
      stringArray0[2] = "p)zs";
      stringArray0[3] = "int";
      stringArray0[4] = "org.apache.commons.io.filefilter.DelegateFileFilter";
      stringArray0[5] = "p)zs";
      stringArray0[6] = "";
      classWriter0.visit((-2354), 2, "int", "p)zs", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2354), "", "org.apache.commons.io.filefilter.DelegateFileFilter", "int", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(2061);
      classWriter0.index = (-6507);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6507), "CSH``8j&!06.{@<Nw", "|)rD+", (String) null, "|)rD+");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      classWriter0.index = (-6507);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6507), "CSH``8j&!06.{@<Nw", "|)rD+", "|)rD+", "|)rD+");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "p)zs";
      stringArray0[1] = "int";
      stringArray0[2] = "p)zs";
      stringArray0[3] = "int";
      stringArray0[4] = "org.apache.commons.io.filefilter.DelegateFileFilter";
      stringArray0[5] = "p)zs";
      stringArray0[6] = "";
      classWriter0.visit((-2354), 2, "int", "p)zs", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2354), "", "org.apache.commons.io.filefilter.DelegateFileFilter", "int", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      classWriter0.index = (-6507);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6507), "CSH``8j&!06.{@<Nw", "|)rD+", (String) null, "|)rD+");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2354), "", "org.apache.commons.io.filefilter.DelegateFileFilter", "int", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 90, "", "/Z", "Synthetic", "PyK,^");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "CSH``8j&!06.{@<Nw", "CSH``8j&!06.{@<Nw", "v}^]Ix|;Mf2|$K", "v}^]Ix|;Mf2|$K");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 369, "CSH``8j&!06.{@<Nw", "CSH``8j&!06.{@<Nw", "v}^]Ix|;Mf2|$K", "v}^]Ix|;Mf2|$K");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 369, "v}^]Ix|;Mf2|$K", (String) null, "<9/#w1V", "]k'47t|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 3008, "PyK,^", "", "/Z", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@221b7dde
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2655, "", "The FileFilter must not be null", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "PyK,^", "/Z", "/Z", (Object) null);
      fieldWriter0.visitAnnotation("PyK,^", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(131072);
      ClassWriter classWriter0 = new ClassWriter(2061);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "CSH``8j&!06.{@<Nw", "|)rD+", (String) null, "|)rD+");
      fieldWriter0.visitAnnotation("2c", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = 24;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-416), "", "", "", (Object) null);
      classWriter0.version = 49;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "Vp$|-\"zE0O[X`XXei2d", "Vp$|-\"zE0O[X`XXei2d", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute("|)rD+");
      ClassWriter classWriter0 = new ClassWriter(2061);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6507), "CSH``8j&!06.{@<Nw", "|)rD+", "|)rD+", "|)rD+");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "PyK,^", "/Z", "/Z", (Object) null);
      fieldWriter0.visitAnnotation("PyK,^", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      classWriter0.version = 24;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-416), "", "", "", (Object) null);
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "Vp$|-\"zE0O[X`XXei2d", "Vp$|-\"zE0O[X`XXei2d", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "Vp$|-\"zE0O[X`XXei2d", "Vp$|-\"zE0O[X`XXei2d", "", (Object) null);
      fieldWriter0.visitAnnotation("Deprecated", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-416), "", "", "", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(231);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-638), "", ":EJ", (String) null, (Object) null);
      fieldWriter0.visitEnd();
  }
}
