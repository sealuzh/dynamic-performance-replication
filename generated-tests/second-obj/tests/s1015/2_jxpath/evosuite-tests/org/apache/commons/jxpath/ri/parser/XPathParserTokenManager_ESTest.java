/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:03:35 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.util.Enumeration;
import java.util.Locale;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((SimpleCharStream) null);
      xPathParserTokenManager0.ReInit((SimpleCharStream) null, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = null;
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((SimpleCharStream) null);
      PrintStream printStream0 = xPathParserTokenManager0.debugStream;
      xPathParserTokenManager0.setDebugStream(printStream0);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.ReInit((SimpleCharStream) null, (-895));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -895. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 722);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K|KWhXLR%a^.#GNq");
      char[] charArray0 = new char[6];
      charArray0[0] = 'h';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HlU7zK");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = '\u008C';
      charArray0[2] = '\u008C';
      charArray0[4] = 'D';
      charArray0[5] = '\u008C';
      charArray0[6] = '\u008C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, (-840), (-840));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[7];
      StringReader stringReader0 = new StringReader("r]\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[5];
      StringReader stringReader0 = new StringReader("/");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream2 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream((Reader) null, 10, 10, 85);
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.ReInit((Reader) null, (int) (byte)0, 22, 85);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.mark(22);
      simpleCharStream0.ReInit((Reader) charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = 'Q';
      charArray0[4] = 'P';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader1 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader1);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = 'C';
      charArray0[4] = 'P';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 1158, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B5yQ#uj");
      StringReader stringReader0 = new StringReader("B5yQ#uj");
      stringReader0.ready();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      char[] charArray0 = new char[6];
      charArray0[0] = 'o';
      charArray0[1] = 'T';
      charArray0[1] = 'T';
      charArray0[3] = 'D';
      charArray0[4] = 'T';
      charArray0[5] = 'T';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader1 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader2);
      bufferedReader1.read();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      char[] charArray0 = new char[12];
      charArray0[0] = '{';
      charArray0[3] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1, '\u0000', (-1), 722);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[0] = 'E';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'l';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[3] = 'T';
      charArray0[3] = 'G';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = '[';
      String string0 = "yQ#";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      charArray0[2] = '[';
      charArray0[0] = '4';
      charArray0[4] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 94, 94, 94);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = 'C';
      charArray0[4] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 1158, 4);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = 'i';
      charArray0[3] = '\u0000';
      charArray0[4] = '^';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 94, 94, 1193);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[2] = '2';
      charArray0[4] = '\u0000';
      charArray0[5] = '2';
      int int0 = 4;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 1158, 4);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[0] = '9';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = '^';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 39);
      charArrayReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      StringReader stringReader0 = new StringReader("ancestor-or-self::");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 417);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(lineNumberReader0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7Om>");
      char[] charArray0 = new char[12];
      charArray0[0] = '\u008C';
      charArray0[1] = 'T';
      charArray0[1] = 'T';
      charArray0[3] = 'D';
      charArray0[4] = 'T';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 722);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader1, 'T', (-1), 722);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = 'N';
      String string0 = "K|KWhXLR$a^.#GNq";
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = 'T';
      charArray0[4] = 'Q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[0] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      String string0 = "\"normalize-space\"";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"normalize-space\"");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(bufferedReader0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[2] = '\u0000';
      charArray0[4] = ',';
      charArray0[5] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r]\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@xHlU7zK");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]\"");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      charArray0[2] = 'q';
      charArray0[3] = 'q';
      charArray0[4] = 'B';
      charArray0[5] = 'q';
      charArray0[6] = 'q';
      charArray0[7] = 'q';
      charArray0[8] = 'q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ODJA9p?3;<j+ srp");
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = '\u0000';
      charArray0[4] = 'W';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 39);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = '4';
      charArray0[5] = 'C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 44);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 2155, 44);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = '[';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = '[';
      charArray0[4] = 'A';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = ":8E>5.Pewq,";
      StringReader stringReader0 = new StringReader(":8E>5.Pewq,");
      stringReader0.ready();
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[4] = '2';
      charArray0[5] = '2';
      int int0 = 4;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArrayReader1.markSupported();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader(";lEgfwnil>T");
      stringReader0.ready();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = '\u0000';
      charArray0[0] = '8';
      charArray0[4] = '8';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 4);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]\"");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = '?';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-z[Lf)zOi4Z8l_J)");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      char char0 = 'c';
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[3] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = '\'';
      charArray0[5] = '\u008C';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '[';
      StringReader stringReader0 = new StringReader("x=TYKs*l4");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = ')';
      charArray0[1] = ')';
      charArray0[4] = ')';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-z[Lf)zOi4Z8l_J)");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'O';
      stringReader0.markSupported();
      stringReader0.skip((-1));
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.ReInit((Reader) stringReader0, 2, (int) (byte)50, 2);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, (byte)50);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      charArrayReader2.mark(10);
      simpleCharStream0.ReInit((Reader) charArrayReader2);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = '_';
      charArray0[1] = '_';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"substring-before\"");
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)73;
      StringReader stringReader0 = new StringReader("?d0v1{j!>u53Ex");
      boolean boolean0 = org.apache.commons.jxpath.ri.parser.SimpleCharStream.staticFlag;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-z[Lf)zOi4Z8l_J)");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      char[] charArray0 = new char[2];
      stringReader0.markSupported();
      stringReader0.read(charArray0);
      stringReader0.skip((-1));
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[4] = 'f';
      StringReader stringReader0 = new StringReader("yQ#");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[21];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)62);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(byteArrayInputStream0);
      simpleCharStream0.GetImage();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Locale locale0 = Locale.FRENCH;
      byteArrayInputStream0.close();
      simpleCharStream0.inputStream = (Reader) charArrayReader0;
      simpleCharStream0.ReInit((InputStream) byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"substring-before\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)62;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)62);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(byteArrayInputStream0);
      Locale locale0 = Locale.FRENCH;
      simpleCharStream0.ReInit((InputStream) byteArrayInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("null");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[7];
      charArray0[0] = 'l';
      charArray0[1] = 'l';
      charArray0[2] = '?';
      charArray0[3] = 'l';
      charArray0[4] = '>';
      charArray0[5] = 'l';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream1 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = org.apache.commons.jxpath.ri.parser.SimpleCharStream.staticFlag;
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      char[] charArray0 = new char[6];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[4] = '+';
      charArray0[5] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArrayReader1.markSupported();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("TH");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = '\u0000';
      charArray0[4] = 'U';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 4, 4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(N90wQmG!=\"");
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0, 4, 'U');
      charArrayReader0.mark(4);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("\"]\"");
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = 'O';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      charArray0[0] = '(';
      charArray0[1] = 'Q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"substring-before\"");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)61;
      byteArray0[5] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 47);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(byteArrayInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.ReInit((InputStream) byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)61);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      org.apache.commons.jxpath.ri.parser.SimpleCharStream simpleCharStream0 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream(charArrayReader0);
  }
}
