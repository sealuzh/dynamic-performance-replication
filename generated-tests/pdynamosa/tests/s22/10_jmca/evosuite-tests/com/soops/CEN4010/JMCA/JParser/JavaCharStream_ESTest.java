/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 09:03:10 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[8];
      intArray0[0] = 4087;
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(4087, 4094);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.backup(1);
      javaCharStream0.adjustBeginLineColumn((-563), 69);
      assertEquals((-563), javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*aotx`!%n'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.tokenBegin = 94;
      javaCharStream0.adjustBeginLineColumn(4087, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n<Yy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 80, 80);
      javaCharStream0.backup(80);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(14, 15);
      assertEquals(14, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*aotx[`!%n3'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(1, 1833);
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(102);
      assertEquals(928, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      char[] charArray0 = javaCharStream0.GetSuffix(102);
      assertEquals(102, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.tokenBegin = 15;
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(927, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\\', char0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f1EbkCc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-2145);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('f', char0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 922, (byte)13, (-653));
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.inBuf = (-2945);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.nextCharInd = 602;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.backup(55);
      javaCharStream0.getLine();
      assertEquals(4040, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hp~u%06");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55, 55);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(55, javaCharStream0.getBeginLine());
      assertEquals(55, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-86), 1, 3274);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-86), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2936), (-25), 65533);
      javaCharStream0.backup(2153);
      javaCharStream0.getEndLine();
      assertEquals(63379, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}AR'cpJX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-558), 14, (byte)14);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-558), int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 117);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getEndColumn();
      assertEquals(117, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 14, 92);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(14, javaCharStream0.getBeginColumn());
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)11, 6);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1, (-4156));
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-4156), javaCharStream0.getBeginColumn());
      assertEquals((-4156), int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2181), 3126);
      javaCharStream0.bufpos = 3126;
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4096, (-1), (-563));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1a Qpq|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92, 92);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(92, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-653), 10);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-653), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kpg82\"/?Mu8:(Ln+a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4094, (-275));
      javaCharStream0.adjustBeginLineColumn(4060, 4060);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(4060, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*aotx[`!%n3'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-887));
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-887), int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 1684, (byte)0);
      javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f1EbkCc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('y', char0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f1EbkCc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jT8Bj-k];45Mc5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      assertEquals(4095, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 117);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('!');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1a Qpq|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92, 92);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('4');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jT8Bj-k];45Mc5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*aotx[`!%n3'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 12);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, 699, (-1049), 926);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 1, 0);
      StringReader stringReader0 = new StringReader("Pi{zay;&g~y/5W4q");
      javaCharStream0.ReInit((Reader) stringReader0, 1675, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      StringReader stringReader0 = new StringReader("- RIS]C7BL|VO8l-'");
      javaCharStream0.ReInit((Reader) stringReader0, 0, 2938);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, (-660), (-660));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 117);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, 0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (byte)3, (byte) (-101));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-39), 77, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7&TP0K,;mB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3413, 3413, 0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (int) (byte)1, 0, 1311);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UBT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)13, (byte)18);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (-1332));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (int) (byte) (-1), (int) (byte) (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}AR'cpJX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 1, 10);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jT8Bj-k];45Mc5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-86), 1, 3274);
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2021, 2021, 70);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3250, 4089, 3250);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-3072), (-3072), 2021);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('z');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3:\u0005Dabfl8Mg'o@[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1081), (-1081));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1081), (-1081), (-1081));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1771));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2181), 3126);
      javaCharStream0.bufpos = (-384);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jT8Bj-k];45Mc5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[8];
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 117, 10, (-1209));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, (-2946), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*aotx[`!%n3'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1, 1);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(906);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 906, 906, (-1516));
      javaCharStream0.backup((-89));
      assertEquals(88, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 347, 347, 347);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 82, (-1), (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hp~u%06");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 55, 55, 55);
      javaCharStream0.adjustBeginLineColumn(1, 1);
      javaCharStream0.adjustBeginLineColumn(2009, 207);
      assertEquals(207, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2181), 3126);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.bufpos = 3126;
      char[] charArray0 = javaCharStream0.GetSuffix(81);
      assertEquals(81, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 1, 928);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      assertEquals(926, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+k/q$F`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 0, 0);
      String string0 = javaCharStream0.GetImage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1387), (-1387));
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28, 28);
      javaCharStream0.backup(28);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u000B', char0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\n', char0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 117);
      javaCharStream0.prevCharIsLF = true;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(16, javaCharStream0.getBeginLine());
      assertEquals('f', char0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1a Qpq|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92, 92);
      javaCharStream0.bufsize = 60;
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"@T?CD\"uDFv\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1976, 3274, 3274);
      javaCharStream0.backup(2191);
      javaCharStream0.backup(1976);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals(893, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 928, 89);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('y', char0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UBT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4061, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-86), 1, 3274);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-653), 10);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Xh5S~EOZ#{93+#<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"UT?CD\"uD,v\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2936), (-25), 65533);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yBh\"@T?CD\"uDFv\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1976, 3274, 3274);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28, 28);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(28);
      char char0 = javaCharStream0.readChar();
      assertEquals(4068, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2048, 1657, 12);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, (-1317));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fES|> <!t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 117);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3250, 3250);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
