/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 11:12:15 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSListAxioms;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSState;
import umd.cs.shop.JSSubstitution;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSState_ESTest extends JSState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSPlan jSPlan0 = new JSPlan();
      JSState jSState1 = jSState0.apply(jSPlan0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      JSSubstitution jSSubstitution1 = jSState1.satisfies(jSPlan0, jSSubstitution0, jSListAxioms0);
      JSSubstitution jSSubstitution2 = jSState0.satisfies(jSPlan0, jSSubstitution1, jSListAxioms0);
      jSState0.applySubstitutionListLogicalAtoms(jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPlan0.addElement((Object) null);
      JSListAxioms jSListAxioms1 = new JSListAxioms();
      jSState1.satisfiesAll(jSState0, jSSubstitution3, jSListAxioms1);
      jSState1.addElementsToState(jSState0);
      // Undeclared exception!
      try { 
        jSState0.satisfies(jSPlan0, jSSubstitution3, jSListAxioms1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListAxioms", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(inputStreamReader0);
      streamTokenizer0.nval = 0.0;
      JSState jSState0 = null;
      try {
        jSState0 = new JSState(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListLogicalAtoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSPlan jSPlan0 = new JSPlan();
      JSState jSState1 = jSState0.apply(jSPlan0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "umd.cs.shop.JSState");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      JSSubstitution jSSubstitution1 = jSState1.satisfies(jSPlan0, jSSubstitution0, jSListAxioms0);
      JSSubstitution jSSubstitution2 = jSState0.satisfies(jSPlan0, jSSubstitution1, jSListAxioms0);
      jSState0.applySubstitutionListLogicalAtoms(jSSubstitution2);
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSPlan0.addElement((Object) null);
      JSListAxioms jSListAxioms1 = new JSListAxioms();
      jSState0.addElementsToState(jSPlan0);
      // Undeclared exception!
      try { 
        jSState1.satisfiesAll(jSState0, jSSubstitution3, jSListAxioms1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSListAxioms", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSState jSState0 = new JSState();
      jSState0.ensureCapacity((-1015));
      JSPlan jSPlan0 = new JSPlan();
      JSState jSState1 = jSState0.apply(jSPlan0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSListAxioms jSListAxioms0 = jSPlanningDomain0.axioms();
      JSSubstitution jSSubstitution1 = jSState1.satisfies(jSState0, jSSubstitution0, jSListAxioms0);
      jSState1.satisfiesTAm(jSPredicateForm0, jSSubstitution1);
      assertEquals(0, jSSubstitution1.capacity());
      assertNotSame(jSState1, jSState0);
  }
}
