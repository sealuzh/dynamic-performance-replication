/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 17:40:23 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 2525;
      regexp0.name = "";
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.min = 21;
      regexp0.cap = 21;
      regexp1.equals(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      regexp0.op = regexp_Op1;
      regexp1.op = regexp_Op0;
      String string0 = "(?-s:.)";
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_TEXT;
      regexp0.op = regexp_Op2;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[9];
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp2 = new Regexp(regexp1);
      regexpArray0[7] = regexp2;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      String string0 = regexp0.toString();
      assertEquals("\\A?", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.equals(regexp2);
      assertTrue(regexp2.equals((Object)regexp1));
      
      regexp1.flags = 3393;
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp0.equals(regexp3);
      regexp_Op1.isPseudo();
      regexp1.maxCap();
      assertFalse(regexp1.equals((Object)regexp0));
      
      Regexp.Op.values();
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 7;
      regexp0.cap = 1458;
      Object object0 = new Object();
      regexp0.equals(object0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1458;
      intArray0[1] = 1458;
      regexp0.runes = intArray0;
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2331;
      regexp0.cap = (-682);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-682);
      regexp1.max = (-583);
      regexp0.min = (-583);
      regexp0.cap = 159;
      regexp1.subs = null;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.name = "-8m9qVXD)";
      regexp0.toString();
      regexp0.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.EMPTY_MATCH;
      regexp0.reinit();
      regexp0.flags = (-1657);
      regexp0.maxCap();
      regexp0.maxCap();
      regexp_Op1.isPseudo();
      regexp0.toString();
      regexp0.equals("(?:)");
      regexp0.equals(regexp_Op1);
      regexp0.maxCap();
      regexp0.equals(regexp0);
      regexp0.maxCap();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.maxCap();
      Regexp.Op.values();
      regexp_Op2.isPseudo();
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.valueOf("EMPTY_MATCH");
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-1373);
      intArray0[1] = 42892;
      intArray0[2] = 18;
      intArray0[3] = 13;
      intArray0[4] = 4406;
      intArray0[5] = (-1115);
      regexp1.runes = intArray0;
      regexp1.op = regexp_Op1;
      regexp1.equals(regexp0);
      regexp1.equals(regexp_Op0);
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1259;
      intArray0[1] = 2147483645;
      intArray0[2] = 17;
      intArray0[3] = (-477);
      intArray0[4] = 2778;
      intArray0[5] = 3480;
      regexp1.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.cap = (-898);
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      regexp0.equals("B");
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.max = 0;
      regexp1.op = regexp_Op0;
      regexp1.op = regexp_Op0;
      regexp1.min = (-898);
      regexp0.equals(regexp1);
      regexp0.toString();
      regexp1.op.isPseudo();
      regexp1.op.isPseudo();
      regexp1.toString();
      regexp1.equals("B");
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 64015;
      int[] intArray0 = new int[2];
      intArray0[0] = 64015;
      intArray0[1] = 64015;
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.flags = 3367;
      regexp0.name = "";
      regexp1.name = "Wm^PZlX";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-3312);
      regexp0.name = "ufqMs";
      regexp0.min = (-606);
      int[] intArray0 = new int[2];
      intArray0[0] = 319;
      intArray0[1] = 3381;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("{=/)9[)sK*D1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.{=/)9[)sK*D1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      regexp1.flags = 32;
      Object object0 = new Object();
      boolean boolean0 = regexp1.equals(object0);
      assertFalse(boolean0);
      
      intArray0[1] = 3735;
      regexp1.runes = intArray0;
      boolean boolean1 = regexp1.equals(regexp0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      boolean boolean0 = regexp_Op0.isPseudo();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      regexp1.runes = intArray0;
      regexp1.name = "CAPTURE";
      regexp_Op0.isPseudo();
      boolean boolean1 = regexp1.equals(regexp0);
      assertFalse(boolean1 == boolean0);
      
      regexp0.maxCap();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      int[] intArray0 = new int[1];
      intArray0[0] = 504;
      regexpArray0[0].runes = intArray0;
      regexpArray0[1] = regexp1;
      regexpArray0[1].cap = 1487;
      regexpArray0[2] = regexp2;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexp2.subs = regexpArray0;
      regexp1.equals(regexp2);
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      Object object0 = new Object();
      regexp1.equals(object0);
      intArray0[1] = 3735;
      regexp1.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      Regexp[] regexpArray0 = new Regexp[1];
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-1032);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      regexp1.runes = intArray0;
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      regexp0.runes = intArray1;
      regexp1.toString();
      regexp1.flags = 0;
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.P
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "NSP6o..%$yGZ";
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = "Malayalam";
      regexp0.name = "Malayalam";
      regexp1.toString();
      regexp1.toString();
      regexp1.equals(regexp0);
      regexp0.equals("");
      regexp1.flags = (-5);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = (-16);
      regexp1.cap = 20;
      regexp1.cap = 42879;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.min = (-45);
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 1;
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
      
      Regexp.Op.values();
      int[] intArray0 = new int[2];
      intArray0[0] = 42;
      intArray0[1] = (-1328);
      regexp1.runes = intArray0;
      boolean boolean1 = regexp_Op0.isPseudo();
      String string0 = regexp1.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
      
      Object object0 = new Object();
      regexp2.equals(object0);
      Object object1 = new Object();
      boolean boolean2 = regexp0.equals(object1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      int[] intArray0 = new int[2];
      intArray0[0] = (-1855);
      intArray0[1] = 0;
      regexp1.runes = intArray0;
      regexp1.op = regexp_Op1;
      regexp1.toString();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.equals(regexp_Op0);
      regexp0.flags = 1610;
      regexp0.subs = regexpArray0;
      regexp0.flags = 1610;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 11;
      regexp0.cap = 1610;
      regexp0.min = 92;
      regexp1.equals(regexp0);
      regexp1.op = regexp_Op0;
      regexp1.maxCap();
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = 3019;
      intArray0[1] = 8492;
      intArray0[2] = 36;
      intArray0[3] = 4574;
      intArray0[4] = 1618;
      intArray0[5] = 1994;
      intArray0[6] = 817;
      intArray0[7] = 803;
      regexp0.runes = intArray0;
      String string0 = "";
      regexp0.name = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 40;
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.reinit();
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
      
      regexp1.cap = 40;
      regexp0.reinit();
      regexp2.flags = 0;
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp2.flags = 0;
      regexp0.toString();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp2.maxCap();
      Regexp.Op.valueOf("VERTICAL_BAR");
      boolean boolean1 = regexp_Op0.isPseudo();
      boolean boolean2 = regexp1.equals("VERTICAL_BAR");
      assertFalse(boolean2 == boolean1);
      
      regexp0.maxCap();
      regexp1.toString();
      assertTrue(regexp0.equals((Object)regexp2));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = ",P6kkW!PA1";
      regexp0.name = ",P6kkW!PA1";
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp1.flags = 249;
      regexp0.op = regexp_Op1;
      regexp1.cap = 1022;
      regexp1.maxCap();
      regexp1.cap = 1022;
      regexp1.min = 1451;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(")_z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.)_z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.runes = null;
      regexp0.cap = 12;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp1.equals(regexp0);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "A";
      regexp1.toString();
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("[^x00-x{10FFFF}]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.[^x00-x{10FFFF}]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.name = "-8m9qVXD)";
      regexp0.toString();
      regexp0.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.EMPTY_MATCH;
      regexp1.op = regexp_Op2;
      regexp0.reinit();
      regexp0.flags = (-1657);
      regexp1.op = regexp_Op1;
      regexp1.maxCap();
      regexp1.maxCap();
      regexp_Op1.isPseudo();
      regexp0.toString();
      regexp0.equals("(?:)");
      regexp1.equals(regexp_Op1);
      regexp1.maxCap();
      regexp0.equals(regexp1);
      regexp1.maxCap();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.maxCap();
      Regexp.Op.values();
      regexp_Op2.isPseudo();
      int int0 = regexp1.maxCap();
      assertFalse(regexp1.equals((Object)regexp0));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp.Op.values();
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-4209);
      regexp1.equals(object0);
      intArray0[1] = 233;
      regexp0.name = "|WB@Hn4`fs";
      regexp1.runes = intArray0;
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("jdj0<H[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.jdj0<H[
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-508);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.cap = (-3829);
      regexp2.reinit();
      regexp1.equals(regexp2);
      regexp1.max = (-1644);
      regexp0.flags = (-1644);
      regexp0.reinit();
      regexp1.maxCap();
      regexp0.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.maxCap();
      Regexp regexp3 = new Regexp(regexp1);
      regexp3.reinit();
      regexp3.min = 19;
      regexp3.max = 92;
      regexp3.max = 0;
      regexp0.equals(regexp3);
      regexp0.maxCap();
      regexp0.min = (-1644);
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("\b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.\b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 16;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.flags = 0;
      regexp1.equals("J[w[!Gf!Ua]gqm6");
      regexp1.cap = 16;
      regexp1.toString();
      regexp1.maxCap();
      regexp0.maxCap();
      regexp1.toString();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.valueOf("VERTICAL_BAR");
      regexp1.equals(regexp_Op1);
      regexp1.equals("VERTICAL_BAR");
      regexp_Op1.isPseudo();
      String string0 = "";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 7;
      intArray0[1] = 14;
      intArray0[2] = (-267);
      intArray0[3] = 10;
      intArray0[4] = 3556;
      intArray0[5] = (-22);
      intArray0[6] = 1184;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.op.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.CONCAT;
      regexp1.max = (-2559);
      regexp1.op = regexp_Op2;
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp0.toString();
      boolean boolean1 = regexp1.equals(regexp0.op);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      regexp0.op = regexp_Op0;
      regexp0.flags = (-332);
      regexp0.min = 44;
      regexp0.min = 2;
      regexp0.min = 0;
      regexp0.min = (-330);
      regexp_Op0.isPseudo();
      String string0 = "%Dv,@BbZOE";
      regexp0.max = (-332);
      regexp0.name = "%Dv,@BbZOE";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("cVu`nz<0;`=Z[g<Aj>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.cVu`nz<0;`=Z[g<Aj>
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.min = 11;
      regexp0.cap = 12;
      regexp0.cap = 11;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp0.op = regexp_Op1;
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp0.max = 12;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-1569);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.subs = null;
      regexp1.flags = (-24);
      regexp1.reinit();
      regexp0.name = null;
      regexp0.equals(regexp_Op0);
      regexp0.cap = 1001;
      regexp1.flags = 1001;
      regexp1.op = regexp_Op0;
      regexp1.equals(regexp0);
      String string0 = "Kk%";
      regexp0.equals("Kk%");
      String string1 = "$)ykr/>:+K)e";
      regexp0.name = "$)ykr/>:+K)e";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("cz'$M0VQADHrac<v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.cz'$M0VQADHrac<v
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      regexp0.op = regexp_Op1;
      regexp1.max = 2201;
      regexp1.toString();
      regexp0.equals(regexp1);
      regexp0.toString();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("]z?9`y#(\"S;*,w");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.]z?9`y#(\"S;*,w
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 15;
      regexp0.reinit();
      regexp0.max = 92;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.toString();
      int[] intArray0 = new int[6];
      regexp0.flags = 3713;
      intArray0[0] = 15;
      intArray0[1] = 16;
      intArray0[2] = 16;
      intArray0[3] = 92;
      intArray0[4] = 92;
      regexp1.runes = intArray0;
      intArray0[5] = 92;
      regexp1.runes = intArray0;
      regexp0.name = "";
      regexp1.min = 16;
      regexp1.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Dash");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Dash
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp_Op0.isPseudo();
      boolean boolean0 = regexp0.equals(regexp_Op0);
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[1].op = regexp_Op0;
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexpArray0[2].op = regexp_Op1;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      regexp0.maxCap();
      regexpArray0[2].flags = 0;
      regexp0.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals(regexp0);
      regexp0.toString();
      String string0 = "Kiz}-2,@jbl6f:H]";
      regexpArray0[5].op = regexpArray0[2].op;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Kiz}-2,@jbl6f:H]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Kiz}-2,@jbl6f:H]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      regexp0.reinit();
      Regexp.Op regexp_Op2 = Regexp.Op.ALTERNATE;
      Regexp regexp2 = new Regexp(regexp_Op2);
      Regexp regexp3 = new Regexp(regexp2);
      regexpArray0[7] = regexp3;
      regexpArray0[8] = regexp1;
      regexpArray0[2].subs = null;
      regexp1.subs = regexpArray0;
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      int[] intArray0 = new int[7];
      intArray0[0] = 1242;
      intArray0[1] = 4515;
      intArray0[2] = 9;
      intArray0[3] = (-320);
      intArray0[4] = (-3844);
      intArray0[5] = (-4067);
      intArray0[6] = (-79);
      regexp1.runes = intArray0;
      int[] intArray1 = new int[4];
      intArray1[0] = 15;
      intArray1[1] = 3;
      intArray1[2] = (-3391);
      intArray1[3] = 19;
      regexp1.runes = intArray1;
      regexp1.toString();
      Object object0 = new Object();
      regexp1.reinit();
      regexp0.flags = 5562;
      regexp1.equals(object0);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      Object object1 = new Object();
      boolean boolean0 = regexp0.equals(object1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.min = (-582);
      regexp2.equals("A");
      regexp2.cap = (-582);
      boolean boolean0 = regexp0.equals(regexp2);
      regexp1.max = (-582);
      boolean boolean1 = regexp2.equals("");
      assertTrue(boolean1 == boolean0);
      assertTrue(regexp2.equals((Object)regexp1));
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 244;
      regexp0.flags = 244;
      regexp0.cap = 244;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      Regexp.Op regexp_Op2 = Regexp.Op.ALTERNATE;
      Regexp regexp2 = new Regexp(regexp_Op2);
      Regexp regexp3 = new Regexp(regexp2);
      regexpArray0[7] = regexp3;
      regexpArray0[8] = regexp1;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "%seD)ubk";
      regexp0.max = (-964);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("FoZ$#@4k[x=W");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.FoZ$#@4k[x=W
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 13;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
