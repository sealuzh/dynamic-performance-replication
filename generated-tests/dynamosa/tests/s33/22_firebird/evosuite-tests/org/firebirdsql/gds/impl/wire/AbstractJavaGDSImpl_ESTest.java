/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 22:51:04 GMT 2019
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.BlobParameterBuffer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.EventHandle;
import org.firebirdsql.gds.EventHandler;
import org.firebirdsql.gds.IscBlobHandle;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.IscStmtHandle;
import org.firebirdsql.gds.IscSvcHandle;
import org.firebirdsql.gds.IscTrHandle;
import org.firebirdsql.gds.ServiceParameterBuffer;
import org.firebirdsql.gds.ServiceRequestBuffer;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.DbAttachInfo;
import org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl;
import org.firebirdsql.gds.impl.wire.BlobParameterBufferImp;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.EventHandleImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.ServiceParameterBufferImp;
import org.firebirdsql.gds.impl.wire.ServiceRequestBufferImp;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.gds.impl.wire.WireXdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractJavaGDSImpl_ESTest extends AbstractJavaGDSImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(" \"k#");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("L");
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals("L", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, (EventHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)100, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArrayInputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream(byteArrayInputStream0);
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)100, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(xdrInputStream0);
      
      int int0 = javaGDSImpl0.nextOperation(xdrInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)100, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1677721600, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-53), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArrayInputStream0);
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-53), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(bufferedInputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream(bufferedInputStream0);
      assertEquals(8, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-53), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(xdrInputStream0);
      
      int int0 = javaGDSImpl0.nextOperation(xdrInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-53), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-889192448), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(isc_db_handle_impl0.out, (XdrInputStream) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      WireXdrInputStream wireXdrInputStream0 = new WireXdrInputStream();
      assertNotNull(wireXdrInputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket((XdrOutputStream) null, wireXdrInputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(xdrOutputStream0, (XdrInputStream) null, "NONE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 0);
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_svc_handle_impl) null, 72);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(1764);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isValid());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 10);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_object(79);
      assertEquals(79, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, (int) (byte)50);
      assertEquals(79, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_object((-1));
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals((-1), isc_svc_handle_impl0.getResp_object());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_blob_id(9);
      assertEquals(9L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_blob_id((-1L));
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals((-1L), isc_svc_handle_impl0.getResp_blob_id());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 719);
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals((-1L), isc_svc_handle_impl0.getResp_blob_id());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_object((-1881185802));
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-1881185802), isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 55);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-1881185802), isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_data_len(3617);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(3617, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 1216);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(3617, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_blob_id((-2727L));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals((-2727L), isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (int) (byte)9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(679);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(679, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 28);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(679, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-1585));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-1585), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (int) (byte)9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(71);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(71, isc_db_handle_impl0.getDialect());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (-555));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(71, isc_db_handle_impl0.getDialect());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket(isc_db_handle_impl0, (DbAttachInfo) null, true, (-638), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("~0X+lsV");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("~0X+lsV", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, false, 0, (-1086));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@79098edf
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo(".U?Camb-pz\"kJ!/", (Integer) 0, "PURE_JAVA");
      assertEquals(".U?Camb-pz\"kJ!/", dbAttachInfo0.getServer());
      assertEquals(0, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, true, 1, 2062);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@79081d89
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, 0, 569);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, (-1984), 570);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1984
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, byteArray0, (-1055));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, byteArray0, 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(679);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(679, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp(0);
      assertEquals(0, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(0);
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, serviceRequestBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      ServiceParameterBuffer serviceParameterBuffer0 = javaGDSImpl0.createServiceParameterBuffer();
      assertNotNull(serviceParameterBuffer0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp(1568);
      assertEquals(1568, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceQuery((IscSvcHandle) null, serviceParameterBuffer0, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp(0);
      assertEquals(0, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(0);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBufferImp0, serviceRequestBufferImp0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(63);
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      
      try { 
        javaGDSImpl0.iscServiceAttach("oNWODt>psLv89q&jy", isc_svc_handle_impl0, (ServiceParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // service oNWODt>psLv89q&jy is not defined
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("", isc_svc_handle_impl0, serviceParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // service  is not defined
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 6, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 0, 474);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3);
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(3L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 6, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((byte) (-87));
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals((-87L), isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 53, (byte) (-87));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscQueueEvents((IscDbHandle) null, (EventHandle) null, (EventHandler) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("org.firebirdsql.gds.impl.jni.isc_db_handle_impl");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertFalse(eventHandleImp0.isValid());
      assertEquals("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(1);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals(1, eventHandleImp0.getEventCount());
      assertFalse(eventHandleImp0.isValid());
      assertEquals("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", eventHandleImp0.getEventName());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-569));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-569), isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1684322434);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(1684322434, isc_db_handle_impl0.getODSMajorVersion());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("org.firebirdsql.gds.impl.jni.isc_db_handle_impl");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals("org.firebirdsql.gds.impl.jni.isc_db_handle_impl", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = AbstractJavaGDSImpl.describe_bind_info15;
      assertEquals(13, byteArray0.length);
      assertNotNull(byteArray0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((-1067));
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[2];
      isc_blob_handle_impl0.setBlobId(114L);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(114L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-1396L));
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals((-1396L), isc_blob_handle_impl0.getBlobId());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscPrepareTransaction2((IscTrHandle) null, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, (IscBlobHandle) null, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid BLOB handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(5);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(2);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(2L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(9);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(9, isc_db_handle_impl0.getODSMinorVersion());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      int int0 = javaGDSImpl0.iscInteger((byte[]) null, 1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      int int0 = javaGDSImpl0.iscInteger((byte[]) null, 5, (-2840));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(1710);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 1710);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(3L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl0.setBlobId((-137L));
      assertEquals((-137L), isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, (-463));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[5];
      Object[] objectArray0 = new Object[0];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (-865), (byte) (-3), objectArray0);
      assertEquals(5, byteArray0.length);
      assertEquals(0, objectArray0.length);
      assertEquals(5, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 53, 0, (Object[]) null);
      assertEquals(6, byteArray0.length);
      assertEquals(6, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      Object[] objectArray0 = new Object[2];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (byte) (-2), (byte) (-111), objectArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(2, objectArray0.length);
      assertEquals(4, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[12];
      Object[] objectArray0 = new Object[2];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (byte)0, (byte) (-111), objectArray0);
      assertEquals(12, byteArray0.length);
      assertEquals(2, objectArray0.length);
      assertEquals(12, byteArray1.length);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      Object[] objectArray0 = new Object[6];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 6326, (-1913318909), objectArray0);
      assertEquals(0, byteArray0.length);
      assertEquals(6, objectArray0.length);
      assertEquals(0, byteArray1.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(2546);
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals(2546, eventHandleImp0.getEventId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts(eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.iscEventBlock((EventHandle) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = AbstractJavaGDSImpl.describe_bind_info15;
      assertEquals(13, byteArray0.length);
      assertNotNull(byteArray0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, byteArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo((IscStmtHandle) null, byteArray0, 616);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[8];
      isc_stmt_handle_impl0.setStatementType((-1721574928));
      assertEquals((-1721574928), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, byteArray0, (-399));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(1248);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(1248, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "op_sql_response ", (-1700));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 2048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(53);
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(53, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 6);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "0*<~M]}q`=FqEB~/\"%", (String) null, (-803));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, "", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, (String) null, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(11);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(11, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "2SJr&:B4", "!l,a=g|nM]8XJE9(|\"", 5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "", 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) null, "PURE_JAVA", 37);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "PURE_JAVA", 5);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-529));
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals((-529), isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, (-529));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(11);
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(11, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, (-3626));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 0, xSQLDA0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, (-2287), xSQLDA0, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 335544327, xSQLDA0, 3307);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, byteArray0, 0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (-2231), (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, 3, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, 4, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (byte[]) null, 65, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(2147483645);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(2147483645, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 797, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(2);
      assertEquals(2, xSQLDA0.sqln);
      assertEquals(2, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "BAd8~.G", (String) null, 569, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(6);
      assertEquals(1, xSQLDA0.version);
      assertEquals(6, xSQLDA0.sqld);
      assertEquals(6, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (String) null, "", 5, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(1);
      assertEquals(1, xSQLDA0.version);
      assertEquals(1, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "", "org.firebirdsql.encodings.CharacterTranslator", 0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, "jdbc:firebirdsql:java:", "7-AKrS-N", (-729), (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(600);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(600, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "org.firebirdsql.gds.impl.jni.ServiceRequestBufferImp", "org.firebirdsql.gds.impl.jni.ServiceRequestBufferImp", 378, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-1687));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-1687), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "PURE_JAVA", "PURE_JAVA", 797, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (String) null, 0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (String) null, 1, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "", 5, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2(isc_tr_handle_impl0, (IscStmtHandle) null, 2, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, isc_stmt_handle_impl0, 0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, isc_stmt_handle_impl0, (-705), xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, isc_stmt_handle_impl0, 5, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute((IscTrHandle) null, isc_stmt_handle_impl0, 713, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, 0, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[7];
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (-1694), xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(3050);
      assertEquals(3050, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertEquals(3050, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, byteArray0, 4, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(1118);
      assertEquals(1118, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertEquals(1118, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "PURE_JAVA", "PURE_JAVA", 0, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, "PURE_JAVA", "PURE_JAVA", (-672), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (String) null, "", 464, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "5A*OtUoy>", (-362), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (String) null, 0, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "", 1738, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, (-3708));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind((IscStmtHandle) null, 65);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(2568);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(2568, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 2568);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe((IscStmtHandle) null, (-1761));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(18);
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(18, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, (-547));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-747));
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals((-747), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(335544327);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(335544327, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-4067));
      assertEquals((-4067), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-8));
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-8), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(28);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(28, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-1266));
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-1266), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(51);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(51, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-2268));
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-2268), isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(1983);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(1983, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-5350));
      assertEquals((-5350), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(22);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(22, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-82));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-82), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo((IscDbHandle) null, byteArray0, (byte) (-127));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(53);
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(53, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1684322434);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(1684322434, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, byteArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(337);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(337, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateDatabase("PURE_JAVA", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-1790264235));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-1790264235), isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateDatabase("PURE_JAVA", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(550);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(550, isc_db_handle_impl0.getDialect());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("PURE_JAVA", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase((String) null, (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo(databaseParameterBufferImp0);
      assertNotNull(fBConnectionRequestInfo0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("", isc_db_handle_impl0, fBConnectionRequestInfo0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(3L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-742L));
      assertEquals((-742L), isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      BlobParameterBuffer blobParameterBuffer0 = javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBuffer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(6);
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(6, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      BlobParameterBufferImp blobParameterBufferImp0 = (BlobParameterBufferImp)javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((-681));
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertTrue(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3016L);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(3016L, isc_blob_handle_impl0.getBlobId());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, (EventHandle) null);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(1325);
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals(1325, eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", eventHandleImp0.getEventName());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals(1325, eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", eventHandleImp0.getEventName());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.calculateCount();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(2534);
      assertEquals(2534, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isCancelled());
      assertFalse(eventHandleImp0.isValid());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNotNull(eventHandleImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-569));
      assertEquals((-569), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals((-569), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(1, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(1, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion((-2089));
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-2089), isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-2089), isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, (byte)34);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd((-1));
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, (byte[]) null, 3610);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(1367L);
      assertEquals(1367L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, (byte[]) null, 3610);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase((String) null, (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1684322434);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1684322434, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase("org.firebirdsql.gds.impl.AbstractIscTrHandle", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-2511));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals((-2511), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase((String) null, isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase((DbAttachInfo) null, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(1);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(1, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("PURE_JAVA", (Integer) 2, "PURE_JAVA", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("y#-k|n~$MR,0", (Integer) isc_tr_handle_impl0.TRANSACTIONSTARTED, "", (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-1984));
      assertEquals((-1984), (int)integer0);
      assertNotNull(integer0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase((String) null, integer0, (String) null, (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("", (Integer) isc_tr_handle_impl0.NOTRANSACTION, ":c03m vb)0+,_", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(2);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(2, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-932));
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals((-932), isc_stmt_handle_impl0.getStatementType());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(305);
      assertEquals(305, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, 60);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-1385));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-1385), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1385));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(679);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(679, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-1385));
      assertEquals((-1385), isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1385));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(2478);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(2478, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(0);
      assertEquals(0, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(5);
      assertEquals(5, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("");
      assertEquals("", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, (DbAttachInfo) null, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", (Integer) 0, "B%VrG=w_!>");
      assertEquals("B%VrG=w_!>", dbAttachInfo0.getFileName());
      assertEquals(0, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message (getMessage() has thrown an exception)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-1644));
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-1644), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      Integer integer0 = new Integer((-1644));
      assertEquals((-1644), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "PURE_JAVA");
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertEquals((-1644), dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1644
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, "~DQ^ ", (Integer) 0, (String) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "", (Integer) 1, "", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_object(129);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(129, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "service_mgr", (Integer) null, "service_mgr", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_object((-150));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals((-150), isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "op_info_transaction ", (Integer) null, "rweTvtYN3", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_blob_id(1618L);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(1618L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "Can't register plugin", (Integer) null, "Can't register plugin", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_blob_id((-3248L));
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-3248L), isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "service_mgr", (Integer) null, "service_mgr", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(1803);
      assertEquals(1803, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "0)H8?@HP~E3UEY&", (Integer) null, ",", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"0)H8?@HP~E3UEY&\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-2076046145));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-2076046145), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "service_mgr", (Integer) null, "service_mgr", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(297);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(297, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "org.firebirdsql.logging.Log4jLogger", (Integer) 6, "%=n~,I!uLP=*_-.", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"org.firebirdsql.logging.Log4jLogger\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(1684322434);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(1684322434, isc_db_handle_impl0.getODSMajorVersion());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, (String) null, (Integer) 3, (String) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(1290);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(1290, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "PURE_JAVA", (Integer) null, "PURE_JAVA", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength((XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessName((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-3155));
      assertEquals((-3155), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "PURE_JAVA");
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertEquals((-3155), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, true, (-3155), 74);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-3155
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.nextOperation((XdrInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
      assertNotNull(fileDescriptor0);
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      assertNotNull(mockFileInputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream(mockFileInputStream0);
      assertFalse(fileDescriptor0.valid());
      assertNotNull(xdrInputStream0);
      
      try { 
        javaGDSImpl0.nextOperation(xdrInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(3, byteArrayInputStream0.available());
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArrayInputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream(byteArrayInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(xdrInputStream0);
      
      try { 
        javaGDSImpl0.nextOperation(xdrInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceAttach((String) null, isc_svc_handle_impl0, serviceParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob((IscBlobHandle) null, (-1086), (-1086));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, (-357), (-357));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction((IscTrHandle) null, isc_db_handle_impl0, 1L);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment((IscBlobHandle) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, (byte[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2((IscDbHandle) null, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.BlobParameterBufferImp cannot be cast to org.firebirdsql.gds.impl.wire.Xdrable
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger((byte[]) null, 5, 335544721);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment((IscBlobHandle) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, (-2414));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts((EventHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertFalse(eventHandleImp0.isValid());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts(eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, (byte[]) null, (-1624725638));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, (String) null, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "", "[%@i", 2163);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "PURE_JAVA", 1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 57);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 5, xSQLDA0, 4);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 4, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "ytB3`_zrg", 5, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "g\"<i(;Qly1;n", 6, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(4);
      assertEquals(4, xSQLDA0.sqln);
      assertEquals(4, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, 0, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(3050);
      assertEquals(3050, xSQLDA0.sqld);
      assertEquals(3050, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, xSQLDA0.blr, 4, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (String) null, (String) null, 2, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "R", "R", 3, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo((IscDbHandle) null, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 24);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateDatabase("!l,a=g|nM]8XJE9(|\"", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.BlobParameterBufferImp cannot be cast to org.firebirdsql.gds.impl.wire.Xdrable
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob((IscBlobHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo((IscBlobHandle) null, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, (byte[]) null, (-144));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      FBConnectionRequestInfo fBConnectionRequestInfo0 = new FBConnectionRequestInfo((DatabaseParameterBuffer) null);
      assertNotNull(fBConnectionRequestInfo0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscAttachDatabase("J67F:j<G&@ItSFG,D", isc_db_handle_impl0, fBConnectionRequestInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBConnectionRequestInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscAttachDatabase("8xCWb", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-1777));
      assertEquals((-1777), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "6'TAwF=");
      assertEquals((-1777), dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertEquals("6'TAwF=", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1777
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      Integer integer0 = new Integer((-1610874239));
      assertEquals((-1610874239), (int)integer0);
      assertNotNull(integer0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("PURE_JAVA", integer0, "PURE_JAVA", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1610874239
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("7q}vp bzzh", (Integer) null, "7q}vp bzzh", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1218));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect((isc_db_handle_impl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.createEventHandle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.EventHandleImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, dbAttachInfo0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(63);
      assertEquals(1, xSQLDA0.version);
      assertEquals(63, xSQLDA0.sqln);
      assertEquals(63, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[6];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertEquals(0, xSQLVAR0.sqlscale);
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqltype);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVARArray0[0];
      xSQLVARArray0[2] = xSQLVARArray0[0];
      xSQLVARArray0[3] = xSQLVARArray0[1];
      xSQLVARArray0[4] = xSQLVARArray0[0];
      xSQLVARArray0[5] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(63);
      assertEquals(63, xSQLDA0.sqld);
      assertEquals(63, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, byteArray0, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (byte[]) null, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, (byte[]) null, (-4456));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, byteArray0, 2, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, xSQLDA0.blr, 1, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, (-1178), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) null, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-732));
      assertEquals((-732), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo(".n65V 0Ky?y[", integer0, "org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp");
      assertEquals("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", dbAttachInfo0.getFileName());
      assertEquals(".n65V 0Ky?y[", dbAttachInfo0.getServer());
      assertEquals((-732), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      
      javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1385));
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.fbCancelOperation((IscDbHandle) null, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = new EventHandleImp("PURE_JAVA");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("PURE_JAVA", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      try { 
        javaGDSImpl0.iscCancelEvents((IscDbHandle) null, eventHandleImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle(")");
      assertEquals(")", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, (ServiceParameterBuffer) null, (ServiceRequestBuffer) null, byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This database handle is invalid and cannot be used anymore.
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, (ServiceRequestBuffer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This database handle is invalid and cannot be used anymore.
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp((-1834));
      assertEquals((-1834), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceStart((IscSvcHandle) null, serviceRequestBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";}OaCg2=VC");
      assertNotNull(mockFileOutputStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockFileOutputStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscServiceDetach((IscSvcHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceAttach("service_mgr", isc_svc_handle_impl0, (ServiceParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.JavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp", (IscSvcHandle) null, serviceParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(63);
      assertEquals(63, xSQLDA0.sqln);
      assertEquals(63, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertEquals(0, xSQLVAR0.sqltype);
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqlscale);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      int int0 = javaGDSImpl0.iscVaxInteger(xSQLDA0.blr, 1, 1);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      AbstractJavaGDSImpl.calculateBLR((XSQLDA) null);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertEquals(4, byteArrayInputStream0.available());
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArrayInputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream(byteArrayInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(xdrInputStream0);
      
      int int0 = javaGDSImpl0.nextOperation(xdrInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      WireXdrInputStream wireXdrInputStream0 = new WireXdrInputStream(sequenceInputStream0);
      assertNotNull(wireXdrInputStream0);
      
      isc_db_handle_impl0.in = wireXdrInputStream0;
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, (int) (byte)9);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading data from the connection.
         // null
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_db_handle_impl) null, 0);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3050);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase(" \"k#", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl0);
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 70);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 70);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(" \"k#");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      BlobParameterBuffer blobParameterBuffer0 = javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, (IscBlobHandle) null, blobParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid BLOB handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger(byteArray0, (-2414), (byte)69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2414
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      int int0 = javaGDSImpl0.iscInteger(byteArray0, 795, 795);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, 2021, 2021);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2021
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      int int0 = javaGDSImpl0.iscVaxInteger((byte[]) null, 1, (-1909));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlSetCursorName((IscStmtHandle) null, "XtZPjfl+{.ypo", 2116);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "", (-555));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertTrue(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "PF}Onp9jJ/z", "PF}Onp9jJ/z", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, "UT4cagYz@eP_bh:!7", "UT4cagYz@eP_bh:!7", 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlFreeStatement((IscStmtHandle) null, 2045);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 580, xSQLDA0, 1939);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setRsr_rdb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertTrue(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 24, xSQLDA0, (-3141));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SQLDA missing or incorrect version, or incorrect number/type of variables
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 66, (XSQLDA) null, 100);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SQLDA missing or incorrect version, or incorrect number/type of variables
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch((IscStmtHandle) null, 580, xSQLDA0, 3115);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "PURE_JAVA", "PURE_JAVA", 6, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(" \"k#");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(" \"k#");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, 4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, (byte[]) null, 3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      isc_tr_handle_impl0.setState(2);
      assertEquals(2, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      
      isc_tr_handle_impl0.setState(3);
      assertEquals(3, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      
      isc_tr_handle_impl0.setState(2);
      assertEquals(2, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      
      isc_tr_handle_impl0.setState(2);
      assertEquals(2, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      isc_tr_handle_impl0.setState(2);
      assertEquals(2, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      isc_tr_handle_impl0.setState(2);
      assertEquals(2, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setState((-2511));
      assertEquals((-2511), isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction((IscTrHandle) null, (IscDbHandle) null, 0L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, (IscDbHandle) null, (-2166L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      TransactionParameterBuffer transactionParameterBuffer0 = javaGDSImpl0.newTransactionParameterBuffer();
      assertNotNull(transactionParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, (IscDbHandle) null, transactionParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      try { 
        javaGDSImpl0.iscStartTransaction((IscTrHandle) null, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(" \"k#");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDropDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDetachDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, byteArray0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      javaGDSImpl0.addProcessName(databaseParameterBufferImp0);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer((-2034));
      assertEquals((-2034), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, "}AAO~.g2WT", (-1721), (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = isc_blob_handle_impl0.getDb();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase("", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, (TransactionParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, (IscStmtHandle) null, 10, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 80);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Object[] objectArray0 = new Object[9];
      byte[] byteArray0 = javaGDSImpl0.iscExpandDpb((byte[]) null, 795, 795, objectArray0);
      assertEquals(9, objectArray0.length);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream("PURE_JAVA");
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertNotNull(xdrOutputStream0);
      
      isc_db_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("ELGs/@X_Mb9t");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("ELGs/@X_Mb9t", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("ELGs/@X_Mb9t", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-1031));
      assertEquals((-1031), (int)integer0);
      assertNotNull(integer0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, "hj$~34wq0!KIX&x", integer0, ":g.c", databaseParameterBufferImp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1031
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      javaGDSImpl0.addProcessId(databaseParameterBuffer0);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("ELGs/@X_Mb9t");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("ELGs/@X_Mb9t", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventCounts(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("ELGs/@X_Mb9t", eventHandleImp0.getEventName());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("ELGs/@X_Mb9t", eventHandleImp0.getEventName());
      assertEquals(0, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(1);
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
      
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessId((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      AbstractJavaGDSImpl.EventCoordinatorImp abstractJavaGDSImpl_EventCoordinatorImp0 = null;
      try {
        abstractJavaGDSImpl_EventCoordinatorImp0 = javaGDSImpl0.new EventCoordinatorImp(0, "PURE_JAVA", 0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("[%@i");
      assertEquals("[%@i", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals("[%@i", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandleImp eventHandleImp1 = abstractJavaGDSImpl_EventGlob0.getEventHandle();
      assertEquals("[%@i", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp1.getLocalId());
      assertEquals("[%@i", eventHandleImp1.getEventName());
      assertEquals((-1), eventHandleImp1.getEventCount());
      assertEquals((-1), eventHandleImp1.getEventId());
      assertSame(eventHandleImp0, eventHandleImp1);
      assertSame(eventHandleImp1, eventHandleImp0);
      assertNotNull(eventHandleImp1);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("org.firebirdsql.event.FBEventManager$EventDispatcher");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("org.firebirdsql.event.FBEventManager$EventDispatcher", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("org.firebirdsql.event.FBEventManager$EventDispatcher", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandler eventHandler1 = abstractJavaGDSImpl_EventGlob0.getEventHandler();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("org.firebirdsql.event.FBEventManager$EventDispatcher", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertSame(eventHandler1, eventHandler0);
      assertNotNull(eventHandler1);
  }
}
