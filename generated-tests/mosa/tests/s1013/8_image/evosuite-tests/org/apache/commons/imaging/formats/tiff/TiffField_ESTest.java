/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:33:01 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals("20 (0x14: Unknown Tag): 0, 0, 0, 0, 0 (20 SShort)", string0);
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[164];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(140, 140, fieldTypeFloat0.DOUBLE, 140, 140, byteArray0, byteOrder0, 140);
      String string0 = tiffField0.toString();
      assertEquals(140, tiffField0.getDirectoryType());
      assertEquals(140, tiffField0.getOffset());
      assertEquals(140, tiffField0.getSortHint());
      assertEquals("140 (0x8c: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (140 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20L, tiffElement0.offset);
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(20, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-560), 1353, fieldTypeFloat0, (-560), (-560), byteArray0, byteOrder0, 1353);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1353, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1353, tiffField0.getDirectoryType());
      assertEquals((-560), tiffField0.getTag());
      assertEquals((-560), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-45), fieldTypeFloat0, (byte) (-45), (byte) (-45), byteArray0, byteOrder0, (byte) (-45));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-45), tiffField0.getTag());
      assertEquals((-45), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-45), tiffField0.getOffset());
      assertEquals((-45), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[331];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeDouble0, 62, 62, byteArray0, byteOrder0, 62);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[51];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeFloat0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)9, (byte)9);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals("20 (0x14: Unknown Tag): ", string0);
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 20, byteArray0, byteOrder0, 20);
      tiffField0.getFieldTypeName();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(38, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeFloat0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(9L, tiffField0.getCount());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[379];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeDouble0, 68, 68, byteArray0, byteOrder0, 68);
      tiffField0.getDoubleArrayValue();
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(544, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeByte0, 42, 42, byteArray0, byteOrder0, 5);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4ff7d680 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeFloat0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      tiffField0.dump();
      assertEquals(90, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(360, tiffField0.getBytesLength());
      assertEquals(90L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeShort0, 22, 22, byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[40];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeAscii0, 13, 13, byteArray0, byteOrder0, 13);
      tiffField0.toString();
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13L, tiffField0.getCount());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeRational0, (byte)9, (byte)9, byteArray0, byteOrder0, 50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(9L, tiffField0.getCount());
      assertEquals(9, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[40];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeAscii0, 13, 13, byteArray0, byteOrder0, 13);
      int int0 = tiffField0.getSortHint();
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (65535 IFD)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeFloat0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)90, (byte)90);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(90, tiffField0.getOffset());
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(90, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntArrayValue();
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeLong0, 37, 37, byteArray0, byteOrder0, 37);
      tiffField0.getIntArrayValue();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getTag());
      assertEquals(148, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeShort0, 32, 32, byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getTagName();
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x20)", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeFloat0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@50aa449b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1390, 1390, fieldTypeRational0, 1390, 1390, byteArray0, byteOrder0, (-1373));
      tiffField0.getIntArrayValue();
      System.setCurrentTimeMillis((byte) (-65));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.getByteArrayValue();
      assertEquals(1390L, tiffField0.getCount());
      assertEquals(1390, tiffField0.getTag());
      assertEquals(1390, tiffField0.getOffset());
      assertEquals((-1373), tiffField0.getSortHint());
      assertEquals(11120, tiffField0.getBytesLength());
      assertEquals(1390, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeRational0, 4L, 4L, byteArray0, byteOrder0, (-849));
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)84, (byte)84, fieldTypeFloat0, (byte)84, (byte)84, byteArray0, byteOrder0, (byte)84);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@365f59d1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeByte0, 42, 42, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.toString();
      assertEquals(42, tiffField0.getBytesLength());
      assertEquals("42 (0x2a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (42 SByte)", string0);
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getIntValueOrArraySum();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@26349c64
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(42112, (-2621), fieldTypeFloat0, (-2621), (-2621), byteArray0, byteOrder0, 42112);
      String string0 = tiffField0.getTagName();
      assertEquals("GDALMetadata", string0);
      assertEquals((-2621), tiffField0.getDirectoryType());
      assertEquals(42112, tiffField0.getSortHint());
      assertEquals(42112, tiffField0.getTag());
      assertEquals((-2621), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeFloat0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)9, (String) null);
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeRational0, 5014L, (byte)9, byteArray0, byteOrder0, (byte)9);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 50216, fieldTypeLong0, 50216, 26, byteArray0, byteOrder0, 26);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(200864, tiffField0.getBytesLength());
      assertEquals(50216L, tiffField0.getCount());
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[336];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeLong0, (byte)28, 3, byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      tiffField0.getValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(28, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[51];
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 8, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeAscii0, 3868L, 3235L, byteArray0, byteOrder0, 33);
      tiffField0.toString();
      assertEquals(3235, tiffField0.getOffset());
      assertEquals(3868, tiffField0.getBytesLength());
      assertEquals(3868L, tiffField0.getCount());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[131];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, (byte)90, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertFalse(tiffField0.isLocalValue());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("1 (0x1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (90) (90 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, 396L, 396L, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(396, tiffField0.getOffset());
      assertEquals(396L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(792, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(4735, 4735, fieldTypeFloat0, 4735, 4735, byteArray0, byteOrder0, 4735);
      String string0 = tiffField0.toString();
      assertEquals("4735 (0x127f: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (4735 Float)", string0);
      assertEquals(4735, tiffField0.getSortHint());
      assertEquals(4735, tiffField0.getDirectoryType());
      assertEquals(4735, tiffField0.getOffset());
      assertEquals(18940, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[391];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(92, 3579, fieldTypeLong0, 3579, 3579, byteArray0, byteOrder0, 92);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3579, tiffField0.getOffset());
      assertEquals(3579L, tiffField0.getCount());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getTag());
      assertEquals(3579, tiffField0.getDirectoryType());
      assertEquals(14316, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1609), 763, fieldTypeDouble0, 2478L, 2478L, byteArray0, byteOrder0, (-1609));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2478, tiffField0.getOffset());
      assertEquals((-1609), tiffField0.getSortHint());
      assertEquals(19824, tiffField0.getBytesLength());
      assertEquals((-1609), tiffField0.getTag());
      assertEquals(763, tiffField0.getDirectoryType());
      assertEquals(2478L, tiffField0.getCount());
      assertNotNull(string0);
  }
}
