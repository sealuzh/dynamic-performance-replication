/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 17:46:15 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.JSONScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FilterInputStream;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.PushbackReader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.net.URI;
import java.nio.charset.Charset;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONLexerBase_ESTest extends JSONLexerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3476);
      jSONReaderScanner0.matchStat = 1893;
      jSONReaderScanner0.scanInt('C');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithChar('C');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match C - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2957);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      assertEquals((-2), jSONReaderScanner0.matchStat);
      
      JSONScanner jSONScanner0 = new JSONScanner("KK)o;rYu[y]9q9U");
      jSONScanner0.scanFieldBoolean(charArray0);
      assertEquals(989, jSONScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("Unknown");
      jSONScanner0.putChar(']');
      assertEquals(989, jSONScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      jSONScanner0.matchField2(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon((int) 'l');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u001A, info : pos 0, json : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONScanner.checkDate('?', '?', '?', '?', '?', '?', 1510, 0);
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, 0);
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.close();
      assertEquals(0, jSONReaderScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = ':';
      JSONScanner jSONScanner0 = new JSONScanner("AO=w\"S:>}&CwCABQV5");
      jSONScanner0.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(57);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - A, info : pos 0, json : AO=w\"S:>}&CwCABQV5
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("X");
      char[] charArray0 = new char[3];
      jSONScanner0.isRef();
      // Undeclared exception!
      try { 
        jSONScanner0.integerValue();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      // Undeclared exception!
      try { 
        jSONScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      // Undeclared exception!
      try { 
        jSONScanner0.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      char[] charArray0 = new char[6];
      JSONScanner jSONScanner0 = new JSONScanner("8&WH]@D@]<uZ3Vfg8FL", (-2447));
      jSONScanner0.scanFieldInt(charArray0);
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONScanner0.token();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-214748364);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal.char", (-214748364));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.doubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal ientifier : ");
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanDecimal('V');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = "MY<5SW";
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("MY<5SW", 19);
      int int0 = 0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0, 0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(0);
      SymbolTable symbolTable0 = new SymbolTable(100);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : \u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"", (-1205));
      jSONReaderScanner0.scanDouble('%');
      jSONReaderScanner0.longValue();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      int int0 = 163;
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 113);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "g(iQ84|lfaiS;<v9D}";
      JSONScanner jSONScanner0 = new JSONScanner("g(iQ84|lfaiS;<v9D}");
      // Undeclared exception!
      try { 
        jSONScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. g
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 'f');
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('f');
      char[] charArray1 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner(", ");
      jSONScanner0.scanFieldFloat(charArray1);
      jSONScanner0.tokenName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 123);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("error parse null or new");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1132);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("error parse null or new", 0);
      jSONReaderScanner1.scanFloat('U');
      jSONReaderScanner2.nextToken((-406));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1GTxY-6R@k'6-VzWC[", 43);
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.scanString('S');
      Feature feature0 = Feature.InitStringFieldAsEmpty;
      jSONReaderScanner0.isEnabled(feature0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("\"[iGcK&Q*BG@[g");
      jSONScanner0.longValue();
      jSONScanner0.scanLong('f');
      // Undeclared exception!
      try { 
        jSONScanner0.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'r';
      int int0 = 0;
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0);
      jSONScanner0.longValue();
      jSONScanner0.scanString();
      int int1 = jSONScanner0.scanInt(charArray0[0]);
      jSONScanner0.copyTo(int0, int0, charArray0);
      jSONScanner0.longValue();
      jSONScanner0.scanString(charArray0[0]);
      SymbolTable symbolTable0 = new SymbolTable(int1);
      int int2 = 92;
      int int3 = (-797);
      symbolTable0.addSymbol(charArray0, int0, int2, int3);
      char char0 = '.';
      jSONScanner0.scanSymbol(symbolTable0, char0);
      jSONScanner0.scanFieldString(charArray0);
      jSONScanner0.integerValue();
      jSONScanner0.skipWhitespace();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 1670);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanBoolean('@');
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("", (-1319));
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("treeset");
      SymbolTable symbolTable0 = new SymbolTable(281);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed str", 0);
      jSONScanner0.scanLong('-');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("undefined");
      jSONReaderScanner0.scanFloat('|');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanStringArray((Collection<String>) null, 'i');
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(2);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("^j\",&!8");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6=,5Um=r66Hh@", 11);
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '1';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextToken(356);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("EOF", 19);
      jSONReaderScanner0.scanLong('W');
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner0.setToken(19);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" - ");
      jSONReaderScanner0.nextToken(31);
      jSONReaderScanner0.isEnabled((-1718), 31);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" - ");
      jSONReaderScanner1.getCalendar();
      HashSet<String> hashSet0 = new HashSet<String>();
      jSONReaderScanner1.scanStringArray(hashSet0, '_');
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", (-2212));
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('f');
      jSONReaderScanner0.nextToken(84);
      jSONReaderScanner0.nextToken((-2212));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6s=,5Um=r66Hh@", 2);
      jSONReaderScanner0.scanLong('b');
      jSONReaderScanner0.scanType("Set");
      jSONReaderScanner0.scanFloat('b');
      jSONReaderScanner0.nextToken((-1));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      charArray0[2] = 'X';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0);
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.sbuf = charArray0;
      CharArrayReader charArrayReader0 = new CharArrayReader(jSONScanner0.sbuf);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, Integer.MAX_VALUE);
      jSONReaderScanner0.scanLong('6');
      jSONReaderScanner0.scanDouble('e');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("Feature.AllowSingleQuotes is false", 50);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 117);
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanDouble('\"');
      jSONReaderScanner0.scanDate('\"');
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("^j\",&!8");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6=,5Um=r66Hh@", 11);
      jSONReaderScanner0.scanLong('b');
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanFloat('b');
      jSONReaderScanner0.scanDouble('=');
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6s=,5Um=r66Hh@", 29);
      jSONReaderScanner0.scanLong('b');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("6s=,5Um=r66Hh@", 'b');
      jSONReaderScanner0.scanDouble('b');
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[19];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gm;f8");
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '3');
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanDouble('v');
      jSONReaderScanner0.scanDate('B');
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ");
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.scanBoolean('4');
      jSONReaderScanner0.bytesValue();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 266);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFloat('>');
      jSONReaderScanner0.nextToken(18);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, 115);
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      char[] charArray1 = new char[1];
      charArray1[0] = '.';
      JSONScanner jSONScanner0 = new JSONScanner("illegam", 296);
      jSONScanner0.nextToken();
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0, 296);
      jSONScanner1.scanFieldFloatArray(charArray1);
      jSONScanner0.scanFieldFloatArray2(charArray1);
      jSONScanner0.scanFieldDouble(charArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("EOF", 19);
      jSONReaderScanner0.scanLong('}');
      jSONReaderScanner0.scanType("EOF");
      jSONReaderScanner0.scanFloat('X');
      jSONReaderScanner0.nextToken((-2));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0, 0);
      jSONScanner1.scanUUID('P');
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[2];
      char[] charArray1 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 261);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("unclosed jsonArray", 7);
      jSONReaderScanner1.scanFieldBoolean(charArray1);
      jSONReaderScanner1.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONScanner jSONScanner0 = new JSONScanner(":$=`@edmKP5pI");
      jSONScanner0.getFeatures();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(":$=`@edmKP5pI");
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextToken(989);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      jSONReaderScanner0.intValue();
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner0.scanFieldDouble(charArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      char[] charArray0 = new char[6];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 58);
      jSONReaderScanner1.scanFieldFloatArray(charArray0);
      jSONReaderScanner1.scanFieldDate(charArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      jSONReaderScanner0.ch = 'U';
      jSONReaderScanner0.features = 0;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(48);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3476);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 92);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("*~8W", 0);
      jSONReaderScanner0.sp = 0;
      jSONReaderScanner1.scanType("Set");
      jSONReaderScanner1.scanFloat('4');
      char[] charArray0 = new char[0];
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      char[] charArray1 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner2.scanFieldLong(charArray1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("g(iQ84|lfaiS;<v9D}");
      JSONScanner.checkDate('6', '6', '6', '6', '\'', '\'', 0, (-1051));
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      SymbolTable symbolTable0 = new SymbolTable(3050);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray((char[]) null, Integer.MAX_VALUE, symbolTable0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3", 'W');
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('W');
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("8g]eyY<4$");
      jSONReaderScanner1.isBlankInput();
      JSONScanner jSONScanner0 = new JSONScanner("b", 158);
      jSONScanner0.scanUUID('W');
      jSONScanner0.scanFieldSymbol(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.numberString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[2] = '3';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 117);
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanDouble('\"');
      jSONReaderScanner0.scanDate('~');
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "illegal identifier : ";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m]Hq");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state. ", 9);
      jSONReaderScanner0.pos();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3n}@");
      jSONReaderScanner0.scanFloat('E');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"bGXz5QU/#zGZD0");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"bGXz5QU/#zGZD0");
      char char0 = 'V';
      jSONReaderScanner0.scanDecimal('V');
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, (-2), (-2));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('V');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      char[] charArray1 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 261);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.nextToken(261);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      jSONReaderScanner0.features = 0;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken((-1658));
      jSONReaderScanner0.nextToken(2372);
      JSONScanner jSONScanner0 = new JSONScanner("illegal identifier : ");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("O\"ej0>lm{");
      char[] charArray0 = new char[9];
      jSONReaderScanner0.stringDefaultValue = "O\"ej0>lm{";
      charArray0[0] = 'b';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java.time.LocalDate");
      charArray0[2] = '|';
      charArray0[2] = '|';
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken((int) 'b');
      jSONReaderScanner0.scanDecimal('b');
      Class<Object> class0 = Object.class;
      SymbolTable symbolTable0 = new SymbolTable(93);
      // Undeclared exception!
      jSONReaderScanner0.scanEnum(class0, symbolTable0, 'b');
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONScanner.checkDate('?', 'o', 'o', '?', 'o', 'o', 1510, 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(", 114);
      jSONReaderScanner0.nextToken((-1719546037));
      jSONReaderScanner0.nextToken(1510);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      JSONScanner jSONScanner0 = new JSONScanner("Set");
      jSONScanner0.longValue();
      Feature feature0 = Feature.CustomMapDeserializer;
      jSONScanner0.config(feature0, true);
      jSONScanner0.scanLong('f');
      jSONScanner0.nextIdent();
      int int0 = Calendar.UNDECIMBER;
      jSONScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("e", 2);
      jSONReaderScanner0.token();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("6=,5Um=r66Hh@");
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      jSONScanner0.nextToken(20);
      jSONScanner0.scanFieldDate(charArray0);
      jSONScanner0.scanFieldDecimal(charArray0);
      jSONScanner0.floatValue();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("U", 20);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("6=,5Um=r66Hh@");
      jSONReaderScanner1.scanIdent();
      jSONReaderScanner1.decimalValue();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 41, 20);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('F');
      jSONReaderScanner0.scanDate('`');
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(20);
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      char[] charArray1 = new char[1];
      charArray1[0] = '.';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 261);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFloat('.');
      jSONReaderScanner0.nextToken(261);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.resetStringPosition();
      JSONScanner jSONScanner0 = new JSONScanner("null");
      jSONScanner0.isRef();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("null");
      JSONScanner jSONScanner1 = new JSONScanner("null");
      jSONScanner0.nextIdent();
      jSONReaderScanner0.scanLong('u');
      jSONScanner0.scanInt('|');
      jSONScanner0.scanDouble('|');
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6s=,5AUm=r66Hh@", 29);
      jSONReaderScanner0.scanLong('b');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("6s=,5AUm=r66Hh@", 'b');
      jSONReaderScanner0.nextToken(14);
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      JSONScanner jSONScanner0 = new JSONScanner("com.alibaba.fastjson.parser.DefaultJSONParser");
      jSONScanner0.getFeatures();
      jSONReaderScanner0.decimalValue(false);
      jSONReaderScanner0.isEnabled(0);
      jSONReaderScanner0.longValue();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("com.alibaba.fastjson.parser.DefaultJSONParser");
      jSONReaderScanner2.scanDate('}');
      jSONReaderScanner1.isEOF();
      jSONReaderScanner0.matchField(charArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("%Q=V%1AX5U^LJz3wi", (-1142));
      jSONScanner0.nextIdent();
      StringReader stringReader0 = new StringReader("%Q=V%1AX5U^LJz3wi");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("V]");
      jSONReaderScanner0.scanLong('?');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null or new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSONScanner jSONScanner0 = new JSONScanner("");
      jSONScanner0.skipWhitespace();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSONScanner0.isBlankInput();
      Feature feature0 = Feature.AllowSingleQuotes;
      jSONScanner0.config(feature0, true);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("$&6j!,;{c");
      jSONScanner0.scanDate('q');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JSONScanner jSONScanner1 = new JSONScanner("$&6j!,;{c", 1213);
      jSONReaderScanner0.scanDecimal('q');
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[11];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3n}@");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 78);
      StringReader stringReader0 = new StringReader("TreeSet");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 659);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(lineNumberReader0, 78);
      char[] charArray1 = new char[2];
      charArray1[0] = 'M';
      jSONReaderScanner2.scanFieldDouble(charArray1);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner3.scanFloat('X');
      jSONReaderScanner2.nextToken((int) 'M');
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("wheW%`4", 4096);
      jSONScanner0.nextIdent();
      jSONScanner0.scanInt('T');
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      jSONScanner0.charArrayCompare(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 102);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(102);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'f';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(37);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2");
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      JSONLexerBase.readString(charArray0, 0);
      JSONScanner jSONScanner0 = new JSONScanner("unclosed.str.lit");
      jSONReaderScanner0.scanFloat('o');
      jSONScanner0.next();
      Locale locale0 = Locale.ENGLISH;
      jSONScanner0.setLocale(locale0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 261);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("error parse null or new", 1779);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONScanner.checkDate('?', 'o', 'o', '?', 'o', 'o', 1510, 0);
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(", 114);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("ul=a@6822%GTBwg[Y");
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner1.sub_chars(0, 114);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      char[] charArray0 = new char[7];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ", ");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3n}@", 2);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('.');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(2);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanEnum(class0, (SymbolTable) null, '+');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("mJg-aQ7Rm/r<", (-1831));
      jSONReaderScanner0.indexOf('~', 132);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.getCalendar();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      char[] charArray0 = new char[7];
      charArray0[1] = 'N';
      jSONReaderScanner0.scanFieldString(charArray0);
      charArray0[1] = 'N';
      jSONReaderScanner0.resetStringPosition();
      JSONScanner jSONScanner0 = new JSONScanner("", 'N');
      char[] charArray1 = new char[0];
      jSONScanner0.scanFieldBigInteger(charArray1);
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanLong('N');
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      jSONReaderScanner0.resetStringPosition();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.getTimeZone();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("MY<5SW", '?');
      jSONReaderScanner0.nextToken(9);
      JSONScanner jSONScanner0 = new JSONScanner(", info : ", 0);
      jSONScanner0.matchField(charArray0);
      jSONScanner0.scanISO8601DateIfMatch();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      char[] charArray1 = new char[1];
      charArray1[0] = '.';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 261);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner(" is not a primitive type");
      jSONReaderScanner0.nextToken(261);
      jSONReaderScanner0.isEnabled(0);
      jSONScanner0.matchField(charArray1);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - i, info : pos 1, json :  is not a primitive type
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "%Q=V\\%1AX5\\U^LJz3wi";
      int int0 = (-1142);
      JSONScanner jSONScanner0 = new JSONScanner(", info : ", (-1142));
      jSONScanner0.nextIdent();
      jSONScanner0.scanInt('-');
      char[] charArray0 = null;
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner((char[]) null, (-1142), 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("6=,5Um=r66Hh@");
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      charArray0[2] = '?';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3053);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.scanDecimal('`');
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illegaM identifier : ");
      jSONScanner0.scanFloat('J');
      jSONScanner0.isBlankInput();
      jSONScanner0.nextIdent();
      int int0 = Calendar.SUNDAY;
      jSONScanner0.getCurrent();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 1094);
      jSONReaderScanner0.nextToken(8);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("2");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(1094);
      jSONReaderScanner0.scanDouble('V');
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONScanner.checkDate('?', '?', '?', '?', '?', '?', 1510, 0);
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, 0);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken((-1533));
      JSONScanner jSONScanner0 = new JSONScanner("wSE(G{W5];", 31);
      jSONScanner0.nextIdent();
      jSONReaderScanner0.getLocale();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      JSONScanner jSONScanner0 = new JSONScanner("E-{B+9/K");
      JSONScanner.checkDate('l', 'l', ',', 'f', 'f', 'E', 0, 0);
      jSONScanner0.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.nextToken((-2));
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner1.np = 1;
      jSONScanner1.scanISO8601DateIfMatch();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 559);
      jSONReaderScanner0.scanFloat('@');
      jSONReaderScanner0.nextToken((-4025));
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new");
      jSONReaderScanner0.scanUUID('d');
      jSONReaderScanner0.subString(102, 102);
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy((-86), charArray0, 17, 40);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      char[] charArray0 = new char[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "true");
      charArray0[0] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("undefined", 1173);
      jSONScanner0.nextToken(1173);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 92);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("*~}Z", 0);
      jSONReaderScanner0.sp = 0;
      jSONReaderScanner1.scanType("Set");
      jSONReaderScanner1.scanFloat('4');
      jSONReaderScanner0.nextToken(1718);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", (-376));
      jSONReaderScanner0.resetStringPosition();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("new", 2);
      jSONReaderScanner1.scanLong('1');
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner1.nextToken(2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("S.", 'D');
      jSONReaderScanner0.nextToken(78);
      char[] charArray0 = new char[5];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 23);
      jSONReaderScanner0.intValue();
      jSONReaderScanner1.scanFieldFloat(charArray0);
      jSONReaderScanner1.scanDouble('2');
      jSONReaderScanner1.scanDate('D');
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 50);
      jSONReaderScanner0.intValue();
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(50);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-28);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 9);
      jSONReaderScanner0.intValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("not close json text, token : ");
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken((int) (byte) (-28));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      char[] charArray0 = new char[5];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("2Gs2ugf\"Z|-5*>L");
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.isEnabled(10);
      jSONScanner0.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - 2, info : pos 0, json : 2Gs2ugf\"Z|-5*>L
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("trreeset");
      JSONScanner jSONScanner1 = new JSONScanner("kb`");
      jSONScanner1.scanBoolean('3');
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      JSONLexerBase.readString(charArray0, 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 5);
      jSONReaderScanner0.scanFloat('U');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 77);
      jSONReaderScanner0.scanFloat('U');
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6s=,5Um=r66Hh@", 2);
      jSONReaderScanner0.scanLong('b');
      jSONReaderScanner0.scanType("Set");
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[4] = 'b';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 2);
      jSONReaderScanner1.scanType(">P<>U");
      jSONReaderScanner0.scanFloat('b');
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner1.next();
      JSONScanner jSONScanner0 = new JSONScanner("{;S4'\"F1[LuPJp", 46);
      jSONScanner0.scanISO8601DateIfMatch();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" - ", 19);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(2);
      Class<FilterInputStream> class0 = FilterInputStream.class;
      jSONReaderScanner0.scanEnum(class0, (SymbolTable) null, '+');
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"ak|P#W");
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '|';
      charArray0[2] = 'b';
      Locale locale0 = Locale.KOREA;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("xlO.[Wvi_e^*|K3", 4729);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken(19);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. l
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed str");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(", ", (-2093));
      jSONReaderScanner1.scanFloat('f');
      jSONReaderScanner0.nextToken(6);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      char[] charArray0 = new char[7];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(2);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("TreeSet");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(2942);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" - ", 19);
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner0.nextToken(19);
      jSONReaderScanner0.isEOF();
      JSONScanner jSONScanner0 = new JSONScanner("illegaM", (-2));
      jSONScanner0.nextToken(19);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3n}@");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 78);
      StringReader stringReader0 = new StringReader("TreeSet");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 659);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(lineNumberReader0, 78);
      char[] charArray1 = new char[2];
      charArray1[0] = 'M';
      jSONReaderScanner0.matchStat = (int) 'M';
      jSONReaderScanner2.scanFieldDouble(charArray1);
      jSONReaderScanner0.scanFieldInt(charArray1);
      jSONReaderScanner0.scanFieldBoolean(charArray1);
      jSONReaderScanner0.nextToken(78);
      jSONReaderScanner2.matchStat();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      char[] charArray0 = new char[5];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextToken(356);
      jSONReaderScanner0.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-1);
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8HRa$[C;=", (byte) (-1));
      char char0 = 'H';
      jSONReaderScanner0.scanFloat('H');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner1.scanFieldFloatArray2(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2);
      Locale locale0 = Locale.CANADA;
      jSONReaderScanner0.setLocale(locale0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      jSONReaderScanner0.ch = 'U';
      jSONReaderScanner0.features = 0;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanLong('W');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken((-2447));
      jSONReaderScanner0.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 99999);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFloat('4');
      jSONReaderScanner0.nextToken(99999);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONScanner jSONScanner0 = new JSONScanner("set");
      jSONScanner0.isRef();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol((SymbolTable) null, '\"');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("wheW%`4", 4096);
      jSONScanner0.longValue();
      Feature feature0 = Feature.SupportArrayToBean;
      jSONScanner0.config(feature0, false);
      JSONScanner jSONScanner1 = new JSONScanner(".8}FB\"F");
      jSONScanner1.scanLong('T');
      int int0 = Calendar.UNDECIMBER;
      jSONScanner1.isEOF();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 16);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanFieldStringArray(charArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 'f');
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.nextToken(16);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 'f');
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner0.nextToken(16);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "syntax error :");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error :", (-1158));
      jSONReaderScanner0.scanFloat('[');
      char[] charArray0 = new char[7];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[6] = '[';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 690);
      jSONReaderScanner1.scanFieldBoolean(charArray0);
      jSONReaderScanner1.nextToken(16);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illegaM");
      jSONScanner0.scanBoolean('i');
      jSONScanner0.longValue();
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      jSONScanner0.matchField2(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(1173);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - l, info : pos 1, json : illegaM
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 'f');
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('f');
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("true");
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner1.nextToken((-1));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("trreeset");
      jSONScanner0.scanBoolean('\\');
      jSONScanner0.scanISO8601DateIfMatch();
      SymbolTable symbolTable0 = new SymbolTable(281);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("trreeset", 84);
      jSONReaderScanner0.scanLong('\\');
      int int0 = Calendar.SHORT_FORMAT;
      jSONReaderScanner0.scanFloat('%');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(544);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("com.alibaba.fastjson.parser.JSONLexerBase");
      SymbolTable symbolTable0 = new SymbolTable(31);
      JSONScanner jSONScanner1 = new JSONScanner("\"bGXz5QU/#zGZD0", 13);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("k}Gz9pV");
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONScanner1.scanBoolean('<');
      jSONScanner0.scanFieldFloatArray2(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner1.scanUUID('!');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 26, 26);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('9');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char[] charArray0 = new char[5];
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SymbolTable symbolTable0 = new SymbolTable(1511);
      int int0 = 110;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("XSP3uM]ND\"V{53I");
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      jSONReaderScanner0.setTimeZone(timeZone0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '+';
      int int0 = 356;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '+');
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("2Gs2ugf\"Z|-5*>L");
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.isEnabled(10);
      jSONScanner0.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - 2, info : pos 0, json : 2Gs2ugf\"Z|-5*>L
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\":\"", (-2212));
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('1');
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(161);
      jSONReaderScanner0.nextToken(960);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      JSONScanner jSONScanner0 = new JSONScanner("Set");
      jSONScanner0.longValue();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set", (-3669));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("}#Ts' w{IN<uLAL");
      char[] charArray0 = new char[2];
      charArray0[0] = 'f';
      charArray0[1] = 'f';
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner1.nextToken((-3669));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '1';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("2Gs2ugf\"Z|-5*>L");
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.isEnabled(10);
      jSONReaderScanner0.longValue();
      jSONScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.nextToken((-2));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      SymbolTable symbolTable0 = new SymbolTable(1510);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/0j{b@4", 1510);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("9q3zmp~n!P;5zR[^_k");
      jSONReaderScanner1.scanLong('H');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("/0j{b@4");
      jSONReaderScanner2.scanFloat('f');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 91);
      jSONReaderScanner0.scanFloat('t');
      JSONScanner jSONScanner1 = new JSONScanner("plQ6");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("unlosed", (-1366));
      jSONReaderScanner0.scanFloat('y');
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner2.nextToken(13);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("]//4Zk&drIttCVi7@", (byte)0);
      jSONReaderScanner0.scanFloat('t');
      jSONReaderScanner0.skipComment();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("%51jqB");
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = '7';
      charArray0[1] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-1036L));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0, 12);
      jSONReaderScanner0.nextToken(12);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, (-2));
      jSONReaderScanner1.scanFieldDate(charArray0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"ak|P#W");
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 516, (-761));
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanLong('1');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("]yF", 516);
      jSONReaderScanner0.scanLong('1');
      jSONReaderScanner1.scanFloat('L');
      jSONReaderScanner2.nextToken((-1));
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      JSONScanner jSONScanner0 = new JSONScanner("> ^To,2$kn", 15);
      char[] charArray0 = new char[3];
      charArray0[0] = 'U';
      charArray0[1] = ']';
      charArray0[2] = 'U';
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.nextToken();
      jSONScanner0.scanBoolean('U');
      SymbolTable symbolTable0 = new SymbolTable(92);
      jSONScanner0.scanSymbol(symbolTable0, 'o');
      jSONScanner0.skipWhitespace();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      char[] charArray1 = new char[1];
      charArray1[0] = '.';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 516, 23);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("unlosed Yr");
      jSONReaderScanner1.scanLong('-');
      jSONReaderScanner1.scanDate('.');
      jSONReaderScanner1.scanFieldBoolean(charArray1);
      jSONReaderScanner1.nextToken(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextTokenWithChar('.');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match . - Y, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[2] = '|';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '|', '|');
      jSONReaderScanner0.nextToken(12);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, '|', 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = '7';
      charArray0[1] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-1036L));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      lineNumberReader0.mark(490);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanLong('E');
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.nextToken(490);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"bGXz5QU/#zGZD0", 56320);
      jSONReaderScanner0.setToken(2628);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"bGXz5QU/#zGZD0", (-1805));
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanType("java.time.Instant");
      jSONReaderScanner0.scanFloat('!');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(20);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      charArray0[3] = '8';
      charArray0[4] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 99999);
      jSONReaderScanner0.scanFloat('8');
      jSONReaderScanner0.nextToken(99999);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      char[] charArray1 = new char[1];
      charArray1[0] = '.';
      int int0 = 261;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 261);
      jSONReaderScanner0.nextTokenWithChar('.');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("]//4Zk&drIttCVi7@", 83);
      jSONReaderScanner0.scanLong('6');
      JSONScanner jSONScanner0 = new JSONScanner(" is not a primitive type");
      jSONReaderScanner0.nextToken(65536);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(",x3!vFdFkphY");
      jSONReaderScanner1.isEnabled((int) (byte) (-1));
      jSONScanner0.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon((-190350453));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - s, info : pos 2, json :  is not a primitive type
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      jSONScanner0.scanBoolean('8');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("jtYZ}Y");
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 120);
      jSONReaderScanner1.nextToken((-771));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo((-2553), (-771), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("treeset");
      jSONScanner0.scanBoolean('O');
      SymbolTable symbolTable0 = new SymbolTable(249);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed str", (-1));
      jSONReaderScanner0.scanFloat('O');
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        jSONScanner0.scanFieldBigInteger((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 2);
      char[] charArray0 = new char[7];
      charArray0[1] = '?';
      jSONReaderScanner0.scanFieldString(charArray0);
      charArray0[1] = '?';
      jSONReaderScanner0.resetStringPosition();
      JSONScanner jSONScanner0 = new JSONScanner("null", '?');
      char[] charArray1 = new char[0];
      jSONScanner0.scanFieldBigInteger(charArray1);
      jSONScanner0.scanFieldSymbol(charArray0);
      BigDecimal bigDecimal0 = new BigDecimal((-2));
      ArrayList<String> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<String>((-2));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-28);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-.", (-2629));
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = '&';
      charArray0[2] = 'm';
      jSONReaderScanner0.scanInt('k');
      charArray0[3] = 'I';
      charArray0[4] = 'G';
      int[] intArray0 = JSONLexerBase.digits;
      jSONReaderScanner0.nextToken((-876));
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("new");
      SymbolTable symbolTable0 = new SymbolTable(35);
      jSONScanner0.scanSymbolWithSeperator(symbolTable0, 'O');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("error parse false");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 261);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Igq<Z;a", 16);
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.isEnabled(52, 65536);
      jSONReaderScanner0.scanType("Igq<Z;a");
      jSONReaderScanner0.scanFloat('\'');
      jSONReaderScanner0.nextToken(84);
      jSONReaderScanner0.scanDouble('4');
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.resetStringPosition();
      JSONScanner jSONScanner0 = new JSONScanner("set");
      jSONScanner0.isRef();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("null");
      JSONScanner jSONScanner1 = new JSONScanner("null");
      jSONScanner0.nextIdent();
      jSONReaderScanner0.scanLong('u');
      ArrayList<String> arrayList1 = new ArrayList<String>(0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("com.alibaba.fastjson.parser.JSONLexerBase");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fastjson.parser.autoTypeSupport");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", 39);
      jSONReaderScanner0.scanDecimal('V');
      jSONReaderScanner0.scanFloat('V');
      jSONReaderScanner0.nextToken(18);
      jSONReaderScanner0.scanDouble('Z');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 3891);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.scanDouble('9');
      jSONReaderScanner0.isEnabled(2354, 0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanDecimal('!');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("TPY!5*");
      jSONScanner0.bytesValue();
      jSONScanner0.scanISO8601DateIfMatch(true);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(2354);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - f, info : pos 0, json : false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 139);
      jSONReaderScanner0.scanLong('&');
      jSONReaderScanner0.scanDouble('9');
      jSONReaderScanner0.isEnabled(2354, 0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanDecimal('!');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("TPY!5*");
      jSONReaderScanner1.setToken(34);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 139);
      jSONReaderScanner0.scanDouble('9');
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("QuoteFieldNames");
      BigDecimal bigDecimal0 = new BigDecimal((double) '9');
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONScanner0.scanBoolean('=');
      jSONReaderScanner1.scanFieldUUID(charArray0);
      ArrayList<String> arrayList0 = new ArrayList<String>(623);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 139);
      jSONReaderScanner0.scanLong('&');
      jSONReaderScanner0.scanDouble('9');
      jSONReaderScanner0.tokenName();
      char[] charArray1 = new char[5];
      charArray1[0] = '&';
      charArray1[1] = ']';
      charArray1[2] = '&';
      charArray1[3] = '9';
      charArray1[4] = '9';
      jSONReaderScanner0.scanFieldString(charArray1);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '7';
      charArray0[1] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unclosed.str.lit");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1220);
      jSONReaderScanner0.scanType("Set");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFloat('~');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '7';
      charArray0[1] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-1036L));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDouble('n');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("*_ K3z_5L6*!b}\"h");
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      jSONReaderScanner0.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("fwe");
      JSONScanner jSONScanner1 = new JSONScanner("fwe");
      jSONScanner1.scanBoolean('3');
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fwe", (-1));
      char[] charArray1 = new char[8];
      charArray1[0] = '3';
      charArray1[1] = '3';
      charArray1[2] = '3';
      charArray1[4] = '3';
      charArray1[5] = '3';
      charArray1[6] = '3';
      charArray1[7] = '3';
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanFieldDate(charArray0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JSONScanner.checkDate('?', 'X', 'X', '?', 'X', 'X', 1510, 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("{#t$cchX~PLr.DgXL", 1510);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.nextToken(1510);
      jSONReaderScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[1] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 91);
      jSONReaderScanner0.scanFloat('D');
      jSONReaderScanner0.scanDecimal('D');
      jSONReaderScanner0.scanFloat('*');
      jSONReaderScanner0.nextToken(91);
      jSONReaderScanner0.scanDouble('Z');
      SymbolTable symbolTable0 = new SymbolTable(2200);
      jSONReaderScanner0.scanSymbol(symbolTable0);
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '\u0094';
      charArray0[1] = 'b';
      charArray0[2] = '\u0094';
      int int0 = 2;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 36, 2);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextToken(12);
      SymbolTable symbolTable0 = new SymbolTable(12);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : \u0094
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("false");
      SymbolTable symbolTable0 = new SymbolTable(8192);
      jSONScanner0.scanSymbol(symbolTable0);
      jSONScanner0.close();
      jSONScanner0.scanLong('\u0000');
      jSONScanner0.getFeatures();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Ex<H[)<Ho1P*");
      jSONReaderScanner0.nextToken(989);
      jSONReaderScanner0.scanDouble('3');
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = Calendar.APRIL;
      JSONScanner.checkDate('f', '@', 'z', '@', '', 'l', 3, 67);
      jSONScanner0.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unlosed", '');
      jSONReaderScanner0.nextToken(3);
      jSONReaderScanner0.scanDecimal('');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = '1';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0.Dt$}i^", 57);
      jSONReaderScanner0.scanFloat('w');
      PipedReader pipedReader0 = new PipedReader();
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner(pipedReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Pipe not connected
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("scan null error");
      jSONScanner0.scanIdent();
      jSONScanner0.skipWhitespace();
      JSONScanner jSONScanner1 = new JSONScanner("y!nADW?");
      jSONScanner1.nextToken();
      JSONScanner jSONScanner2 = new JSONScanner("y!nADW?");
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = '}';
      charArray0[3] = 'q';
      charArray0[3] = 'q';
      // Undeclared exception!
      try { 
        jSONScanner1.floatValue();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[2] = '|';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error parse new");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1534, 1534);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 1534);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.ready();
      charArrayReader0.mark(1388);
      charArrayReader0.read(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("_h'j*g5P-M,7~=t");
      jSONScanner0.skipWhitespace();
      jSONScanner0.scanInt('5');
      jSONScanner0.isRef();
      Class<Object> class0 = Object.class;
      jSONScanner0.scanFieldStringArray(charArray0, class0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      JSONScanner jSONScanner1 = new JSONScanner("_h'j*g5P-M,7~=t");
      jSONScanner1.nextIdent();
      jSONScanner0.scanStringArray((Collection<String>) null, '5');
      Class<MockJapaneseDate> class1 = MockJapaneseDate.class;
      // Undeclared exception!
      try { 
        jSONScanner1.newCollectionByType(class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'q';
      charArray0[1] = 'q';
      charArray0[2] = '|';
      charArray0[3] = 'q';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1952, 2499);
      SymbolTable symbolTable0 = new SymbolTable('|');
      jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("qq", (-2214));
      jSONReaderScanner1.scanFloat('|');
      jSONReaderScanner0.integerValue();
      jSONReaderScanner0.getLocale();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      char[] charArray0 = new char[6];
      charArray0[2] = '[';
      charArray0[4] = '[';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      charArrayReader0.read();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 0);
      jSONReaderScanner0.nextToken(4);
      jSONReaderScanner0.scanFloat('F');
      jSONReaderScanner1.nextToken((-1));
      jSONReaderScanner0.scanDouble('[');
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = 'N';
      charArray0[2] = 'b';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2, 36);
      jSONReaderScanner0.nextToken(80);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 59, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      char[] charArray0 = new char[0];
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-922337203685477580L));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(lineNumberReader0);
      Charset.defaultCharset();
      jSONReaderScanner1.scanFieldDecimal(charArray0);
      jSONReaderScanner1.nextToken((-2257));
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken(11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      char char0 = '\\';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error parse new");
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1534, 1534);
      char[] charArray1 = new char[8];
      charArray1[0] = '\\';
      charArray1[1] = '\\';
      charArray1[2] = '\\';
      charArray1[3] = '\\';
      charArray1[4] = '\\';
      charArray1[5] = '\\';
      charArray1[6] = '\\';
      charArray1[7] = '\\';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u\"7FEd[pVkOs2gk");
      jSONReaderScanner0.scanInt('`');
      jSONReaderScanner0.scanDecimal('+');
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      char[] charArray1 = new char[1];
      charArray1[0] = '`';
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray1, 0, 0);
      charArrayReader1.read();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader1, 0);
      jSONReaderScanner0.nextToken(4);
      jSONReaderScanner0.scanFieldDate(charArray1);
      BigDecimal bigDecimal0 = new BigDecimal((int) '`');
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      jSONReaderScanner0.scanStringArray(arrayList0, '`');
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      Feature feature0 = Feature.UseBigDecimal;
      jSONReaderScanner0.config(feature0, true);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanFloat('4');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null", 92);
      jSONReaderScanner1.nextToken((-1));
      jSONReaderScanner0.scanDouble('4');
      SymbolTable symbolTable0 = new SymbolTable(684);
      jSONReaderScanner1.scanSymbol(symbolTable0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 2);
      char[] charArray0 = new char[1];
      charArray0[0] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      charArrayReader0.read();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, (-1));
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner1.scanFloat('6');
      jSONReaderScanner1.nextToken(15);
      jSONReaderScanner0.scanDouble('[');
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("$2");
      jSONScanner0.isRef();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      JSONScanner jSONScanner2 = new JSONScanner("not support type : ");
      jSONScanner1.nextIdent();
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      // Undeclared exception!
      try { 
        jSONScanner1.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oracle.sql.TIMESTAMP");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("oracle.sql.TIMESTAMP");
      jSONReaderScanner0.scanSymbol(symbolTable0, 'r');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"bGXz5QU/#zGZD0", (-697));
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      int int0 = 16;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Igq<Z;a", 16);
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.isEnabled(52, 65536);
      char[] charArray0 = new char[3];
      char char0 = 'T';
      jSONReaderScanner0.skipWhitespace();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Igq<Z;a");
      jSONReaderScanner0.token = 0;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = "@O)=\\Y";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("@O)=Y", 70);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("@O)=Y", (-392));
      jSONReaderScanner1.getCalendar();
      jSONReaderScanner1.isEnabled(1, 114);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[1] = 'D';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 91);
      jSONReaderScanner0.scanFloat('D');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 2046);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArrayReader0, 91);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("2Si", 8192);
      jSONReaderScanner2.scanFloat('u');
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner(charArrayReader0);
      JSONScanner jSONScanner0 = new JSONScanner("2Si", 0);
      jSONScanner0.nextToken();
      JSONScanner jSONScanner1 = new JSONScanner("/6K0MV&&qKgmU");
      jSONScanner0.scanFieldFloatArray2(charArray0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[0] = '7';
      charArray0[1] = 'E';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unclosed.str.lit");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 48, 1680);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('E');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DE}");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("VQed}6", 102);
      jSONReaderScanner0.scanFloat('\\');
      jSONReaderScanner0.scanDouble('\\');
      SymbolTable symbolTable0 = new SymbolTable(859);
      jSONReaderScanner0.scanSymbol(symbolTable0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      char char0 = '4';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 92);
      SymbolTable symbolTable0 = new SymbolTable(684);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0.Dt$}i^", (-3192));
      jSONScanner0.intValue();
      jSONScanner0.nextToken();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0.Dt$}i^");
      jSONReaderScanner0.scanLong('z');
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanType("x/ISgqbF 02");
      jSONReaderScanner0.scanFloat('0');
      jSONReaderScanner0.nextToken(3543);
      jSONReaderScanner0.next();
      jSONScanner0.scanISO8601DateIfMatch();
      char[] charArray0 = new char[8];
      charArray0[0] = 'z';
      charArray0[1] = 'z';
      charArray0[2] = 't';
      charArray0[3] = '.';
      charArray0[4] = 't';
      charArray0[5] = '0';
      charArray0[6] = 'z';
      charArray0[7] = 't';
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONScanner0.scanDate('&');
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONScanner jSONScanner0 = new JSONScanner("8&WH]@D@]<uZ3Vfg8FL", (-510));
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldInt(charArray0);
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = 'E';
      charArray0[4] = 'E';
      charArray0[5] = '7';
      charArray0[6] = 'E';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-2447));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.nextToken(1097);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("@TKRcW)4`", (-2257));
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 0, 3416);
      jSONReaderScanner2.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(19);
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        jSONReaderScanner1.matchField2(charArray1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.resetStringPosition();
      JSONScanner jSONScanner0 = new JSONScanner("set");
      jSONScanner0.isRef();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("null");
      JSONScanner jSONScanner1 = new JSONScanner("null");
      jSONScanner0.nextIdent();
      jSONReaderScanner0.scanStringArray(arrayList0, 'f');
      jSONReaderScanner0.scanLong('k');
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONScanner jSONScanner0 = new JSONScanner("null", 0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      jSONReaderScanner0.tokenName();
      arrayList0.add("null");
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.scanStringArray(arrayList0, 'f');
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      JSONScanner.checkDate('f', '@', 'z', '@', '', 'l', 0, 67);
      jSONScanner0.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unlosed");
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.scanDecimal('');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.longValue();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      jSONReaderScanner0.ch = 'U';
      jSONReaderScanner0.features = 0;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = Calendar.OCTOBER;
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(", ", 18);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 1742, 395);
      jSONReaderScanner0.nextToken(9);
      jSONReaderScanner0.scanDouble('G');
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[2] = '3';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\u0000", 117);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, 0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("4FDeww)'");
      jSONReaderScanner2.nextToken(0);
      jSONReaderScanner0.scanDouble('4');
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("trreeset");
      JSONScanner jSONScanner1 = new JSONScanner("kb`");
      jSONScanner1.scanBoolean('3');
      char[] charArray0 = new char[3];
      charArray0[0] = '3';
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      JSONLexerBase.readString(charArray0, 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 5);
      jSONReaderScanner0.scanFloat('U');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(77);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      String string0 = "nE\\uQ2";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(string0, 102);
      jSONReaderScanner0.scanFloat('9');
      jSONReaderScanner0.putChar('V');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanDouble('\\');
      SymbolTable symbolTable0 = new SymbolTable(859);
      jSONReaderScanner0.scanSymbol(symbolTable0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.skip(10L);
      JSONScanner jSONScanner0 = new JSONScanner(")+u7L-Z*.w^&6", (-409));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("qU}LDuelZ:48 <V");
      jSONScanner0.putChar('\\');
      jSONScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal identifier : ");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("ON9", 0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("6MHjL(s'EM#]8;-", 2614);
      jSONReaderScanner0.scanType("ON9");
      jSONReaderScanner1.scanFloat('x');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("nu", 2543);
      // Undeclared exception!
      try { 
        jSONReaderScanner3.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '1';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      charArrayReader0.read();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, (-1));
      jSONReaderScanner0.nextToken(5);
      jSONReaderScanner0.scanFloat('Y');
      jSONReaderScanner1.nextToken(101);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArrayReader0, 101);
      jSONReaderScanner2.scanDouble('1');
      jSONReaderScanner2.nextIdent();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      char[] charArray0 = new char[5];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("2Gs2ugf\"Z|-5*>L");
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.longValue();
      jSONScanner0.scanFieldDate(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken((-2));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unlosed");
      char[] charArray0 = new char[0];
      char[] charArray1 = new char[1];
      charArray1[0] = '`';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1, 0, 0);
      charArrayReader0.read();
      JSONScanner jSONScanner1 = new JSONScanner(";7aV>]*gCO", 4);
      SymbolTable symbolTable0 = new SymbolTable(37);
      jSONScanner1.nextIdent();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0, 0);
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      jSONScanner1.scanISO8601DateIfMatch();
      jSONReaderScanner0.scanStringArray(set0, '`');
      jSONReaderScanner0.scanLong('P');
      jSONScanner0.scanStringArray(set0, ';');
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      char[] charArray0 = new char[6];
      char char0 = 'n';
      charArray0[0] = 'n';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16);
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.scanString('n');
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanFloat('M');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(93);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+BD");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+BD");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"bGXz5QU/#zGZD0", (-239));
      jSONReaderScanner0.nextToken(0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("+BD");
      jSONReaderScanner2.tokenName();
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("true");
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = 'V';
      charArray0[2] = ']';
      charArray0[3] = 'V';
      charArray0[4] = 'V';
      charArray0[5] = 'V';
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner(charArray0, 0, (-2));
      jSONReaderScanner4.scanDecimal('-');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 3646, 44);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("wse");
      JSONScanner jSONScanner1 = new JSONScanner("kb`");
      jSONScanner1.scanBoolean('3');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 17);
      jSONReaderScanner0.scanDouble('3');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 125);
      jSONReaderScanner1.scanDouble('\u0000');
      jSONReaderScanner2.skipWhitespace();
      jSONReaderScanner0.scanFloat('0');
      // Undeclared exception!
      try { 
        jSONReaderScanner2.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '1';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 356);
      jSONReaderScanner0.scanFieldString(charArray0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner(")Vh>=toC", (-1));
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.nextToken();
      jSONScanner0.scanBoolean('5');
      SymbolTable symbolTable0 = new SymbolTable(10);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0, '1');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      String string0 = "|7L/@ufph~l_c";
      JSONScanner jSONScanner0 = new JSONScanner("|7L/@ufph~l_c");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("|7L/@ufph~l_c", (-2456));
      char char0 = 'J';
      jSONReaderScanner0.scanFloat('J');
      jSONReaderScanner0.nextToken(46);
      jSONReaderScanner0.scanDouble('@');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 92);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"", 0);
      Class<FilterInputStream> class0 = FilterInputStream.class;
      SymbolTable symbolTable0 = new SymbolTable(1400);
      jSONReaderScanner0.scanEnum(class0, symbolTable0, '4');
      jSONReaderScanner0.scanFloat('$');
      JSONScanner jSONScanner0 = new JSONScanner("\"", 1400);
      jSONScanner0.scanBoolean('D');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("null");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'n';
      charArray0[2] = '|';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DE}");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("DE}", (-1463));
      jSONReaderScanner0.scanDecimal('f');
      jSONReaderScanner0.nextToken((-2));
      jSONReaderScanner0.scanFloat('\u0087');
      jSONReaderScanner0.nextToken(8192);
      jSONReaderScanner0.scanDouble('0');
      SymbolTable symbolTable0 = new SymbolTable(34);
      jSONReaderScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      charArray0[1] = '*';
      charArray0[2] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_h");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(",;Yw", 102);
      JSONScanner jSONScanner0 = new JSONScanner("MwJ*DEma#hvy}");
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0, 117);
      pushbackReader0.unread(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.token = 0;
      jSONReaderScanner1.matchField(charArray0);
      jSONReaderScanner1.scanDouble('Q');
      SymbolTable symbolTable0 = new SymbolTable(103);
      jSONReaderScanner0.scanSymbol(symbolTable0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '9';
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 139);
      jSONReaderScanner0.scanDouble('9');
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("null", 57344);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("QuoteFieldNames");
      BigDecimal bigDecimal0 = new BigDecimal((double) '9');
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONScanner0.scanBoolean('=');
      jSONScanner0.scanFieldFloatArray2(charArray0);
      jSONScanner1.scanUUID('v');
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("S.", 'D');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("autoType is not support. ");
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("4-zrOpBEqB6:l", 0);
      jSONReaderScanner2.nextToken((-442));
      jSONReaderScanner1.tokenName();
      jSONReaderScanner2.scanDecimal('D');
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = 'L';
      charArray0[2] = 'D';
      charArray0[3] = ']';
      charArray0[4] = 'D';
      charArray0[5] = ']';
      charArray0[6] = ']';
      charArray0[7] = ']';
      charArray0[8] = 'D';
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 4873, (-2));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      char char0 = '4';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("nuJl", 92);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("*~}Z", 0);
      jSONReaderScanner0.sp = 0;
      jSONReaderScanner0.scanFloat('4');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("s2)D");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(92);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '[';
      charArray0[4] = ';';
      charArray0[5] = '[';
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4gVS,dN>G1;YVWZ?");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fastjson.parser.deny", 102);
      jSONReaderScanner0.scanDecimal(',');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 83);
      jSONReaderScanner1.scanFloat(';');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 44, 9999999);
      jSONReaderScanner0.nextToken(114);
      char[] charArray1 = new char[19];
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray1);
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("unclosed.str.lit", 0);
      jSONReaderScanner1.scanFieldString(charArray0);
      jSONReaderScanner1.scanFloat('d');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      char char0 = 's';
      charArray0[2] = 's';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 44, 9999999);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.reset();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("illega str", 44);
      char[] charArray1 = new char[4];
      charArray1[0] = '\'';
      charArray1[1] = '\'';
      charArray1[2] = '\'';
      charArray1[3] = 's';
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray1, 44, 32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      jSONReaderScanner2.intValue();
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("illega str");
      // Undeclared exception!
      try { 
        jSONReaderScanner2.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Feature.AllowSingleQuotes is false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(20);
      char char0 = '[';
      SymbolTable symbolTable1 = new SymbolTable(1924);
      JSONScanner jSONScanner0 = new JSONScanner("$");
      jSONScanner0.scanSymbol((SymbolTable) null);
      jSONScanner0.getFeatures();
      char char1 = '$';
      char char2 = 'z';
      jSONScanner0.scanBoolean('[');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      char[] charArray0 = new char[19];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gm;f8");
      charArray0[0] = '3';
      charArray0[1] = '3';
      char[] charArray1 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.skip((-9223372036854775756L));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONScanner jSONScanner0 = new JSONScanner(" 9P", 12);
      jSONScanner0.matchField2(charArray1);
      jSONScanner0.scanFieldFloat(charArray1);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("gm;f8");
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 2306);
      jSONReaderScanner1.scanFieldFloat(charArray1);
      jSONReaderScanner1.scanFieldLong(charArray0);
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 44);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '[';
      charArray0[1] = '4';
      charArray0[2] = '4';
      charArray0[3] = '[';
      charArray0[4] = ';';
      charArray0[5] = '[';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4gVS,dN>G1;YVWZ?");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fastjson.parser.deny", 102);
      jSONReaderScanner0.scanDecimal('`');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 102);
      jSONReaderScanner1.scanFloat('1');
      jSONReaderScanner1.nextToken(83);
      jSONReaderScanner1.scanDecimal('R');
      jSONReaderScanner1.scanDouble(',');
      SymbolTable symbolTable0 = new SymbolTable(2130);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : 4
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("@O)=Y", 70);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("@O)=Y", 70);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@O)=Y");
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("not ", 0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArray0, 58);
      jSONReaderScanner3.intValue();
      jSONReaderScanner3.scanDouble(')');
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner("not ", 997);
      jSONReaderScanner4.scanDate('v');
      jSONReaderScanner2.isEOF();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("S.", 'D');
      int int0 = 14;
      jSONReaderScanner0.nextToken(78);
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      int int1 = 48;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 78, 48);
      jSONReaderScanner1.isEnabled(8, 8);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "s";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("s", 70);
      jSONReaderScanner0.nextToken((-924));
      jSONReaderScanner0.setToken(43);
      Feature feature0 = Feature.DisableASM;
      jSONReaderScanner0.config(feature0, false);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      charArray0[3] = 'A';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 19, 9999999);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("EOF", 19);
      jSONReaderScanner1.nextToken(110);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("EOF", 114);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArray0, 95, (-1596));
      jSONReaderScanner3.scanFieldString(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner3.scanFloat('E');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0.Dt$}i^", (-3192));
      JSONScanner jSONScanner1 = new JSONScanner("B");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0.Dt$}i^", 0);
      jSONReaderScanner0.scanDouble('N');
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner2 = new JSONScanner("9R!%", 3481);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
      BigDecimal bigDecimal0 = new BigDecimal((double) 0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONScanner1.scanBoolean('m');
      jSONScanner2.scanFieldFloatArray2(charArray0);
      jSONScanner0.scanUUID('n');
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0.Dt$}i^", (-3192));
      JSONScanner jSONScanner1 = new JSONScanner("scan false error");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("hy;}^4I/I", 8192);
      jSONReaderScanner0.scanDouble('9');
      char[] charArray0 = new char[7];
      charArray0[0] = '9';
      charArray0[2] = '9';
      charArray0[3] = '9';
      charArray0[4] = '9';
      charArray0[5] = '9';
      charArray0[6] = '9';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONScanner jSONScanner2 = new JSONScanner("illegam", (-3192));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("LeKO  ,/8n%sd");
      BigDecimal bigDecimal0 = new BigDecimal((double) 139);
      char[] charArray1 = new char[0];
      jSONScanner0.scanBoolean('Z');
      jSONScanner0.scanFieldFloatArray2(charArray1);
      jSONScanner1.scanUUID(']');
  }
}
