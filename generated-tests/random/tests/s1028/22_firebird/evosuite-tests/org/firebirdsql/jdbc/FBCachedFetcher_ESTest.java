/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 14:30:40 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-69);
      byteArray2[1] = (byte)2;
      byteArray2[2] = (byte)2;
      byteArray2[3] = (byte)77;
      byteArray2[4] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)77;
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-69);
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte)1;
      byteArray3[6] = (byte)1;
      byteArray3[7] = (byte)2;
      byteArray3[8] = (byte)2;
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[][] byteArray4 = new byte[4][9];
      byteArray4[0] = byteArray1;
      byteArray4[1] = byteArray1;
      byteArray4[2] = byteArray1;
      byteArray4[3] = byteArray1;
      linkedList0.add(byteArray4);
      fBCachedFetcher0.last();
      fBCachedFetcher0.first();
      fBCachedFetcher0.setFetchSize(151);
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isLast();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(151, fBCachedFetcher0.getFetchSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.setFetchSize((-1909));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.setFetchSize((-1909));
      System.setCurrentTimeMillis((-1909));
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.close();
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)104;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = 0;
      linkedList0.add((byte[][]) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)4;
      byteArray1[1] = (byte) (-68);
      byteArray1[2] = (byte) (-53);
      byteArray1[3] = (byte)43;
      byteArray1[4] = (byte)28;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)43;
      byteArray2[1] = (byte)28;
      byteArray2[2] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-53);
      byteArray3[1] = (byte)10;
      byteArray3[2] = (byte) (-53);
      byteArray3[3] = (byte)4;
      byteArray3[4] = (byte) (-68);
      byteArray3[5] = (byte) (-1);
      byteArray3[6] = (byte)28;
      byteArray3[7] = (byte)119;
      byteArray3[8] = (byte) (-68);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte)43;
      byteArray4[1] = (byte)10;
      byteArray4[2] = (byte) (-1);
      byteArray4[3] = (byte)10;
      byteArray4[4] = (byte) (-68);
      byteArray4[5] = (byte)28;
      byteArray4[6] = (byte) (-1);
      byteArray4[7] = (byte) (-1);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte) (-53);
      byteArray5[1] = (byte) (-1);
      byteArray5[2] = (byte) (-68);
      byteArray5[3] = (byte) (-1);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)4;
      byteArray6[1] = (byte)4;
      byteArray6[2] = (byte)28;
      byteArray6[3] = (byte) (-1);
      byteArray6[4] = (byte) (-68);
      byteArray6[5] = (byte)119;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)4;
      byteArray7[1] = (byte)4;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[9];
      byteArray8[0] = (byte)28;
      byteArray8[1] = (byte)43;
      byteArray8[2] = (byte)119;
      byteArray8[3] = (byte) (-1);
      byteArray8[4] = (byte)10;
      byteArray8[5] = (byte)119;
      byteArray8[6] = (byte) (-1);
      byteArray8[7] = (byte)28;
      byteArray8[8] = (byte)28;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1899);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][8];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-59);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte)98;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)98;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-88);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-1);
      byteArray5[1] = (byte)1;
      byteArray5[2] = (byte) (-90);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-88);
      byteArray6[1] = (byte) (-59);
      byteArray6[2] = (byte) (-1);
      byteArray6[3] = (byte) (-1);
      byteArray6[4] = (byte)98;
      byteArray6[5] = (byte) (-88);
      byteArray6[6] = (byte)0;
      byteArray6[7] = (byte) (-90);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-1);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[0];
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[7];
      byteArray9[0] = (byte)53;
      byteArray9[1] = (byte)0;
      byteArray9[2] = (byte)1;
      byteArray9[3] = (byte) (-59);
      byteArray9[4] = (byte)109;
      byteArray9[5] = (byte) (-59);
      byteArray9[6] = (byte) (-1);
      byteArray0[8] = byteArray9;
      linkedList0.addFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.close();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.relative((-1235));
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)100;
      byteArray1[1] = (byte) (-110);
      byteArray1[2] = (byte)1;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-110);
      byteArray2[1] = (byte)1;
      byteArray2[2] = (byte)100;
      byteArray2[3] = (byte) (-110);
      byteArray2[4] = (byte)1;
      byteArray2[5] = (byte) (-110);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-110);
      byteArray3[1] = (byte) (-110);
      byteArray3[2] = (byte)100;
      byteArray3[3] = (byte)100;
      byteArray3[4] = (byte) (-110);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-110);
      byteArray4[1] = (byte)100;
      byteArray4[2] = (byte)100;
      byteArray4[3] = (byte)100;
      byteArray4[4] = (byte)1;
      byteArray4[5] = (byte) (-110);
      byteArray4[6] = (byte) (-110);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-110);
      byteArray5[1] = (byte)100;
      byteArray5[2] = (byte)100;
      byteArray5[3] = (byte) (-110);
      byteArray5[4] = (byte)100;
      byteArray5[5] = (byte) (-110);
      byteArray5[6] = (byte)1;
      byteArray5[7] = (byte)1;
      byteArray0[4] = byteArray5;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-24);
      byteArray1[1] = (byte) (-120);
      byteArray1[2] = (byte)62;
      byteArray1[3] = (byte)38;
      byteArray1[4] = (byte) (-48);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-24);
      byteArray2[1] = (byte) (-120);
      byteArray2[2] = (byte) (-120);
      byteArray2[3] = (byte)62;
      byteArray2[4] = (byte) (-24);
      byteArray2[5] = (byte) (-24);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-120);
      byteArray3[1] = (byte)62;
      byteArray3[2] = (byte)62;
      byteArray3[3] = (byte) (-24);
      byteArray3[4] = (byte)62;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-48);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)62;
      byteArray5[1] = (byte) (-120);
      byteArray5[2] = (byte) (-24);
      byteArray5[3] = (byte) (-24);
      byteArray5[4] = (byte) (-24);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-70);
      byteArray6[1] = (byte)62;
      byteArray6[2] = (byte) (-48);
      byteArray6[3] = (byte)38;
      byteArray6[4] = (byte) (-48);
      byteArray6[5] = (byte) (-24);
      byteArray6[6] = (byte)62;
      byteArray6[7] = (byte) (-120);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte)62;
      byteArray7[1] = (byte) (-24);
      byteArray7[2] = (byte) (-70);
      byteArray7[3] = (byte)62;
      byteArray7[4] = (byte)38;
      byteArray0[6] = byteArray7;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)0;
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-69);
      byteArray2[1] = (byte)2;
      byteArray2[2] = (byte)60;
      byteArray2[3] = (byte)77;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)1;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)77;
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte)60;
      byteArray3[1] = (byte)0;
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte)1;
      byteArray3[6] = (byte)1;
      byteArray3[7] = (byte)2;
      byteArray3[8] = (byte)60;
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.close();
      fBCachedFetcher0.absolute((byte)60);
      fBCachedFetcher0.isAfterLast();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GDSType.getType("Cp865");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-69);
      byteArray2[1] = (byte)2;
      byteArray2[2] = (byte)2;
      byteArray2[3] = (byte)77;
      byteArray2[4] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)77;
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte) (-69);
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte)1;
      byteArray3[6] = (byte)1;
      byteArray3[7] = (byte)2;
      byteArray3[8] = (byte)2;
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.updateRow(byteArray0);
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)0;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V9LDD\"2[");
      GDSHelper gDSHelper0 = null;
      int int0 = 1;
      int int1 = 3853;
      AbstractIscStmtHandle abstractIscStmtHandle0 = null;
      String string0 = null;
      int int2 = 151;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[8];
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.setFetchSize((-1909));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.setFetchSize((-1909));
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.relative((-1909));
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1909));
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.close();
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.last();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals((-1909), fBCachedFetcher0.getFetchSize());
  }
}
