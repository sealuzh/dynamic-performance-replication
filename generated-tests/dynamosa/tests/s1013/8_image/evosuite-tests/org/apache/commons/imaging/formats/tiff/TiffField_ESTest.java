/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 18:09:57 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-2191), fieldTypeLong0, 1L, 2199L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-2191), tiffField0.getDirectoryType());
      assertEquals(2199, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2707, 2707, fieldTypeByte0.RATIONAL, 2707, 2707, byteArray0, byteOrder0, 2707);
      tiffField0.dump();
      assertEquals(2707, tiffField0.getOffset());
      assertEquals(2707, tiffField0.getSortHint());
      assertEquals(2707, tiffField0.getDirectoryType());
      assertEquals(2707, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 567, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (-1717986917));
      String string0 = tiffField0.getValueDescription();
      assertEquals(567, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 567, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getValue();
      assertEquals(567, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50939, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(324, 50939, fieldTypeLong0, 50939, 50939, byteArray0, byteOrder0, (byte)53);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tiffField0.getTag());
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals(324, tagInfo0.tag);
      assertEquals(50939, tiffField0.getOffset());
      assertEquals(53, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (-7L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-7), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1595), "YYN5Bsl2ZN");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1595), 186, fieldTypeDouble0, 2697L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(186, tiffField0.getDirectoryType());
      assertEquals((-1595), int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(531, 63, fieldTypeAscii0, 1736L, 1782L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(531, tiffField0.getTag());
      assertEquals(1782, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 1470, fieldTypeFloat0, 4L, 22, byteArray0, byteOrder0, 433);
      int int0 = tiffField0.getSortHint();
      assertEquals(433, int0);
      assertEquals(22, tiffField0.getOffset());
      assertEquals(1470, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeLong0, (-1717986917), 0, byteArray0, byteOrder0, (-1230));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1230), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2535, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50711, 50711, fieldTypeFloat0, 1L, 0L, byteArray0, byteOrder0, 1297);
      int int0 = tiffField0.getOffset();
      assertEquals(1297, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(50711, tiffField0.getDirectoryType());
      assertEquals(50711, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Missing value: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2123), 0, fieldTypeLong0, (-1L), (-2123), byteArray0, byteOrder0, 512);
      int int0 = tiffField0.getOffset();
      assertEquals((-2123), tiffField0.getTag());
      assertEquals(512, tiffField0.getSortHint());
      assertEquals((-2123), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-36);
      byteArray0[7] = (byte) (-36);
      TiffField tiffField0 = new TiffField((byte) (-36), 0, fieldTypeAscii0.RATIONAL, 14L, (byte) (-36), byteArray0, byteOrder0, 4070);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-36), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(4070, tiffField0.getSortHint());
      assertEquals((-36), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-104);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "OversizeValueElement, tag: ", (int) (byte)3, (int) (byte)3);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-2146664309), fieldTypeShort0, 4437L, 240L, byteArray0, byteOrder0, (-1659));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2146664309), tiffField0.getDirectoryType());
      assertEquals(240, tiffField0.getOffset());
      assertEquals((-1659), tiffField0.getSortHint());
      assertEquals((-26624), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-2191), fieldTypeLong0, 1L, 2199L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2199, tiffField0.getOffset());
      assertEquals((-2191), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      TiffField tiffField0 = new TiffField(50706, 1, fieldTypeByte0, (byte)1, 1232L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1232, tiffField0.getOffset());
      assertEquals(50706, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(867, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(867, 30, fieldTypeLong0, 30, 30, byteArray0, byteOrder0, 867);
      tiffField0.getFieldTypeName();
      assertEquals(30, tiffField0.getOffset());
      assertEquals(867, tiffField0.getSortHint());
      assertEquals(867, tiffField0.getTag());
      assertEquals(30, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1881, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1881, 1881, fieldTypeAscii0, 4L, 1881, byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getFieldTypeName();
      assertEquals(1881, tiffField0.getDirectoryType());
      assertEquals(1881, tiffField0.getTag());
      assertEquals(1881, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4, 0, fieldTypeRational0, 5118L, 2147483647L, byteArray0, byteOrder0, (byte) (-107));
      tiffField0.getFieldType();
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1982292597), " @$0z1&{Xkk");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 456, fieldTypeFloat0, (-1982292597), 1625L, byteArray0, byteOrder0, (-2146664309));
      tiffField0.getFieldType();
      assertEquals((-2146664309), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1625, tiffField0.getOffset());
      assertEquals(456, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Missing value: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2123), 0, fieldTypeLong0, (-1L), (-2123), byteArray0, byteOrder0, 512);
      tiffField0.getFieldType();
      assertEquals((-2123), tiffField0.getTag());
      assertEquals(512, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146838563), (byte)0, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, (-2147483646));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2146838563), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(1, (byte)48, fieldTypeLong0, 1L, (-1697L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1697), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-78);
      TiffField tiffField0 = new TiffField(1, 37, fieldTypeByte0, 1, 1368L, byteArray0, byteOrder0, (byte)70);
      tiffField0.getDoubleValue();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1368, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeLong0, (byte)48, (byte)64, byteArray0, byteOrder0, (-1488));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(64, tiffField0.getOffset());
      assertEquals((-1488), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 2, fieldTypeByte0, 1L, (-312L), byteArray0, byteOrder0, (-1488));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-312), tiffField0.getOffset());
      assertEquals((-1488), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-348), 25, fieldTypeAscii0, 1L, 25, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals((-348), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1717986917), 0, fieldTypeLong0, (-1717986917), 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, (byte)0, 0, byteArray0, byteOrder0, 18);
      tiffField0.getBytesLength();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "a~7aF*u\"Mc$b/gRN");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 2352L, 1279L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1279, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-2191), fieldTypeLong0, 1L, 2199L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-2191), tiffField0.getDirectoryType());
      assertEquals(2199, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Wf}vWCW#Wd");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1717986917), 0, fieldTypeLong0, (-1717986917), 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (-7L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2866), (-2866), fieldTypeShort0, (-2866), (-2866), byteArray0, byteOrder0, (-2866));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2715, 2715, fieldTypeByte0, 2715, 2715, (byte[]) null, byteOrder0, (-2420));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(14, 1, fieldTypeRational0, 1, 14, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 65535, fieldTypeByte0, 40095, 1L, byteArray0, byteOrder0, (-1222));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.RATIONAL, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50984, 50984, fieldTypeShort0, 50984, 50984, (byte[]) null, byteOrder0, 50984);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-39), (-39), fieldTypeShort0, (-39), (-39), byteArray0, byteOrder0, (-39));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, (FieldType) null, 7, 7, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2707, 2707, fieldTypeByte0, 2707, 2707, (byte[]) null, byteOrder0, 2707);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1391), (-1391), fieldTypeByte0.RATIONAL, (-1391), (-1391), byteArray0, byteOrder0, (-1391));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 65002);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(28, (-1535), fieldTypeShort0, (-1535), 638L, byteArray0, byteOrder0, 1626);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeShort0, 339, 339, (byte[]) null, byteOrder0, 339);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.RATIONAL, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1864), (-1864), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3986), (-3986), fieldTypeByte0, (-3986), (-3986), (byte[]) null, byteOrder0, (-3986));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1524), (-1524), fieldTypeShort0, (-1524), (-1524), byteArray0, byteOrder0, (-1524));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(21, 1, fieldTypeShort0, 1, 21, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2175), 554, (FieldType) null, (-2175), 554, byteArray0, byteOrder0, 1976);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(40092, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40092, 1913, fieldTypeAscii0, 40092, 1913, (byte[]) null, byteOrder0, 1913);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2707, 2707, fieldTypeByte0, 2707, 2707, (byte[]) null, byteOrder0, 2707);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-888), (-888), fieldTypeByte0, (-888), (-888), byteArray0, byteOrder0, (-888));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65479, 65479, (FieldType) null, 65479, 65479, byteArray0, byteOrder0, 65479);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1681), (-1681), fieldTypeByte0.RATIONAL, (-1681), (-1681), byteArray0, byteOrder0, (-1681));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1305), (-1305), fieldTypeByte0, (-1305), (-1305), byteArray0, byteOrder0, (-1305));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-39), (-39), fieldTypeShort0, (-39), (-39), byteArray0, byteOrder0, (-39));
      MockFileWriter mockFileWriter0 = new MockFileWriter("The wildcard list must not be null", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "The wildcard list must not be null");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(", fieldType: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1057, (-1445), fieldTypeByte0, (-1445), (-1445), byteArray0, byteOrder0, 1057);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("PhotometricInterpretation");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(3183, 3183, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, (-136));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("GPSTimeStamp");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(21, (-1), fieldTypeShort0, (-1), 21, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-92));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)50, (-1111L), byteArray0, byteOrder0, 1990);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte) (-78));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 1470, fieldTypeFloat0, 4L, 22, byteArray0, byteOrder0, 433);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1470, tiffField0.getDirectoryType());
      assertEquals(433, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(22, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1003, (-6892), fieldTypeByte0, (-3364L), 714L, byteArray0, (ByteOrder) null, 619);
      tiffField0.getByteOrder();
      assertEquals(714, tiffField0.getOffset());
      assertEquals((-6892), tiffField0.getDirectoryType());
      assertEquals(619, tiffField0.getSortHint());
      assertEquals(1003, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(127, 127, (FieldType) null, 127, 127, byteArray0, byteOrder0, 127);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(860);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 2430, (FieldType) null, 908L, 2430, byteArray0, byteOrder0, (byte) (-125));
      tiffField0.getFieldType();
      assertEquals(2430, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2430, tiffField0.getDirectoryType());
      assertEquals((-125), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(79, (-768), fieldTypeByte0, '\u0000', 22, (byte[]) null, byteOrder0, 70);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-768), int0);
      assertEquals(22, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2694, 2694, fieldTypeByte0.RATIONAL, 2694, 2694, byteArray0, byteOrder0, 2694);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1966, (-644), fieldTypeByte0, 1966, 1966, (byte[]) null, byteOrder0, (-644));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1308), (-1308), fieldTypeByte0, (-1308), 1608L, byteArray0, byteOrder0, (-2527));
      int int0 = tiffField0.getOffset();
      assertEquals(1608, int0);
      assertEquals((-1308), tiffField0.getDirectoryType());
      assertEquals((-1308), tiffField0.getTag());
      assertEquals((-2527), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-795), (-795), fieldTypeFloat0, (-795), (-795), byteArray0, byteOrder0, 22);
      tiffField0.getTagInfo();
      assertEquals((-795), tiffField0.getTag());
      assertEquals((-795), tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals((-795), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(37382, "YCbCrPositioning");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeByte0, 656, 0L, byteArray0, byteOrder0, (-2145848092));
      int int0 = tiffField0.getTag();
      assertEquals(297, int0);
      assertEquals((-2145848092), tiffField0.getSortHint());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte)0, (-1904L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1904), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1475), 734, fieldTypeAscii0, (-2058L), 734, byteArray0, byteOrder0, (-1818));
      tiffField0.getBytesLength();
      assertEquals(734, tiffField0.getDirectoryType());
      assertEquals((-1475), tiffField0.getTag());
      assertEquals(734, tiffField0.getOffset());
      assertEquals((-1818), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(37382, (byte)0, fieldTypeFloat0, 37382, 37382, byteArray0, byteOrder0, 37382);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0.RATIONAL, 2686, 2686, byteArray0, byteOrder0, 2686);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeLong0, 21, 21, byteArray0, byteOrder0, 21);
      tiffField0.getIntValueOrArraySum();
      assertEquals(21, tiffField0.getOffset());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0.RATIONAL, 2686, 2686, byteArray0, byteOrder0, 2686);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0, 2686, 2686, byteArray0, byteOrder0, 2686);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@47e19ca8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2906, 2906, fieldTypeDouble0.LONG, 2906, 2906, byteArray0, byteOrder0, 2906);
      tiffField0.getDoubleArrayValue();
      assertEquals(2906, tiffField0.getTag());
      assertEquals(2906, tiffField0.getDirectoryType());
      assertEquals(2906, tiffField0.getSortHint());
      assertEquals(2906, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0.RATIONAL, 2686, 2686, byteArray0, byteOrder0, 2686);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2686, tiffField0.getOffset());
      assertEquals(2686, tiffField0.getSortHint());
      assertEquals(2686, tiffField0.getDirectoryType());
      assertEquals(2686, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0.RATIONAL, 2686, 2686, byteArray0, byteOrder0, 2686);
      tiffField0.getDoubleArrayValue();
      assertEquals(2686, tiffField0.getDirectoryType());
      assertEquals(2686, tiffField0.getSortHint());
      assertEquals(2686, tiffField0.getTag());
      assertEquals(2686, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(37382, (byte)0, fieldTypeFloat0, 37382, 37382, byteArray0, byteOrder0, 37382);
      tiffField0.getDoubleArrayValue();
      assertEquals(37382, tiffField0.getOffset());
      assertEquals(37382, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(37382, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2138682484), (-2138682484), fieldTypeAscii0.LONG, (-2138682484), (-2138682484), byteArray0, byteOrder0, (-2138682484));
      assertEquals(35204656, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2138682484), tiffField0.getDirectoryType());
      assertEquals((-2138682484), tiffField0.getSortHint());
      assertEquals((-2138682484), tiffField0.getTag());
      assertEquals((-2138682484), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeByte0, 65521, 65521, byteArray0, byteOrder0, 65521);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6f05e39d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2686, 2686, fieldTypeByte0.RATIONAL, 2686, 2686, byteArray0, byteOrder0, 2686);
      tiffField0.getIntArrayValue();
      assertEquals(21488, tiffField0.getBytesLength());
      assertEquals(2686, tiffField0.getOffset());
      assertEquals(2686, tiffField0.getTag());
      assertEquals(2686, tiffField0.getDirectoryType());
      assertEquals(2686, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 65535);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2695, 2695, fieldTypeByte0.RATIONAL, 2695, 2695, byteArray0, byteOrder0, 2695);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34906, 34906, fieldTypeAscii0, 0L, 255L, byteArray0, byteOrder0, 34906);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(34906, tiffField0.getDirectoryType());
      assertEquals(34906, tiffField0.getTag());
      assertEquals(34906, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65479, 65479, fieldTypeShort0, 65479, 65479, byteArray0, byteOrder0, 65479);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@3152187b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(920, 920, fieldTypeShort0, 920, 920, byteArray0, byteOrder0, 920);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x398)", string0);
      assertEquals(920, tiffField0.getOffset());
      assertEquals(920, tiffField0.getSortHint());
      assertEquals(920, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeByte0.RATIONAL, 339, 339, byteArray0, byteOrder0, 339);
      String string0 = tiffField0.getTagName();
      assertEquals("SampleFormat", string0);
      assertEquals(339, tiffField0.getOffset());
      assertEquals(339, tiffField0.getSortHint());
      assertEquals(339, tiffField0.getDirectoryType());
      assertEquals(339, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeFloat0, 24, 24, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.toString();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals("24 (0x18: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (24 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[341];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(50983, 50983, fieldTypeByte0, 50983, 50983, byteArray0, byteOrder0, 50983);
      String string0 = tiffField0.toString();
      assertEquals(50983, tiffField0.getOffset());
      assertEquals(50983, tiffField0.getBytesLength());
      assertEquals(50983, tiffField0.getSortHint());
      assertEquals("50983 (0xc727: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (341) (50983 Byte)", string0);
      assertEquals(50983, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2566, 60, fieldTypeFloat0, 60, 255L, byteArray0, byteOrder0, 2566);
      String string0 = tiffField0.toString();
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(2566, tiffField0.getSortHint());
      assertEquals("2566 (0xa06: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (60 Float)", string0);
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1519, 1519, fieldTypeShort0.DOUBLE, 1519, 1519, byteArray0, byteOrder0, 1519);
      String string0 = tiffField0.toString();
      assertEquals(1519, tiffField0.getDirectoryType());
      assertEquals(1519, tiffField0.getSortHint());
      assertEquals("1519 (0x5ef: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1519 Double)", string0);
      assertEquals(1519, tiffField0.getOffset());
      assertEquals(12152, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2909, 2909, fieldTypeDouble0, 2909, 2909, byteArray0, byteOrder0, 2909);
      String string0 = tiffField0.toString();
      assertEquals("2909 (0xb5d: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (2909 Double)", string0);
      assertEquals(23272, tiffField0.getBytesLength());
      assertEquals(2909, tiffField0.getSortHint());
      assertEquals(2909, tiffField0.getDirectoryType());
      assertEquals(2909, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[299];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1967, 1967, fieldTypeLong0, 1967, 1967, byteArray0, byteOrder0, 1967);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1967, tiffField0.getOffset());
      assertEquals(1967, tiffField0.getSortHint());
      assertEquals(1967, tiffField0.getTag());
      assertEquals(1967, tiffField0.getDirectoryType());
      assertEquals(7868, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1967L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeShort0, 339, 339, byteArray0, byteOrder0, 339);
      String string0 = tiffField0.toString();
      assertEquals(339, tiffField0.getDirectoryType());
      assertEquals(678, tiffField0.getBytesLength());
      assertEquals("339 (0x153: SampleFormat): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (121) (339 Short)", string0);
      assertEquals(339, tiffField0.getSortHint());
      assertEquals(339, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2707, 2707, fieldTypeByte0, 2707, 2707, byteArray0, byteOrder0, 2707);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2707, tiffField0.getDirectoryType());
      assertEquals(2707L, tiffField0.getCount());
      assertEquals(2707, tiffField0.getTag());
      assertEquals(2707, tiffField0.getBytesLength());
      assertEquals(2707, tiffField0.getSortHint());
      assertEquals(2707, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.ASCII, 151L, 151L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(151L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(151, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(151, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      String string0 = tiffField0.toString();
      assertEquals(65521, tiffField0.getOffset());
      assertEquals("65521 (0xfff1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (65521 Short)", string0);
      assertEquals(65521, tiffField0.getSortHint());
      assertEquals(65521, tiffField0.getDirectoryType());
      assertEquals(131042, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2448, 2448, fieldTypeAscii0, 2448, 2448, byteArray0, byteOrder0, 2448);
      tiffField0.toString();
      assertEquals(2448, tiffField0.getBytesLength());
      assertEquals(2448L, tiffField0.getCount());
      assertEquals(2448, tiffField0.getDirectoryType());
      assertEquals(2448, tiffField0.getOffset());
      assertEquals(2448, tiffField0.getTag());
      assertEquals(2448, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-795), (-795), fieldTypeFloat0, (-795), (-795), byteArray0, byteOrder0, (-795));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 32996);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-795), tiffField0.getSortHint());
      assertEquals((-795), tiffField0.getOffset());
      assertEquals((-795), tiffField0.getTag());
      assertEquals((-795), tiffField0.getDirectoryType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(975, 1763, fieldTypeLong0.FLOAT, 1763, 1763, byteArray0, byteOrder0, 6002);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription();
      assertEquals(1763, tiffField0.getDirectoryType());
      assertEquals(6002, tiffField0.getSortHint());
      assertEquals(1763L, tiffElement0.offset);
      assertNotNull(string0);
      assertEquals(975, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(28, (-907), fieldTypeShort0, (-907), 28, byteArray0, byteOrder0, (-2724));
      String string0 = tiffField0.getValueDescription();
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-907), tiffField0.getDirectoryType());
      assertEquals((-2724), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-907L), tiffField0.getCount());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 1470, fieldTypeFloat0, 4L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1470, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1885, "/KeikD|G4;");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1965), (-342), fieldTypeByte0, (-284L), 1L, (byte[]) null, byteOrder0, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1965 (0xfffff853: Unknown Tag): ", string0);
      assertEquals((-342), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-284), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 27, fieldTypeLong0, 27, 27, (byte[]) null, byteOrder0, 27);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(37382, (byte)0, fieldTypeFloat0, 37382, 37382, byteArray0, byteOrder0, 37382);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1f770703 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
