/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 04:38:45 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.Kernel;
import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.SMOset;
import weka.classifiers.misc.InputMappedClassifier;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.DenseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.core.TechnicalInformation;
import weka.core.neighboursearch.BallTree;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[1];
      SMOset sMOset0 = regSMO0.m_supportVectors;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1807.0;
      doubleArray0[1] = (-263.501959538);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-2876.422977548);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1.7976931348623157E308;
      doubleArray0[7] = 1716.46708;
      doubleArray0[8] = 530.620507818;
      regSMO0.m_sparseWeights = doubleArray0;
      regSMO0.setEpsilonParameter(1.7976931348623157E308);
      regSMO0.m_supportVectors = null;
      regSMO0.getOptions();
      regSMO0.m_classIndex = 1;
      stringArray0[0] = "nPT>Rs@l#</Oq|e1PT";
      regSMO0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146271641, 1.7976931348623157E308, 14.9999999985, 14.9999999985, 2146271641, 1239.50613561672, 2146271641, 1239.50613561672, 1.7976931348623157E308, 1239.50613561672, 1.7976931348623157E308);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 2000;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = (double) 2000;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      regSMO0.m_sparseWeights = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2000, (-1.0), 0.0, 3517.3432814756743, 2000, 3517.3432814756743, 0.0, (-1.0), 2000, 2000, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-3129), (-3129), 807.75, (-3129), 121, 807.75, 121, 807.75, (-3129), 1127.935910207898, (-3129));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      regSMO0.m_alpha2Star = 0.0;
      int int0 = (-3352);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-3352), (-3352), 4328.6347111, 0.0, (-3352), (-3352), 0.0, 0.0, 0.0, 0.693147181, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(210, (-43.79505758581063), 210, 210, 0, 0, 0, 210, (-438.762292), 0.01, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(69, 1.0, 1.0, 1.0, 69, (-1.0), (-1.0), 69, 4008.694196707, 15.0, 69);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      regSMO0.m_alpha2Star = 0.0;
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-1519.7252986928), 2, 2, (-2146258425), (-1101.6835381553858), 2, (-1101.6835381553858), (-2146258425), 460.31307838, (-2146258425));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      double double0 = 3263.93012739166;
      double double1 = 69.7935584;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(117, 117, (-2045.24292804), (-2045.24292804), 117, 117, 3263.93012739166, 69.7935584, 69.7935584, 69.7935584, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.takeStep(2, 2, (-203.9375488), 2, 346.056956331);
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      int int0 = (-1040);
      int int1 = 1148;
      try { 
        regSMO0.takeStep((-1040), 1148, (-1040), 0.964, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1893, 1750.424, 2.4957464152489714E-7, 2.4957464152489714E-7, 1893, 1893, 1893, 1510.8290025, 1510.8290025, 1893, 1893);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ")_X7*Hp?&";
      stringArray0[1] = "";
      stringArray0[2] = "b";
      double double0 = 0.0;
      int int0 = 1;
      int int1 = 340;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1, 0.0, 0.0, 340, 0.0, 0.693147181, 1, (-2110.48), 1, 0.693147181);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-277));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[6];
      doubleArray1[2] = (-0.002);
      doubleArray1[1] = (-2713.174468427352);
      doubleArray1[2] = 2364.59;
      doubleArray1[3] = (-2713.174468427352);
      doubleArray1[4] = (-2713.174468427352);
      doubleArray1[5] = (-2713.174468427352);
      regSMO0.m_error = doubleArray1;
      doubleArray0[0] = (-2713.174468427352);
      doubleArray0[1] = 1591.62456862726;
      doubleArray0[2] = (-1081.1169439327566);
      doubleArray0[3] = 75.969386982922;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.takeStep(377, 377, 377, 377, 377);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(676);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 1;
      int int1 = 340;
      double double0 = (-489.6);
      double double1 = 0.1;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-743), (-1.0), 242.3978922, 340, (-743), (-489.6), (-1285.09209), 0.1, 1.0E-10, 1.0E-8, 340);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2143909872), 0.0, 2115.03648644, 0.0, (-2143909872), 0.0, 2382.031794, (-2143909872), 0.0, 0.002, 1.0001);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2357, 2694.88303069, 2694.88303069, 2694.88303069, 2357, 2.5E-7, 2694.88303069, 2694.88303069, 2694.88303069, 2.5E-7, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 622.60306780836, 2500, 5.0, 2500, 622.60306780836, 101.265333417, 2500, 5.7, 5.7, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-2586);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2586), 1.0E-12, (-2293.280802789), (-2293.280802789), (-2586), (-4481.218304449), (-4481.218304449), (-4481.218304449), 1.0E-12, 99.0, 2366.646);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1039, 1039, 3839.5, 3839.5, 1039, 3839.5, (-4685.4597), 1326.59119, 3839.5, 1039, 1326.59119);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2143909872), 0.0, 2115.03648644, 0.0, (-2143909872), 36.24626037638616, 2382.031794, (-2143909872), 0.0, 0.002, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      Instances instances0 = regSMO0.m_data;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(255, 255, 1.9999999998, 255, 255, 1.0E-12, 1.9999999998, 1.0E-12, 1.0E-12, 1.9999999998, 1.9999999998);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(3, 3, (-2445.8903), 1.7976931346825464E308, 3, 0.964, 1.7976931346825464E308, 3, 0.964, 0.964, (-2445.8903));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 619.7638277382129, 2500, 2382.031794, 2500, 619.7638277382129, 2382.031794, 2500, 5.7, 1.0E-12, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2477, 284.971974, 2477, 2477, 2477, 2477, 2477, 924.795, 924.795, 2499.0, (-477.818253));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), (-1), 2.0, 2.0, (-1), 2.0, 2546.341277803956, 4.6, (-1), 1.0E-12, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2143909872), 0.0, (-2143909872), 2115.03648644, (-2143909872), (-20.9007), (-2217.9095338), 1030.0, 2382.031794, 1383.770081615887, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 939.5853236616434, 939.5853236616434, (-1360.7088402865), 0, 0, (-1360.7088402865), 165.0, (-4483.47768), 165.0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      RegSMO regSMO1 = new RegSMO();
      regSMO1.setSeed(99);
      // Undeclared exception!
      try { 
        regSMO1.findOptimalPointOnLine(3, 2546.34127805859, 3, 2546.34127805859, 10, 1540.3924890327, 2382.0317939999, 166.0, 2382.0317939999, 614.063827738, 614.063827738);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setSeed(412);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1009, 99, 1233.8276554764257, 380.0, 1617, (-1530.87565), 166.0, 1662.4356, (-1530.87565), 2219.6782257, 0.693147181);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 6.0, 771.49098680021, 3269.9946580055325, 2500, (-997.2752127429517), 3269.9946580055325, 771.49098680021, (-513.3213), 2617.0, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1), (-1), 2.0, 2.0, (-1), 165.9999999834, 2546.341277803956, 4.6, (-1), 1691.09554367, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      RegSMO regSMO1 = new RegSMO();
      regSMO1.setEpsilon(622.60306780836);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        regSMO1.findOptimalPointOnLine(2500, 5.0, 5.7, 622.60306780836, 2500, 1.0E-12, 113.839313926914, 1943.0, 1.0E-12, 2500, (-1396.953227005281));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 6.0, 1.0E-12, 3269.9946580055325, 2500, (-998.33465), 3269.9946580055325, 4313.827961690517, (-513.3213), Double.POSITIVE_INFINITY, 2500);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alphaStar = null;
      regSMO0.m_alpha = null;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0.0, 0, 0.0, 0, 0, 0.0, 0.0, 0.0, 2.4957464152489714E-7, 2.4957464152489714E-7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = (-2713.174468427352);
      doubleArray1[2] = (-2713.174468427352);
      doubleArray1[4] = (-2713.174468427352);
      doubleArray1[5] = (-2713.174468427352);
      regSMO0.m_error = doubleArray1;
      doubleArray0[0] = (-2713.174468427352);
      doubleArray0[2] = (-1074.9904961313866);
      regSMO0.m_alpha = doubleArray1;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(377, 1530.87565, 0.95, 1530.87565, 1595, (-2707.8136900023), 0.0, (-2713.174468427352), 377, 1528.265, 1233.8276554764257);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 377
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-44.142549840773164), 0, (-44.142549840773164), 0, 0, (-44.142549840773164), (-44.142549840773164), (-44.142549840773164), 2.4957464152489714E-7, 2.4957464152489714E-7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setSeed(99);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(99, 1.7976931348623157E308, 0.0, 2.382031794E-7, 19, 0.0, (-99.0), 5.0, 50.0, 2724.19, (-1146.7342462698193));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146160572, 740.599834, 439.50687, 0.0, 1366, 0.0, (-1153.53554597393), (-2.0), 0.0, 1204.3556276959491, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_error = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1.7976931348623157E308, 3709.879852519765, (-526.74109), (-3374), 12.300400189174551, 1659.176664, (-1.0E-6), (-235.410968060654), 3709.879852519765, 481.0656);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_error = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1791.5546692, (-1.0), 639.8798778185956, 2, (-1.0), 1791.5546692, 496.1648320066969, (-2928.596994), 1791.5546692, (-2050.00453));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(38);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1.7976931348623157E308;
      doubleArray1[1] = 1.7976931348623157E308;
      doubleArray1[2] = 2499.9999995;
      doubleArray1[3] = (double) 38;
      doubleArray1[4] = (-44.142549840773164);
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = 2499.9999995;
      regSMO0.m_alpha = doubleArray1;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 0.0, 2, 1.7976931348623157E308, 2, 2, 2499.9999995, 0.0, 0.0, 2499.9999995, (-44.142549840773164));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setEpsilon((-585.6759928182892));
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2499.9999995, 2008.977541918, (-2.147483648E9), 2, 0.0, 1976.13171561692, 2499.9999995, 33.6037, 377.0, 2008.977541918);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_nCacheHits = (-2743);
      regSMO0.secondChoiceHeuristic((-2743));
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String string0 = regSMO0.globalInfo();
      assertEquals("Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.", string0);
      
      double[] doubleArray0 = new double[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      int int0 = regSMO0.secondChoiceHeuristic(0);
      assertEquals((-1), int0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) 202;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(202);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double[] doubleArray0 = new double[6];
      regSMO0.m_C = (-585.6759928182892);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 869.357065677, 1.0E-12, (-2418.63977), 0, 1.7976931348623157E308, 639.8798778185956, 1.0E-12, 1294.0, 1.7976931348623157E308, (-1435.56));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      int int0 = 2;
      regSMO0.setSeed(2);
      double double0 = 4.0;
      double[] doubleArray1 = new double[8];
      doubleArray0[5] = (double) 2;
      doubleArray1[2] = 2499.9999995;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-682.311925642291), 942.6, 2244.3547117373964, 2, 2.4957464152489714E-7, 2.4957464152489714E-7, (-1406.7231108546516), 1493.7182683369, 2244.3547117373964, 1942.972695298729);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alpha = doubleArray0;
      regSMO0.setSeed(2);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 2;
      doubleArray1[2] = 2499.9999995;
      doubleArray1[0] = (double) 2;
      doubleArray1[6] = (double) 2;
      regSMO0.getRevision();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 2.0, 2.0, 2499.9999995, 3327, 4001.604014777535, 2.0, 2499.9999995, 4.0, 3327, 4001.604014777535);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.0E75;
      doubleArray0[1] = (double) 47;
      doubleArray0[2] = (-2574.202);
      doubleArray0[3] = 728.70806;
      doubleArray0[4] = (-682.311925642291);
      regSMO0.m_alphaStar = doubleArray0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(47, (-2784.7780812420706), (-2574.202), 728.70806, 0, (-2574.202), 47, (-44.142549840773164), (-845948.9823968923), (-682.311925642291), 47);
      assertFalse(boolean0);
      
      int int0 = regSMO0.secondChoiceHeuristic(0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double[] doubleArray0 = new double[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      int int0 = 0;
      regSMO0.setSeed(43);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-41.1925630396546), (-916.431), (-41.1925630396546), 0, (-916.431), (-41.1925630396546), (-4274.006685667373), (-41.1925630396546), 2.4957464152489714E-7, (-916.431));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      double[] doubleArray0 = new double[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alpha2Star = (double) 43;
      regSMO0.m_bModelBuilt = true;
      regSMO0.setSeed(43);
      regSMO0.m_eps = Double.NaN;
      regSMO0.m_target = doubleArray0;
      regSMO0.findOptimalPointOnLine(0, (-44.142549840773164), (-2.0), (-44.142549840773164), 0, (-2.0), (-44.142549840773164), (-4274.006685667373), (-44.142549840773164), 2.4957464152489714E-7, (-682.31));
      regSMO0.optimize();
      regSMO0.optimize();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      RegSMO regSMO1 = new RegSMO();
      regSMO1.setSeed((-490));
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-44.142549840773164), 2.4957464152489714E-7, (-1637.04), (-490), 3853.19, 1976.13171561692, Double.NaN, (-1751.434596627), 2921.7599, (-1637.04));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -490
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setOptions((String[]) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 0, 0.05, 0.05, 2500, (-1.0), 2500, 3371.76178, (-44.142549840773164), 43.0, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 2.4957464152489714E-7, (-81.0), 2136, 2136, (-1163.95226), 2711.574724114193, 312.494516522, 312.494516522, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2136
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      String[] stringArray0 = new String[5];
      stringArray0[0] = "=D:J5";
      stringArray0[1] = "\tThe epsilon for round-off error.\n\t(default 1.0e-12)";
      stringArray0[2] = "e4/E[%6N9{2q]\\";
      stringArray0[3] = "\"E;p9(Spq&>9l,=nw";
      stringArray0[4] = "r_-tvIPC";
      regSMO0.setOptions(stringArray0);
      doubleArray0[0] = 0.964;
      doubleArray0[1] = 1575.3224222;
      doubleArray0[2] = (-74.4789927185);
      doubleArray0[3] = 42.06256736440531;
      doubleArray0[4] = (-1478.358324166);
      doubleArray0[5] = 397.0;
      doubleArray0[6] = (-30.19785116585931);
      doubleArray0[7] = 1293.16852;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.secondChoiceHeuristic(2474);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[6];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      SMOset sMOset0 = new SMOset(11);
      regSMO0.m_supportVectors = sMOset0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, 723.85, 1.7976931346825464E308, 723.85, 2963, 2.0, 0.1, 1.7976931348623157E308, (-4017.875), 0, 1.7976931348623157E308);
      boolean boolean1 = regSMO0.findOptimalPointOnLine(0, 0, 0, (-43.79505758581063), 0, 0, (-43.79505758581063), (-43.79505758581063), (-43.79505758581063), 2.4957464152489714E-7, 2.4957464152489714E-7);
      assertFalse(boolean1 == boolean0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      SMOset sMOset0 = new SMOset(38);
      regSMO0.m_supportVectors = sMOset0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, 0, 0, 939.5853236616434, 0, 0, 939.5853236616434, 939.5853236616434, 939.5853236616434, 2.4957464152489714E-7, 2.4957464152489714E-7);
      assertTrue(boolean0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[10];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      SMOset sMOset0 = new SMOset(20);
      regSMO0.m_supportVectors = sMOset0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, (-43.79505758581063), 1.7976931346825464E308, (-43.79505758581063), 2963, (-43.79505758581063), 0.1, 1.7976931348623157E308, (-43.79505758581063), 0, 1.7976931348623157E308);
      boolean boolean1 = regSMO0.findOptimalPointOnLine(0, 0, 0, (-43.79505758581063), 0, 0, (-43.79505758581063), (-43.79505758581063), (-43.79505758581063), 2.4957464152489714E-7, 2.4957464152489714E-7);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[10];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      SMOset sMOset0 = new SMOset(20);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.findOptimalPointOnLine(0, (-966.0), 1.7976931346825464E308, (-966.0), 2939, (-966.0), 0.1, 1.7976931348623157E308, (-966.0), 0, 4373.7830750609455);
      regSMO0.findOptimalPointOnLine(0, 0, 0, (-966.0), 0, 0, (-966.0), (-966.0), (-966.0), 2.4957464152489714E-7, 2.4957464152489714E-7);
      regSMO0.findOptimalPointOnLine(0, 380.85733473689487, 2087.633, 2939, 0, 2.0E-10, 1.0, 1.7976931346825464E308, 1.0E-12, 1.0E-12, (-4708.1528));
      TechnicalInformation technicalInformation0 = regSMO0.getTechnicalInformation();
      assertEquals(TechnicalInformation.Type.MISC, technicalInformation0.getType());
  }
}
