/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:10:27 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Properties;
import org.apache.derby.iapi.store.raw.log.LogInstant;
import org.apache.derby.iapi.types.TypeId;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.command.Parser;
import org.h2.engine.Session;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.lib.FileUtil;
import org.junit.runner.RunWith;
import org.postgresql.jdbc4.Jdbc4Connection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.escape("--6VoQ^");
      // Undeclared exception!
      try { 
        DBUtil.runScript("--6VoQ^", "--6VoQ^", (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --6VoQ^
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.checkReadOnly("bM*a?1;Bem^&u", false);
      DBUtil.existsEnvironment("");
      String string0 = "''";
      DBUtil.available("", "'", "''", "''");
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.escape("1)$J>1cK");
      // Undeclared exception!
      try { 
        DBUtil.runScript("6VoQ^", (Connection) null, false, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      String string0 = "'";
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("'", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((long) 0, 0);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "P";
      long long0 = LogInstant.INVALID_LOG_INSTANT;
      DBUtil.escape("FIELD_POSITION");
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.countRows("FIELD_POSITION", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.resetMonitors();
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/null.env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((String) null, false, false, false, false, "Yb`,=|Un", false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'null'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      boolean boolean0 = false;
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      DBUtil.getOpenResultSetCount();
      String string0 = "--UBgt";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--UBgt", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      ErrorHandler errorHandler0 = new ErrorHandler("40001");
      ResultSet resultSet0 = null;
      DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      String string0 = "vMXJ0A;:R0,cYx)V}[x";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect("vMXJ0A;:R0,cYx)V}[x", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'vMXJ0A;:R0,cYx)V}[x.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("user");
      DBUtil.runScript("--", (Connection) null, false, (ErrorHandler) null);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      String string0 = "";
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("password", class0, (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VersionNumber.valueOf("Th");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.runScript("Th", (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VersionNumber.valueOf(": =*Xrg+");
      VersionNumber versionNumber0 = VersionNumber.valueOf(": =*Xrg+");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("us", "d..p7_3PLCc", versionNumber0);
      DBUtil.dependencyOrderedTables(defaultDatabase0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      DBUtil.available("us", "1)$J>1cK", "us", "eT");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.format(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.tools.SimpleResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = FileUtil.fsNormalizesPosixSeparator;
      DBUtil.getOpenConnectionCount();
      Connection connection0 = null;
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "Yb`,=|Un", true, false, false, true, "org.databene.SQL", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("95s", "95s", "95s", "V^XI6xM]i[31Lw", "One-row database query returned multiple rows: ", "V^XI6xM]i[31Lw");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 95s failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.escape("");
      String string0 = "--org.databene.JDBC";
      DBUtil.available("openCore", "m*.\"%0X/,ry71EE\"Q1", "", "m*.\"%0X/,ry71EE\"Q1");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("m*.\"%0X/,ry71EE\"Q1", "", "--pa[geSize", "m*.\"%0X/,ry71EE\"Q1", "--pa[geSize", "--org.databene.JDBC");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = " connection(s)";
      // Undeclared exception!
      try { 
        DBUtil.query(" connection(s)", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VersionNumber.valueOf("Th");
      DBUtil.available("0@F`Q7Z", "Th", "0@F`Q7Z", "--org.da?abeAe.JDBC");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "Error getting statement from result set", "or", "r", ",K>M|/qr;FAUVYY^", ",K>M|/qr;FAUVYY^");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
