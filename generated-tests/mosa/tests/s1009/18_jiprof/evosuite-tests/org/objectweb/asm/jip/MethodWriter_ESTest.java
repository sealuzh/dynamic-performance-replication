/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:31:59 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)127;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-413));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -413
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[1];
      ClassWriter classWriter1 = new ClassWriter(20);
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 16, 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2505, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1401);
      intArray0[1] = (-1327);
      intArray0[2] = (-1327);
      intArray0[3] = 0;
      ClassWriter classWriter0 = new ClassWriter((-2557));
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">[6GPVjfu/z5";
      stringArray0[1] = ">[6GPVjfu/z5";
      stringArray0[2] = "<init>";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1327), "<init>", "<init>", "<init>", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"zUpVCg", "\"zUpVCg", "t$>", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(1, (-1174));
      methodWriter1.visitEnd();
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "ugO{nz", "ugO{nz", "[s", (String[]) null, false, false);
      methodWriter0.visitMaxs((-539), 2);
      methodWriter0.visitFrame(1243, 1243, (Object[]) null, 1912, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 2061, (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(981);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "*]p", "k=m)~89l ", "k=m)~89l ", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "k=m)~89l ");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5633);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "StaakMPp";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "StaakMPp", "StaakMPp", "StaakMPp", stringArray0, false, false);
      methodWriter0.visitLdcInsn("StaakMPp");
      MethodWriter methodWriter1 = methodWriter0.next;
      Label label0 = new Label();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2505, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitInsn(98);
      Label label0 = new Label();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(2, 2061);
      methodWriter0.visitLabel(label0);
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      boolean boolean0 = true;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "Ba(X*w2TOjxu", "DWh0x;R) rzp<", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5644);
      boolean boolean0 = true;
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "edt9rm", "RuntimeInvisibleAnnotations", "edt9rm", (String[]) null, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nlz", "bugO/nlz", "bugO/nlz", (String[]) null, false, false);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2061, "bugO/nlz", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Label label0 = new Label();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-527), "", "", "", (String[]) null, false, false);
      methodWriter0.visitFrame(2, 2, (Object[]) null, (-527), (Object[]) null);
      methodWriter0.visitFieldInsn((-1694), "", "w<;+xrsQ3*}kjMe@}", "");
      int int0 = methodWriter0.getSize();
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",uU=;s41t]", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      methodWriter0.visitLdcInsn("StackMap");
      MethodWriter methodWriter1 = methodWriter0.next;
      Label label0 = new Label();
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SktacOkMap", "LocalVariableTable", "bugO/Cnz", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("bugO/Cnz", "bugO/Cnz", "SktacOkMap", label0, label0, 2);
      int[] intArray0 = new int[1];
      intArray0[0] = 2505;
      methodWriter0.visitMultiANewArrayInsn("s#7", 2505);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("SktacOkMap", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2505, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitMaxs((-65), (-4698));
      methodWriter0.visitTypeInsn((-225), "SktacOkMap");
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3132);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Aa+I<^FjN";
      stringArray0[1] = "Aa+I<^FjN";
      stringArray0[2] = "Aa+I<^FjN";
      stringArray0[3] = "Aa+I<^FjN";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 168, "Aa+I<^FjN", "Aa+I<^FjN", "Aa+I<^FjN", stringArray0, false, false);
      int int0 = methodWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1228);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wvO{nz", "wvO{nz", "java/lang/Throwable", (String[]) null, false, false);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitVarInsn(1228, (-1323));
      methodWriter1.visitLabel(label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5714);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Dhr0x;IR) r<";
      stringArray0[1] = "Dhr0x;IR) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5714, "Dhr0x;IR) r<", "Dhr0x;IR) r<", "Dhr0x;IR) r<", stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector(5714);
      ByteVector byteVector1 = byteVector0.put11(5714, 5714);
      methodWriter0.visitFrame(1, 5714, stringArray0, 5714, stringArray0);
      methodWriter0.visitTypeInsn(1, "Dhr0x;IR) r<");
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ">[6GPVjfu/z5";
      stringArray0[1] = ">[6GPVjfu/z5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, " ", "StackMap", "[]", stringArray0, false, false);
      methodWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(83);
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(83, 83);
      methodWriter0.visitMaxs(1, 1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"zUpVCg", "\"zUpVCg", "\"zUpVCg", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitFrame(5, 5, stringArray0, 5655, stringArray0);
      methodWriter0.visitTypeInsn((-1040), "EnclosingMethod");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "bugO/nz", "b_RYxN", "bugO/nz", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, 236);
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      Label label1 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label2 = new Label();
      methodWriter0.visitLabel(label1);
      assertFalse(label1.equals((Object)label2));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2505, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2061, 2505);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2061, "SktacOkMap", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Dohr0xc;R) r<";
      stringArray0[1] = "Dohr0xc;R) r<";
      stringArray0[2] = "Dohr0xc;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Dohr0xc;R) r<", "Dohr0xc;R) r<", "Dohr0xc;R) r<", stringArray0, true, false);
      methodWriter0.visitVarInsn(31, 123);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, (-1), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      int int0 = Type.LONG;
      methodWriter0.visitVarInsn(1, 2);
      methodWriter0.visitIincInsn(2, (-675));
      methodWriter0.visitMaxs((-675), 98);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(Integer.MAX_VALUE, "@t", "DWhr0x;R) r<", "X ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      methodWriter0.visitVarInsn(1, 1);
      methodWriter0.visitFieldInsn(1, "DWh0x;R) rzp<", "Ba(X*w2TOjxu", "Ba(X*w2TOjxu");
      methodWriter0.visitTypeInsn(5669, "Ba(X*w2TOjxu");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1403);
      MethodWriter.getNewOffset(intArray0, intArray0, (-1403), (-790));
      ClassWriter classWriter0 = new ClassWriter((-1403));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "3I:n7^C?sY";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "PC;C5`Yt&";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1403), "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "3I:n7^C?sY", stringArray0, false, false);
      methodWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      classWriter0.newMethodItem("\ns", "A-+", "A-+", true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "bugO/nz", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(2, "G\"H?EA#", "LocalVariableTypeTable", "Signature");
      methodWriter0.visitTypeInsn(186, "G\"H?EA#");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      ClassWriter classWriter1 = new ClassWriter((-1924));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1, "ugO{nz", "java/lang/Throwable", "[s", (String[]) null, false, false);
      methodWriter0.visitFrame(1228, 1228, (Object[]) null, 1228, (Object[]) null);
      Label label0 = new Label();
      label0.info = (Object) "java/lang/Throwable";
      methodWriter0.visitLabel(label0);
      methodWriter0.visitJumpInsn(2, label0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(170);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 624, "bugO/nz", "bugO/nz", "bugO/nz", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(170, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(5655, "iH<^8eS\"2~x->", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",uU=;s41t]", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      methodWriter0.visitLdcInsn("StackMap");
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitTypeInsn(5655, ",uU=;s41t]");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitIntInsn(2, 2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5644);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777228, "StackMap", "DWhr0x;R) r<", "StackMap", stringArray0, true, false);
      methodWriter0.visitLdcInsn("DWhr0x;R) r<");
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitIntInsn(5644, 5644);
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2505, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitMethodInsn(1048575, "&xr*=V>", "SktacOkMap", "amOst>xl;=yTN:");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SktacOkMap", "LocalVariableTable", "bugO/Cnz", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("bugO/Cnz", "bugO/Cnz", "SktacOkMap", label0, label0, 2);
      methodWriter0.visitAnnotation("LocalVariableTable", true);
      methodWriter0.visitLocalVariable("SktacOkMap", "#Fvo}kC%#8KSH1V`,", "%:8?R2f`*)", label0, label0, 127);
      ByteVector byteVector0 = new ByteVector(285212673);
      ByteVector byteVector1 = byteVector0.putShort(179);
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"zUpVCg", "\"zUpVCg", "\"zUpVCg", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("\"zUpVCg");
      methodWriter1.visitAttribute(attribute0);
      methodWriter0.visitTypeInsn(1, "\"zUpVCg");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 5697, "y`>r?qw4d8 Cg<", "Q7&ne'*)p", "AnnotationDefault", stringArray0, false, true);
      classWriter0.addType("AnnotationDefault");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 5697, stringArray0, 5697, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2505);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SktacOkMap", "LocalVariableTable", "bugO/Cnz", (String[]) null, false, false);
      classWriter0.addType("SktacOkMap");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 169, "ugO{nz", "^BwRtpeJ<", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.visitFrame(1, (-65), (Object[]) null, 169, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1780), 169, (Object[]) null, 24, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 685;
      intArray0[3] = 685;
      intArray0[5] = 685;
      ClassWriter classWriter0 = new ClassWriter(1107297537);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "*=4A", "org.objectweb.asm.jip.MethodWriter", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      Label label0 = new Label();
      label0.line = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {685, 0, 0, 685, 0, 685, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 26);
      methodWriter0.visitMaxs((-1327), 5697);
      methodWriter0.visitMethodInsn(26, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<");
      methodWriter0.visitTypeInsn((-1327), "DWhr0x;R) r<");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = 2061;
      ClassWriter classWriter0 = new ClassWriter(2061);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&c)LEJ6h-U,/9US1I";
      stringArray0[1] = "&c)LEJ6h-U,/9US1I";
      stringArray0[2] = "%:8?R2f`*)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "%:8?R2f`*)", "&c)LEJ6h-U,/9US1I", "%:8?R2f`*)", stringArray0, true, true);
      methodWriter0.visitAnnotation("&c)LEJ6h-U,/9US1I", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, (-1147));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "SktacOkMap", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitIincInsn((-1750), 16777221);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2061, "SktacOkMap", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "bugO/nz", "bugO/nz", (String[]) null, false, false);
      methodWriter0.visitIincInsn(16777218, 1224);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2061, "bugO/nz", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Label label0 = new Label();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(17);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-527), "M", "M", "M", (String[]) null, false, false);
      methodWriter0.visitFrame(2, 2, (Object[]) null, (-527), (Object[]) null);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      String string0 = "t$p>";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "btackMaE", "btackMaE", "t$p>", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("fAQKg");
      methodWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      methodWriter0.visitIincInsn(2, 1);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      Label label1 = label0.successor;
      label0.visitSubroutine((Label) null, 4294967295L, 2);
      Attribute attribute0 = new Attribute("DWhr0x;R) r<");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMultiANewArrayInsn("DWhr0x;R) r<", 57);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "bugO/nz", "bugO/nz", "bugO/nz", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLineNumber((-32768), label1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2061, "bugO/nz", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = (-995);
      MethodWriter.getNewOffset(intArray0, intArray0, (-995), (-995));
      ClassWriter classWriter0 = new ClassWriter(15);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "[V&plFjwm)4:IcQcX&#";
      stringArray0[1] = "[V&plFjwm)4:IcQcX&#";
      stringArray0[2] = "Q<XC";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3512, "", "[V&plFjwm)4:IcQcX&#", "Q<XC", stringArray0, true, false);
      methodWriter0.visitIincInsn(15, 2977);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1228);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "SktacOkMap";
      stringArray0[1] = "SktacOkMap";
      stringArray0[2] = "wvO{nz";
      stringArray0[3] = "wvO{nz";
      stringArray0[4] = "SktacOkMap";
      stringArray0[5] = "wvO{nz";
      stringArray0[6] = "wvO{nz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "wvO{nz", "wvO{nz", "wvO{nz", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable((String) null, (String) null, (String) null, label0, label1, 2505);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      int int0 = (-2013884533);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = ">[6GPVjfu/z5";
      stringArray0[3] = "StackMap";
      stringArray0[4] = ">[6GPVjfu/z5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2013884533), "StackMap", "DWhr0x;R) r<", ">[6GPVjfu/z5", stringArray0, true, false);
      methodWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(285212681);
      byteVector0.putInt(2);
      byteVector0.put12(1224736769, 285212681);
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(22, (-2013884533));
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(647);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 647
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5644);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[4] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "DWHu0x;R) r<", "DWHu0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitFieldInsn(5644, "6'@ZYtHm^gD", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(1, "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("DWhr0x;R) r<", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(2, 20);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(5697);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector();
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotNull(byteVector1);
      
      methodWriter0.visitFieldInsn(20, "6'@ZYtHm^gD", "DWhr0x;R) r<", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(20, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&c)LEJ6h-U,/9US1I";
      stringArray0[1] = "&c)LEJ6h-U,/9US1I";
      stringArray0[2] = "%:8?R2f`*)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "%:8?R2f`*)", "&c)LEJ6h-U,/9US1I", "%:8?R2f`*)", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-422), 168);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5712);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5712, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(5712);
      assertNotNull(byteVector0);
      
      methodWriter0.visitTypeInsn(5712, "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put11(5712, 5712);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(1, 5712, stringArray0, 5712, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTypeInsn(191, "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(170, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "{~9;:O*&jr~EZeSUm0|");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "6b%s%N2");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",uU=;s41t]", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5633);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "StackMap", "StackMap", "StackMap", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Object[] objectArray0 = new Object[1];
      methodWriter0.visitIincInsn((-3139), (-1928));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = classWriter0.addType("StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      objectArray0[0] = (Object) methodWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 57, objectArray0, 5633, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.MethodWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "VYf[(r.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "VYf[(r.", "VYf[(r.", "VYf[(r.", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(1, 5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1327), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitMethodInsn(186, "VYf[(r.", "VYf[(r.", "VYf[(r.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1228);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "wvO{nz", "wvO{nz", "java/lang/Throwable", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1228, 1228, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 1228, (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "eV *+[wC:(etbiKq";
      stringArray0[1] = "eV *+[wC:(etbiKq";
      stringArray0[2] = "eV *+[wC:(etbiKq";
      stringArray0[3] = "eV *+[wC:(etbiKq";
      stringArray0[4] = "eV *+[wC:(etbiKq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "eV *+[wC:(etbiKq", "eV *+[wC:(etbiKq", "eV *+[wC:(etbiKq", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "eV *+[wC:(etbiKq", "eV *+[wC:(etbiKq", "eV *+[wC:(etbiKq", stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertFalse(methodWriter2.equals((Object)methodWriter0));
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertNotSame(methodWriter2, methodWriter0);
      
      methodWriter1.classReaderOffset = 55;
      methodWriter2.visitMaxs(5655, 596);
      assertFalse(methodWriter2.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertNotSame(methodWriter2, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int0);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      
      methodWriter1.visitInsn(5655);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      
      methodWriter0.visitIntInsn(55, 54);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertFalse(methodWriter0.equals((Object)methodWriter2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(methodWriter0, methodWriter1);
      assertNotSame(methodWriter0, methodWriter2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(0, "org.objectweb.asm.jip.MethodWriter", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = (-2013884533);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = ">[6GPVjfu/z5";
      stringArray0[3] = "StackMap";
      stringArray0[4] = ">[6GPVjfu/z5";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2013884533), "StackMap", "DWhr0x;R) r<", ">[6GPVjfu/z5", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderOffset = 1;
      ByteVector byteVector0 = new ByteVector(285212681);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.put12(1224736769, 285212681);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UmcGwlGyo4Y(n");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "btackMaE", "btackMaE", "t$p>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("HtackMap", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(28, int0);
      assertSame(methodWriter1, methodWriter0);
      
      Attribute attribute0 = new Attribute("t$p>");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(1, "t$p>", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      classWriter1.visitSource("wPQBg!", " d<Zf4au");
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitIincInsn(1, 2);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFieldInsn(1, "StackMap", "StackMap", "StackMap");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitIntInsn(2, (-5681));
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      int int0 = methodWriter0.getSize();
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(72, int0);
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(2, 26);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1327), 5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTypeInsn(2, "F]u^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "StackMap";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "StackMap", "StackMap", "StackMap", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(34, int0);
      
      int int1 = classWriter0.newNameType("StackMap", "StackMap");
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(5, int1);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(53, int2);
      
      Attribute attribute0 = new Attribute("StackMap");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Attribute attribute1 = new Attribute("$1cDj");
      assertFalse(attribute1.equals((Object)attribute0));
      assertNotNull(attribute1);
      assertFalse(attribute1.isCodeAttribute());
      assertTrue(attribute1.isUnknown());
      
      Attribute attribute2 = attribute1.next;
      assertNull(attribute2);
      
      methodWriter0.visitFrame(0, 2, stringArray0, 5, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "VYf[(r.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "VYf[(r.", "VYf[(r.", "VYf[(r.", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(1, 5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMaxs((-1327), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Label label2 = label1.successor;
      assertNull(label2);
      
      AnnotationVisitor annotationVisitor1 = classWriter0.visitAnnotation("VYf[(r.", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label3 = edge0.successor;
      assertNull(label3);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label1, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Dohr0xc;R) r<";
      stringArray0[1] = "Dohr0xc;R) r<";
      stringArray0[2] = "Dohr0xc;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2636, "Dohr0xc;R) r<", "Dohr0xc;R) r<", "Dohr0xc;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      methodWriter0.visitInsn(74);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter1.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2065));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.addUninitializedType("eV *+[wC:(etbiKq", 5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "eV *+[wC:(etbiKq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "eV *+[wC:(etbiKq", "VYfP&(rJ", "VYfP&(rJ", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(32, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      classWriter0.visitSource("`$vF 3Z6^", "StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(1, 184);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-2065), "eV *+[wC:(etbiKq", "eV *+[wC:(etbiKq", "`$vF 3Z6^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1314), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-2795), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(897, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = (-2065);
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      methodWriter0.visitTypeInsn((-2065), "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = methodWriter0.getSize();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(73, int2);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "ugO{nz", "^BwRtpeJ<", "[s", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitFrame(2061, 2061, (Object[]) null, 1912, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitTypeInsn(1912, "[s");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(classWriter0.firstMethod, methodWriter0);
      
      methodWriter0.visitIincInsn(2, 153);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 2061, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2065));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.addUninitializedType("eV *+[wC:(etbiKq", 5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "eV *+[wC:(etbiKq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "eV *+[wC:(etbiKq", "VYfP&(rJ", "VYfP&(rJ", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(32, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      classWriter0.visitSource("`$vF 3Z6^", "StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 3810, "l^", "eV *+[wC:(etbiKq", (String) null, stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotation("RuntimeVisibleAnnotations", false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(methodWriter1, methodWriter0);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("int", 132);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector(32);
      assertNotNull(byteVector0);
      
      methodWriter1.put(byteVector0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("DWhr0x;R) r<", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(2, 26);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(5697);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(26);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(54, 176, stringArray0, 154, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitTypeInsn(170, "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitJumpInsn(176, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ugO{nz";
      stringArray0[1] = "ugO{nz";
      stringArray0[2] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[4] = "ugO{nz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "ugO{nz", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(166, (-1789));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[0];
      methodWriter0.visitFrame(2, 2061, objectArray0, (-1310), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("RuntimeInvisibleParameterAnnotations", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLocalVariable("RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "char", label0, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(112, int0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",uU=;s41t]", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("StackRaq");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.visitSubroutine(label1, 4294967295L, 2);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitJumpInsn(170, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.BASE_VALUE;
      assertEquals(1048575, int0);
      
      methodWriter0.visitVarInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      methodWriter0.visitIincInsn((-675), 5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(127, "!8[KihA382^ $pZ$l1 ", "DWhr0x;R) r<", "k]6_\"58g T}qYm");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(171, 9);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(127, 1048575);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(171, "DWhr0x;R) r<", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5633);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "StaMap";
      stringArray0[1] = "StaMap";
      stringArray0[2] = "StaMap";
      stringArray0[3] = "StaMap";
      stringArray0[4] = "StaMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StaMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      methodWriter0.visitLdcInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newClassItem("StaMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      int[] intArray0 = new int[0];
      ByteVector byteVector0 = new ByteVector(5633);
      assertNotNull(byteVector0);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertArrayEquals(new int[] {}, intArray0);
      assertNotSame(label0, label1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWsr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "StackMap", "DWsr0x;R) r<", "StackMap", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      Integer integer0 = new Integer(5655);
      assertNotNull(integer0);
      assertEquals(5655, (int)integer0);
      
      methodWriter1.visitLdcInsn("DWsr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter1.visitTypeInsn(2, "DWsr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 180;
      intArray0[1] = 2;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label1;
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new int[] {180, 2, 0, 0, 0, 0, 0}, intArray0);
      assertNotSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&c)LEJ6h-U,/9US1I";
      stringArray0[1] = "&c)LEJ6h-U,/9US1I";
      stringArray0[2] = "%:8?R2f`*)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2061, "%:8?R2f`*)", "&c)LEJ6h-U,/9US1I", "SktacOkMap", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1228, 2061, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("%:8?R2f`*)", "&c)LEJ6h-U,/9US1I", "%:8?R2f`*)", label0, label0, (-128));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("~!F9RI=o", "DWh0x;R) rzp<", "float", label0, label0, 68);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(179, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&c)LEJ6h-U,/9US1I";
      stringArray0[1] = "&c)LEJ6h-U,/9US1I";
      stringArray0[2] = "%-o:8?R2'Y*)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "%-o:8?R2'Y*)", "&c)LEJ6h-U,/9US1I", "%-o:8?R2'Y*)", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(31, 2254, stringArray0, (-1988), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("<9MD", "<in/it>", "LocalVariableTypeTable", label0, label0, 31);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(70);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(70);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame((-1310), 46, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFieldInsn(5655, "6'@9~H^gD", "G\"H?EA#", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitMaxs(8, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitIntInsn(285212684, 70);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitLineNumber((-1310), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5644);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector();
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertNotNull(byteVector1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFieldInsn(5644, "6'@ZYtHm^gD", "G\"H?EA#", "G\"H?EA#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLdcInsn("StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = methodWriter0.next;
      assertNull(methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "btackMaE", "btackMaE", "t$p>", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      int int1 = classWriter0.newNameType("btackMaE", "t$p>");
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, int1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int2 = methodWriter1.getSize();
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int2);
      assertSame(methodWriter1, methodWriter0);
      
      Attribute attribute0 = new Attribute("t$p>");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      methodWriter1.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter2.visitParameterAnnotation(1376, "Ljava/lang/Synthetic;", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitInsn(16);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertEquals(8388608, int0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(145, 98);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 16777217;
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("RuntimeInvisibleAnnotations", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(34, int0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitVarInsn(34, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = 1;
      methodWriter0.visitVarInsn(55, 17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector1 = null;
      try {
        byteVector1 = new ByteVector((-1409));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(34, int0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitVarInsn(34, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(17, "!8[KihA38X^ $pZ$l1 ", "DWhr0x;R) r<", "k]6_\"58g T}qYm");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(171, 34);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(17, 7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(7, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      Integer integer0 = new Integer(5697);
      assertNotNull(integer0);
      assertEquals(5697, (int)integer0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      methodWriter0.visitInsn(178);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "(c[.CnJYk", "short", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertNotNull(label2);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      methodWriter0.visitFrame(687, 273, stringArray0, 46, stringArray0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFieldInsn(687, "double", "StackMap", "DWhr0x;R) r<");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter1.firstMethod;
      assertNull(methodWriter1);
      
      classWriter1.index = 127;
      methodWriter0.visitMaxs(1, 5655);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      int int0 = 285212684;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitIntInsn(8, 1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      Attribute attribute0 = new Attribute("bt!ckMaE");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      // Undeclared exception!
      try { 
        methodWriter2.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5633);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(689, 411);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-4888), "AnnotationDefault", "DWsr0x;R) r<", "StcvMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter1.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(methodWriter1, methodWriter0);
      assertSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(185, "LineNumberTable", "StackMap", "VYfP&(rJ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",uU=;s41t]", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(3890, ",uU=;s41t]", "yu", ";=s\"`");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("StackMap", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      ClassWriter classWriter1 = new ClassWriter(2);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      classWriter1.visitSource("wPQBg!", " d<Zf4au");
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitIincInsn(184, 2);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFieldInsn(1, "StackMap", "StackMap", "StackMap");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitFieldInsn((-5681), "SEv?JAwOMY6^L#?>_6_", "Exceptions", "JQ.");
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLocalVariable("Exceptions", "{]xFM\"E,],", "Deprecated", label0, label0, (-674));
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5712);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5712, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(5712);
      assertNotNull(byteVector0);
      
      methodWriter0.visitTypeInsn(5712, "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector1 = byteVector0.put11(5712, 5712);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(1, 5712, stringArray0, 5712, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTypeInsn(191, "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(170, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5655, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(98);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(98, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "DWhr0x;R) r<", "DWhr0x;R) r<", "4<iXJtC;N6rE\"H`;IZl");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(188, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(188, "z/.AbA3YvEW\"", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(112, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("Ljava/lang/Synthetic;", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5693);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "SktackMap";
      stringArray0[2] = "SktackMap";
      stringArray0[3] = "SktackMap";
      stringArray0[4] = "SktackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SktackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(70);
      assertNotNull(byteVector0);
      
      methodWriter0.visitFrame(1, 46, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(5693, "SktackMap", "G\"H?EA#", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation((-580), "SktackMap", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&c)LEJ6h-U,/9US1I";
      stringArray0[1] = "&c)LEJ6h-U,/9US1I";
      stringArray0[2] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-695), "&c)LEJ6h-U,/9US1I", "&c)LEJ6h-U,/9US1I", "z/.AbA3YvEW\"", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(57, (-695));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(318, (-1310), stringArray0, 16, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitLocalVariable("a$+2W\"d'~MLoP`ht", "&c)LEJ6h-U,/9US1I", "DWhr0x;R) r<", label0, label0, 16);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5654);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(2, 5654);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Frame.DOUBLE;
      assertEquals(16777219, int0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter1.visitFieldInsn(5654, "StackMap", "WG-4k-OCTA1S", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter2.visitFrame(4, 32, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitLdcInsn("StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5685);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5685, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(34, int0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitVarInsn(34, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(7, ")Xam-nzV5^", "DWhr0x;R) r<", "ZWM>", "B6/Qwq~0Z:w");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(fieldVisitor0);
      
      methodWriter0.visitInsn(191);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(5685, "7;|qXnaVz()xMCW");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(1400);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(1400, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "_mTwHvQt0C", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(34, int0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitVarInsn(34, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(17, "!8[KihA38X^ $pZ$l1 ", "DWhr0x;R) r<", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(17, 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(7, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = 7;
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-133), 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("DWhr0x;R) r<", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIincInsn(2, 26);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(5697);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(26);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.exceptionCount = 26;
      methodWriter0.visitTypeInsn(170, "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitJumpInsn(177, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(169, 170);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ugO{nz";
      stringArray0[1] = "ugO{nz";
      stringArray0[2] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[4] = "ugO{nz";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "ugO{nz", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(169, (-1789));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object[] objectArray0 = new Object[0];
      methodWriter0.visitFrame(2, 2061, objectArray0, (-1310), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter((ClassReader) null, (-1789));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5693);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(70);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(70);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame((-1310), 46, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(5693, "Ba(X*w2TOjxu", "G\"H?EA#", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[2];
      intArray0[0] = 70;
      intArray0[1] = 5693;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {70, 5693}, intArray0);
      
      methodWriter1.visitFieldInsn(186, "Ba(X*w2TOjxu", "Ba(X*w2TOjxu", "%:8?R2f9#)");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {70, 5693}, intArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(98, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 5716;
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      label0.outputStackMax = 5716;
      methodWriter0.visitLocalVariable("LineNumberTable", "JPL&u;nh%zA6/", "Ba(X*w2TOjxu", label0, label0, (-846));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(5716, 5716);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5693);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "SktackMap";
      stringArray0[2] = "SktackMap";
      stringArray0[3] = "SktackMap";
      stringArray0[4] = "SktackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SktackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(70);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(70);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame((-1310), 46, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(5693, "SktackMap", "G\"H?EA#", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitLocalVariable("SktackMap", "G\"H?EA#", "SktackMap", label0, label0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5693);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "DWh0x;R) rzp<";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(5693, "Ba(X*w2TOjxu", "G\"H?EA#", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame(46, 40, stringArray0, 186, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLineNumber(2, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitJumpInsn(2, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(70, int0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2061);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777180, "StackMap", "StackMap", "StackMap", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(40);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFieldInsn(329, "n/cv>?0PZ", "n/cv>?0PZ", "P`/Z,vFj2sv5}1 BSb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.version = 186;
      methodWriter0.visitFrame(329, 185, stringArray0, 186, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitTypeInsn(329, "n/cv>?0PZ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter1.visitTryCatchBlock(label1, label1, label0, "P`/Z,vFj2sv5}1 BSb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter0);
      assertSame(label1, label0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 185);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 185
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "de";
      stringArray0[1] = "StaakMPp";
      stringArray0[2] = "Signature";
      stringArray0[3] = "StaakMPp";
      stringArray0[4] = "de";
      stringArray0[5] = "StaakMPp";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 276, "Signature", "Signature", "de", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "de";
      methodWriter0.visitFrame(3, 8388608, stringArray0, 186, objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5716);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWh0x;R) rzp<";
      stringArray0[1] = "Ba(X*w2TOjxu";
      stringArray0[2] = "Ba(X*w2TOjxu";
      stringArray0[3] = "Ba(X*w2TOjxu";
      stringArray0[4] = "Ba(X*w2TOjxu";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ba(X*w2TOjxu", "DWh0x;R) rzp<", "DWh0x;R) rzp<", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter1.visitTryCatchBlock(label0, label0, (Label) null, "Ba(X*w2TOjxu");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(95, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = 5716;
      intArray0[2] = 95;
      intArray0[3] = 1;
      intArray0[4] = 1;
      label0.inputStackTop = 2;
      intArray0[5] = 180;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 5655, 2);
      assertArrayEquals(new int[] {2, 5716, 95, 1, 1, 180}, intArray0);
      assertEquals((-5928), int0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2, 5716, 95, 1, 1, 180}, intArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5660);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newMethod(":.sDI0B2hp", ":.sDI0B2hp", ":.sDI0B2hp", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, int0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "LocalVariableTable";
      stringArray0[2] = "SxX$,B";
      stringArray0[3] = "SxX$,B";
      stringArray0[4] = "g@>`LauPZB5]WOY";
      stringArray0[5] = "vBflue ";
      stringArray0[6] = "Stac-kMqp";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "LocalVariableTable", "Stac-kMqp", "vBflue ", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 5660, "AJ/dad\"R'W", "SxX$,B", "AJ/dad\"R'W", (String[]) null, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitFrame((-1618), 2, (Object[]) null, 2, stringArray0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitFrame(3, 192, (Object[]) null, 2, stringArray0);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5633);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "StackMap";
      stringArray0[3] = "StackMap";
      stringArray0[4] = "StackMap";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMap", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Integer integer0 = new Integer(1);
      assertNotNull(integer0);
      assertEquals(1, (int)integer0);
      
      long long0 = Integer.toUnsignedLong(256);
      assertEquals(256L, long0);
      
      Integer integer1 = new Integer(2);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(2, (int)integer1);
      
      Item item0 = classWriter0.newClassItem("StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(184);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(184, "StackMap", "StackMap", "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W0]E(TRM$O:[`");
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(1, "=o(D7TaW(", "=o(D7TaW(", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(17, 850);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(34, int0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      methodWriter0.visitVarInsn(34, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label1, label0, "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      ByteVector byteVector0 = new ByteVector(17);
      assertNotNull(byteVector0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertFalse(boolean0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      methodWriter0.visitLabel(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      
      methodWriter0.visitFieldInsn(17, "!8[KihA38X^ $pZ$l1 ", "DWhr0x;R) r<", "DWhr0x;R) r<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(171, 34);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitIntInsn(17, 7);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(7, label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      
      methodWriter0.visitJumpInsn(2, label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5712);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5712, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(5712);
      assertNotNull(byteVector0);
      
      methodWriter0.visitTypeInsn(5712, "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector1 = byteVector0.put11(5712, 5712);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFrame(1, 5712, stringArray0, 5712, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn(200, "qpeW");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5697);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "DWhr0x;R) r<";
      stringArray0[1] = "DWhr0x;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5697, "DWhr0x;R) r<", "DWhr0x;R) r<", "DWhr0x;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DWhr0x;R) r<");
      assertFalse(boolean0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "DWhr0x;R) r<");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      methodWriter0.visitFieldInsn(17, "!8[KihA38X^ $pZ$l1 ", "DWhr0x;R) r<", "DWhr0x;R) r<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(171, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5655);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Dohr0xc;R) r<";
      stringArray0[1] = "Dohr0xc;R) r<";
      stringArray0[2] = "Dohr0xc;R) r<";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2636, "Dohr0xc;R) r<", "Dohr0xc;R) r<", "Dohr0xc;R) r<", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Dohr0xc;R) r<", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.signature = null;
      methodWriter0.visitVarInsn(31, 123);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("Dohr0xc;R) r<");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(55, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Sc<Z]TXu:YOV,J^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "@30>y'~h,%[1/^\"", "DWhr0x;R) r<", "Sc<Z]TXu:YOV,J^", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisibleParameterAnnotations");
      assertFalse(boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "Sc<Z]TXu:YOV,J^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(91, 91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = 178;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Sc<Z]TXu:YOV,J^";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 178, "@30>y'~h,%[1/^\"", "DWhr0x;R) r<", "Sc<Z]TXu:YOV,J^", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int1 = Type.LONG;
      assertFalse(int1 == int0);
      assertEquals(7, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisibleParameterAnnotations");
      assertFalse(boolean0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "Sc<Z]TXu:YOV,J^");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(91, 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }
}
