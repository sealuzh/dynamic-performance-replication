/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:37:04 GMT 2018
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pmdesigns.jvc.tools.JVCParser;
import com.pmdesigns.jvc.tools.JVCParserTokenManager;
import com.pmdesigns.jvc.tools.SimpleCharStream;
import com.pmdesigns.jvc.tools.Token;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JVCParser_ESTest extends JVCParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JVCParser jVCParser0 = new JVCParser(pipedInputStream0);
      jVCParser0.parse();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 100);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "0G'rivO";
      JVCParser jVCParser0 = new JVCParser((JVCParserTokenManager) null);
      jVCParser0.ReInit((JVCParserTokenManager) null);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JVCParser jVCParser0 = new JVCParser(pipedReader0);
      // Undeclared exception!
      try { 
        jVCParser0.generateParseException();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JVCParser jVCParser0 = new JVCParser(pipedInputStream0);
      Token token0 = jVCParser0.getNextToken();
      assertNotNull(token0);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JVCParser.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JVCParser jVCParser0 = new JVCParser(mockFileReader0);
      jVCParser0.ReInit((Reader) null);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Set<String> set0 = charset0.aliases();
      JVCParser jVCParser0 = new JVCParser("_sb", set0);
      Charset.defaultCharset();
      jVCParser0.enable_tracing();
      jVCParser0.parse();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "_sb.append(\"\u0000\");";
      stringArray0[1] = "_sb";
      stringArray0[2] = "_sb.append(\"\u0000\");";
      JVCParser.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[==");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unbalanced tag at end of _sb
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser(mockFileInputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      jVCParser0.ReInit((InputStream) mockFileInputStream0);
      jVCParser0.getToken(2198);
      jVCParser0.enable_tracing();
      Token token0 = jVCParser0.jj_nt;
      jVCParser0.enable_tracing();
      String string0 = jVCParser0.parse();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "_sb");
      Charset.defaultCharset();
      Locale locale0 = Locale.JAPAN;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      JVCParser jVCParser0 = new JVCParser("_sb", set0, true);
      // Undeclared exception!
      try { 
        jVCParser0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JVCParser jVCParser0 = new JVCParser(pipedInputStream0);
      jVCParser0.getToken(16);
      jVCParser0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\\");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      JVCParser.main(stringArray0);
      Locale locale0 = Locale.FRENCH;
      Locale locale1 = new Locale(":7U=uHK/<R?Jz4qf<", "\\");
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      JVCParser jVCParser0 = null;
      try {
        jVCParser0 = new JVCParser("qz~nB=-{y'tH;o", set0, false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser(mockFileInputStream0);
      jVCParser0.ReInit((InputStream) mockFileInputStream0);
      jVCParser0.getToken(2198);
      jVCParser0.enable_tracing();
      jVCParser0.getToken(2198);
      jVCParser0.enable_tracing();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "_sb";
      Charset charset0 = Charset.defaultCharset();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "_sb");
      Set<String> set0 = charset0.aliases();
      JVCParser jVCParser0 = new JVCParser("_sb", set0, true);
      jVCParser0.disable_tracing();
      jVCParser0.parse();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("_sb");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(enumeration0).hasMoreElements();
      doReturn(mockFileInputStream0).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Token token0 = jVCParser0.token.next;
      jVCParser0.token = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2224));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "_sb");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_sb";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\r");
      JVCParser.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[==");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[==");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Nested tag in _sb, line: 2
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[=");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[=");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Nested tag in _sb, line: 2
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "[[sy=");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "_sb";
      Locale locale0 = Locale.JAPAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unbalanced tag at end of _sb
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"[[!\"");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"[[!\"");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unbalanced tag at end of _sb
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A6Hgq");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)20;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)23;
      byteArray0[8] = (byte)13;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A6Hgq");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      JVCParser.main(stringArray0);
      // Undeclared exception!
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/_sb");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"[[!\"");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"[[!\"");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_sb";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"[[!\"");
      Charset.defaultCharset();
      Charset.defaultCharset();
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Nested commented tag in _sb, line: 3
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }
}
