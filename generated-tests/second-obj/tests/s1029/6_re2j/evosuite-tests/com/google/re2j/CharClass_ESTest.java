/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:37:14 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      CharClass charClass1 = charClass0.cleanClass();
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      CharClass charClass1 = charClass0.appendLiteral(1920, 1920);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      charClass0.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {0, 1114111, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(4479, 4479);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange(1900, 1900);
      String string0 = charClass0.toString();
      assertEquals("[0x76c]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1476;
      intArray0[1] = 1133;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass0.appendTableWithSign(intArray1, 1114111);
      int[] intArray2 = charClass0.toArray();
      assertArrayEquals(new int[] {1476, 1133, 0, 0, 0, 0, 0, 0}, intArray2);
      assertSame(intArray2, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[8];
      intArray1[0] = 104;
      intArray1[1] = 104;
      intArray1[2] = 104;
      intArray1[3] = 104;
      intArray1[4] = 104;
      intArray1[6] = 104;
      intArray1[7] = 104;
      intArray0[0] = intArray1;
      charClass0.appendTableWithSign(intArray0, 104);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral((-858), (-858));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[3][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-659));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 3020;
      int[][] intArray0 = new int[1][3];
      CharClass charClass0 = new CharClass(intArray0[0]);
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = (-1414);
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-1414));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = new int[0];
      charClass1.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(1920, 1920);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 1043896;
      intArray0[2] = 1043895;
      intArray0[3] = 988;
      intArray0[4] = 249;
      intArray0[5] = (-466);
      intArray0[6] = 91;
      intArray0[7] = (-4387);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(315, 1114111);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, 789);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-1));
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass();
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, (-928));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1476;
      intArray0[1] = 1476;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][6];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int int0 = 1114111;
      charClass0.appendTableWithSign(intArray1, int0);
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][3];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      charClass0.appendLiteral(3452, 3452);
      charClass1.appendTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1114111;
      intArray0[1] = 3132;
      int int0 = (-2751);
      intArray0[2] = (-2751);
      intArray0[4] = 4;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[10][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(1096260, 1768);
      charClass1.negateClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      int[] intArray0 = new int[5];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.cleanClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3020;
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1476;
      intArray0[1] = 2982;
      intArray0[2] = 1111379;
      intArray0[3] = 4478;
      intArray0[4] = 1108339;
      intArray0[5] = 4478;
      intArray0[6] = (-2152);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 2571;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1468;
      intArray0[1] = 2982;
      intArray0[2] = 2982;
      intArray0[3] = 4478;
      intArray0[4] = 1108339;
      intArray0[5] = 4478;
      intArray0[6] = (-2152);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      charClass0.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1112855);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-2940), 1103725);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(1105321, 613);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[5] = 1871;
      intArray0[3] = 66639;
      intArray0[5] = 1085431;
      intArray0[5] = 1114121;
      intArray0[6] = 1061289;
      intArray0[7] = 29;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 66639;
      intArray1[1] = 1114121;
      intArray1[2] = 1061289;
      intArray1[3] = 1114121;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray1);
      CharClass charClass3 = charClass2.appendClass(intArray0);
      charClass3.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3020;
      intArray0[2] = 0;
      intArray0[3] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      int[][] intArray1 = new int[4][2];
      intArray1[0] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[][] intArray2 = new int[6][2];
      intArray2[0] = intArray0;
      intArray2[1] = intArray0;
      intArray2[2] = intArray0;
      intArray2[4] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray2, (-569));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3020;
      intArray0[2] = 0;
      intArray0[3] = 3020;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.cleanClass();
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = new CharClass(intArray0);
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      charClass4.appendNegatedTable(intArray1);
      charClass4.appendNegatedClass(intArray0);
      charClass2.toString();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 3020;
      intArray0[2] = 0;
      intArray0[3] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int int0 = 1;
      CharClass charClass1 = charClass0.appendFoldedRange(1, 0);
      charClass0.negateClass();
      int[][] intArray1 = new int[4][2];
      intArray1[0] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 3020;
      intArray0[0] = 3020;
      int int1 = 1;
      intArray0[2] = 1;
      CharClass charClass0 = new CharClass();
      int int2 = 534;
      CharClass charClass1 = charClass0.appendLiteral(3020, 1);
      int[][] intArray1 = new int[7][4];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass0.appendFoldedRange(3020, 1);
      int int3 = 1118;
      charClass2.appendClassWithSign(intArray0, 1118);
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      int[] intArray2 = new int[6];
      intArray2[0] = int2;
      intArray2[1] = int3;
      intArray2[2] = int0;
      intArray2[3] = int3;
      intArray2[4] = int0;
      intArray2[5] = int1;
      charClass3.appendNegatedClass(intArray2);
  }
}
