/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:01:14 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendFoldedRange((-2145), 0);
      assertSame(charClass0, charClass2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass0.appendFoldedRange(1097, 1097);
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[2];
      intArray1[1] = 247;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-359), (-359));
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendRange(0, (-2145));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 5902;
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendTableWithSign(intArray1, 2002);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 9;
      intArray0[1] = 644;
      intArray0[2] = 1384;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 5902;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendRange(12300, 5884);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 5902;
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass1 = new CharClass(intArray0);
      CharClass charClass2 = charClass1.negateClass();
      charClass2.appendNegatedTable(intArray1);
      CharGroup charGroup0 = null;
      boolean boolean0 = true;
      charClass2.appendGroup(charGroup0, boolean0);
      charClass1.appendFoldedClass(intArray1[0]);
      charClass0.appendGroup(charGroup0, boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(1475, 1475);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1610;
      intArray0[1] = 1428;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedRange(1610, (-2459));
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1428);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-358), (-358));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 188);
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 8489;
      intArray0[1] = 2327;
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[2] = 5902;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 4;
      intArray0[2] = 4457;
      intArray0[3] = 4457;
      intArray0[4] = (-3032);
      intArray0[5] = (-1909);
      intArray0[6] = 4;
      intArray0[7] = (-5092);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.appendClassWithSign(intArray0, (-5092));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 111;
      intArray0[1] = 698;
      intArray0[2] = 111;
      intArray0[3] = (-2356);
      intArray0[4] = 65;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedRange(1098, (-908));
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][6];
      charClass0.appendTableWithSign(intArray0, 1907);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(5940, 5940);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[5];
      CharClass charClass0 = new CharClass();
      int int0 = (-1358);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-1358));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 8489;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(423, 423);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[6][5];
      intArray1[0] = intArray0;
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.toString();
      CharClass charClass2 = charClass0.appendNegatedClass(intArray0);
      int int0 = 65;
      charClass2.appendFoldedRange((-3013), 65);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 1114111;
      intArray0[1] = 5878;
      charClass0.negateClass();
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][6];
      charClass0.appendTableWithSign(intArray0, (-1665));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange(66640, 456);
      charClass0.appendFoldedRange(0, 66640);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1610;
      intArray0[1] = 1610;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.toString();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 698;
      intArray0[4] = 65;
      intArray0[5] = 2214;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      charClass0.toArray();
      charClass1.appendFoldedRange(66640, 66640);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      // Undeclared exception!
      charClass0.appendFoldedRange(5902, 1114112);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 5902;
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 5902;
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendNegatedClass(intArray0);
      CharClass.charClassToString(intArray0, (-490));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 5902;
      intArray0[0] = 5902;
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.negateClass();
      charClass0.negateClass();
      charClass0.appendNegatedTable(intArray1);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 5902);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int[] intArray0 = new int[4];
      int[][] intArray1 = new int[1][5];
      intArray1[0] = intArray0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.toArray();
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.negateClass();
      CharClass charClass2 = charClass0.appendLiteral(2977, 131070);
      charClass2.cleanClass();
      charClass2.appendTableWithSign(intArray1, 0);
      charClass2.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      int int0 = 5940;
      intArray0[2] = 5940;
      int[][] intArray1 = new int[11][5];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 5940);
      CharClass charClass2 = new CharClass(intArray0);
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.negateClass();
      charClass1.appendNegatedTable(intArray1);
      charClass2.appendRange(intArray0[2], intArray0[2]);
      CharGroup charGroup0 = null;
      CharClass charClass4 = charClass1.appendNegatedClass(intArray1[0]);
      boolean boolean0 = true;
      charClass3.appendGroup(charGroup0, boolean0);
      charClass3.appendRange(int0, int0);
      int int1 = 407;
      charClass4.appendTableWithSign(intArray1, int1);
      charClass1.appendFoldedClass(intArray0);
  }
}
