/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 08:32:15 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      StringReader stringReader1 = new StringReader("V\"+zRNT:.p`L1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 52.  Encountered: <EOF> after : \"\\\"+zRNT:.p`L1\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      StringReader stringReader1 = new StringReader("*/Hydz&K#Zz4N|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("*", token0.toString());
      assertEquals(103, token0.kind);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&4,S|3N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.jjimageLen = 100;
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \",\" (44), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("Co", token0.toString());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (byte) (-1), (byte)78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-K'b&bCn}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("-", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("K", token1.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("08Y!4WG\"B&-rB/");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("\"new\"");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.curLexState = (-4248);
      javaCharStream0.BeginToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("J!S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1570, (-137));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("J", token0.toString());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("switch", token0.toString());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3pJP3k-+!RqbZqNDNL");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2147479552, (-146));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 2147479552, column -145.  Encountered: \"p\" (112), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.realKind = 2526;
      Token token2 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token3 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token4 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token4.kind);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&4,S|3N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("$+X`{|k");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&4,S|3N");
      StringReader stringReader2 = new StringReader("$+X`{|k");
      javaCharStream1.ReInit((Reader) stringReader2);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("p|C$}Z@CwIu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      StringReader stringReader1 = new StringReader("IN_MULTI_LINE_COMMENT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-3430), (-3430));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(20, javaCharStream0.bufpos);
      assertEquals((-3410), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 128, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals((-1), javaCharStream1.getBeginColumn());
      assertEquals(128, javaCharStream1.getEndLine());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 5);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 5. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9?[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (byte) (-24));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 19, column -22.  Encountered: \"?\" (63), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("kG7,{*");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte) (-27);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)13, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("prDB&M|=H(C0%?TRC");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)34, (byte)46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("M", token0.toString());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S#Qe&N$j^*/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char char0 = javaParserTokenManager0.curChar;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("S", token0.toString());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-2285));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2285. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2128, 1841);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("S");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("+=");
      StringReader stringReader3 = new StringReader("+=");
      javaCharStream0.ReInit((Reader) stringReader3);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
      
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 1);
      javaParserTokenManager1.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Wr4Zyb[]NE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = token_GTToken0.next;
      javaParserTokenManager1.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.ReInit(javaCharStream0);
      javaParserTokenManager2.SkipLexicalActions(token1);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token3 = token_GTToken0.specialToken;
      javaParserTokenManager1.SkipLexicalActions(token1);
      javaParserTokenManager2.MoreLexicalActions();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token_GTToken1);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 27, (-555));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-658), (-3560));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.SwitchTo((byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("0P5,Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/L2Cb19y!CP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"C\" (67), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lU<dE_cKB=T*Vq<J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("%D`vXH)2V6KK)3F");
      StringReader stringReader2 = new StringReader("class");
      javaCharStream0.ReInit((Reader) stringReader2);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 51);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 51. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("//8,^!};Y2Zz!]q");
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \",\" (44), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/nRX/1Gf+qtU?e$(SnE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",Co'ny1c");
      StringReader stringReader1 = new StringReader("6f~wd=\"zB4e58_j7F7");
      javaCharStream0.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(6, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(73, token0.kind);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\\\"\" (34), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$szgYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = Token.newToken(1);
      javaParserTokenManager1.SkipLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 14.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/L2Cb19y!CP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(11, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("RiW,/SM*'T");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=gTAzy7UMz/xVa]o");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      StringReader stringReader0 = new StringReader("<HEX_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, (-5765));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-5765));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -5765. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*U");
      StringReader stringReader1 = new StringReader("<73!O");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(88);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0, 1);
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",'|)9D{@A<Iv^P?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)31, (byte)31);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(31, javaCharStream0.getBeginColumn());
      assertEquals(31, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'H';
      charArray0[3] = '3';
      javaCharStream0.buffer = charArray0;
      charArray0[4] = '2';
      charArray0[5] = '3';
      charArray0[6] = '.';
      charArray0[7] = '{';
      charArray0[8] = 'd';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("t@eH18}=Vy)Q/KG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("U", token0.toString());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3842), 103);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(43, token0.kind);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = new Token();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      token_GTToken2.endLine = (-1);
      Token.newToken(0);
      Token token2 = token_GTToken1.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals((-1137), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ii:I-8DGLC3v^~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 78, (byte)78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 92);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 92. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 17.  Encountered: <EOF> after : \"\\\"!%%=}jp:\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = '_';
      charArray0[3] = '3';
      charArray0[4] = '/';
      charArray0[5] = '3';
      charArray0[6] = '.';
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"*\" (42), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("uk|+o>M-Ol#ub8,]");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.backup((-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getEndLine());
      assertEquals(101, token0.kind);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("CaHh+n[\"!%%=}jp:");
      javaCharStream1.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = token_GTToken0.next;
      Token token3 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token3);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token4 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("//8,^!};Y2Zz!]q");
      StringReader stringReader1 = new StringReader("//8,^!};Y2Zz!]q");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1, column 1.  Encountered: \"8\" (56), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dzld{3$[t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaCharStream0.ExpandBuff(false);
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("c#zZn1XW*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4228), (-2044));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-2044));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2044. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("sX", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G,\"j_<`T7\"AR%~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("G", token0.toString());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("\"\r\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-476), (-476));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -476, column -475.  Encountered: \"\\r\" (13), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte) (-16));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-16), javaCharStream0.getColumn());
      
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(13, javaCharStream0.bufpos);
      assertEquals((-3), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-24);
      StringReader stringReader0 = new StringReader("-5Q7$#Ag*fd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 22, (byte)52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(52, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VeF@&iLs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"new\"");
      StringReader stringReader1 = new StringReader("/=");
      StringReader stringReader2 = new StringReader("~Km.5#|3MRV:I+HUq");
      javaCharStream0.ReInit((Reader) stringReader2);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 121);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 121. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("wHXqIcq%imrl#");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("f");
      StringReader stringReader2 = new StringReader("pQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("switch");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, 40);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|:tntIW(9''4w16M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      assertFalse(javaCharStream1.equals((Object)javaCharStream0));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&4,S|3N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 83, 1381, 98);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 119, (-1), 36);
      StringReader stringReader1 = new StringReader("h>6\"7F>2y$7!$bB");
      javaCharStream2.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken1.specialToken;
      Token token2 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m>>>\"\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1927), (-1144));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 14, 64);
      StringReader stringReader1 = new StringReader("*U");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(66, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (byte) (-24));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.jjmatchedPos = (-21);
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token1);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("njB", token1.toString());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vc_V;f:K67%HCEFf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4179, 4179);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("vc_V", token0.toString());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.close();
      StringReader stringReader0 = new StringReader("<<");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 40, (-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager2.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals(2, javaCharStream2.getColumn());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      StringReader stringReader1 = new StringReader("tJX#]d.$z|bu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(4, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("default");
      StringReader stringReader1 = new StringReader("default");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"strictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token2 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token3 = javaParserTokenManager0.getNextToken();
      assertEquals(10, javaCharStream0.getBeginColumn());
      assertEquals(0, token3.kind);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VeF@&iLs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("eM[983#h9 N 7");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader1.reset();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      javaParserTokenManager1.TokenLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)11;
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(104, token0.kind);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("N c'h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("N", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("8Y!4WG\"B&-IB/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 255, (-452), 255);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      //  // Unstable assertion: assertEquals(0, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      StringReader stringReader1 = new StringReader("qp@X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3\"4cWk");
      StringReader stringReader2 = new StringReader("float");
      javaCharStream0.ReInit((Reader) stringReader2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-3157), 674);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 116);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 116. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("MKS..10^Fk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)31, (byte) (-121));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 31, column -115.  Encountered: <EOF> after : \"\\\".4\\ufffd@\\u001f\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(85, token2.kind);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      StringReader stringReader1 = new StringReader("qp@X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3\"4cWk");
      StringReader stringReader2 = new StringReader("float");
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getEndColumn());
      
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\")\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 42, 42);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(44, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1524, (-1), 1524);
      javaCharStream1.ReInit((Reader) null);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.SkipLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("default");
      stringReader0.mark(46);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 1072, 2576);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.defaultLexState = 2576;
      stringReader0.close();
      javaParserTokenManager0.jjmatchedKind = 113;
      javaParserTokenManager0.jjmatchedPos = 25;
      javaParserTokenManager0.MoreLexicalActions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("interface");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VeF@&iLs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("r<_xFBC7<uTk_{");
      javaCharStream0.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.curChar = 'd';
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      stringReader1.reset();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(1872);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1, 0);
      assertEquals(1, javaCharStream1.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b?O$$a|w,4Dq%cDQ)");
      StringReader stringReader1 = new StringReader("Error: Ignoring invalid lexical state : ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&B,N6Zc99vqIS-n");
      StringReader stringReader2 = new StringReader("");
      javaCharStream1.ReInit((Reader) stringReader1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("b", token0.toString());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VeF@&iLs");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'H';
      charArray0[3] = '3';
      javaCharStream0.buffer = charArray0;
      charArray0[4] = '2';
      charArray0[5] = '3';
      charArray0[6] = '.';
      charArray0[8] = 'S';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-137), (-137));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals((-132), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Wr4Zyb[]NE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager2.ReInit(javaCharStream0);
      javaParserTokenManager2.SkipLexicalActions(token1);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token2 = token_GTToken0.specialToken;
      javaParserTokenManager1.SkipLexicalActions(token1);
      javaParserTokenManager2.MoreLexicalActions();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token_GTToken1);
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("prDB&M|=H(C0%?TRC");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)34, (byte)46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(50, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream1.bufpos);
      assertEquals(5, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tPS~^c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.skip(546L);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjmatchedPos = (-1280);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.column = 1;
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r<''E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (-1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 1);
      assertEquals(1, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%LDue)_$(8'3l=");
      StringReader stringReader1 = new StringReader("i#[[2$=5(nB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 83, 1381, 98);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 119, (-1), 36);
      StringReader stringReader1 = new StringReader("h>6\"7F>2y$7!$bB");
      javaCharStream2.ReInit((Reader) stringReader1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\\\"\" (34), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("\"continue~+l");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<eCTAL_RITEREL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(13, javaCharStream0.bufpos);
      assertEquals(14, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<HE&X_LITERAL>");
      StringReader stringReader1 = new StringReader("<HE&X_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1642, 11, 452);
      javaCharStream0.BeginToken();
      StringReader stringReader2 = new StringReader("Ua^$ ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      stringReader2.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(3, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S#Qe&N$j^*/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y4>WZj7SLYetW^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \">\" (62), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$szgYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
      
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 14.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)52;
      StringReader stringReader0 = new StringReader("1SEY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"S\" (83), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2285), 0, 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.BeginToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token0.kind);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token1.kind);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte byte0 = (byte) (-24);
      StringReader stringReader0 = new StringReader("mXa]jDy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1), 313, 61);
      javaCharStream1.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager1.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)117;
      StringReader stringReader0 = new StringReader(";$ii{L^~T!A%j k");
      StringReader stringReader1 = new StringReader("A$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 43, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(123, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      StringReader stringReader0 = new StringReader("native");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(43, token0.kind);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<HE&X_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1642, 452);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(453, javaCharStream0.getBeginColumn());
      assertEquals(454, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      StringReader stringReader1 = new StringReader("V\"+zRNT:.p`L1");
      StringReader stringReader2 = new StringReader("G,\"j_<`T7\"AR%~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 29, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("G", token0.toString());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      token1.endLine = 0;
      javaParserTokenManager0.jjFillToken();
      MockFile mockFile0 = new MockFile("pgEw0");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.write(40);
      PrintStream printStream0 = mockPrintStream0.append('N');
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.setDebugStream(printStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3235), 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(66, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (-1783));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals("V", token2.toString());
      assertEquals(74, token2.kind);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("private");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(7, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'D';
      charArray0[2] = '_';
      charArray0[3] = '3';
      charArray0[4] = '/';
      charArray0[5] = 'e';
      charArray0[6] = '.';
      charArray0[7] = '{';
      charArray0[8] = 'd';
      javaCharStream0.nextCharBuf = charArray0;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 74, 462);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager3.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(88, token1.kind);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      StringReader stringReader0 = new StringReader("<HEX_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 122, (-5765));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token1.toString());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      StringReader stringReader0 = new StringReader("volatile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      Token token1 = new Token();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".WUme");
      StringReader stringReader1 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1469), 60);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 123);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 2149, 462, 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(45, token0.kind);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m>>>\"\"");
      StringReader stringReader1 = new StringReader("m>>>\"\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 19, 769);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(">>", token0.toString());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".h8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".h8");
      StringReader stringReader1 = new StringReader("\"new\"");
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"szYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.readChar();
      Token token0 = javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("g@7f-ZUog");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 104, 97);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.readChar();
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-'b&Cn}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("v", token0.toString());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"&&\"");
      stringReader0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1154), (-443));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1154);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token0 = new Token();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.jjFillToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals((-443), javaCharStream0.getBeginColumn());
      assertEquals(98, token1.kind);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("tEh1njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eblse");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager1.jjFillToken();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("try");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 62);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 62. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"szYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.readChar();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("szYtrictfp");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1, 1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream2);
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(11, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("p|C$}@CwIu");
      StringReader stringReader1 = new StringReader("pf~D|ksJZ@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("p|C$}@CwIu");
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("pf", token0.toString());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      StringReader stringReader1 = new StringReader("qp@X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fiAY\"oy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.GetImage();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-38), (byte)0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("P", token0.toString());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(7, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",Co'ny1c");
      StringReader stringReader1 = new StringReader("float");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token2 = token_GTToken2.next;
      javaParserTokenManager1.getNextToken();
      Token.GTToken token_GTToken4 = new Token.GTToken();
      Token.GTToken token_GTToken5 = new Token.GTToken();
      Token.GTToken token_GTToken6 = new Token.GTToken();
      Token token3 = token_GTToken4.specialToken;
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream0, 2362);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2362. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|=");
      StringReader stringReader1 = new StringReader("\"native\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2109), 4680);
      javaCharStream1.ReInit((Reader) stringReader1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 2263);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2263. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      StringReader stringReader1 = new StringReader("\f");
      StringReader stringReader2 = new StringReader("\f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.bufpos = (-1471);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (byte) (-24));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 19, column -22.  Encountered: \"[\" (91), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G,\"j_<`T7\"AR%~");
      StringReader stringReader1 = new StringReader("r<''E");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 29);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 32.  Encountered: \"\\'\" (39), after : \"\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-K'b&bCn?}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (-1783));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1783), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      StringReader stringReader0 = new StringReader("x{2Sfk3S``KOTLz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("x", token1.toString());
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vs-`K'b&bCnY}");
      StringReader stringReader1 = new StringReader("vs-`K'b&bCnY}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 47);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream2, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G,\"j_<`T7\"AR%~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, 29);
      StringReader stringReader1 = new StringReader("!=");
      stringReader1.mark(1448);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 29, 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.curChar = '`';
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("!=", token0.toString());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"szYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      Token token2 = javaParserTokenManager1.getNextToken();
      assertEquals(12, javaCharStream0.getBeginColumn());
      assertEquals(0, token2.kind);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      StringReader stringReader1 = new StringReader("DZT.^.fq&6P");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1159), (-183));
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals((-181), javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-16);
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte) (-16), (byte)78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken1);
      assertEquals(14, javaCharStream0.bufpos);
      assertEquals((-1), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3584, 3584);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)117;
      StringReader stringReader0 = new StringReader(";$ii{L^~T!A%j k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 543, (-3228));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      Token token1 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals((-3228), javaCharStream0.getBeginColumn());
      assertEquals(";", token2.toString());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      StringReader stringReader1 = new StringReader("char");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("char");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(4, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.backup((-1404));
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertNull(token0.toString());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-16);
      byteArray0[2] = (byte) (-16);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("jhxWy#E=E#'");
      StringReader stringReader1 = new StringReader("jhxWy#E=E#'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.backup((byte) (-16));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      StringReader stringReader1 = new StringReader("y9mh;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2285), 0, 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(83, token0.kind);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token token0 = new Token();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, token0.endColumn);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      StringReader stringReader1 = new StringReader("PvGFQ):K5Cnx7G-t^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1927), (-1927));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1927), 64);
      StringReader stringReader2 = new StringReader("PvGFQ):K5Cnx7G-t^");
      StringReader stringReader3 = new StringReader("~");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token0 = token_GTToken3.specialToken;
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1921), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("_n.)totQir7:P-E}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-3969);
      javaCharStream0.ReInit((Reader) stringReader0, (-3870), (-401), 48);
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("n", token1.toString());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      StringReader stringReader1 = new StringReader("}LNX< 426[[yvo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 35, 35);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("}", token0.toString());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-16);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("N", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 123, 1522, (byte)32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("if", token0.toString());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      String string0 = "<#pD=y3O,,?5 lN'W";
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.BeginToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
      
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.markSupported();
      javaCharStream0.BeginToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("goto");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 78, 74);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(35, token0.kind);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";VeF@&iLs");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 573);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 573. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader(">V5F&)^D!k.");
      StringReader stringReader1 = new StringReader("7g\"R_<n[QWx7 -rc|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qcSKqUe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1927), (-1927));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 14, 2875);
      StringReader stringReader1 = new StringReader("<EOF>");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      Token token1 = javaParserTokenManager2.getNextToken();
      assertEquals(0, token1.kind);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dzld{3$[t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("*.+,?:[ekvMo1i0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(72, javaCharStream0.getEndColumn());
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 98);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 98. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bZCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(15, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QVeF@&iLs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"new\"");
      StringReader stringReader1 = new StringReader("/=");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)126;
      byteArray0[6] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      stringReader0.read();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("QVeF", token0.toString());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eblse");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream2.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken1.next;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      Token token2 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.curLexState = 255;
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("Al'=8$51'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"8\" (56), after : \"\\'=\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kxq+%!r)NJ9uqAf;D");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte) (-16), 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.curChar = 'M';
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(108, token0.kind);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("//8,^!};Y2Zz!]q");
      javaCharStream0.ReInit((Reader) stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 114, (-3350));
      StringReader stringReader1 = new StringReader("*U");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.lengthOfMatch = 15;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token1 = token_GTToken3.specialToken;
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("U", token2.toString());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("t@eH18}=Vy)Q/KG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(86, token0.kind);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      char char0 = javaParserTokenManager0.curChar;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.ReInit(javaCharStream2, 0);
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'Y]p];r)W_^CFF9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"]\" (93), after : \"\\'Y\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("interface");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("_n)totQiEtr7:P-E}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("_n.)totQir7:P-E}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Wr4Zyb[]NE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("-");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2, 1);
      javaParserTokenManager3.defaultLexState = 1;
      javaParserTokenManager3.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream2);
      stringReader0.read();
      javaParserTokenManager4.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",'|)9D{@A<Iv^P?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)31, (-3350));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 31, column -3347.  Encountered: \")\" (41), after : \"\\'|\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = new Token();
      javaCharStream0.BeginToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals((-1138), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      StringReader stringReader1 = new StringReader("<OCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.realKind = 2526;
      Token token2 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.jjFillToken();
      MockFile mockFile0 = new MockFile(",");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.write(1);
      PrintStream printStream0 = mockPrintStream0.append('>');
      javaParserTokenManager0.setDebugStream(printStream0);
      javaParserTokenManager0.setDebugStream(printStream0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("E0FXE)TTBCX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte)52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.ReInit(javaCharStream0, Integer.MAX_VALUE);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#oE#kVi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1928), 1986, 0);
      stringReader0.read();
      stringReader0.skip((-1));
      javaCharStream0.available = 125;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)58;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(":", token0.toString());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"char\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("m>>>\"\"");
      javaCharStream0.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.TokenLexicalActions(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.soops.CEN4010.JMCA.JParser.Token cannot be cast to com.soops.CEN4010.JMCA.JParser.Token$GTToken
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"szYtrictfp\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals(12, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";gk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), 25);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 25, 4096);
      StringReader stringReader1 = new StringReader(":>[5xM-)-/c+/");
      StringReader stringReader2 = new StringReader("[tfw");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token2.kind);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".&%w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("*.+,?:[ekvMo1i0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 937, 14);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(15, javaCharStream0.getColumn());
      assertEquals(".", token1.toString());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/L2Cb19y!CP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -16, column 65.  Encountered: \"2\" (50), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B~4{]Q{%e>/Yyf][!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<e`TAL_RITEREL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token2 = token_GTToken1.specialToken;
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      assertEquals(11, javaCharStream0.bufpos);
      assertEquals((-1133), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = token_GTToken0.specialToken;
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: \"y\" (121), after : \"\\'n\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dzld{3$[t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaCharStream0.ExpandBuff(false);
      Token token0 = token_GTToken0.specialToken;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions((Token) null);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("*.+,?:[ekvMo1i0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"&&\"");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1154), (-443));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1154);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals((-440), javaCharStream0.getBeginColumn());
      assertEquals((-440), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B<_2+g^Q68{hhp^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StringReader stringReader0 = new StringReader("for");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (byte)52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 1759);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1759. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 34. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      StringReader stringReader0 = new StringReader("\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<eCTAL_RITEREL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      assertEquals(51, javaCharStream0.getBeginColumn());
      assertEquals(63, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      StringReader stringReader1 = new StringReader(">=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1971, 96, 96);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("\"e^w\";Yaqv8;?=SY");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte)118;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2499), (-2499));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (byte) (-90), (byte) (-90), (byte) (-90));
      javaCharStream2.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, (-2903));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2903. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("swith");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (byte) (-24));
      StringReader stringReader1 = new StringReader("IN_MULTI_LINE_COMMENT");
      javaCharStream0.ReInit((Reader) stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2285), 0, 113);
      stringReader1.read();
      StringReader stringReader2 = new StringReader("pgEw0`DmPh!x");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)52;
      StringReader stringReader0 = new StringReader("DEFAULT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)18);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1018), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken0);
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("*", token0.toString());
      assertEquals(103, token0.kind);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m>>>\"\"");
      StringReader stringReader1 = new StringReader("m>>>\"\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 19, 769);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(771, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-16);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("//8,^!};Y2Zz!]q");
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"8\" (56), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("else");
      javaCharStream1.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = token_GTToken0.next;
      Token token3 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token3);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token4 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token5 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("else", token5.toString());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("sw&t$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("instanceof");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(71, javaCharStream1.getBeginColumn());
      assertEquals((-1), javaCharStream1.getLine());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("p|C$}Z@CwIu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'f';
      charArray0[1] = 'c';
      charArray0[2] = '@';
      charArray0[3] = '\\';
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (-1708));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1708. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("\"!QNS8pn`7}e-}*F");
      StringReader stringReader1 = new StringReader("\"!QNS8pn`7}e-}*F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 18.  Encountered: <EOF> after : \"\\\"\\u007f!QNS8pn`7}e-}*F\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("zu5.onKQhT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("zu5.onKQhT");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".WUme");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4179, 4179);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 31, 31);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("pgEw0", token0.toString());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("6a_B(UU.T\u0002hi_u|XW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 11);
      javaCharStream0.ExpandBuff(false);
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r<''E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("r", token0.toString());
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (byte) (-32));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 19, (byte) (-32));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pdZ1HysFaBY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2149), (-818));
      StringReader stringReader1 = new StringReader("pdZ1HysFaBY");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      token0.beginColumn = 0;
      javaParserTokenManager1.TokenLexicalActions(token_GTToken0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, (-2149));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2149. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*U");
      StringReader stringReader1 = new StringReader("*U");
      StringReader stringReader2 = new StringReader("buA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 29, (-655));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-653), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("t@eH18}=Vy)Q/KG");
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      token_GTToken2.specialToken = null;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(46, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: \"D\" (68), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S#Qe&N$j^*/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      StringReader stringReader1 = new StringReader(".&%w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 41, 41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader2 = new StringReader(".&%w");
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3);
      StringReader stringReader4 = new StringReader("");
      javaCharStream1.ReInit((Reader) stringReader2);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(42, javaCharStream0.getBeginColumn());
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dcsX");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.kind = 103;
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.jjFillToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V\"+zRNT:.p`L1");
      StringReader stringReader1 = new StringReader("V\"+zRNT:.p`L1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2279), (-2279));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("V", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token2 = token_GTToken2.next;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals((-1137), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 114, (-3350));
      StringReader stringReader1 = new StringReader("*U");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.lengthOfMatch = 15;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (-1), 42, 2991);
      javaParserTokenManager0.ReInit(javaCharStream3);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals("g9", token1.toString());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, 1326);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1326. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Wr4Zyb[]NE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(81, token0.kind);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("63O:3<hRw_");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"3\" (51), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      StringReader stringReader1 = new StringReader("+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(101, token0.kind);
      assertEquals("+", token0.toString());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      StringReader stringReader0 = new StringReader("v-K'b&bCn}");
      StringReader stringReader1 = new StringReader("v-K'b&bCn}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 47);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      char char0 = javaParserTokenManager0.curChar;
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream2, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("63O:3<hRw_");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"3\" (51), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      StringReader stringReader0 = new StringReader("eblse");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("eblse");
      javaCharStream1.ReInit((Reader) stringReader1);
      StringReader stringReader2 = new StringReader("eblse");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1399), (-1399));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken1.specialToken;
      Token token1 = new Token();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream2.bufpos);
      assertEquals((-1395), javaCharStream2.getColumn());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)52, 1746);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)0, (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((byte) (-47));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -47. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("_n.)totQir7:P-E}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2128, 1841);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("S");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("+=");
      StringReader stringReader3 = new StringReader("+=");
      javaCharStream0.ReInit((Reader) stringReader3);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      Token token2 = javaParserTokenManager1.getNextToken();
      assertEquals("S", token2.toString());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 56, (byte)32);
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("5hH%bsA5 S~{7|p");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"h\" (104), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (byte) (-16));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals((-14), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<OCTAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(14, javaCharStream0.bufpos);
      assertEquals(15, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (byte) (-24));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("m_~6B#2");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(2, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("-5Q7$#Ag*fd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(102, token1.kind);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      StringReader stringReader0 = new StringReader("P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-24), (byte) (-16));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token1.kind);
      assertEquals("P", token1.toString());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 744);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 744. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-121);
      byte byte0 = (byte)64;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\\\".4\\ufffd@\\u001f\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vs-`K'b&bCnY}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (-3913));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("import");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX~]cz>e&I|");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)31);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(".4", token0.toString());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("enum", token1.toString());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("2O5<UqSA$+(<8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 4179);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 0, column 4180.  Encountered: \"O\" (79), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dzld{3$[t");
      StringReader stringReader1 = new StringReader("NG_I|ObDfdza");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1841, 2282);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("dzld", token0.toString());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      token_GTToken0.endColumn = (-3375);
      javaParserTokenManager1.input_stream = javaCharStream0;
      javaCharStream0.BeginToken();
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertFalse(token_GTToken0.equals((Object)token_GTToken1));
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 38, 38);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      int int0 = 65;
      StringReader stringReader0 = new StringReader("<HEX_LITERAL>");
      javaCharStream0.inputStream = (Reader) stringReader0;
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 65);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 65. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m>>>\"\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, (-1927));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 27, (-1927));
      StringReader stringReader1 = new StringReader("s1h QKs~");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 65);
      javaCharStream1.ReInit((InputStream) pushbackInputStream0, 0, 27, (-1927));
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token0 = token_GTToken2.specialToken;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      assertFalse(javaCharStream1.equals((Object)javaCharStream2));
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte) (-16);
      StringReader stringReader0 = new StringReader("T]G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)78, (byte)78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".WUme");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4179, 4179);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4180, javaCharStream0.getBeginColumn());
      assertEquals(4183, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Co'ny1c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(8, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.newToken(1185);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pgEw0`DmPh!x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager0.SwitchTo(1);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      File file0 = MockFile.createTempFile("-[dyUFX[$UIGvoU", "-[dyUFX[$UIGvoU");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      intArray0[1] = (-618);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      int int0 = (-1252);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1252));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1252. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<nB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, (byte)52);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(61, javaCharStream0.getBeginColumn());
      assertEquals(61, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      char[] charArray0 = null;
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      StringReader stringReader0 = new StringReader("native");
      StringReader stringReader1 = new StringReader("l\"PgN'cRz1X3cQpl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 364, 3049);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("l", token0.toString());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.nextCharInd = 4;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("jB", token0.toString());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      StringReader stringReader0 = new StringReader("AZz\"H(e/w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.getBeginColumn());
      assertEquals("(", token0.toString());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/L2Cb19y!CP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals("!", token0.toString());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-49);
      byteArray0[2] = (byte)52;
      StringReader stringReader0 = new StringReader("c#zZn1XW*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)52, 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9@wm&v} ^[6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1), 119, 329);
      javaCharStream1.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"@\" (64), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i]d![`d4FmhDZR,y;c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(5247);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token2 = token_GTToken2.next;
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1144, column -1131.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("else");
      StringReader stringReader2 = new StringReader("else");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream1.readChar();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(0, token_GTToken0.beginLine);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("swith");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 22, 24);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals(26, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[2] = (byte)52;
      StringReader stringReader0 = new StringReader("DEFAULT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)18);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.realKind = (int) (byte) (-16);
      Token token0 = token_GTToken0.specialToken;
      Token token1 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 84. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("vO4?Ixc1FwF1?~S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager2.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(13, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]<iy-@r!x.xo<vy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("<DECIMAL_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(88, token1.kind);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YRFfEJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"strictfp\"");
      StringReader stringReader1 = new StringReader("=r$X|8dy55$7V3bq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3350), 88);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(96, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      StringReader stringReader0 = new StringReader("08Y!4WG\"B&-rB/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 85, 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals("08Y", token0.toString());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-16);
      StringReader stringReader0 = new StringReader("volatile");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-16), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(64, token0.kind);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b=}e~pl.\"+Un");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&4,S|3N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = token_GTToken0.specialToken;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \",\" (44), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      StringReader stringReader1 = new StringReader("class");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CaHh+n[\"!%%=}jp:");
      StringReader stringReader2 = new StringReader("3\"4cWk");
      javaCharStream0.ReInit((Reader) stringReader1);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aEh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjimageLen = 74;
      StringReader stringReader1 = new StringReader("\"if\"");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      StringReader stringReader1 = new StringReader("r<''E");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g9[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (byte) (-32));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 125, 101);
      javaCharStream1.column = 396;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/nRX/1Gf+qtU?e$(SnE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.BeginToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(104, token0.kind);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CaHh+n[\"!%%=}jp:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("go");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 78, 74);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals("go", token0.toString());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("08Y!4WG\"B&-rB/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 255, (-452), 255);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager1.getNextToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2, 255);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 255. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      StringReader stringReader0 = new StringReader("pdZ1HysFaBY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2149), (-818));
      StringReader stringReader1 = new StringReader("pdZ1HysFaBY");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      int int0 = (-2353);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, int0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2353. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RM3n}5u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 255, 40, 51);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=Eh<njB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-27), (byte) (-27));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(87, token1.kind);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("-5Q7$#Ag*fd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 107);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.prevCharIsCR = true;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      token1.beginColumn = 45;
      javaParserTokenManager0.SkipLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 108, column 3.  Encountered: \"Q\" (81), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.GetImage();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("inally", token0.toString());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h>6\"7F>2y$7!$bB");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, (-1003), 117);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("7", token0.toString());
      assertEquals(66, token0.kind);
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G,\"j_<`T7\"AR%~");
      StringReader stringReader1 = new StringReader("ra<''E");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 20);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 20. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/L2Cb19y!CP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 63, 63);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 16, (-1), 12);
      StringReader stringReader1 = new StringReader("WA?!3RIDD");
      javaCharStream1.ReInit((Reader) stringReader1);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(4, javaCharStream1.getBeginColumn());
      assertEquals("!", token0.toString());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Bn2<*\"mxl>)$c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'H';
      charArray0[3] = '3';
      javaCharStream0.buffer = charArray0;
      charArray0[4] = '2';
      charArray0[5] = '3';
      charArray0[6] = '.';
      javaParserTokenManager0.lengthOfMatch = 1;
      charArray0[7] = '2';
      charArray0[8] = 'd';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i]d![`d4FmhDZR,y;c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("i", token0.toString());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9@wm&v} ^[6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 233, 119, 329);
      javaCharStream1.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"@\" (64), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      StringReader stringReader0 = new StringReader("wHXqIcq%imrl#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1144), (-1144));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      Token token1 = new Token();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      javaParserTokenManager0.SkipLexicalActions(token1);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("wHXqIcq", token2.toString());
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Wr4Zyb[]NE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.ReInit((Reader) stringReader0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.jjFillToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.TokenLexicalActions(token1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token2 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token3 = token_GTToken2.specialToken;
      Token token4 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token4);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.jjFillToken();
      javaParserTokenManager0.SkipLexicalActions(token2);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      StringReader stringReader0 = new StringReader("prDB&M|=H(C0%?TRC");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-121);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)34, (byte)46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)24;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte) (-55);
      byteArray0[7] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      StringReader stringReader0 = new StringReader("p|C$}Z@CwIu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("p", token1.toString());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2285), 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      StringReader stringReader0 = new StringReader("else");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaCharStream0.BeginToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }
}
