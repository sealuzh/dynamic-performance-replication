/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:41:59 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Locale;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), 4L, (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeRational0, 20, 20, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[336];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)46, (byte)46, fieldTypeDouble0, 4L, 2531L, byteArray0, byteOrder0, (byte)46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2531, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)9;
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte) (-115);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3627, 22, fieldTypeLong0, 22, 22, byteArray0, byteOrder0, (byte) (-115));
      String string0 = tiffField0.getValueDescription();
      assertEquals(22, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(3627, tiffField0.getTag());
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(22L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-4);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte) (-4);
      byteArray0[4] = (byte) (-118);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-285), 32, fieldTypeLong0, 32, (-285), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-285), tiffField0.getTag());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals((-285), tiffField0.getOffset());
      assertEquals(32L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[314];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1096), (-1162), fieldTypeDouble0, (byte)33, (-1), byteArray0, byteOrder0, 62);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@6258b198
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeRational0, 20, (-957L), byteArray0, byteOrder0, (-1));
      double double0 = Locale.LanguageRange.MAX_WEIGHT;
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[167];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldTypeFloat fieldTypeFloat1 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37390, 68, fieldTypeFloat1, 37390, 1L, byteArray0, byteOrder1, 68);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(149560, tiffField0.getBytesLength());
      assertEquals(37390L, tiffField0.getCount());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(37390, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte)74;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeByte0, (-2147483648L), 1L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "O`}SFW5U+T'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(469, "u#DxUUcTW+;].2|");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)83, fieldTypeFloat0, (byte)96, 177L, byteArray0, byteOrder1, (byte)83);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(96L, tiffField0.getCount());
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(83, tiffField0.getSortHint());
      assertEquals(177, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2649, (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2649, 2649, fieldTypeShort0, 254L, 0L, byteArray0, byteOrder0, (-2285));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2285), tiffField0.getSortHint());
      assertEquals(508, tiffField0.getBytesLength());
      assertEquals(254L, tiffField0.getCount());
      assertArrayEquals(new int[] {2742, 4863}, intArray0);
      assertEquals(2649, tiffField0.getDirectoryType());
      assertEquals(2649, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeFloat0, 3096L, 255L, (byte[]) null, byteOrder0, 14);
      tiffField0.getFieldTypeName();
      assertEquals(14, tiffField0.getTag());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 332, fieldTypeAscii0, 139L, 372L, byteArray0, byteOrder0, 332);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-2070));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(372, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals(332, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(332, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)8;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 1630, fieldTypeAscii0, 689L, (byte)8, byteArray0, byteOrder0, 78);
      String string0 = tiffField0.getStringValue();
      assertEquals(689, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(1630, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 3184, fieldTypeByte0, 3184, 0L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3184, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(42, "BlackLevel");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)35;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeAscii0, 42, 128L, byteArray0, byteOrder0, (byte)6);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(42, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getTag());
      assertEquals(42, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-683), "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-683), (-683), fieldTypeLong0, (-683), 1328L, byteArray0, byteOrder0, (-683));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-683), tiffField0.getTag());
      assertEquals((-683), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1328, tiffField0.getOffset());
      assertEquals((-683), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1447, 1447, fieldTypeByte0, 1447, 4L, byteArray0, byteOrder0, 6);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@23f40a7f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeAscii0, 139L, 372L, byteArray0, byteOrder0, (byte)11);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)11, (-2070));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(372, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2381, 2381, fieldTypeShort0, 2381, 2381, byteArray0, byteOrder0, 2381);
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(2381, int0);
      
      tiffField0.getByteArrayValue();
      assertEquals(4762, tiffField0.getBytesLength());
      assertEquals(2381, tiffField0.getTag());
      assertEquals(2381, tiffField0.getSortHint());
      assertEquals(2381L, tiffField0.getCount());
      assertEquals(2381, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2381, 2381, fieldTypeShort0, 2381, 2381, byteArray0, byteOrder0, 2381);
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4762, tiffField0.getBytesLength());
      assertEquals(2381L, tiffElement0.offset);
      assertEquals(2381, tiffField0.getSortHint());
      assertEquals(2381, tiffField0.getTag());
      assertEquals(2381, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(2381L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[429];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CHINA;
      TiffField tiffField0 = new TiffField(1526, 1086, fieldTypeLong0, 1086, 1086, byteArray0, byteOrder0, 1086);
      tiffField0.getDoubleArrayValue();
      assertEquals(4344, tiffField0.getBytesLength());
      assertEquals(1526, tiffField0.getTag());
      assertEquals(1086L, tiffField0.getCount());
      assertEquals(1086, tiffField0.getDirectoryType());
      assertEquals(1086, tiffField0.getOffset());
      assertEquals(1086, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-48);
      TiffField tiffField0 = new TiffField(1248, 1849, fieldTypeByte0, 1248, 1849, byteArray0, (ByteOrder) null, 1120);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5724056e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-76);
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(519, 519, fieldTypeShort0, (-3768L), 519, byteArray0, (ByteOrder) null, 3460);
      String string0 = tiffField0.getTagName();
      assertEquals(519, tiffField0.getOffset());
      assertEquals("JPEGQTables", string0);
      assertEquals(3460, tiffField0.getSortHint());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals(519, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)51;
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)54;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)54, 1, fieldTypeFloat0, 1, 4L, byteArray0, byteOrder0, 1);
      tiffField0.getSortHint();
      tiffField0.getByteOrder();
      tiffField0.getIntValueOrArraySum();
      try { 
        FieldType.getFieldType(2146808550);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 2146808550 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)55;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte)27;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3627, 22, fieldTypeLong0, 280L, 22, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(3627, int0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(280L, tiffField0.getCount());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getOffset());
      assertEquals(1120, tiffField0.getBytesLength());
      assertEquals((-1914175433), int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(42, "BlackLevel");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte)6;
      byteArray0[2] = (byte) (-125);
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)35;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeAscii0, 42, 128L, byteArray0, byteOrder0, (byte)6);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(128, tiffField0.getOffset());
      assertEquals(42, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Pattern.quote("Text field no encoded as bytes.");
      int int0 = Float.BYTES;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)25;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)38;
      TiffField tiffField0 = new TiffField(2802, 15, fieldTypeShort0, 360L, 15, byteArray0, byteOrder0, (byte)25);
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(10041, int1);
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(2802, tiffField0.getTag());
      assertEquals(720, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(360L, tiffField0.getCount());
      assertEquals(15, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)28;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte) (-43);
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)43;
      byteArray0[6] = (byte) (-43);
      byteArray0[8] = (byte) (-58);
      TiffField tiffField0 = new TiffField(37510, 6, fieldTypeDouble0, 1L, 4228L, byteArray0, byteOrder0, (byte)55);
      tiffField0.getDoubleArrayValue();
      assertEquals(4228, tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(37510, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(55, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(168, 168, fieldTypeByte0, 4L, 43L, byteArray0, byteOrder0, (byte)39);
      String string0 = tiffField0.getValueDescription();
      assertEquals(168, tiffField0.getTag());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(168, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte)80;
      byteArray0[6] = (byte)62;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)6);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField((-344), (-648), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (-3479));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals((-3479), tiffField0.getSortHint());
      assertEquals((-648), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-344), tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(173, 173, fieldTypeByte0, 8L, 4L, byteArray0, byteOrder0, (byte)46);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5e77ed81 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "L");
      byte[] byteArray0 = new byte[9];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("~<',jAi1f=nuD?bL ");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charBuffer0.order();
      CharBuffer.allocate((byte)51);
      charBuffer0.order();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-608), "L");
      TiffField tiffField0 = new TiffField(68, 66, fieldTypeDouble0, 48L, 0, byteArray0, (ByteOrder) null, (-821));
      Byte byte0 = new Byte((byte)51);
      tiffField0.getDoubleArrayValue();
      assertEquals((-821), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getTag());
      assertEquals(66, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)115;
      byteArray0[6] = (byte) (-27);
      byteArray0[7] = (byte)27;
      byteArray0[8] = (byte)27;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-144), (-144), fieldTypeRational0, 493L, 493L, byteArray0, byteOrder0, (byte)27);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3944, tiffField0.getBytesLength());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(493, tiffField0.getOffset());
      assertEquals((-144), tiffField0.getDirectoryType());
      assertEquals((-32271), int0);
      assertEquals((-144), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[290];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40, 356, fieldTypeLong0, 356, 50, byteArray0, byteOrder2, 33);
      tiffField0.getValueDescription();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(469, "u#DxUUcTW+;].2|");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)96;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 50, 1633L, byteArray0, byteOrder0, (byte)96);
      Object object0 = new Object();
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)96;
      byteArray0[7] = (byte)96;
      TiffField tiffField1 = new TiffField(469, 50, fieldTypeRational0, 204L, 0, byteArray0, byteOrder0, 231);
      tiffField0.getIntArrayValue();
      tiffField0.getDescriptionWithoutValue();
      System.setCurrentTimeMillis(104L);
      System.setCurrentTimeMillis((byte)96);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)51;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)51);
      ByteBuffer byteBuffer1 = byteBuffer0.putShort((int) (byte)0, (short) (byte)51);
      ByteBuffer byteBuffer2 = byteBuffer1.put((byte)51);
      byteBuffer0.putLong(128L);
      byteBuffer1.get();
      byteBuffer2.putFloat((float) (byte)51);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147104299), 433, fieldTypeRational0, 4L, (byte)0, byteArray0, byteOrder0, 433);
      tiffField0.getByteArrayValue();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2147104299 (0x8005c9d5: Unknown Tag): ", string0);
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.POSITIVE_INFINITY}, doubleArray0, 0.01);
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ASCII");
      String string1 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x8005c9d5)", string1);
      assertEquals(433, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(433, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 50758;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      int int1 = 1590;
      int int2 = Pattern.CANON_EQ;
      TiffField tiffField0 = new TiffField(1, (-456), fieldTypeLong0.ASCII, 1312L, 114, byteArray0, byteOrder0, 1);
      tiffField0.getValueDescription();
      FieldTypeShort fieldTypeShort1 = FieldType.SHORT;
      long long0 = 1L;
      long long1 = 799L;
      try { 
        FieldType.getFieldType((-3070));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type -3070 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      String string0 = "CzZ.n5VfiyL`";
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(711, "CzZ.n5VfiyL`");
      TiffField tiffField0 = new TiffField(33723, 735, fieldTypeByte0, 84L, 33723, byteArray0, byteOrder0, 356);
      ByteOrder.nativeOrder();
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(3204);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 3204 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(114, 114, fieldTypeShort0, 506L, (-3022L), byteArray0, byteOrder0, 114);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      ByteOrder.nativeOrder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int0 = Byte.BYTES;
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3022), tiffField0.getOffset());
      assertEquals(114, tiffField0.getTag());
      assertEquals(114, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(1012, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[328];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1526, 1526, fieldTypeDouble0.FLOAT, 1526, 1526, byteArray0, byteOrder0, 1142);
      Locale locale0 = Locale.ITALIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      locale0.toLanguageTag();
      String string0 = tiffField0.getValueDescription();
      assertEquals(6104, tiffField0.getBytesLength());
      assertEquals(1526, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1526, tiffField0.getOffset());
      assertEquals(1142, tiffField0.getSortHint());
      assertEquals(1526, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[429];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1526, 1526, fieldTypeDouble0, 1526, 1625L, byteArray0, byteOrder0, 1526);
      TiffField tiffField1 = new TiffField(1526, 1526, fieldTypeDouble0.FLOAT, 1625L, 1526, byteArray0, byteOrder0, 1086);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CHINA;
      tiffField0.toString();
      MockFile mockFile0 = new MockFile((String) null, "1526 (0x5f6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1526 Double)");
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile("1526 (0x5f6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1526 Double)", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }
}
