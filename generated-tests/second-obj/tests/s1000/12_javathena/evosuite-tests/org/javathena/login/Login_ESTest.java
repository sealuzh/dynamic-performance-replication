/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:18:13 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Calendar;
import java.util.Locale;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Excecutable;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      MockThread.interrupted();
      MockThread.reset();
      Login.display_title();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("conf/subnet_athena.conf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.check_ipmask((-1728899396), "QoA ");
      assertEquals(0, login0.getAuth_max());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.getReuseAddress();
      mockSocket0.setTrafficClass(0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.setEof(0);
      byte[] byteArray0 = Login.getMd5Data(socket_data0);
      int int0 = Calendar.SHORT_FORMAT;
      Login.showTab(byteArray0);
      assertEquals("2345678910111213", socket_data0.getMd5key());
      assertEquals(0, socket_data0.getEof());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      login0.check_ip(inetAddress0);
      login0.setAuth_max(0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = Login.mmo_auth_initXML();
      assertEquals(0, int0);
      
      Login login0 = new Login();
      login0.getLog_fp();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "comparator");
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertEquals(0, login0.getAuth_max());
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      int[] intArray0 = new int[10];
      intArray0[8] = 2;
      intArray0[2] = 30;
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_initTXT();
      int int0 = login0.getAuth_max();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login.display_title();
      Login.login_log("BABY_CRUSADER");
      Login.getDbManagemtType();
      Login.getPASSWORDENC();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromClient0);
      // Undeclared exception!
      try { 
        Login.version(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      socket_data0.setFunc_send((Excecutable) null);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login.login_log("-");
      Login login0 = new Login();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf");
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      login0.setOut(mockPrintWriter0);
      MySQLConfig.setLogin_server_id("conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        login0.parse_console("com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Socket_data socket_data0 = null;
      Login.logUnknownPackets((Socket_data) null);
      Login login0 = new Login();
      login0.setAuth_max(1087);
      login0.auth_max = 1669;
      int int0 = Login.START_ACCOUNT_NUM;
      // Undeclared exception!
      try { 
        Login.codingKey((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      login0.do_initXML();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)0;
      Login.mmo_auth_initTXT();
      Login.getDbManagemtType();
      login0.getAuth_num();
      Login.mmo_auth_syncXML();
      Login.mmo_auth_syncTXT();
      Login.getPASSWORDENC();
      // Undeclared exception!
      Login.mmo_auth_syncXML();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[5];
      intArray0[0] = 10;
      intArray0[1] = 1023;
      intArray0[0] = 10;
      MySQLConfig.setLogin_server_port(0);
      Auth_data auth_data0 = UserManagement.addUserTXT("NO", "conf/subnet_athena.conf", "conf/subnet_athena.conf", ':');
      assertEquals(2000000, (int)auth_data0.getAccount_id());
      
      intArray0[3] = (int) ':';
      intArray0[4] = 30;
      login0.setServer_fd(intArray0);
      login0.do_initTXT();
      ConfigurationManagement.setSubnetmaski(intArray0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      Login.setPASSWORDENC(30);
      login0.do_initTXT();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"U.2d8Tw");
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "V$vx");
      login0.parse_console("\"U.2d8Tw");
      Login.mmo_auth_initTXT();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("*:?ZCRH6|,wG%ti");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.xml");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte) (-21);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConfigurationManagement.setAccess_allownum(99);
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(30);
      login0.check_auth_sync();
      UserManagement.addAccountIdCount();
      ConfigurationManagement.setAccess_allownum((-1174));
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("conf/subnet_athena.conf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setSoLinger(false, (-779));
      mockSocket0.getReuseAddress();
      mockSocket0.getRemoteSocketAddress();
      mockSocket0.setTrafficClass(0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.setMd5key("m,rwvKf$#5O1/tVA{");
      socket_data0.setEof(0);
      byte[] byteArray0 = Login.getMd5Data(socket_data0);
      int int0 = Calendar.SHORT_FORMAT;
      Login.showTab(byteArray0);
      assertEquals("2345678910111213", socket_data0.getMd5key());
      assertEquals(1, socket_data0.getEof());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      login0.do_initXML();
      UserManagement.addAccountIdCount(100000000);
      UserManagement.addAccountIdCount(1908);
      Login.End login_End0 = login0.new End();
      MySQLConfig.setDefault_codepage("conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_port(100000000);
      UserManagement.addUserTXT("NO", ":>b7l\"e<OYB5 ", "- to create new accounts with a limited time: time of creation.", '#');
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      login0.setServer_fd(intArray0);
      Login login1 = new Login();
      login0.do_initTXT();
      int[] intArray1 = new int[4];
      intArray1[0] = 30;
      intArray1[1] = 50;
      intArray1[2] = 100000000;
      intArray1[3] = 30;
      ConfigurationManagement.setSubnetmaski(intArray1);
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "- with the IP security order: 'mutual-failture' (allow if in the allow list and not in the deny list).");
      ConfigurationManagement.setAuth_before_save_file((-1268));
      login1.parse_console("Z=2");
      Login login2 = new Login();
      Login.mmo_auth_syncXML();
      Login login3 = new Login();
      Login login4 = new Login();
      // Undeclared exception!
      try { 
        login4.parse_console("end");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      login0.save_config_in_log();
      UserManagement.addUserTXT("conf/subnet_athena.conf", "parameter-types", "71)i0~4", '1');
      Login login1 = new Login();
      Login login2 = new Login();
      login2.do_final();
      login0.do_initTXT();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, " threw an exception");
      MySQLConfig.setLogin_server_id("com.thoughtworks.xstream.converters.ConverterRegistry");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      Login.mmo_auth_syncTXT();
      Login.setPASSWORDENC(2000000);
      Login login3 = new Login();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[16];
      intArray0[0] = 10;
      Login.mmo_auth_syncTXT();
      intArray0[1] = 1023;
      intArray0[0] = 10;
      MySQLConfig.setLogin_server_port(0);
      UserManagement.addUserTXT("NO", "conf/subnet_athena.conf", "conf/subnet_athena.conf", ':');
      intArray0[3] = (int) ':';
      intArray0[4] = 30;
      login0.setServer_fd(intArray0);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      Login.setPASSWORDENC(30);
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        login0.parse_admin(1477, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login login1 = new Login();
      login0.parse_console(".OBPKw");
      Login.getDbManagemtType();
      Login.login_log("conf/subnet_athena.conf");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login1.getLog_fp();
      int[] intArray0 = login1.getServer_fd();
      login1.setServer_fd(intArray0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      ConfigurationManagement.setSubnetmaski(intArray0);
      Login.display_title();
      ConfigurationManagement.setAuth_before_save_file((-1471880311));
      // Undeclared exception!
      try { 
        login1.parse_console("shutdown");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UserManagement.addAccountIdCount((-1061));
      UserManagement.addUserTXT("com.thoughtworks.xstream.converters.basic.FloatConverter", "Ans{}:gZ8", "- with the IP security order: 'mutual-failture' (allow if in the allow list and not in the deny list).", '[');
      Login login0 = new Login();
      Login login1 = new Login();
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "- to create new accounts with a limited time: time of creation.");
      login0.getAuth_num();
      Login.mmo_auth_syncXML();
      MySQLConfig.setLogin_server_pw("Zf;Cpf`FNSU)P'E");
      Login.mmo_auth_syncTXT();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        login2.parse_console("Ans{}:gZ8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Login login1 = new Login();
      int int0 = FromClient.END_OF_CONNECTION;
      Login.getDbManagemtType();
      FastMap.newInstance();
      Integer integer0 = new Integer(30);
      Login.login_log("conf/subnet_athena.conf");
      login1.parse_console("conf/subnet_athena.conf");
      Login login2 = new Login();
      login1.getAuth_num();
      Login.mmo_auth_syncXML();
      Login login3 = new Login();
      Login.mmo_auth_syncTXT();
      Login login4 = new Login();
      int int1 = FromClient.NEW_CONNECTION_OF_CLIENT;
      int[] intArray0 = new int[3];
      intArray0[0] = 30;
      intArray0[1] = 30002;
      login2.parse_console(".OBPKw");
      Login.display_title();
      // Undeclared exception!
      try { 
        login2.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      Login login1 = new Login();
      Login login2 = new Login();
      login2.do_final();
      Login.setPASSWORDENC(30);
      login1.do_initTXT();
      ConfigurationManagement.setSubnetmaski((int[]) null);
      Login.display_title();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "conf/subnet_athena.conf");
      Login login3 = new Login();
      login3.parse_console("conf/subnet_athena.conf");
      Login login4 = new Login();
      login1.parse_console("SHOP");
      login2.check_ip((InetAddress) null);
      Login login5 = new Login();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("md5key setup complete");
      login1.getAuth_num();
      Login.mmo_auth_syncXML();
      Login login6 = new Login();
      Login login7 = new Login();
      // Undeclared exception!
      try { 
        login7.parse_console("exit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      Login login1 = new Login();
      login1.do_initTXT();
      int[] intArray0 = new int[3];
      intArray0[0] = 10;
      intArray0[1] = 2;
      intArray0[2] = 30;
      ConfigurationManagement.setSubnetmaski(intArray0);
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YES");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("YES");
      ConfigurationManagement.setAuth_before_save_file(30);
      UserManagement.addAccountIdCount(30);
      MySQLConfig.setLogin_server_id("5(NEm\"XPYcn%QG:A");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      Login.mmo_auth_syncTXT();
      Login.setPASSWORDENC((-291));
      login0.getLog_fp();
      Login.setPASSWORDENC(83);
      Login login2 = new Login();
      login0.setServer_fd(intArray0);
      // Undeclared exception!
      try { 
        login1.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      login0.save_config_in_log();
      login0.getLog_fp();
      int[] intArray0 = login0.server_fd;
      Login login1 = new Login();
      login0.do_initTXT();
      ConfigurationManagement.setSubnetmaski(intArray0);
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "55{P`9+ v&H1?E&iB\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf");
      ConfigurationManagement.setAuth_before_save_file(988);
      login1.parse_console("alive");
      Login login2 = new Login();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("conf/subnet_athena.conf");
      login1.getAuth_num();
      Login.mmo_auth_syncXML();
      Login login3 = new Login();
      Login login4 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket(inetAddress0, 30, inetAddress0, (-138));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-138
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      UserManagement.addAccountIdCount(100000000);
      Login login1 = new Login();
      login1.save_config_in_log();
      MockSocket mockSocket0 = new MockSocket();
      UserManagement.addAccountIdCount(100000000);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Login.mmo_auth_initXML();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Login.display_title();
      login1.yesNoOnOffToBoolean("YES");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      UserManagement.addAccountIdCount((-1061));
      FileSystemHandling.shouldAllThrowIOExceptions();
      int[] intArray0 = new int[5];
      intArray0[0] = 50;
      intArray0[1] = (int) '#';
      Login.mmo_auth_initXML();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Login.display_title();
      login0.parse_console("status");
      Login login1 = new Login();
      // Undeclared exception!
      login1.check_auth_sync();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "conf/subnet_athena.conf");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login1 = new Login();
      int int0 = Calendar.WEEK_OF_YEAR;
      Login.getDbManagemtType();
      Login.login_log("conf/subnet_athena.conf");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>(30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(2);
      Login.login_log("conf/subnet_athena.conf");
      UserManagement.addAccountIdCount(30);
      Login.auth_num = (-4308);
      FastMap<Integer, Auth_data> fastMap1 = new FastMap<Integer, Auth_data>();
      Auth_data auth_data0 = mock(Auth_data.class, new ViolatedAssumptionAnswer());
      fastMap1.put((Integer) 50, auth_data0);
      UserManagement.setAuth_dats(fastMap0);
      Login.display_title();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "pbJ(r;o");
      login1.getAuth_num();
      MySQLConfig.setLogin_server_id("LORD_KNIGHT");
      login1.yesNoOnOffToBoolean("NO");
  }
}
