/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:13:19 GMT 2019
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.zip.Deflater;
import java.util.zip.Inflater;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import okio.GzipSource;
import okio.HashingSink;
import okio.HashingSource;
import okio.InflaterSource;
import okio.Pipe;
import okio.RealBufferedSink;
import okio.RealBufferedSource;
import okio.Sink;
import okio.Source;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RealBufferedSource_ESTest extends RealBufferedSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pipe pipe0 = new Pipe(416L);
      Buffer buffer0 = pipe0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString.decodeBase64("EM'Gc~Rv,6 ^4xtGD.");
      boolean boolean0 = realBufferedSource0.rangeEquals((-975L), (ByteString) null, 8, 8);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSink hashingSink0 = HashingSink.sha1(buffer0);
      HashingSink hashingSink1 = HashingSink.sha512(hashingSink0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink1);
      Buffer buffer1 = realBufferedSink0.buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte) (-101);
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte)67;
      byteArray0[8] = (byte) (-32);
      int int0 = realBufferedSource0.read(byteArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = 1000000L;
      Pipe pipe0 = new Pipe(1000000L);
      pipe0.sourceClosed = false;
      Buffer buffer0 = pipe0.buffer;
      GzipSource gzipSource0 = new GzipSource(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(gzipSource0);
      realBufferedSource0.buffer();
      try { 
        realBufferedSource0.indexOfElement((ByteString) null);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      Source source0 = hashingSource0.delegate();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(source0);
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOf((byte)124, (long) (byte)124, 3L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex=124 toIndex=3
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8(":$|0&[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":$|0&[");
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      byte byte0 = (byte) (-71);
      realBufferedSource0.readUtf8Line();
      try { 
        buffer0.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeHexadecimalUnsignedLong(1399L);
      buffer0.readShort();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.inputStream();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer0.writeString(">", (int) (short)13623, 912, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex: 912 < 13623
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pipe pipe0 = new Pipe(9223372036854775807L);
      Buffer buffer0 = pipe0.buffer;
      MockFile mockFile0 = new MockFile("byteString == null", "size=%s offset=%s byteCount=%s");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      pipe0.sourceClosed = true;
      buffer0.copyTo((OutputStream) mockFileOutputStream0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      HashingSource.md5(buffer0);
      HashingSource.md5(hashingSource0);
      ByteString byteString0 = hashingSource0.hash();
      realBufferedSource0.indexOf(byteString0, 1973L);
      try { 
        realBufferedSource0.readByteString(1000000L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pipe pipe0 = new Pipe(919L);
      Buffer buffer0 = pipe0.buffer;
      buffer0.inputStream();
      buffer0.md5();
      pipe0.sourceClosed = true;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      byte byte0 = (byte)51;
      realBufferedSource0.indexOf((byte)51);
      long long0 = (-1821L);
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOf((byte)51, (-1821L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex=-1821 toIndex=9223372036854775807
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      realBufferedSource0.close();
      ByteString byteString0 = ByteString.EMPTY;
      // Undeclared exception!
      try { 
        realBufferedSource0.rangeEquals(3L, byteString0, (-1153), 124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pipe pipe0 = new Pipe(2658L);
      Buffer buffer0 = pipe0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)2;
      byteArray1[1] = (byte)2;
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)46;
      try { 
        realBufferedSource0.readFully(byteArray0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer0.outputStream();
      realBufferedSource0.toString();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-102);
      Charset.defaultCharset();
      Buffer buffer1 = realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        realBufferedSource0.read(buffer1, (long) (byte) (-102));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -102
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-88);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Buffer buffer1 = realBufferedSink0.buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      realBufferedSource0.readUtf8Line();
      // Undeclared exception!
      try { 
        buffer1.readByteArray((long) (byte) (-88));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-88
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Inflater inflater0 = new Inflater();
      InflaterSource inflaterSource0 = new InflaterSource(buffer0, inflater0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(inflaterSource0);
      try { 
        realBufferedSource0.readDecimalLong();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // source exhausted prematurely
         //
         verifyException("okio.InflaterSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeHexadecimalUnsignedLong(3L);
      GzipSource gzipSource0 = new GzipSource(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(gzipSource0);
      realBufferedSource0.skip((-819L));
      ByteString[] byteStringArray0 = new ByteString[4];
      byte[] byteArray0 = new byte[0];
      buffer0.md5();
      // Undeclared exception!
      try { 
        ByteString.of(byteArray0, (-405), (-405));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=-405 byteCount=-405
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long long0 = 5L;
      Pipe pipe0 = new Pipe(5L);
      pipe0.sourceClosed = false;
      Buffer buffer0 = pipe0.buffer;
      pipe0.sourceClosed = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      GzipSource gzipSource0 = new GzipSource(buffer0);
      gzipSource0.timeout();
      pipe0.sinkClosed = false;
      gzipSource0.timeout();
      buffer0.clone();
      try { 
        buffer0.writeAll(gzipSource0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pipe pipe0 = new Pipe(958L);
      Pipe.PipeSource pipe_PipeSource0 = pipe0.new PipeSource();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(pipe_PipeSource0);
      Buffer buffer0 = realBufferedSource0.buffer();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      pipe0.sourceClosed = true;
      buffer0.writeHexadecimalUnsignedLong(1L);
      // Undeclared exception!
      try { 
        realBufferedSource0.readFully(buffer0, 958L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("okio.Pipe$PipeSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pipe pipe0 = new Pipe(2364L);
      pipe0.sinkClosed = false;
      pipe0.sourceClosed = false;
      Buffer buffer0 = pipe0.buffer;
      pipe0.sourceClosed = true;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.readByteString();
      try { 
        realBufferedSource0.readByte();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pipe pipe0 = new Pipe(8192L);
      Source source0 = pipe0.source();
      HashingSource hashingSource0 = HashingSource.md5(source0);
      ByteString byteString0 = hashingSource0.hash();
      HashingSource hashingSource1 = HashingSource.hmacSha256(source0, byteString0);
      hashingSource1.close();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource1);
      // Undeclared exception!
      try { 
        realBufferedSource0.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.snapshot();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      try { 
        realBufferedSource0.readByte();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSink hashingSink0 = HashingSink.sha256(buffer0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)0;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, 2, (int) (byte)1);
      ByteString byteString0 = ByteString.of(byteBuffer0);
      HashingSink hashingSink1 = HashingSink.hmacSha256(hashingSink0, byteString0);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink1);
      Buffer buffer1 = realBufferedSink0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      ByteString byteString1 = ByteString.EMPTY;
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOfElement(byteString1, (-917L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      try { 
        realBufferedSource0.readShort();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Pipe pipe0 = new Pipe(2147483647L);
      Source source0 = pipe0.source();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(source0);
      byte byte0 = (byte)37;
      long long0 = 4L;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      pipe0.sourceClosed = true;
      pipe0.sinkClosed = true;
      String string0 = "C*eIAco7GsPd\\KR";
      pipe0.sourceClosed = true;
      // Undeclared exception!
      try { 
        realBufferedSource0.readByteArray(4L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("okio.Pipe$PipeSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Inflater inflater0 = new Inflater(false);
      InflaterSource inflaterSource0 = new InflaterSource((BufferedSource) buffer0, inflater0);
      InflaterSource inflaterSource1 = new InflaterSource(inflaterSource0, inflater0);
      HashingSource hashingSource0 = HashingSource.md5(inflaterSource1);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOf((byte)85, (-917L), (long) (byte)85);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex=-917 toIndex=85
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Pipe pipe0 = new Pipe(10000000000000000L);
      Buffer buffer0 = pipe0.buffer;
      pipe0.sourceClosed = false;
      pipe0.sourceClosed = false;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer0.writeIntLe(1717986918);
      realBufferedSource0.readByteArray();
      realBufferedSource0.readByteArray();
      try { 
        realBufferedSource0.readShortLe();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      HashingSource hashingSource1 = HashingSource.sha1(hashingSource0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource1);
      try { 
        realBufferedSource0.readUtf8(8L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)15;
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte)1;
      buffer0.read(byteArray0);
      ByteString byteString0 = null;
      byte byte0 = (byte) (-99);
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOf((ByteString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Pipe pipe0 = new Pipe(4L);
      Buffer buffer0 = pipe0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      // Undeclared exception!
      try { 
        realBufferedSource0.readByteString((-589L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -589
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      try { 
        realBufferedSource0.readUtf8LineStrict();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      try { 
        realBufferedSource0.readLongLe();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Pipe pipe0 = new Pipe(1000L);
      pipe0.sinkClosed = true;
      Source source0 = pipe0.source();
      pipe0.sinkClosed = true;
      pipe0.sinkClosed = true;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(source0);
      // Undeclared exception!
      try { 
        realBufferedSource0.readUtf8LineStrict((-2053L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit < 0: -2053
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RealBufferedSource realBufferedSource0 = null;
      try {
        realBufferedSource0 = new RealBufferedSource((Source) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // source == null
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      buffer0.outputStream();
      realBufferedSource0.toString();
      try { 
        realBufferedSource0.readInt();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Pipe pipe0 = new Pipe(2218L);
      Buffer buffer0 = pipe0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      pipe0.sourceClosed = false;
      realBufferedSource0.readUtf8();
      pipe0.sinkClosed = false;
      pipe0.sinkClosed = false;
      realBufferedSource0.readAll(buffer0);
      realBufferedSource0.readAll(buffer0);
      try { 
        realBufferedSource0.readUtf8LineStrict(4L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^Pz#ouG");
      Pipe pipe0 = new Pipe(173L);
      Source source0 = pipe0.source();
      pipe0.sinkClosed = true;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(source0);
      realBufferedSource0.close();
      // Undeclared exception!
      try { 
        realBufferedSource0.indexOf((byte) (-14));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // closed
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = (-2145144340);
      Deflater deflater0 = null;
      try {
        deflater0 = new Deflater((-2145144340));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.Deflater", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Pipe pipe0 = null;
      try {
        pipe0 = new Pipe(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxBufferSize < 1: 0
         //
         verifyException("okio.Pipe", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      long long0 = (-924L);
      Pipe pipe0 = null;
      try {
        pipe0 = new Pipe((-924L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxBufferSize < 1: -924
         //
         verifyException("okio.Pipe", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        HashingSink.sha1((Sink) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // delegate == null
         //
         verifyException("okio.ForwardingSink", e);
      }
  }
}
