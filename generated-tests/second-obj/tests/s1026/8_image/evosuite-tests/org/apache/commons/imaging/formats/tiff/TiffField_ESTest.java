/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:00:10 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import java.util.Locale;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-866), (-866), fieldTypeAscii0, (-866), (-866), byteArray0, byteOrder0, (-866));
      int int0 = tiffField0.getSortHint();
      assertEquals((-866), tiffField0.getTag());
      assertEquals((-866), tiffField0.getBytesLength());
      assertEquals((-866), tiffField0.getDirectoryType());
      assertEquals((-866), int0);
      assertEquals((-866), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2107, 2107, fieldTypeShort0, 2107, 2107, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValueDescription();
      int int0 = Byte.SIZE;
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1460), fieldTypeShort0, (-1460), (-1460), byteArray0, byteOrder0, (-2147483646));
      tiffField0.getFieldTypeName();
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1460), tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-1460), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)120;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147283491, 2147283491, fieldTypeByte0, 2147283491, 2147283491, byteArray0, byteOrder0, (byte)120);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@20a030ab for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2055), fieldTypeDouble0, 0L, 1385L, byteArray0, byteOrder0, (-2055));
      ByteOrder.nativeOrder();
      tiffField0.getDoubleArrayValue();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Object[] objectArray0 = new Object[0];
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-112);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2107, 2107, fieldTypeShort0, 2107, (-1L), byteArray0, byteOrder0, 1954);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2107L, tiffField0.getCount());
      assertEquals(2107, tiffField0.getTag());
      assertEquals((-28592), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2107, tiffField0.getDirectoryType());
      assertEquals(1954, tiffField0.getSortHint());
      assertEquals(4214, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(48258, "C,yR779m\"");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48258, 48258, fieldTypeAscii0, 48258, (-323L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4ca05dae for: 48258 (0xbc82: WidthResolution): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[312];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      Charset.defaultCharset();
      int int0 = Pattern.COMMENTS;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1233, fieldTypeByte0, 769L, 1, byteArray0, byteOrder0, 1233);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1233, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(769L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(769, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1233, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-507), "FileSource");
      TiffField tiffField0 = new TiffField((-2147483646), (-507), fieldTypeByte0, 2147483647L, (-2147483646), byteArray0, byteOrder0, (-3668));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-507), tiffField0.getDirectoryType());
      assertEquals((-2147483646L), tiffElement0.offset);
      assertEquals(2147483647L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      assertEquals((-3668), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65102, "SubjectLocation");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 65102, fieldTypeShort0, 4L, 4L, (byte[]) null, byteOrder0, 492);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65102, tiffField0.getDirectoryType());
      assertEquals(492, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(948, 948, fieldTypeByte0, 948, 1L, byteArray0, byteOrder0, 948);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(948, tiffField0.getTag());
      assertEquals(1L, tiffElement0.offset);
      assertEquals(948, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(948, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-110);
      TiffField tiffField0 = new TiffField(1, 942, fieldTypeLong0, 0L, 3395L, byteArray0, (ByteOrder) null, (-5));
      tiffField0.getIntArrayValue();
      assertEquals(942, tiffField0.getDirectoryType());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(3395, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte) (-98);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1229), 33, fieldTypeDouble0, 33, (-1229), byteArray0, byteOrder0, (-2074));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@6879a644 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)120;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147283487, 2147283487, fieldTypeByte0, 2147283487, 2147283487, byteArray0, byteOrder0, (byte)120);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@2be5f14d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, ", ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeShort0, 45, 0, byteArray0, byteOrder0, 5837);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)120;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147283491, 2147283491, fieldTypeByte0, 2147283491, 2147283491, byteArray0, byteOrder0, (byte)120);
      String string0 = tiffField0.getTagName();
      assertEquals(2147283491, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(2147283491, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7ffcf223)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40, 40, fieldTypeShort0, 40, 40, byteArray0, byteOrder0, 1387);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(40, (-2147));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(1387, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("KL3[%ILy=^;");
      FieldTypeLong fieldTypeLong1 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeLong1, 5, (byte)71, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getValueDescription();
      assertEquals(71, tiffField0.getOffset());
      assertEquals("0, 0", string0);
      assertNotNull(string0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[297];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = Pattern.DOTALL;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(405, 405, fieldTypeFloat0, 32, 2481L, byteArray0, byteOrder1, (-1593));
      String string0 = tiffField0.getValueDescription();
      assertEquals(32L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(2481, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(405, tiffField0.getDirectoryType());
      assertEquals(405, tiffField0.getTag());
      assertEquals((-1593), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte) (-103);
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte)121;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte) (-1));
      assertEquals(2, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1395, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1395, 1395, fieldTypeFloat0, 1395, 1395, byteArray0, byteOrder0, 1395);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "OversizeValueElement, tag: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-89);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986903), (-1717986903), fieldTypeDouble0, (-1717986903), (-1717986903), byteArray0, byteOrder0, (-2146515876));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2146515876), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-1717986903), tiffField0.getOffset());
      assertEquals((-1717986903), tiffField0.getTag());
      assertEquals((-1717986903), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[168];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      Object object0 = new Object();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldType.getFieldType(10);
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeLong0, 4178L, 4178L, byteArray0, byteOrder0, 10);
      tiffField0.getIntValueOrArraySum();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(4178, tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
      assertEquals(4178L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      FieldTypeLong fieldTypeLong1 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      System.setCurrentTimeMillis(13904L);
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, fieldTypeLong1, 701L, (byte)71, byteArray0, byteOrder0, 41991);
      tiffField0.getDoubleArrayValue();
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getOffset());
      assertEquals(41991, tiffField0.getSortHint());
      assertEquals(701L, tiffField0.getCount());
      assertEquals(71, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeByte0, 50722, 50722, byteArray0, byteOrder0, (byte)120);
      String string0 = tiffField0.getTagName();
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertEquals("ColorMatrix2", string0);
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(50722, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51, (-656), fieldTypeRational0, 2240L, 2240L, byteArray0, byteOrder0, (-656));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)78;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(45, 74, fieldTypeRational0, 0L, 45, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      tiffField0.getDoubleArrayValue();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/8_image/KL3[%ILy=^;");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-183), fieldTypeShort0, 1, (-543L), byteArray0, byteOrder0, (-183));
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getIntValueOrArraySum();
      assertEquals((-183), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-543), tiffField0.getOffset());
      assertEquals((-183), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)87, "TI'8ix.nSV");
      TiffField tiffField0 = new TiffField((byte)87, (-1204), fieldTypeAscii0, 691L, 2147483647L, byteArray0, byteOrder0, (-1204));
      String string0 = tiffField0.getValueDescription();
      assertEquals(87, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1204), tiffField0.getSortHint());
      assertEquals((-1204), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[210];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Locale locale0 = Locale.CANADA_FRENCH;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)103;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-81), fieldTypeFloat0, (byte)103, (byte)0, byteArray0, byteOrder0, (byte) (-81));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(103L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-81), tiffField0.getSortHint());
      assertEquals((-81), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte byte0 = (byte)86;
      byte[] byteArray0 = new byte[148];
      byteArray0[29] = (byte)86;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = (-15);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)86, 1444, fieldTypeRational0, (byte)86, (-15), byteArray0, byteOrder0, (-15));
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getDoubleArrayValue();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int1 = 3896;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int2 = 0;
      long long0 = (-137438953472L);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3896);
      tiffField0.getCount();
      ByteBuffer byteBuffer1 = byteBuffer0.compact();
      // Undeclared exception!
      try { 
        byteBuffer1.putLong(3098L);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldType fieldType0 = FieldType.getFieldType(5);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      TiffField tiffField0 = new TiffField(50781, 3878, fieldType0, 1L, 2614L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      Byte byte0 = new Byte((byte) (-8));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-18), (byte) (-18));
      tiffField_OversizeValueElement0.getElementDescription(true);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[173];
      byteArray0[29] = (byte)86;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)86, 1122, fieldTypeShort0, 1092L, (byte)86, byteArray0, byteOrder0, (-443));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = Byte.SIZE;
      int int1 = tiffField0.getDirectoryType();
      assertEquals((-443), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getTag());
      assertEquals(1092L, tiffField0.getCount());
      assertEquals(1122, int1);
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte)85;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2784), (-2784), fieldTypeShort0, 34859, (-2784), byteArray0, byteOrder0, 600);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2784), tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {21795, 21901}, intArray0);
      assertEquals(600, tiffField0.getSortHint());
      assertEquals((-2784), tiffField0.getOffset());
      assertEquals((-2784), tiffField0.getTag());
      assertEquals(34859L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1394, "rs+5la39B~2");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-76);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-122);
      TiffField tiffField0 = new TiffField(1394, 1394, fieldTypeShort0, 8L, 8L, byteArray0, (ByteOrder) null, (byte)52);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(1394, tiffField0.getTag());
      assertArrayEquals(new double[] {180.0, 13443.0, (-31229.0)}, doubleArray0, 0.01);
      assertEquals(1394, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray1 = new byte[12];
      byteArray1[0] = (byte)91;
      Object object0 = new Object();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2147283491, (byte)91, fieldTypeAscii0, 65992L, (byte)0, byteArray0, byteOrder0, (byte)91);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      String string0 = tiffField0.getStringValue();
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(2147283491, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(91, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-1);
      byteArray0[6] = (byte)13;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField(745, 745, fieldTypeRational0, 745, 745, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(745, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertArrayEquals(new int[] {105846}, intArray0);
      assertEquals(745, tiffField0.getDirectoryType());
      assertEquals(745, tiffField0.getTag());
      assertEquals(745L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147283491, 48126, fieldTypeRational0, 48126, 48126, byteArray0, byteOrder0, 48126);
      tiffField0.getTag();
      byteOrder0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(10);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte)107;
      byteArray0[6] = (byte) (-28);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50964, 10, fieldType0, 5835L, (-1978L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50964, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(5835L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1978), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)87, "TI'8ix.nSV");
      fieldTypeAscii0.writeData(byteArray0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)87, (-1204), fieldTypeAscii0, 691L, 2147483647L, byteArray0, byteOrder0, (-1204));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1204), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(87, tiffField0.getTag());
      assertEquals((-1204), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[210];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)86, (byte)86, fieldTypeAscii0, (byte)86, (byte)86, byteArray0, byteOrder0, (byte)86);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(13, 5061);
      long long0 = tiffField_OversizeValueElement0.offset;
      int int0 = (-1);
      int int1 = (-1949);
      try { 
        FieldType.getFieldType(5061);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 5061 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[289];
      byteArray0[131] = (byte)86;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, (byte)86, fieldTypeDouble0, (byte)86, 1233, byteArray0, byteOrder0, 50879);
      tiffField0.getValueDescription();
      Long long0 = new Long((-1059L));
      assertEquals((-1059L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[297];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = Pattern.UNICODE_CASE;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(405, 405, fieldTypeFloat0, 64, 2481L, byteArray0, byteOrder1, (-1593));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2481, tiffField0.getOffset());
      assertEquals(405, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(405, tiffField0.getDirectoryType());
      assertEquals((-1593), tiffField0.getSortHint());
      assertEquals(64L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[210];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Locale locale0 = Locale.CANADA_FRENCH;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TiffField tiffField0 = new TiffField(1171, 2526, fieldTypeLong0, 1171, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2526, tiffField0.getDirectoryType());
      assertEquals(1171L, tiffField0.getCount());
      assertEquals(1171, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
  }
}
