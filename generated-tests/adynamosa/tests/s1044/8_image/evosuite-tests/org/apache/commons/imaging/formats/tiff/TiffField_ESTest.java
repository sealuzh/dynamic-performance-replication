/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 01:18:54 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, "): ");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)92;
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeShort0, 37391, 37391, byteArray0, (ByteOrder) null, 85);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getOffset());
      assertEquals(23552, int0);
      assertEquals(37391, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (-1583), fieldTypeDouble0.IFD, 255L, 20480L, byteArray0, byteOrder0, 2106);
      String string0 = tiffField0.toString();
      assertEquals(20480, tiffField0.getOffset());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (255 IFD)", string0);
      assertEquals(2106, tiffField0.getSortHint());
      assertEquals((-1583), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)109);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(109, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1475), (-1475), fieldTypeByte0, (-508L), 5120L, byteArray0, byteOrder0, (-963));
      int int0 = tiffField0.getTag();
      assertEquals((-963), tiffField0.getSortHint());
      assertEquals(5120, tiffField0.getOffset());
      assertEquals((-1475), tiffField0.getDirectoryType());
      assertEquals((-1475), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "@G?]{mByq_jO\"\"2rW% ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)76;
      TiffField tiffField0 = new TiffField((byte)76, 90, fieldTypeAscii0, 9, 9, byteArray0, byteOrder0, (byte)76);
      String string0 = tiffField0.getStringValue();
      assertEquals(90, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getTag());
      assertEquals(76, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2147361416, "entry.directoryType: ");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1552, (-3299), fieldTypeLong0, (byte)0, 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-3299), tiffField0.getDirectoryType());
      assertEquals(1552, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte)7);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(7, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1607, "ProfileLookTableData");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1607, 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (-817));
      tiffField0.getOffset();
      assertEquals(1607, tiffField0.getTag());
      assertEquals((-817), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 1573, fieldTypeFloat0, 0L, (byte)25, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(25, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1573, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-127);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1264, (-1717986917), fieldTypeLong0, 1L, 2679L, byteArray0, byteOrder0, 2473);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2473, tiffField0.getSortHint());
      assertEquals(1264, tiffField0.getTag());
      assertEquals(2679, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2052, 6, fieldTypeLong0, 1, 2052, byteArray0, byteOrder0, 2052);
      tiffField0.getIntValue();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(2052, tiffField0.getOffset());
      assertEquals(2052, tiffField0.getTag());
      assertEquals(2052, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Short short0 = new Short((short)17);
      byte[] byteArray0 = fieldTypeRational0.writeData(short0, byteOrder0);
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (short)17);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Float float0 = new Float((-763.68427F));
      byte[] byteArray0 = fieldTypeRational0.writeData(float0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)50, 50, fieldTypeRational0, 1L, 1197L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1197, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(396, (String) null);
      TiffField tiffField0 = new TiffField((-2144585558), 50, fieldTypeShort0, 1908874353, (-1852), (byte[]) null, byteOrder0, 2147094399);
      tiffField0.getFieldTypeName();
      assertEquals((-1852), tiffField0.getOffset());
      assertEquals((-2144585558), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2147094399, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1137), (byte)7, fieldTypeLong0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      tiffField0.getFieldTypeName();
      assertEquals(7, tiffField0.getOffset());
      assertEquals((-1137), tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2282, 50738, (FieldType) null, 2282, 50738, byteArray0, byteOrder0, (-1820));
      tiffField0.getFieldType();
      assertEquals((-1820), tiffField0.getSortHint());
      assertEquals(50738, tiffField0.getOffset());
      assertEquals(2282, tiffField0.getTag());
      assertEquals(50738, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1573, 1573, fieldTypeFloat0, 0, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1573, tiffField0.getDirectoryType());
      assertEquals(1573, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 2218, fieldTypeFloat0, (-6736L), (-1L), byteArray0, byteOrder0, 2218);
      tiffField0.getFieldType();
      assertEquals(2218, tiffField0.getDirectoryType());
      assertEquals(2218, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(18, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)71;
      TiffField tiffField0 = new TiffField((-2120), (-1659), fieldTypeRational0, 1L, 222208L, byteArray0, byteOrder0, (-1157));
      tiffField0.getDoubleValue();
      assertEquals((-1659), tiffField0.getDirectoryType());
      assertEquals((-2120), tiffField0.getTag());
      assertEquals(222208, tiffField0.getOffset());
      assertEquals((-1157), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3779), "Software");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-91);
      TiffField tiffField0 = new TiffField(703, (-1716), fieldTypeShort0, 1L, 0L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1716), tiffField0.getDirectoryType());
      assertEquals(703, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-8);
      TiffField tiffField0 = new TiffField((-333), 1573, fieldTypeFloat0, 1L, 50, byteArray0, byteOrder0, (-436));
      tiffField0.getDoubleValue();
      assertEquals((-436), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-333), tiffField0.getTag());
      assertEquals(1573, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2209), "}EBK^(0Dl#'|(|'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(223, (-136), fieldTypeLong0.DOUBLE, 255L, (byte) (-74), byteArray0, byteOrder0, 1335);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-74), tiffField0.getOffset());
      assertEquals((-136), int0);
      assertEquals(1335, tiffField0.getSortHint());
      assertEquals(223, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1908874352), 65535, fieldTypeLong0, 0L, 50939L, byteArray0, (ByteOrder) null, (byte)4);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(50939, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1035, 1022, fieldTypeLong0, 1035, (-1442L), byteArray0, byteOrder0, (byte) (-123));
      tiffField0.getCount();
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals((-1442), tiffField0.getOffset());
      assertEquals(1022, tiffField0.getDirectoryType());
      assertEquals(1035, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(4318, "c%@Z~I");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-403), 3232, fieldTypeFloat0, 0L, (-238L), byteArray0, byteOrder0, 4009);
      tiffField0.getBytesLength();
      assertEquals((-403), tiffField0.getTag());
      assertEquals((-238), tiffField0.getOffset());
      assertEquals(4009, tiffField0.getSortHint());
      assertEquals(3232, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "ProfileLookTableData");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (byte) (-3), fieldTypeFloat0, (-475L), (-1L), byteArray0, byteOrder0, 1687);
      tiffField0.getBytesLength();
      assertEquals(1687, tiffField0.getSortHint());
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, "): ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeShort0, 37391, 37391, byteArray0, (ByteOrder) null, 85);
      tiffField0.getByteOrder();
      assertEquals(37391, tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getTag());
      assertEquals(37391, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3779), "Software");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3779), (-57), fieldTypeShort0, 1378L, 1378L, byteArray0, byteOrder0, 1051);
      tiffField0.getByteOrder();
      assertEquals(1378, tiffField0.getOffset());
      assertEquals((-3779), tiffField0.getTag());
      assertEquals(1051, tiffField0.getSortHint());
      assertEquals((-57), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)33, 2112278998, fieldTypeByte0, 0, 562L, byteArray0, byteOrder0, 2146071758);
      tiffField0.getByteArrayValue();
      assertEquals(2112278998, tiffField0.getDirectoryType());
      assertEquals(2146071758, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
      assertEquals(562, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483646), (-2147483646), fieldTypeFloat0, (-2147483646), 0L, byteArray0, byteOrder0, (-2147483646));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-604), fieldTypeLong0, (-1653L), 2056L, byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-24), 0, fieldTypeRational0, (byte) (-22), (byte) (-60), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4500), 164, fieldTypeLong0, (-1482L), 934, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-4299), fieldTypeLong0, 262, (-292L), (byte[]) null, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2972), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (-248), fieldTypeByte0, (-1908874352), (-2345L), byteArray0, byteOrder0, (-248));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4765), (-4765), fieldTypeRational0, 740L, (-842L), byteArray0, byteOrder0, 2139);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3263, (byte)0, fieldTypeRational0, (byte)1, 1L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2939), (-2939), fieldTypeAscii0, (-2939), (-2939), byteArray0, byteOrder0, (-2939));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 112, fieldTypeLong0, 112, 112, (byte[]) null, byteOrder0, 106);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2209), "}EBK^(0Dl#'|(|'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte) (-37));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      TiffField tiffField0 = new TiffField(50255, 0, fieldTypeByte0, (-314L), 992, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(85, 1, (FieldType) null, 0L, (-171L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeShort0, 18249, 18249, byteArray0, byteOrder0, 1274);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1350), (-1350), fieldTypeLong0, 4393L, (-1350), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-1350), tiffField0.getOffset());
      assertEquals((-1350), tiffField0.getTag());
      assertEquals((-1350), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((-395), 1436, fieldTypeByte0, 992, 1436, byteArray0, byteOrder0, 17);
      tiffField0.getByteArrayValue();
      assertEquals(17, tiffField0.getSortHint());
      assertEquals((-395), tiffField0.getTag());
      assertEquals(1436, tiffField0.getOffset());
      assertEquals(1436, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2972), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1908874352), (-248), fieldTypeByte0, (-1908874352), (-2345L), byteArray0, byteOrder0, (-248));
      tiffField0.getFieldType();
      assertEquals((-2345), tiffField0.getOffset());
      assertEquals((-248), tiffField0.getDirectoryType());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals((-248), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(145, "): ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, 145, fieldTypeByte0, 4L, 205L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(145, tiffField0.getTag());
      assertEquals(145, tiffField0.getDirectoryType());
      assertEquals(205, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(223, (-136), fieldTypeLong0.DOUBLE, 255L, (byte) (-74), byteArray0, byteOrder0, 1335);
      tiffField0.getTagInfo();
      assertEquals(1335, tiffField0.getSortHint());
      assertEquals((-136), tiffField0.getDirectoryType());
      assertEquals(223, tiffField0.getTag());
      assertEquals((-74), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "OtherImageLength");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 798, fieldTypeAscii0, 2107L, 0L, byteArray0, byteOrder0, (-446));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-446), tiffField0.getSortHint());
      assertEquals(798, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 2218, fieldTypeFloat0, (-6736L), (-1L), byteArray0, byteOrder0, 2218);
      tiffField0.getCount();
      assertEquals(2218, tiffField0.getSortHint());
      assertEquals(2218, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(18, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "ProfileLookTableData");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2147361416, (byte)25, fieldTypeFloat0, (byte)103, 5716L, byteArray0, byteOrder0, (byte)25);
      tiffField0.getBytesLength();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(5716, tiffField0.getOffset());
      assertEquals(2147361416, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-834), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1158), (-1158), fieldTypeByte0, 0L, (-1158), byteArray0, byteOrder0, (-1158));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1137), (byte)7, fieldTypeLong0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1137), (byte)7, fieldTypeLong0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      tiffField0.getIntValueOrArraySum();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-1137), tiffField0.getTag());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Byte byte0 = new Byte((byte)1);
      byte[] byteArray0 = fieldTypeRational0.writeData(byte0, byteOrder0);
      TiffField tiffField0 = new TiffField((-5), 21, fieldTypeRational0, (byte)50, (-2103L), byteArray0, byteOrder0, (-1064));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1064), tiffField0.getSortHint());
      assertEquals((-5), tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-2103), tiffField0.getOffset());
      assertEquals(21, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "ProfileLookTableData");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1573, 1573, fieldTypeFloat0, 0, 0L, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7d22b88 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(223, (-136), fieldTypeLong0.DOUBLE, 255L, (byte) (-74), byteArray0, byteOrder0, 1335);
      tiffField0.getDoubleArrayValue();
      assertEquals(1335, tiffField0.getSortHint());
      assertEquals((-136), tiffField0.getDirectoryType());
      assertEquals((-74), tiffField0.getOffset());
      assertEquals(223, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(145, "): ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, 145, fieldTypeByte0, 4L, 205L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@23095021 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-50), (byte)70, fieldTypeLong0, (byte)60, 1863L, byteArray0, byteOrder0, (byte)124);
      tiffField0.getDoubleArrayValue();
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(1863, tiffField0.getOffset());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals((-50), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, "): ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3319), (byte)0, fieldTypeShort0, 4L, 1143L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3319), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1143, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(88, 1620, fieldTypeRational0, 27776L, (-334), byteArray0, byteOrder0, 50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-334), tiffField0.getOffset());
      assertEquals(88, tiffField0.getTag());
      assertEquals(1620, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2120), (-1659), fieldTypeRational0, 1L, 222208L, byteArray0, byteOrder0, (-1157));
      tiffField0.getDoubleArrayValue();
      assertEquals(222208, tiffField0.getOffset());
      assertEquals((-1157), tiffField0.getSortHint());
      assertEquals((-2120), tiffField0.getTag());
      assertEquals((-1659), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1137), (byte)7, fieldTypeLong0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      tiffField0.getIntArrayValue();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-1137), tiffField0.getTag());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)5, (byte)40, fieldTypeShort0, (byte)124, 255L, byteArray0, byteOrder0, (byte)40);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(40, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1657), (byte) (-21), fieldTypeRational0, (byte)0, (byte) (-21), byteArray0, byteOrder0, (byte) (-21));
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-21), tiffField0.getOffset());
      assertEquals((-1657), tiffField0.getTag());
      assertEquals((-21), tiffField0.getDirectoryType());
      assertEquals((-21), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4765), (-4765), fieldTypeRational0, 740L, (-842L), byteArray0, byteOrder0, 2139);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-333), 1573, fieldTypeFloat0, 1L, 50, byteArray0, byteOrder0, (-436));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-333), tiffField0.getTag());
      assertEquals((-436), tiffField0.getSortHint());
      assertEquals(1573, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1593, ":3");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1593, (-1573), fieldTypeAscii0, 1593, (-4015L), byteArray0, byteOrder0, (-385));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@546a5f67 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(48129, (-1), fieldTypeLong0.ASCII, 5716L, (-1056L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(5716, tiffField0.getBytesLength());
      assertEquals(48129, tiffField0.getTag());
      assertEquals((-1056), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-166), (byte)25, fieldTypeByte0, (byte)33, (-212L), byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@4c5ab0e4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)33, 2112278998, fieldTypeByte0, 0, 562L, byteArray0, byteOrder0, 2146071758);
      String string0 = tiffField0.getTagName();
      assertEquals(2146071758, tiffField0.getSortHint());
      assertEquals(2112278998, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x21)", string0);
      assertEquals(562, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (-1583), fieldTypeDouble0.SLONG, 255L, 20480L, byteArray0, byteOrder0, 2106);
      String string0 = tiffField0.getTagName();
      assertEquals((-1583), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(2106, tiffField0.getSortHint());
      assertEquals("GPSProcessingMethod", string0);
      assertEquals(20480, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)33, 2112278998, fieldTypeByte0, 0, 562L, byteArray0, byteOrder0, 2146071758);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag (0x21)");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "AbnxddV{@GP_+9Ip");
      assertEquals(2146071758, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
      assertEquals(2112278998, tiffField0.getDirectoryType());
      assertEquals(562, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1672, (-3533), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).DOUBLE).FLOAT, 211, 18880L, byteArray0, byteOrder0, 211);
      String string0 = tiffField0.toString();
      assertEquals("1672 (0x688: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (211 Float)", string0);
      assertEquals(211, tiffField0.getSortHint());
      assertEquals((-3533), tiffField0.getDirectoryType());
      assertEquals(844, tiffField0.getBytesLength());
      assertEquals(18880, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2067), 1760, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SRATIONAL).SBYTE, 3147L, (-578L), byteArray0, byteOrder0, (-2067));
      String string0 = tiffField0.toString();
      assertEquals((-578), tiffField0.getOffset());
      assertEquals(3147, tiffField0.getBytesLength());
      assertEquals((-2067), tiffField0.getSortHint());
      assertEquals("-2067 (0xfffff7ed: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (124) (3147 SByte)", string0);
      assertEquals(1760, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, (-2146647724), fieldTypeFloat0, 40960L, 4055L, byteArray0, byteOrder0, (-1717986917));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2146647724), tiffField0.getDirectoryType());
      assertEquals(40960L, tiffField0.getCount());
      assertEquals(4055, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(163840, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(223, (-136), fieldTypeLong0.DOUBLE, 255L, (byte) (-74), byteArray0, byteOrder0, 1335);
      tiffField0.dump();
      assertEquals(223, tiffField0.getTag());
      assertEquals((-74), tiffField0.getOffset());
      assertEquals(1335, tiffField0.getSortHint());
      assertEquals((-136), tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (-1137), fieldTypeLong0, 1672, 3959, byteArray0, byteOrder0, (byte)7);
      String string0 = tiffField0.toString();
      assertEquals((-1137), tiffField0.getDirectoryType());
      assertEquals(3959, tiffField0.getOffset());
      assertEquals(6688, tiffField0.getBytesLength());
      assertEquals("13 (0xd: GPSSpeed): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (1672 IFD)", string0);
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[124];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1153), 266, fieldTypeShort0, 1246L, 1376L, byteArray0, byteOrder0, 266);
      String string0 = tiffField0.toString();
      assertEquals(266, tiffField0.getSortHint());
      assertEquals(266, tiffField0.getDirectoryType());
      assertEquals(1376, tiffField0.getOffset());
      assertEquals(2492, tiffField0.getBytesLength());
      assertEquals("-1153 (0xfffffb7f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (62) (1246 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(223, (-3623), fieldTypeAscii0, 223, 223, byteArray0, byteOrder0, 501);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(223, tiffField0.getOffset());
      assertEquals((-3623), tiffField0.getDirectoryType());
      assertEquals(501, tiffField0.getSortHint());
      assertEquals(223, tiffField0.getTag());
      assertEquals(223, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Byte byte0 = new Byte((byte)1);
      byte[] byteArray0 = fieldTypeRational0.writeData(byte0, byteOrder0);
      TiffField tiffField0 = new TiffField((-5), 21, fieldTypeRational0, (byte)50, (-2103L), byteArray0, byteOrder0, (-1064));
      tiffField0.toString();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-5), tiffField0.getTag());
      assertEquals((-2103), tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-1064), tiffField0.getSortHint());
      assertEquals(21, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(48129, (-1), fieldTypeLong0.ASCII, 5716L, (-1056L), byteArray0, byteOrder0, (-1));
      tiffField0.toString();
      assertEquals(48129, tiffField0.getTag());
      assertEquals((-1056), tiffField0.getOffset());
      assertEquals(5716L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(5716, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "GPSDestLatitude");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-333), 1573, fieldTypeFloat0, 1L, 50, byteArray0, byteOrder0, (-436));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-333), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-436), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1573, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(381, 381, fieldTypeLong0, 0L, (-1L), byteArray0, byteOrder0, (-466));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getBytesLength());
      assertNull(tiffElement0);
      assertEquals(381, tiffField0.getDirectoryType());
      assertEquals((-466), tiffField0.getSortHint());
      assertEquals(381, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37391, "): ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeLong0, 1372L, 640L, byteArray0, byteOrder0, 2);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2480), 2);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(1372L, tiffField0.getCount());
      assertEquals(640, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1502, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (byte)0, fieldTypeFloat0, 2605L, 1502, byteArray0, byteOrder0, 2052);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, (-557));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(13, tiffField0.getTag());
      assertEquals(2052, tiffField0.getSortHint());
      assertEquals(10420, tiffField0.getBytesLength());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1502, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1264, (-1717986917), fieldTypeLong0, 1L, 2679L, byteArray0, byteOrder0, 2473);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2473, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(1264, tiffField0.getTag());
      assertEquals(2679, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1137), (byte)7, fieldTypeLong0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1137), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7L, tiffElement0.offset);
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1502, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (byte)0, fieldTypeFloat0, 2605L, 1502, byteArray0, byteOrder0, 2052);
      tiffField0.getFieldTypeName();
      assertEquals(13, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1502, tiffField0.getOffset());
      assertEquals(2052, tiffField0.getSortHint());
      assertEquals(10420, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 2218, fieldTypeFloat0, (-6736L), (-1L), byteArray0, byteOrder0, 2218);
      int int0 = tiffField0.getOffset();
      assertEquals(2218, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals((-26944), tiffField0.getBytesLength());
      assertEquals(2218, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2056), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2056), 3236, fieldTypeAscii0, (-2056), 375L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3236, int0);
      assertEquals((-2056L), tiffField0.getCount());
      assertEquals((-2056), tiffField0.getTag());
      assertEquals(375, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-690), (-690), fieldTypeByte0, 431L, (-1L), byteArray0, byteOrder0, (-690));
      int int0 = tiffField0.getSortHint();
      assertEquals((-690), tiffField0.getDirectoryType());
      assertEquals((-690), tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-690), int0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-166), (byte)25, fieldTypeByte0, (byte)33, (-212L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-212), tiffField0.getOffset());
      assertEquals("-166 (0xffffff5a: Unknown Tag): ", string0);
      assertEquals(25, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(366, (-3944), fieldTypeFloat0, (byte)2, 2796L, byteArray0, byteOrder0, 1268);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3944), tiffField0.getDirectoryType());
      assertEquals(1268, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2796, tiffField0.getOffset());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(366, tiffField0.getTag());
  }
}
