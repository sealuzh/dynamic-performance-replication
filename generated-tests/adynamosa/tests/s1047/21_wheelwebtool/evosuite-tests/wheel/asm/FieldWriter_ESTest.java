/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 06:15:28 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3098), "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = (int) (byte)80;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      classWriter0.index = (-961);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "1uty]uUaZ", "*!=}$+z%UmsB0T", "}o");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3098), "", "", "", (Object) null);
      classWriter0.version = (int) (byte)80;
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      classWriter0.index = (-961);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "1uty]uUaZ", "*!=}$+z%UmsB0T", "}o");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "", (String) null, "}o");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2792));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2792), "7_ h{K.3j!", "", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "*!=}$+z%UmsB0T", "", (String) null, "}o");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2792));
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "%LC,f\badvh=?P7D", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ByteVector@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "}o", "7_ h{K.3j!", (Object) null);
      Attribute attribute0 = new Attribute("7_ h{K.3j!");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "1uty]uUaZ", "*!=}$+z%UmsB0T", "}o");
      fieldWriter0.visitAnnotation("MO^\"*%D8.9s_y~~<A", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "}o", "}o", (String) null, "}o");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("}o", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "GhXzJG+#!ocb-)fY", "GhXzJG+#!ocb-)fY", "", "");
      fieldWriter0.next = fieldWriter0;
      Attribute attribute0 = new Attribute("GhXzJG+#!ocb-)fY");
      fieldWriter0.next.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2792));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1732, "Synthetic", "Synthetic", "", (Object) null);
      fieldWriter0.visitAnnotation("&$.8a}XkfH", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3098), "\"", "\"", "\"", "\"");
      classWriter0.version = (int) (byte)49;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(102, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "*!=}$+z%UmsB0T", "", (String) null, "}o");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "", (String) null, "}o");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "1uty]uUaZ", "*!=}$+z%UmsB0T", "}o");
      fieldWriter0.visitAnnotation("MO^\"*%D8.9s_y~~<A", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "", (String) null, "}o");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-653), "P_2pGKrfz@0I)cNT&]A", "", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-653), "*!=}$+z%UmsB0T", "1uty]uUaZ", "*!=}$+z%UmsB0T", "}o");
      fieldWriter0.visitEnd();
  }
}
