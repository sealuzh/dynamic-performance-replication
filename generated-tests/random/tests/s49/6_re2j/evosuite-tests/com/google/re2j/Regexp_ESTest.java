/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 10:43:43 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-3583);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "K~sJPtS;EUZ%q3V@eC~";
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 10;
      int[] intArray0 = new int[1];
      intArray0[0] = 10;
      regexp0.runes = intArray0;
      regexp0.reinit();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.min = 2469;
      regexp0.max = 2469;
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      regexp0.max = 0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      intArray0[0] = 2469;
      regexp0.max = 2469;
      regexp0.runes = intArray0;
      regexp0.equals("|");
      regexp0.op = regexp_Op0;
      regexp0.max = (-85);
      regexp0.name = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-2416);
      intArray0[1] = 11686;
      intArray0[2] = 94;
      intArray0[3] = 182;
      intArray0[4] = 2693;
      intArray0[5] = (-672);
      intArray0[6] = (-3512);
      intArray0[7] = 1672;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.valueOf("END_TEXT");
      assertNotSame(regexp_Op1, regexp_Op0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 13;
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.reinit();
      regexp0.equals(regexp1);
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.name = "Y?w+$'rw4+%b2oj";
      regexp1.name = "x- e.?x+9[-\"`K";
      regexp0.maxCap();
      regexp1.maxCap();
      regexp1.toString();
      regexp1.equals("");
      regexp1.toString();
      regexp0.toString();
      regexp0.toString();
      regexp1.toString();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Y?w+$'rw4+%b2oj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Y?w+$'rw4+%b2oj
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.max = 119143;
      int[] intArray0 = new int[0];
      regexp1.runes = intArray0;
      regexp0.cap = 43609;
      regexp1.cap = 43609;
      regexp1.equals(regexp0);
      regexp1.flags = (-3813);
      regexp1.equals(".vxQFsQP");
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp0.toString();
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.reinit();
      regexp1.subs = regexpArray0;
      regexp1.equals(regexp0);
      regexp0.reinit();
      regexp0.min = 1370;
      regexp1.max = 1370;
      regexp0.cap = 1370;
      regexp0.min = 3007;
      regexp1.flags = 1370;
      regexp1.cap = 1370;
      regexp1.maxCap();
      regexp1.toString();
      Regexp.Op.values();
      regexp1.equals(regexp0);
      regexp0.toString();
      regexp0.flags = (-3237);
      Regexp.Op.values();
      regexp0.toString();
      regexp0.toString();
      regexp1.maxCap();
      regexp1.equals("B");
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("2*v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.2*v
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.reinit();
      regexp0.equals(regexp1);
      regexp1.reinit();
      regexp1.cap = 8182;
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.cap = (-239);
      int[] intArray0 = new int[9];
      regexp0.name = "\"x";
      intArray0[0] = (-239);
      intArray0[1] = (-239);
      intArray0[2] = (-239);
      intArray0[3] = (-239);
      regexp0.toString();
      intArray0[4] = (-239);
      regexp0.min = 93;
      intArray0[5] = (-239);
      intArray0[6] = (-239);
      intArray0[7] = (-239);
      intArray0[8] = (-239);
      regexp0.max = (-239);
      regexp0.runes = intArray0;
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      assertFalse(boolean0);
      
      Regexp.Op.values();
      regexp0.name = "$";
      Regexp.Op.values();
      boolean boolean1 = regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp0.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean2 = regexp0.equals(regexp1);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.flags = 84;
      regexp2.cap = 43;
      regexp2.flags = 16;
      regexp1.name = "Hyphen";
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 5866;
      intArray0[1] = (-265);
      intArray0[2] = (-1430);
      intArray0[3] = 120;
      intArray0[4] = 3801;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.name = "!<(oe^A(]jS.$";
      regexp0.op = regexp_Op0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 3040;
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      regexp0.name = "";
      regexp0.max = 16;
      regexp0.op = regexp_Op1;
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      regexp0.name = "Lao";
      Regexp.Op.values();
      regexp0.toString();
      boolean boolean1 = regexp0.op.isPseudo();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp regexp1 = new Regexp(regexp0.op);
      boolean boolean2 = regexp0.equals(regexp1);
      assertFalse(regexp1.equals((Object)regexp0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 14;
      regexp1.reinit();
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp_Op0.isPseudo();
      Object object1 = new Object();
      regexp0.equals(object1);
      int[] intArray0 = new int[2];
      regexp1.toString();
      intArray0[0] = 0;
      intArray0[1] = 0;
      regexp1.runes = intArray0;
      regexp1.max = 0;
      regexp1.flags = (-707);
      regexp0.flags = 5899;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-651);
      intArray0[1] = 1;
      intArray0[2] = 14;
      intArray0[3] = 0;
      intArray0[4] = (-535);
      intArray0[5] = 383;
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp1;
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexpArray0[1] = regexp2;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexp1.subs = regexpArray0;
      intArray0[6] = 504;
      Object object0 = new Object();
      regexp0.equals(object0);
      intArray0[7] = 11;
      intArray0[8] = (-3607);
      regexp1.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.name = "v1)c#z!s`X";
      regexp1.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp_Op0.isPseudo();
      regexp1.max = 5;
      int[] intArray0 = new int[0];
      regexp1.runes = intArray0;
      regexp1.equals("sYFE|");
      regexp1.max = 16;
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp1.min = 19;
      regexp0.equals(regexp_Op0);
      regexp1.equals(regexp_Op0);
      regexp1.reinit();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 14;
      int[] intArray0 = new int[3];
      intArray0[0] = 14;
      intArray0[1] = 17;
      intArray0[2] = 14;
      regexp0.runes = intArray0;
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 2703;
      regexp1.name = "";
      regexp1.op = regexp_Op0;
      regexp1.equals(regexp0);
      regexp1.toString();
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp0.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-2106);
      intArray0[1] = 14;
      intArray0[2] = 6;
      intArray0[3] = (-647);
      intArray0[4] = 342;
      intArray0[5] = 17;
      intArray0[6] = 15;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("|Ny{M");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.|Ny{M
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2323;
      int[] intArray0 = new int[1];
      intArray0[0] = 9;
      regexp0.cap = 699;
      regexp0.min = 9;
      regexp0.runes = intArray0;
      regexp0.flags = 9;
      regexp0.toString();
      regexp0.name = "PLUS";
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Co");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Co
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "Other_Lowercase";
      regexp0.name = "Other_Lowercase";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = 120123;
      intArray0[1] = 3780;
      intArray0[2] = 6;
      intArray0[3] = 264;
      intArray0[4] = 3380;
      intArray0[5] = (-923);
      regexp1.runes = intArray0;
      String string0 = regexp1.toString();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = null;
      regexp0.name = null;
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp1.flags = (-1541);
      regexp1.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = (-1838);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1838);
      intArray0[1] = (-1838);
      intArray0[2] = (-1838);
      intArray0[3] = (-1838);
      intArray0[4] = (-1838);
      intArray0[5] = (-1838);
      intArray0[6] = (-1838);
      regexp0.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.runes = null;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp1.op = regexp_Op1;
      int int0 = (-1100);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[2];
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp2);
      regexpArray0[0] = regexp3;
      regexpArray0[1] = regexp0;
      regexp1.subs = regexpArray0;
      regexp1.flags = 17;
      regexp1.equals(regexp_Op0);
      regexp1.maxCap();
      String string0 = regexp0.toString();
      assertEquals("VERTICAL_BAR", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexpArray0[0].flags = 12;
      regexp0.equals("nGNIU$Rc1TA}w@W");
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      regexp1.equals(regexp0);
      regexp1.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp1.runes = null;
      regexp1.equals(regexp0);
      regexp0.toString();
      regexp0.maxCap();
      regexp0.flags = 19;
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      regexp1.cap = 19;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[5];
      intArray0[0] = 19;
      regexp0.cap = 19;
      intArray0[1] = (-161);
      intArray0[2] = 11;
      intArray0[3] = 260;
      intArray0[4] = 15;
      regexp0.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 124;
      regexp0.min = 124;
      regexp0.flags = 124;
      regexp0.min = 1727;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "A6tHL%jc3pno=>Q'";
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("@k?o0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.@k?o0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 756;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-2481);
      intArray0[4] = 1807;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.name = "Kannada";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.max = (-1564);
      Object object0 = new Object();
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 94;
      regexp0.cap = 94;
      regexp0.toString();
      regexp0.maxCap();
      regexp0.equals("z");
      Regexp.Op.values();
      regexp0.equals("z");
      regexp0.equals((Object) null);
      regexp0.name = "Mq";
      Regexp.Op.values();
      regexp0.toString();
      regexp0.toString();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Other_Grapheme_Extend");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Other_Grapheme_Extend
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.flags = 962;
      regexp0.runes = intArray0;
      regexp0.runes = intArray0;
      regexp0.cap = 962;
      regexp0.maxCap();
      regexp0.max = (-4130);
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      regexp_Op0.isPseudo();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-2069);
      int[] intArray0 = new int[2];
      intArray0[0] = 93;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 3570;
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp0.equals(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.name = null;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp0.min = 276;
      Regexp regexp4 = new Regexp(regexp3);
      boolean boolean1 = regexp2.equals(regexp4);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = regexp0.equals(regexp2);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      regexp0.reinit();
      regexp0.cap = 6;
      regexp0.min = 6;
      regexp1.cap = 6;
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      
      regexp1.toString();
      Object object1 = new Object();
      regexp1.equals(object1);
      regexp1.maxCap();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.cap = 396;
      Object object2 = new Object();
      regexp1.equals(object2);
      regexp0.maxCap();
      regexp0.maxCap();
      regexp1.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      int int1 = regexp1.maxCap();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals("APGH&^<j6\n");
      regexp1.cap = 7219;
      regexp1.name = "APGH&^<j6\n";
      regexp1.subs = null;
      regexp1.maxCap();
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("m\"t\u0001 ]3i&N,dU;$r ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.m\"t\u0001 ]3i&N,dU;$r 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 13;
      intArray0[1] = 13;
      intArray0[2] = 120539;
      intArray0[3] = (-1504);
      intArray0[4] = 15;
      regexp0.cap = 1287;
      intArray0[5] = 16;
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      intArray0[6] = 1040;
      regexp0.runes = intArray0;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 0;
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 1911;
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      regexp0.flags = (-2691);
      regexp0.op = regexp_Op1;
      regexp0.name = "\u0002QD2B^ZO0?LdxO_|f";
      regexp0.op = regexp_Op1;
      regexp0.cap = 11704;
      regexp0.min = 82;
      regexp0.min = (-2691);
      regexp0.flags = 15;
      regexp0.equals(regexp_Op0);
      String string0 = regexp0.toString();
      regexp0.equals(regexp_Op0);
      regexp0.min = 1911;
      regexp0.flags = 3077;
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op1.isPseudo();
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.toString();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp1.min = 0;
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.name = "^";
      regexp2.cap = 7219;
      regexp1.equals(regexp2);
      regexp0.reinit();
      regexp2.toString();
      regexp2.flags = 0;
      regexp0.cap = 20;
      Object object0 = new Object();
      regexp0.maxCap();
      regexp1.maxCap();
      Regexp.Op.values();
      regexp0.toString();
      Object object1 = new Object();
      regexp1.equals(object1);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      regexp1.op = regexp_Op1;
      Object object0 = new Object();
      regexp1.cap = 42;
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 13;
      intArray0[1] = 949;
      intArray0[5] = 120539;
      intArray0[3] = (-1504);
      intArray0[4] = 15;
      regexp0.cap = 1287;
      intArray0[5] = 16;
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      intArray0[6] = 1040;
      regexp0.runes = intArray0;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 0;
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
