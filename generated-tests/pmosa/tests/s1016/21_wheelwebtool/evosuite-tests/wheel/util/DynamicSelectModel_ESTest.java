/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 09:21:16 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.MinguoDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import org.xmlpull.v1.wrapper.XmlPullParserWrapper;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.translator("");
      String string0 = "Q#a[mQcRh'+";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("Q#a[mQcRh'+");
      dynamicSelectModel1.collection("Q#a[mQcRh'+");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(440);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.reset();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "Failed to initialize SimpleDateFormat with pattern '";
      ElExpression elExpression0 = new ElExpression("Failed to initialize SimpleDateFormat with pattern '");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "processing DOCDECL is not supported";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("processing DOCDECL is not supported");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label((String) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.translator("hirX] eGZ{b2B");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection((String) null);
      dynamicSelectModel4.getComponent();
      dynamicSelectModel2.getComponent();
      int int0 = 1001;
      // Undeclared exception!
      try { 
        dynamicSelectModel4.getValue(1001);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression null evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("long");
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression long evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("long");
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression long.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "}kc#&V#}SMC*";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("}kc#&V#}SMC*");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel1.setTopLevelComponent(errorPage0);
      dynamicSelectModel0.getTopLevelComponent();
      int int0 = 90;
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty((Object) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("file");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("long");
      dynamicSelectModel1.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.validate();
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("2%Uo=KRoGN/M`yhN");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("KYP'J*ae");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("vsC2i0]IbfPj ");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.translator("Could not create DynamicSelection model. Collection attribute was null or not an el-expression.");
      dynamicSelectModel4.getTopLevelComponent();
      dynamicSelectModel4.setTopLevelComponent((StandaloneComponent) null);
      Object object0 = new Object();
      dynamicSelectModel3.empty(object0);
      dynamicSelectModel4.value("Could not create DynamicSelection model. Collection attribute was null or not an el-expression.");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.label("2%Uo=KRoGN/M`yhN");
      dynamicSelectModel3.validate();
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel5.value("q'N73@#52>vNBskLY");
      assertSame(dynamicSelectModel6, dynamicSelectModel2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("6");
      dynamicSelectModel3.reset();
      String string0 = XmlPullParserWrapper.XSD_NS;
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression 6 evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty(dynamicSelectModel0);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel1.value("");
      dynamicSelectModel4.setComponent((Component) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getValue((-1330));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
