/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:22:12 GMT 2019
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.AbstractClassifier;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.functions.MultilayerPerceptron;
import weka.classifiers.functions.SMO;
import weka.classifiers.functions.SimpleLogistic;
import weka.classifiers.lazy.KStar;
import weka.classifiers.meta.AdditiveRegression;
import weka.classifiers.meta.MultiClassClassifier;
import weka.classifiers.meta.MultiClassClassifierUpdateable;
import weka.classifiers.meta.Stacking;
import weka.classifiers.rules.M5Rules;
import weka.classifiers.trees.REPTree;
import weka.core.CheckScheme;
import weka.core.Utils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.printAttributeSummary(false, false, true, false, false, false, 18);
      checkClassifier0.updateableClassifier();
      KStar kStar0 = new KStar();
      checkClassifier0.setClassifier(kStar0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.testToString();
      checkClassifier0.setDebug(false);
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.doTests();
      boolean boolean0 = false;
      int int0 = (-2492);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, false, false, false, (-2492));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2492' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      checkClassifier0.setNumNominal(1);
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.setNumInstances(2);
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(1, false, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumInstances(42);
      MultiClassClassifierUpdateable multiClassClassifierUpdateable0 = new MultiClassClassifierUpdateable();
      checkClassifier0.setClassifier(multiClassClassifierUpdateable0);
      System.setCurrentTimeMillis(3);
      checkClassifier0.updateableClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, false, false, false, true, false, 48);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '48' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      REPTree rEPTree0 = new REPTree();
      AdditiveRegression additiveRegression0 = new AdditiveRegression(rEPTree0);
      checkClassifier0.setClassifier(additiveRegression0);
      checkClassifier0.getWords();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.canTakeOptions();
      checkClassifier0.listOptions();
      checkClassifier0.canTakeOptions();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "The,quick,brown,fox,jumps,over,the,lazy,dog";
      stringArray0[1] = "The,quick,brown,fox,jumps,over,the,lazy,dog";
      stringArray0[2] = "The,quick,brown,fox,jumps,over,the,lazy,dog";
      CheckClassifier.main(stringArray0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-201.5465);
      SMO sMO0 = new SMO();
      checkClassifier0.setClassifier(sMO0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, false, true, true, false, (-1), (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.m_Classifier = null;
      checkClassifier0.testToString();
      checkClassifier0.getWords();
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      boolean boolean1 = true;
      int int0 = 14;
      checkClassifier0.printAttributeSummary(false, true, false, false, false, false, 14);
      checkClassifier0.setWordSeparators("");
      // Undeclared exception!
      try { 
        checkClassifier0.declaresSerialVersionUID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "  extends Filter {\n";
      stringArray0[1] = "fq cDqU";
      stringArray0[2] = "Y~U |=xM(ccQ";
      stringArray0[3] = ")mn>*iMA";
      stringArray0[4] = "~8m.@";
      stringArray0[5] = "-p <range>";
      stringArray0[6] = "f@#@d/,4W!Hk";
      CheckClassifier.main(stringArray0);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.canHandleOnlyClass(true, true, true, true, true, 3);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, true, false, false, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      M5Rules m5Rules0 = new M5Rules();
      checkClassifier0.setClassifier(m5Rules0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.canTakeOptions();
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, true, true, true, true, true, (-1477));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1477' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = 3;
      boolean boolean0 = true;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Capabilities.props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(3, true, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.instanceWeights(false, false, false, false, false, false, 3);
      int int0 = (-1576);
      int int1 = 9;
      int int2 = 36;
      int int3 = 3;
      int int4 = 28;
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      AdditiveRegression additiveRegression0 = new AdditiveRegression();
      additiveRegression0.getTechnicalInformation();
      checkClassifier0.setClassifier(additiveRegression0);
      boolean boolean0 = true;
      boolean boolean1 = false;
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, false, true, true, true, true, (-143));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-143' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = false;
      boolean boolean3 = false;
      Classifier classifier0 = checkClassifier0.getClassifier();
      checkClassifier0.setClassifier(classifier0);
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.correctBuildInitialisation(true, true, false, true, true, false, 2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        checkClassifier0.makeTestDataset(20, 20, 1478, 11, 20, 2332, 20, 11, 20, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute type '20' unknown!
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.2857142857142857;
      checkClassifier0.correctBuildInitialisation(true, true, true, true, true, false, 0);
      checkClassifier0.updatingEquality(true, true, false, true, false, true, 0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "C7*cj+JDNOj{]";
      CheckClassifier.main(stringArray0);
      checkClassifier0.listOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, true, true, true, false, 26, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '26' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      MultiClassClassifier multiClassClassifier0 = new MultiClassClassifier();
      checkClassifier0.m_Classifier = (Classifier) multiClassClassifier0;
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.printAttributeSummary(true, false, false, true, false, false, 0);
      assertFalse(checkClassifier0.hasClasspathProblems());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.testToString();
      checkClassifier0.doesntUseTestClassVal(true, true, false, false, false, true, 0);
      checkClassifier0.setDebug(false);
      checkClassifier0.updateableClassifier();
      boolean boolean0 = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      checkClassifier0.setNumDate(493);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(true, true, true, true, false, (-1096));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1096' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, false, true, false, true, false, 16, true, true, 21);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '16' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      MultilayerPerceptron multilayerPerceptron0 = new MultilayerPerceptron();
      checkClassifier0.m_Classifier = (Classifier) multilayerPerceptron0;
      boolean boolean1 = false;
      checkClassifier0.setSilent(false);
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, false, 10);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '10' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      Stacking stacking0 = new Stacking();
      Classifier classifier0 = stacking0.getMetaClassifier();
      checkClassifier0.setClassifier(classifier0);
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, true, false, true, (-2888));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2888' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.instanceWeights(false, true, true, false, true, false, 1);
      checkClassifier0.weightedInstancesHandler();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "M]0+xe2sD2K|r)";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "here are the datasets:\n";
      stringArray0[2] = "";
      stringArray0[3] = "t6M@uK\"mE1";
      stringArray0[4] = "";
      stringArray0[5] = "options...";
      CheckClassifier.main(stringArray0);
      int int0 = 900;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, true, true, false, 900);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '900' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      AbstractClassifier.makeCopy((Classifier) null);
      checkClassifier0.m_Classifier = null;
      checkClassifier0.getOptions();
      checkClassifier0.getRevision();
      int int0 = (-2306);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, true, false, true, false, false, (-2306), false, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2306' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.weightedInstancesHandler();
      int int0 = 60;
      int int1 = 2;
      int int2 = 2;
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = false;
      boolean boolean3 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, false, false, false, false, 60);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '60' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      try { 
        checkClassifier0.makeTestDataset((-1201), (-1201), (-3997), (-3997), (-1201), 110, 5, 5, 34, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -9079
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      try { 
        checkClassifier0.setOptions((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleZeroTraining(false, false, false, false, false, false, 0);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(false, false, false, false, false, 60);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '60' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean[] booleanArray0 = checkClassifier0.instanceWeights(true, true, false, true, false, false, 0);
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      
      boolean[] booleanArray1 = checkClassifier0.multiInstanceHandler();
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray1));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      checkClassifier0.setNumNominal(1);
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.setNumInstances(2);
      checkClassifier0.testsPerClassType(1, false, true, false);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, true, true, false, true, false, (-9));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-9' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      checkClassifier0.getPostProcessor();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Problem during testing");
      checkClassifier0.setPostProcessor((CheckScheme.PostProcessor) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 1275;
      checkClassifier0.printAttributeSummary(true, true, true, true, false, true, 1275);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Problem during testing";
      stringArray0[1] = "";
      stringArray0[2] = "-W";
      stringArray0[3] = "Problem during testing";
      try { 
        checkClassifier0.setOptions(stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't find class called 'Problem during testing' or 'weka.classifiers.Problem during testing'!
         //
         verifyException("weka.core.Check", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.declaresSerialVersionUID();
      boolean boolean0 = true;
      checkClassifier0.declaresSerialVersionUID();
      checkClassifier0.setDebug(true);
      int int0 = 4;
      boolean boolean1 = true;
      boolean boolean2 = false;
      boolean boolean3 = false;
      checkClassifier0.testsPerClassType(4, false, true, false);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Problem determining ZeroR performance: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "  extends Filter {\n";
      stringArray0[1] = "fq cDqU";
      stringArray0[2] = "Y~U |=xM(ccQ";
      stringArray0[3] = ")mn>*iMA";
      stringArray0[1] = "~8m[.@";
      stringArray0[5] = "-p <range>";
      stringArray0[6] = "f@#@d/,4W!Hk";
      CheckClassifier.main(stringArray0);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.canHandleOnlyClass(true, true, true, true, true, 3);
      checkClassifier0.updateableClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, true, false, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      SimpleLogistic simpleLogistic0 = new SimpleLogistic(290, false, false);
      checkClassifier0.m_Classifier = (Classifier) simpleLogistic0;
      checkClassifier0.listOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = (-4566);
      checkClassifier0.setNumNumeric((-4566));
      int int1 = 114;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, true, true, false, true, false, (-4566), 114);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -4561
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(true, true, false, true, true, (-681));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-681' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = (-1484.59);
      checkClassifier0.getOptions();
      boolean boolean0 = false;
      boolean boolean1 = false;
      int int0 = 50;
      checkClassifier0.printAttributeSummary(false, false, false, false, false, true, 50);
      boolean boolean2 = true;
      checkClassifier0.printAttributeSummary(false, false, true, false, false, true, (-2679));
      checkClassifier0.getOptions();
      int int1 = 10;
      try { 
        checkClassifier0.makeTestDataset((-2679), (-2679), 10, 2523, (-2679), 2523, 121, 10, 121, 121, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attribute type '121' unknown!
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      checkClassifier0.doesntUseTestClassVal(false, true, false, true, true, false, 3);
      boolean boolean3 = false;
      checkClassifier0.setNumInstancesRelational(4);
      boolean boolean4 = true;
      checkClassifier0.datasetIntegrity(false, false, true, false, true, false, 4, false, true);
      checkClassifier0.weightedInstancesHandler();
      boolean boolean5 = true;
      checkClassifier0.declaresSerialVersionUID();
      boolean boolean6 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(false, true, false, true, false, true, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 36;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(false, false, false, false, false, false, 36);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '36' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }
}
