/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 01:37:43 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 92;
      intArray0[1] = (-2085);
      intArray0[2] = 1;
      intArray0[3] = (-1696);
      intArray0[4] = (-595);
      intArray0[5] = (-807);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 0);
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, 1);
      assertSame(charClass3, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[6][6];
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-3484), 0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-3484);
      intArray0[1] = (-3484);
      intArray0[2] = (-3484);
      intArray0[3] = 0;
      CharClass charClass2 = charClass1.appendClass(intArray0);
      int[][] intArray1 = new int[0][3];
      CharClass charClass3 = charClass2.appendTable(intArray1);
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass4.appendTableWithSign(intArray1, 0);
      CharClass charClass6 = charClass5.cleanClass();
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass7 = charClass6.appendFoldedClass(intArray0);
      charClass4.negateClass();
      CharClass charClass8 = charClass4.cleanClass();
      charClass8.appendLiteral(0, (-740));
      charClass2.appendClass(intArray0);
      CharClass charClass9 = charClass5.appendLiteral((-3484), 1226);
      assertSame(charClass9, charClass7);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[0][5];
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, (-555));
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      CharGroup charGroup0 = null;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[1][5];
      charClass1.appendTableWithSign(intArray1, (-543));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1582);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 4267;
      intArray0[0] = 4267;
      int int1 = 325;
      intArray0[1] = 325;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 325);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int int0 = 32;
      CharClass charClass2 = charClass1.appendFoldedRange(32, 2238);
      int int1 = 0;
      CharClass charClass3 = charClass2.appendRange(int1, int0);
      int[] intArray0 = new int[7];
      intArray0[0] = int1;
      intArray0[1] = int0;
      intArray0[2] = int1;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      int int2 = 385;
      intArray0[6] = int2;
      charClass3.appendClassWithSign(intArray0, intArray0[2]);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(3215, 3215);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 127776;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][3];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      // Undeclared exception!
      try { 
        charClass1.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[6][0];
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = (-2288);
      intArray1[2] = 354;
      intArray1[3] = 2052;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 233;
      intArray1[7] = 2644;
      intArray1[8] = 461;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 2644;
      intArray2[1] = 0;
      intArray2[2] = 233;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 2052;
      intArray3[1] = 233;
      intArray3[2] = 2644;
      intArray3[3] = 461;
      intArray3[4] = 0;
      intArray3[5] = (-2288);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = (-766);
      intArray4[1] = 2644;
      intArray4[2] = 2052;
      intArray4[3] = (-2288);
      intArray4[4] = 2;
      intArray4[5] = 233;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 0;
      intArray5[1] = 2644;
      intArray5[2] = 0;
      intArray5[3] = 332;
      intArray5[4] = 354;
      intArray5[5] = 233;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 0;
      intArray6[1] = 0;
      intArray6[2] = 2644;
      intArray6[3] = 2052;
      intArray0[5] = intArray6;
      charClass0.appendTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1844);
      intArray0[1] = (-3275);
      intArray0[2] = 1255;
      intArray0[3] = 4501;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, 829);
      CharClass charClass3 = charClass2.appendLiteral((-3274), 829);
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      // Undeclared exception!
      charClass4.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 6;
      intArray0[1] = 0;
      intArray0[2] = (-1529);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(6, 6);
      charClass1.toArray();
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendLiteral(2549, 7984);
      CharClass charClass3 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[0][4];
      CharClass charClass4 = charClass3.appendTable(intArray1);
      CharClass charClass5 = charClass4.cleanClass();
      CharClass charClass6 = charClass5.appendNegatedClass(intArray0);
      CharClass charClass7 = charClass2.appendTableWithSign(intArray1, 0);
      CharClass charClass8 = charClass7.cleanClass();
      CharClass.charClassToString(intArray0, (-119));
      charClass6.appendFoldedClass(intArray0);
      charClass4.negateClass();
      charClass4.cleanClass();
      charClass3.appendLiteral(2549, (-951));
      charClass8.appendClass(intArray0);
      CharClass charClass9 = charClass0.appendLiteral((-951), 0);
      assertSame(charClass9, charClass6);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray0[1] = intArray2;
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray2);
      charClass1.cleanClass();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-1839);
      intArray0[1] = 3088;
      int int0 = (-1185);
      intArray0[2] = (-1185);
      intArray0[3] = 3941;
      intArray0[4] = 93;
      intArray0[5] = 43138;
      intArray0[6] = 5866;
      intArray0[7] = 919;
      intArray0[8] = (-7454649);
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[5][9];
      int[] intArray1 = new int[5];
      intArray1[1] = (-7);
      intArray1[2] = 1;
      intArray1[3] = 1693;
      intArray1[4] = (-5818);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 1693;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[7];
      intArray5[0] = 1693;
      intArray5[1] = 1693;
      intArray5[2] = 1693;
      intArray5[3] = (-7);
      intArray5[6] = 1;
      intArray0[4] = intArray5;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      CharClass charClass2 = new CharClass(intArray0);
      charClass1.appendFoldedClass(intArray1);
      CharClass charClass3 = charClass0.appendFoldedRange(65, 383);
      CharClass charClass4 = charClass3.appendClass(intArray1);
      charClass4.cleanClass();
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 92;
      CharClass.charClassToString(intArray0, (-1));
      intArray0[1] = (-2085);
      intArray0[2] = 1;
      intArray0[3] = (-1696);
      intArray0[0] = (-595);
      int[][] intArray1 = new int[2][9];
      int[] intArray2 = new int[3];
      intArray2[0] = 803;
      intArray2[1] = 1;
      intArray2[2] = 92;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendRange(3857, 66640);
      charClass2.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 3856;
      intArray0[2] = 465;
      intArray0[3] = 578;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(3856, 465);
      int[][] intArray1 = new int[1][4];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = new CharClass(intArray0);
      CharClass charClass3 = charClass1.cleanClass();
      CharClass charClass4 = charClass0.appendClassWithSign(intArray0, 465);
      CharClass charClass5 = charClass4.appendNegatedTable(intArray1);
      CharClass charClass6 = new CharClass(intArray0);
      charClass1.cleanClass();
      charClass3.appendRange(46, 465);
      // Undeclared exception!
      try { 
        charClass5.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
