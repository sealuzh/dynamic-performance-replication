/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:55:31 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Locale;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedReader0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 39);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 39. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(sequenceInputStream0, 22, 22);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[17];
      byteArray0[8] = (byte) (-26);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S!I[M");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2210, 2210, 3149);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("..");
      StringReader stringReader0 = new StringReader("..");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 113, 113, 113);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      byte[] byteArray0 = new byte[1];
      boolean boolean1 = SimpleCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("( #T");
      StringReader stringReader0 = new StringReader("( #T");
      int int0 = ObjectStreamConstants.baseWireHandle;
      int int1 = 761;
      int int2 = 60;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 60, 1424, 1017);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0-'#R");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1274, 95, 95);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = 1105;
      MockFile mockFile0 = new MockFile("floor", "floor");
      StringReader stringReader0 = new StringReader("9@=J`}");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1105, 931, 931);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("1\u0014Cc]Um");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-78), 3149, 72);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("floor");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 7, 3395, 3395);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n");
      String string0 = "st";
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-676), (-676), 2187);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("transat");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 7, 7, 3395);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("", "");
      StringReader stringReader0 = new StringReader("<EOF> ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 111, 1105, 2910);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile(".");
      StringReader stringReader0 = new StringReader(".");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 113, 113, 113);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d");
      MockFile mockFile0 = new MockFile("! uS0D-n7");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1604, 5, 156);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("starts-with");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleCharStream0.inputStream = (Reader) stringReader0;
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[13];
      MockFile mockFile0 = new MockFile("!=");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "or");
      StringReader stringReader0 = new StringReader("s9-K");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 584, 1586, 1586);
      stringReader0.mark(1586);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Di&_]K;ISKP+p(S");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 91, 91, 78);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte) (-26);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ancestor-or-self::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 101, 101, 101);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "not";
      StringReader stringReader0 = new StringReader("not");
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("\t", "!=");
      StringReader stringReader0 = new StringReader("C-Z]");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 584, 1586, 1586);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("d?uk Z|FkDM ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1106, 1106, 931);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("namespace-uri");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dh!BkDV");
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedWriter pipedWriter0 = new PipedWriter();
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0, 2);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0, 76, 1687, 76);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("x+2{,%1q/v}MFn.e}");
      stringReader0.skip((-1538L));
      MockFile mockFile0 = new MockFile("m:bDeCPT*L$RO", "m:bDeCPT*L$RO");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("not");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.markSupported();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("\n", "\n");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\n");
      StringReader stringReader1 = new StringReader("last");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, (-697), (-697), 2187);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MockFile mockFile0 = new MockFile("flu^;MwdXX]quhbaF~*");
      StringReader stringReader0 = new StringReader("flu^;MwdXX]quhbaF~*");
      StringReader stringReader1 = new StringReader("flu^;MwdXX]quhbaF~*");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 3149, 2210, 122);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("x+2{,%1q/v}MFn.e}");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2147479552, 2853, 110);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("27,KU4XG!+!G+QQ22");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 9;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 9, 9, 2555);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("flDoor");
      StringReader stringReader0 = new StringReader("flDoor");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1105, 931, 931);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\n");
      StringReader stringReader1 = new StringReader("st");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, (-676), (-2350), 2187);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("S!I[M");
      stringReader0.markSupported();
      stringReader0.mark(99);
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2210, 2210, 3149);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      MockFile mockFile0 = new MockFile("\t", "!=");
      StringReader stringReader0 = new StringReader(",!_+nH");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 584, 584, 584);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("_\"?5.b");
      StringReader stringReader1 = new StringReader("ancestor-or-self::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 101, 101, 1796);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("KcmA\\ YqPI8uI");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 921, 921, 921);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6M&rMQ,ol lP(.Ig");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 111, 1874);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("ancestor-or-3Xself::");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 3149, 91);
      simpleCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("&eWXcEHnl0");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader1 = new StringReader("=c? O- OHmV-Z*");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 1081, 1081, 1081);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("h\"?5lb");
      StringReader stringReader1 = new StringReader("JxvN!f3'j;*^7J`");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 108;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 108, 2248, 2248);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile(">=");
      MockFile mockFile1 = new MockFile(" !'=#]{LPX['d4k", "IJ584@P;Z");
      StringReader stringReader0 = new StringReader(">=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1895), (-1895), 931);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("6W :B2} wQKw9k'c");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 33, 33, 33);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("n'{");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 110, 5, 2);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"ancestor-or-self::\"");
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"not\"");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\"not\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-45), 110, 10);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile("\n", "\n");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\n");
      StringReader stringReader1 = new StringReader("last");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("\")\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader2, 7, (-2839), 85);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("id");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("! uS0D-n7");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1605, 5, 156);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = '<';
      charArray0[3] = 'G';
      charArray0[4] = '_';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("\t");
      StringReader stringReader0 = new StringReader("!=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1586, 1586, 101);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-51);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("A]_oQlDD#k'J]v", "\n");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("A]_oQlDD#k'J]v");
      StringReader stringReader1 = new StringReader("");
      int int0 = 2187;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1), 78, 124);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byteArray0[8] = (byte)103;
      byteArray0[1] = (byte)103;
      StringReader stringReader0 = new StringReader("4rw");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "CT }-<pZ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 13, (-3621), 1658);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dh!BkDV");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader(":(33V3?O|6");
      StringReader stringReader2 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte byte0 = (byte)45;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 58, 7, 3149);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("mVO>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("mVO>");
      StringReader stringReader1 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-2333), (-2333), 1288);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("&eWXcEHnl0");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader1 = new StringReader("P$8/FTHb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 3149, 3149, 3149);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[13];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("sB-K}");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 584, 1586, 1586);
      stringReader0.mark(1586);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{id");
      MockFile mockFile0 = new MockFile("! uS0D-n7");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1605, 5, 5);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h\"?5lb");
      int int0 = 101;
      StringReader stringReader1 = new StringReader("r");
      stringReader1.reset();
      stringReader1.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 101, 101, 101);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("y\"FfqN");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-698), (-1604));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 76;
      StringReader stringReader0 = new StringReader("transat");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("`2'{0M");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 93, 119);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("translate");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "translate");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1751), 53);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "VZeM-<z9q5A5awa(#Z(";
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("_\"?5.b");
      StringReader stringReader1 = new StringReader("Xncesor--self:");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 101, 99, 3149);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("VZeM-<z9q5A5awa(#Z(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 9;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 9, 9, 2555);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"?5.G");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 3537, 634, 634);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S!I[M");
      stringReader0.markSupported();
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'S';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2210, 2210, 3149);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("VZeM-<z9q5A5awa(#Z(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 9, 9, 9);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x+2{,%1q/v}MFn.e}");
      char[] charArray0 = new char[2];
      charArray0[0] = 'Y';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x+2{,%1q/v}MFn.e}");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "E$t";
      StringReader stringReader0 = new StringReader("E$t");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-676), (-2322), 2187);
      simpleCharStream0.ReInit((InputStream) byteArrayInputStream0, 3343, 3343);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile("/*#z%\"fZDUU()", "/*#z%\"fZDUU()");
      StringReader stringReader0 = new StringReader("/*#z%\"fZDUU()");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1017, 1017, 773);
      simpleCharStream0.GetImage();
      simpleCharStream0.prevCharIsLF = false;
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      boolean boolean1 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile("/#z%ZDUU()", "/#z%ZDUU()");
      StringReader stringReader0 = new StringReader("/#z%ZDUU()");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1017, 1017, 773);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile(">:");
      MockFile mockFile1 = new MockFile(" !'=#]{LPX['d4k", "IJ584@P;Z");
      StringReader stringReader0 = new StringReader(">:");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1895), (-1895), 931);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("<N>mby>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 37, 211, 37);
      StringReader stringReader1 = new StringReader("<N>mby>");
      StringReader stringReader2 = new StringReader("<N>mby>");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 4018, 4018, 37);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      boolean boolean1 = SimpleCharStream.staticFlag;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("div");
      StringReader stringReader0 = new StringReader("g!1q|sl$-9cp");
      int int0 = ObjectStreamConstants.baseWireHandle;
      int int1 = 28;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 28, 1017, 1899);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = "16ToS>^i^";
      MockFile mockFile0 = new MockFile("16ToS>^i^", "16ToS>^i^");
      StringReader stringReader0 = new StringReader("Q!ZbS.qvP}N&qiOIWKJ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 584, 584, 109);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("/*#z%\"fZDUU()", "/*#z%\"fZDUU()");
      StringReader stringReader0 = new StringReader("/*#z%\"fZDUU()");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1017, 1017, 773);
      simpleCharStream0.GetImage();
      simpleCharStream0.prevCharIsLF = false;
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0-'#R");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1274, 95, 95);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("tranEslate");
      StringReader stringReader1 = new StringReader("tranEslate");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 116, 116, 392);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7<p=A815Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7<p=A815Z");
      MockFile mockFile0 = new MockFile("7<p=A815Z", "7<p=A815Z");
      int int0 = 156;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 49, 5, 156);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MockFile mockFile0 = new MockFile("b)", "b)");
      StringReader stringReader0 = new StringReader("b)");
      int int0 = 3135;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 61, 87, 317);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      charArray0[2] = '\'';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 102, 887, 102);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("id");
      StringReader stringReader1 = new StringReader("string");
      stringReader1.markSupported();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("preceding-sibling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader2, 122, (-1643), 15);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "normalize-space";
      StringReader stringReader0 = new StringReader("normalize-space");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("normalize-space");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 110, 98, 103);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("))R>k%$");
      StringReader stringReader1 = new StringReader("not");
      int int0 = 4096;
      int int1 = 2062;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 4096, 2062, 108);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Otra&slate");
      StringReader stringReader1 = new StringReader("Otra&slate");
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("VZeM-<z9q5A5awa(#Z(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 9, 9, 9);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6M&rMQ,ol lP(.Ig");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 111, 1874);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("h\"?5lb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      boolean boolean1 = SimpleCharStream.staticFlag;
      MockFile mockFile0 = new MockFile("flu^;MwdXXquhbPF~*");
      StringReader stringReader0 = new StringReader("flu^;MwdXXquhbPF~*");
      int int0 = 1017;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1017, 1017, 765);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("name");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath");
      String string0 = "CT }-<pZ";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "name");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-635), 3149, 90);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("j");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".  Encountered: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(".  Encountered: ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 101, 101);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("=");
      StringReader stringReader1 = new StringReader("=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[2];
      charArray0[0] = 'H';
      charArray0[1] = '7';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("true");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("true");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 2549, 124, 124);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("O|d&");
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 101, 101);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"concat\"");
      StringReader stringReader0 = new StringReader("\"concat\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1017, 1017, 773);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 1707, 1707, 773);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T8C-lUzs,[U0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("T8C-lUzs,[U0");
      StringReader stringReader2 = new StringReader("^");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, (-868), 71);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("ancestor-o-63Xself::");
      int int0 = 2476;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2476, 2476, 2476);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("string");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 53, 53);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("~5@wro|OV`3r7XYz?");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(lineNumberReader0, 1622, 773, 114);
      simpleCharStream0.backup(2585);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~5@wro|OV`3r7XYz?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("dh!BkDV");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath");
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("vyi9q");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 416, 416, 416);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("attribute::");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 15;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int1 = (-975);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 15, (-975));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'q';
      charArray0[1] = '.';
      charArray0[2] = 'j';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[5] = '.';
      charArray0[6] = '.';
      charArray0[7] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader0, (-1), 110);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      charArray0[0] = '7';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = 'U';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[6];
      boolean boolean0 = SimpleCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("N-bS8>i");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, '\u0000', '\u0000');
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("attribt|:");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"not\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 101, 101, 101);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("\"key\"");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 119, 119);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xv$}Z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte) (-48);
      byteArray0[5] = (byte) (-106);
      byteArray0[6] = (byte) (-29);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(charArrayReader1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("number");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1780, 1780);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6M&rMQ,ol lP(.Ig");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 111, 1874);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("ancestor-or-3Xself::");
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("b=T:s5v}yv`SNh/?l");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1884, 109, 108);
  }
}
