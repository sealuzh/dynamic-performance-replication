/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 22:08:15 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)28, (-1944), fieldTypeRational0, (-1917L), (-2147393465), byteArray0, byteOrder0, 1120);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(1120, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1944), tiffField0.getDirectoryType());
      assertEquals((-2147393465), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2, 34856, fieldTypeByte0, (byte)0, 4L, byteArray0, byteOrder0, (-2329));
      String string0 = tiffField0.getValueDescription();
      assertEquals(34856, tiffField0.getDirectoryType());
      assertEquals((-2329), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(2, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)28, (-1092), fieldTypeRational0, (-8589934592L), 34L, byteArray0, byteOrder0, 48131);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1092), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(34, tiffField0.getOffset());
      assertEquals(48131, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(416, 2, fieldTypeRational0, (short)0, (-837L), byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getTag();
      assertEquals((-837), tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(416, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "z_\"%t~|sy?;Sr4CQr@");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-639), (byte)0, fieldTypeShort0, (byte)0, (-6696L), byteArray0, byteOrder0, 6);
      int int0 = tiffField0.getTag();
      assertEquals((-639), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-6696), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2281, 65535, fieldTypeAscii0, (byte)0, 51022, byteArray0, byteOrder0, 2541);
      String string0 = tiffField0.getStringValue();
      assertEquals(2281, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2541, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(288, (-522), fieldTypeAscii0, 517L, (-120L), byteArray0, (ByteOrder) null, (byte) (-58));
      int int0 = tiffField0.getSortHint();
      assertEquals((-58), int0);
      assertEquals((-522), tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getTag());
      assertEquals((-120), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1439), 2927, fieldTypeFloat0, 450L, (byte)0, byteArray0, byteOrder0, (byte) (-97));
      int int0 = tiffField0.getOffset();
      assertEquals((-97), tiffField0.getSortHint());
      assertEquals(2927, tiffField0.getDirectoryType());
      assertEquals((-1439), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals(65535, int0);
      assertEquals(51022, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte)77;
      byteArray0[4] = (byte)77;
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals((-522), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-1);
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(5466, 5466, fieldTypeShort0, 5466, 5466, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(5466, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-256), int0);
      assertEquals(10932, tiffField0.getBytesLength());
      assertEquals(5466, tiffField0.getOffset());
      assertEquals(5466, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2479), (-2479), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getIntValue();
      assertEquals((-2479), tiffField0.getTag());
      assertEquals((-2479), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-120);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-120);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(51, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4381, 4381, fieldTypeLong0, 51, 72L, byteArray0, byteOrder0, 28);
      tiffField0.getFieldTypeName();
      assertEquals(72, tiffField0.getOffset());
      assertEquals(4381, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(4381, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1750, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2461, 1, fieldTypeDouble0, (byte)6, 2867, byteArray0, byteOrder0, 2461);
      tiffField0.getFieldTypeName();
      assertEquals(2461, tiffField0.getTag());
      assertEquals(2867, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2461, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(115, 1203, (FieldType) null, (byte)11, 115, byteArray0, byteOrder0, (byte)6);
      tiffField0.getFieldType();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1203, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getTag());
      assertEquals(115, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 1859L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(1859, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2776), "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2776), (-2776), fieldTypeDouble0, 5700L, 5700L, byteArray0, byteOrder0, (-2776));
      tiffField0.getFieldType();
      assertEquals((-2776), tiffField0.getTag());
      assertEquals((-2776), tiffField0.getDirectoryType());
      assertEquals(5700, tiffField0.getOffset());
      assertEquals((-2776), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(5, 2456, fieldTypeShort0, 1L, (-5195L), byteArray0, byteOrder0, 4413);
      tiffField0.getDoubleValue();
      assertEquals(2456, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-5195), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(4413, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)27;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeShort0, 1L, (byte)101, byteArray0, byteOrder0, (-178));
      tiffField0.getDoubleValue();
      assertEquals((-178), tiffField0.getSortHint());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3229, (-1109), fieldTypeShort0, 1L, 1152L, byteArray0, byteOrder0, 22);
      tiffField0.getDoubleValue();
      assertEquals(1152, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3229, tiffField0.getTag());
      assertEquals((-1109), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)0, fieldTypeShort0, (byte)111, (byte) (-103), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1549), (-1549), fieldTypeShort0, 255L, 321L, byteArray0, byteOrder0, 3718);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3718, tiffField0.getSortHint());
      assertEquals((-1549), tiffField0.getTag());
      assertEquals((-1549), int0);
      assertEquals(321, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-33), fieldTypeShort0, 0L, (byte)0, byteArray0, byteOrder0, 4835);
      tiffField0.getCount();
      assertEquals((-33), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4835, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50, (byte)68, fieldTypeByte0.LONG, 1414L, (byte)6, byteArray0, (ByteOrder) null, 1);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1905, 50722, fieldTypeRational0.IFD, (-17179869184L), 238L, byteArray0, byteOrder0, (byte)62);
      tiffField0.getCount();
      assertEquals(238, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(1905, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-33), fieldTypeShort0, 0L, (byte)0, byteArray0, byteOrder0, 4835);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-33), tiffField0.getDirectoryType());
      assertEquals(4835, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)40, 172, fieldTypeShort0, 172, (-1502L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(40, tiffField0.getTag());
      assertEquals((-1502), tiffField0.getOffset());
      assertEquals(344, int0);
      assertEquals(172, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(297, 2147106698, fieldTypeFloat0, 297, 0L, (byte[]) null, (ByteOrder) null, 297);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(297, tiffField0.getTag());
      assertEquals(2147106698, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "o*({1kZ(OdxXr");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(6, tiffField0.getOffset());
      assertEquals(13, byteArray1.length);
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals((-522), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2, 34856, fieldTypeByte0, (byte)0, 4L, byteArray0, byteOrder0, (-2329));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(2, tiffField0.getTag());
      assertEquals(34856, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals((-2329), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(115, 1203, (FieldType) null, (byte)11, 115, byteArray0, byteOrder0, (byte)6);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)68, (byte)11, fieldTypeByte0, (-1L), (byte)6, byteArray0, byteOrder0, 34910);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[94];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-6348), (-6348), fieldTypeShort0, (-566L), 996L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(20, "p5}RR(Y+f K'p");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeAscii0, (-1688L), (-1688L), byteArray0, (ByteOrder) null, (byte) (-128));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(259, (-1303), fieldTypeShort0, 259, 259, (byte[]) null, byteOrder0, 259);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, (-2002), fieldTypeFloat0, (-2015), (-5281L), byteArray0, byteOrder0, 2031);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1472), (-2697), fieldTypeByte0, (-1472), (-1L), byteArray0, byteOrder0, 37385);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-376), 65535, fieldTypeShort0, (-1591L), 65535, byteArray0, byteOrder0, 2554);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ", fieldType: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-361), fieldTypeLong0, 1087L, 1087L, (byte[]) null, byteOrder0, 1620);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-349L), (-805L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1436), 956, fieldTypeFloat0.ASCII, 4L, 2051L, byteArray0, byteOrder0, 1992);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1436), tiffField0.getTag());
      assertEquals(956, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(2051, tiffField0.getOffset());
      assertEquals(1992, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-830), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)6, 4, fieldTypeRational0, 4, 255L, byteArray0, byteOrder0, 12);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)50, 2183, fieldTypeLong0, 2183, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2183, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      tiffField0.getValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals((-522), tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(6, tiffField0.getOffset());
      assertEquals((-522), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 416, fieldTypeRational0, (-837L), (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(416, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)55, (byte) (-1), fieldTypeByte0, (-1029L), (byte)68, byteArray0, byteOrder0, 1607);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1029), int0);
      assertEquals(55, tiffField0.getTag());
      assertEquals(1607, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41990, (-1986), fieldTypeByte0, 41990, 6070L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(5, 4399, fieldTypeByte0.LONG, 864L, (byte)68, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(4399, tiffField0.getDirectoryType());
      assertEquals(3456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1174), "");
      TiffField tiffField0 = new TiffField((-1174), 41483, fieldTypeDouble0, 41483, 41483, byteArray0, byteOrder0, (-4747));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@33af78cf for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)68, (byte)6, fieldTypeByte0.FLOAT, 1L, (byte)68, byteArray0, byteOrder0, (byte)68);
      tiffField0.getIntValueOrArraySum();
      assertEquals(68, tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2776), "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, (-1436), fieldTypeDouble0, 5, 17456L, byteArray0, byteOrder0, (-1380));
      tiffField0.getDoubleArrayValue();
      assertEquals(17456, tiffField0.getOffset());
      assertEquals((-1436), tiffField0.getDirectoryType());
      assertEquals((-1380), tiffField0.getSortHint());
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3939, 5, fieldTypeByte0, 3939, 17456L, byteArray0, byteOrder0, 2);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2155fa7d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-643), 2147475456, fieldTypeByte0.SLONG, 400L, 294L, byteArray0, byteOrder0, (byte)68);
      tiffField0.getDoubleArrayValue();
      assertEquals((-643), tiffField0.getTag());
      assertEquals(1600, tiffField0.getBytesLength());
      assertEquals(2147475456, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(294, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3987, (-1), fieldTypeFloat0, 255L, (-8060L), byteArray0, byteOrder0, (byte)29);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(3987, tiffField0.getTag());
      assertEquals((-8060), tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)0, fieldTypeShort0, (byte)111, (byte) (-103), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(222, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-830), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-830), 135, fieldTypeRational0, 135, 1107L, byteArray0, byteOrder0, (-838));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-830), tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-838), tiffField0.getSortHint());
      assertEquals(1107, tiffField0.getOffset());
      assertEquals(1080, tiffField0.getBytesLength());
      assertEquals(135, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)68, (byte)68, fieldTypeByte0, 1L, 1479L, byteArray0, byteOrder0, (byte)68);
      tiffField0.getDoubleArrayValue();
      assertEquals(1479, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[71];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(282, 25, fieldTypeByte0, 282, 7344L, byteArray0, byteOrder0, (-681));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1911f0b5 for: 282 (0x11a: XResolution): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)40, 172, fieldTypeShort0, 172, (-1502L), byteArray0, byteOrder0, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1502), tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(172, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getTag());
      assertEquals(344, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 1859L, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, intArray0.length);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1859, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-830), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)6, 4, fieldTypeRational0, 4, 255L, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "b38");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1209), (byte)55, fieldTypeFloat0.SRATIONAL, 0L, (byte)55, byteArray0, byteOrder0, 4);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals((-1209), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)68, (byte)6, fieldTypeByte0.FLOAT, 1L, (byte)68, byteArray0, byteOrder0, (byte)68);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)50, 2183, fieldTypeLong0, 2183, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2183L, tiffField0.getCount());
      assertEquals(2183, tiffField0.getDirectoryType());
      assertEquals(8732, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-97);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(51022, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(51022 (0xc74e: OpcodeList3): ): [Ljava.lang.String;@2011b64d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField((-38), 1625, fieldTypeDouble0, 1595, 2426L, byteArray0, byteOrder0, 2147481600);
      String string0 = tiffField0.getTagName();
      assertEquals(2426, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffffffda)", string0);
      assertEquals(2147481600, tiffField0.getSortHint());
      assertEquals(1625, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, (-2002), fieldTypeFloat0, (-2015), (-5281L), byteArray0, byteOrder0, 2031);
      String string0 = tiffField0.getTagName();
      assertEquals((-2002), tiffField0.getDirectoryType());
      assertEquals(2031, tiffField0.getSortHint());
      assertEquals((-5281), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1156), 27, fieldTypeLong0.FLOAT, 1576L, 188L, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1156), tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(188, tiffField0.getOffset());
      assertEquals(6304, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1576L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[71];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(282, 25, fieldTypeByte0, 282, 7344L, byteArray0, byteOrder0, (-681));
      String string0 = tiffField0.toString();
      assertEquals(7344, tiffField0.getOffset());
      assertEquals(282, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals((-681), tiffField0.getSortHint());
      assertEquals("282 (0x11a: XResolution): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (71) (282 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)6, 258, fieldTypeByte0.FLOAT, 255L, 2L, byteArray0, byteOrder0, 3964);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getTag());
      assertEquals(3964, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(258, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1174), "");
      TiffField tiffField0 = new TiffField((-1174), 41483, fieldTypeDouble0, 41483, 41483, byteArray0, byteOrder0, (-4747));
      String string0 = tiffField0.getValueDescription();
      assertEquals(41483, tiffField0.getOffset());
      assertEquals((-1174), tiffField0.getTag());
      assertEquals(331864, tiffField0.getBytesLength());
      assertEquals(41483L, tiffField0.getCount());
      assertEquals(41483, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-4747), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField((-38), 1625, fieldTypeDouble0, 1595, 2426L, byteArray0, byteOrder0, 2147481600);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147481600, tiffField0.getSortHint());
      assertEquals(2426, tiffField0.getOffset());
      assertEquals(12760, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-38), tiffField0.getTag());
      assertEquals(1595L, tiffField0.getCount());
      assertEquals(1625, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField('7', '\u0000', fieldTypeLong0, 2879, '\u0000', byteArray0, byteOrder0, '7');
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(11516, tiffField0.getBytesLength());
      assertEquals("55 (0x37: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2879 IFD)", string0);
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)50, 2183, fieldTypeLong0, 2183, (-1L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2183, tiffField0.getDirectoryType());
      assertEquals("50 (0x32: Unknown Tag):  (2183 Long)", string0);
      assertEquals(8732, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[111];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1126), 3704, fieldTypeShort0, 1597L, 32, byteArray0, byteOrder0, (-1126));
      String string0 = tiffField0.toString();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(3704, tiffField0.getDirectoryType());
      assertEquals((-1126), tiffField0.getSortHint());
      assertEquals("-1126 (0xfffffb9a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (1597 SShort)", string0);
      assertEquals(3194, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)111, fieldTypeShort0, 1467L, 1528L, byteArray0, byteOrder0, (byte)69);
      String string0 = tiffField0.toString();
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0 (1467 Short)", string0);
      assertEquals(2934, tiffField0.getBytesLength());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getOffset());
      assertEquals(111, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(74, 74, fieldTypeAscii0, 74, (-268L), byteArray0, byteOrder0, 74);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1733);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1523, byteArrayOutputStream0.size());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(6, 1207, fieldTypeRational0, 4, 6, byteArray0, byteOrder0, (-522));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1207, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-522), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-97);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51022, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(51022, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)111, fieldTypeShort0, 1467L, 1528L, byteArray0, byteOrder0, (byte)69);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147475456, (byte) (-81));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertNull(string0);
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 416, fieldTypeRational0, (-837L), (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(416, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2825, 0, fieldTypeRational0, 2825, 2825, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2825L, tiffElement0.offset);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2825, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)55, (byte) (-1), fieldTypeByte0, (-1029L), (byte)68, byteArray0, byteOrder0, 1607);
      tiffField0.getFieldTypeName();
      assertEquals(68, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getTag());
      assertEquals(1607, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)50, 2183, fieldTypeLong0, 2183, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(2183, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2968), "ProfileCalibrationSignature");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(93, 93, fieldTypeByte0, 93, 4L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(93, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(93, int0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)50, 2183, fieldTypeLong0, 2183, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getTag());
      assertEquals(2183, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2183L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1156), 27, fieldTypeLong0.FLOAT, 1576L, 188L, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals("-1156 (0xfffffb7c: Unknown Tag): ", string0);
      assertEquals(188, tiffField0.getOffset());
      assertEquals(6304, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34892, 34892, fieldTypeByte0, 34892, 1L, byteArray0, byteOrder0, 1954);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("([@h[Yo");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(34892, tiffField0.getTag());
      assertEquals(34892, tiffField0.getBytesLength());
      assertEquals(34892L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(34892, tiffField0.getDirectoryType());
      assertEquals(1954, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1156), 27, fieldTypeLong0.FLOAT, 1576L, 188L, byteArray0, byteOrder0, 27);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3718, 3718);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-1156), tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1576L, tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(188, tiffField0.getOffset());
  }
}
