/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:08:53 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.ClassShutter;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "ehFT-Mc";
      // Undeclared exception!
      try { 
        parser0.parse("switch ", "", 17);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ( before switch expression (#17)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parser parser0 = new Parser((CompilerEnvirons) null, (ErrorReporter) null);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(861);
      parser0.pushScope(scriptOrFnNode0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.XML.not.available", "msg.XML.not.available", 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGeneratingSource(true);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.seal();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter1);
      StringReader stringReader0 = new StringReader("AWccX/CT$Y{");
      boolean boolean0 = context0.generateObserverCount;
      // Undeclared exception!
      try { 
        parser0.parse("AWccX/CT$Y{", "error reporter", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (error reporter#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "NQQ*Oj\\])O<DH";
      // Undeclared exception!
      try { 
        parser0.parse("NQQ*Oj])O<DH", "NQQ*Oj])O<DH", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (NQQ*Oj])O<DH#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "language version", 8232);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#8232)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "eh5-qrX!";
      // Undeclared exception!
      try { 
        parser0.parse("throw", "eh5-qrX!", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (eh5-qrX!#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      compilerEnvirons0.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser0.parse(",RB?_YJx:dx\"Q4@7@", ",RB?_YJx:dx\"Q4@7@", 588);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (,RB?_YJx:dx\"Q4@7@#588)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parser parser0 = new Parser((CompilerEnvirons) null, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.addError("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.eof();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      String string0 = "(new Date(";
      // Undeclared exception!
      try { 
        parser0.parse("(new Date(", "(new Date(", (-4758));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4758
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("D({?GKHq9z_2DID/", "D({?GKHq9z_2DID/", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: invalid property id (D({?GKHq9z_2DID/#170)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = 'v';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      contextFactory0.enterContext();
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      String string0 = "msg.vNr.+edecl";
      StringReader stringReader0 = new StringReader("msg.vNr.+edecl");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "language version", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (language version#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte) (-95);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context1 = new Context();
      Set<String> set0 = context1.activationNames;
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[0] = '(';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "r&i9`1/E|s", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.addStrictWarning("(new Date(", "(new Date(");
      String string0 = "+m'%x`T";
      // Undeclared exception!
      try { 
        parser0.parse("+m'%x`T", "msg.let.decl.noy.in.block", 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("/rX(f'/m>^", "(new Date(", 147);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ((new Date(#147)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "J";
      char[] charArray0 = new char[13];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[3] = 'G';
      charArray0[4] = '<';
      charArray0[6] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Charset.defaultCharset();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "J", (-2636));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2636
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "-6n#97^>(1";
      // Undeclared exception!
      try { 
        parser0.parse("X7_:", "-6n#97^>(1", 359);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (-6n#97^>(1#359)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("Lc@TPbs0d", "Lc@TPbs0d", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(" @,^9%WR'5sXRRL5p", "error reporter", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (error reporter#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "}f.'";
      String string1 = "C*X>r3ylE/d^rH3Z-Z;";
      // Undeclared exception!
      try { 
        parser0.parse("msg.var.hides.arg", "C*X>r3ylE/d^rH3Z-Z;", 126);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.getErrorReporter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("M3Stq.K5'o?", "", (int) (byte)93);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (#93)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.return.inconsistent", "Bad initialBuffrCapcity: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "org.mozilla.javascript.NativeGenerator$GeneratorClosedException";
      // Undeclared exception!
      try { 
        parser0.parse("<4`1xI;GCI^A883/:fb", "org.mozilla.javascript.NativeGenerator$GeneratorClosedException", 885);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (org.mozilla.javascript.NativeGenerator$GeneratorClosedException#885)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      StringReader stringReader0 = new StringReader("set");
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse((Reader) stringReader0, "evC`x$W4`^u", 4612);
      assertEquals("\u0087'\u0003setQ\u0001", parser0.getEncodedSource());
      assertEquals(4612, scriptOrFnNode0.getBaseLineno());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = ";}7@9n)zk";
      String string1 = "O";
      // Undeclared exception!
      try { 
        parser0.parse(";}7@9n)zk", "O", 157);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (O#157)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[5];
      charArray0[0] = '+';
      charArray0[1] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      String string0 = null;
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, (String) null, 467);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'K';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = '+';
      charArray0[6] = 'y';
      charArray0[7] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      String string0 = "{BF4~|/O78";
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "{BF4~|/O78", 147);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegal character ({BF4~|/O78#147)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      parser0.parse("k", "Unable to instantiate compiled class:", 86);
      // Undeclared exception!
      try { 
        parser0.addError("FPO+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property FPO+
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      char[] charArray0 = new char[7];
      charArray0[0] = '+';
      charArray0[1] = '<';
      charArray0[2] = '+';
      charArray0[3] = '<';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "language version", 3715);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (language version#3715)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.seal();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "-6n#97^>(1";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "language version", 8);
      // Undeclared exception!
      try { 
        parser0.addError("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      compilerEnvirons0.initFromContext(context0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "=\\Sg)qw?$2k";
      // Undeclared exception!
      try { 
        parser0.parse("HejwwIis|\bL|\"x@", "=Sg)qw?$2k", 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (=Sg)qw?$2k#140)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[8];
      charArray0[0] = '<';
      charArray0[1] = 'E';
      charArray0[2] = 'x';
      charArray0[3] = '+';
      compilerEnvirons0.setXmlAvailable(false);
      charArray0[6] = 'y';
      charArray0[7] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "{BF4~|/O78", 147);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error ({BF4~|/O78#147)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      boolean boolean0 = context0.generateObserverCount;
      Context context1 = contextFactory0.enterContext(context0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons0.setLanguageVersion(120);
      Context.exit();
      boolean boolean1 = context1.compileFunctionsWithDynamicScopeFlag;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("ohwq=`}g", "msg.const.redecl", 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (msg.const.redecl#39)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("QoOwT3j-G::zs[`Zq *n", (String) null, 127);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@8*U!/Q+:T]EP^Z6,", "Unable to instantiate compiled class:", 86);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (Unable to instantiate compiled class:#86)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "'";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      char[] charArray0 = new char[1];
      charArray0[0] = '-';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "'", 467);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file ('#467)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("switch ", "switch ");
      parser0.parse("s;", "dz", 7);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.getCurrentLineNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("m^>gc*+", "m^>gc*+", 126);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      contextFactory0.checkNotSealed();
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      String string0 = "throw";
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      String string1 = ";['-";
      String string2 = "f)&Qj\\@_Ov63Lx(VA^";
      // Undeclared exception!
      try { 
        parser0.parse(";['-", "f)&Qj@_Ov63Lx(VA^", (-2128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2128
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.parse("[]", "K", 9);
      parser0.getEncodedSource();
      Locale locale0 = new Locale("set");
      locale0.getUnicodeLocaleAttributes();
      // Undeclared exception!
      try { 
        parser0.reportError("\u0087RSQ\u0001");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property \u0087RSQ\u0001
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[^VW3.3gyB;{", "", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("lXRqYJoIoAg}~h:h");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "random", (-2185));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2185
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g4wUm.9YWZ1!d#sq*&");
      // Undeclared exception!
      try { 
        parser0.parse("kiSF9?#.h10zQ", "", 107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[8];
      charArray0[0] = '!';
      charArray0[2] = '!';
      charArray0[2] = 'G';
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = new Context();
      Set<String> set0 = context0.activationNames;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "error reporter", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter0);
      char[] charArray0 = new char[4];
      charArray0[0] = '+';
      charArray0[1] = '7';
      charArray0[2] = '+';
      charArray0[3] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      Parser parser2 = new Parser((CompilerEnvirons) null, errorReporter1);
      String string0 = "";
      String string1 = null;
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, (String) null, 31);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid increment operand.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'G';
      charArray0[3] = '<';
      charArray0[4] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "error reporter", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      context0.setErrorReporter(defaultErrorReporter0);
      Parser parser2 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser1.parse("'h<IlZ@UE Aq8'`5,A#", "error reporter", 146);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#146)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("{?~,~F(^ `kd;^Ju", "{?~,~F(^ `kd;^Ju", (-3000));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3000
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "throw";
      // Undeclared exception!
      try { 
        parser0.parse("R%K$jFZ<2v68I|P", "K", (-1161));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1161
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "9,";
      String string1 = "msg.anon.generator.returns";
      // Undeclared exception!
      try { 
        parser0.parse("9,", "msg.anon.generator.returns", 2105);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (msg.anon.generator.returns#2105)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("ehFT-Mc", "`;");
      // Undeclared exception!
      try { 
        parser1.parse("a0&`%ttk>FM&+Sk:b/", "", 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (#4)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context(contextFactory0);
      contextFactory0.enterContext(context0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("YG(6cXoU", "YG(6cXoU", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (YG(6cXoU#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[9];
      charArray0[0] = '!';
      charArray0[1] = 'G';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = 'G';
      charArray0[5] = '.';
      charArray0[6] = 'G';
      charArray0[7] = 'G';
      charArray0[8] = '!';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      Context context0 = new Context();
      Context context1 = contextFactory0.enter();
      context1.getErrorReporter();
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "error reporter", 763);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (error reporter#763)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Set<String> set0 = context0.activationNames;
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      StringReader stringReader0 = new StringReader("{BY[65r0Ulm8S?");
      contextFactory0.enterContext();
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[8];
      charArray0[0] = '!';
      charArray0[2] = '!';
      charArray0[3] = 'B';
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        parser0.parse("~%mDr@1o", "language version", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      StringReader stringReader0 = new StringReader("static");
      stringReader0.mark(140);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "error reporter", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (error reporter#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("g==:/>zpe*hEQ}B\"1H*", "([Ljava/lang/String;)V", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (([Ljava/lang/String;)V#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "4C=>yKAr7X5";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4C=>yKAr7X5");
      String string1 = "@c](~Gb=jEKr/:Lp";
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("@c](~Gb=jEKr/:Lp", "@c](~Gb=jEKr/:Lp", 65);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (@c](~Gb=jEKr/:Lp#65)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("L:Tlz}{OP3k<pQ", "error reporter", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (error reporter#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Context context1 = contextFactory0.enterContext(context0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context1.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = '|';
      charArray0[2] = 'Y';
      charArray0[3] = 'Q';
      charArray0[4] = 'C';
      charArray0[5] = 'y';
      charArray0[6] = '>';
      charArray0[7] = '=';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "language version", 41);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#41)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "++");
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      String string0 = "Lc@TPbs0d";
      String string1 = "x7N0";
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      String string2 = "{oTopCall";
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      // Undeclared exception!
      try { 
        parser1.parse("{oTopCall", "++", 110);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing } in compound statement (++#110)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter.forEval(errorReporter0);
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      compilerEnvirons0.activationNames = set0;
      // Undeclared exception!
      try { 
        parser0.parse("with ", "error reporter", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ( before with-statement object (error reporter#8)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setGeneratingSource(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.clone();
      linkedHashSet0.add("");
      String string0 = "msg.no.brace.try";
      parser0.addStrictWarning("msg.no.brace.try", "");
      parser0.parse("msg.bad.throw.eol", "msg.no.brace.try", 3103);
      parser0.insideFunction();
      parser0.getCurrentLineNumber();
      // Undeclared exception!
      try { 
        parser0.defineSymbol((-3501), false, "msg.no.brace.try");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons2.getErrorReporter();
      ContextFactory.getGlobal();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context0 = contextFactory1.enter();
      compilerEnvirons1.setLanguageVersion(0);
      compilerEnvirons2.initFromContext(context0);
      ContextFactory contextFactory2 = new ContextFactory();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons2.getErrorReporter();
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("Tp:+{K)TP=agLR{", "Tp:+{K)TP=agLR{", (-638));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -638
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4C=>yKAr7X5");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons1.setReservedKeywordAsIdentifier(true);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("", "@c](~Gb=jEKr/:Lp", 153);
      assertEquals("@c](~Gb=jEKr/:Lp", scriptOrFnNode0.getSourceName());
      assertEquals(153, scriptOrFnNode0.getLineno());
      
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      parser0.defineSymbol(152, true, "@c](~Gb=jEKr/:Lp");
      String string0 = parser0.getEncodedSource();
      assertEquals("\u0087", string0);
      
      boolean boolean0 = parser0.insideFunction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons1.activationNames = (Set<String>) linkedHashSet0;
      parser0.parse("", "get", 153);
      parser0.defineSymbol(153, false, "get");
      // Undeclared exception!
      try { 
        parser0.addError("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      String string0 = "J";
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      defaultErrorReporter0.runtimeError("J", "J", 2430, "?Jl+|7%,S2%i/Cg", 2430);
      compilerEnvirons0.setGenerateObserverCount(true);
      char[] charArray0 = new char[13];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[6] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Charset.defaultCharset();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser1.parse("function ", (String) null, 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before function parameters.
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      compilerEnvirons1.setReservedKeywordAsIdentifier(true);
      parser0.parse("this", "Xp", 1);
      // Undeclared exception!
      try { 
        context0.setClassShutter((ClassShutter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "g==:/>zpe*hEQ}B\"1H*";
      String string1 = "NEKZW{HRo4Nh-o#";
      // Undeclared exception!
      try { 
        parser0.parse("58()w[?(:T@=p5", "NEKZW{HRo4Nh-o#", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (NEKZW{HRo4Nh-o##2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4C=>yKAr7X5");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons1.setReservedKeywordAsIdentifier(true);
      parser0.parse("", "@c](~Gb=jEKr/:Lp", 153);
      parser0.defineSymbol(152, false, "@c](~Gb=jEKr/:Lp");
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.defineSymbol((-1464), true, "@c](~Gb=jEKr/:Lp");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }
}
