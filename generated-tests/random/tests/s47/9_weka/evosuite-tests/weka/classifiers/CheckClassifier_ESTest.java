/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 08:36:18 GMT 2019
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.AbstractClassifier;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.bayes.NaiveBayes;
import weka.classifiers.functions.SMO;
import weka.classifiers.lazy.IBk;
import weka.classifiers.meta.CostSensitiveClassifier;
import weka.classifiers.meta.LogitBoost;
import weka.classifiers.rules.M5Rules;
import weka.classifiers.trees.J48;
import weka.classifiers.trees.RandomForest;
import weka.core.CheckScheme;
import weka.core.Utils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(39);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setDebug(true);
      checkClassifier0.canTakeOptions();
      checkClassifier0.correctBuildInitialisation(false, false, false, true, false, true, 2);
      // Undeclared exception!
      try { 
        checkClassifier0.canPredict(true, false, true, true, false, true, (-322));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-322' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setDebug(true);
      checkClassifier0.weightedInstancesHandler();
      boolean[] booleanArray0 = checkClassifier0.canHandleOnlyClass(true, true, true, true, false, 2);
      assertTrue(Arrays.equals(new boolean[] {false, true}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.printAttributeSummary(true, true, true, true, true, false, 3740);
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.doTests();
      System.setCurrentTimeMillis((-1088L));
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, false, true, true, 3740);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '3740' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      int int0 = 48;
      IBk iBk0 = new IBk(48);
      iBk0.getTechnicalInformation();
      iBk0.getTechnicalInformation();
      iBk0.enumerateMeasures();
      checkClassifier0.setClassifier(iBk0);
      checkClassifier0.listOptions();
      checkClassifier0.updateableClassifier();
      Random.setNextRandom(2400);
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, true, false, false, 48);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '48' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      boolean boolean0 = true;
      checkClassifier0.doesntUseTestClassVal(true, false, false, false, false, false, 3);
      checkClassifier0.getRevision();
      checkClassifier0.setNumNumeric(3);
      checkClassifier0.setClassifier((Classifier) null);
      boolean boolean1 = true;
      boolean boolean2 = true;
      checkClassifier0.setNumInstancesRelational(32);
      checkClassifier0.getPostProcessor();
      checkClassifier0.setPostProcessor((CheckScheme.PostProcessor) null);
      checkClassifier0.getOptions();
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.listOptions();
      checkClassifier0.canTakeOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.declaresSerialVersionUID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.m_Classifier = null;
      checkClassifier0.canTakeOptions();
      int int0 = (-352);
      boolean boolean0 = false;
      boolean boolean1 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      checkClassifier0.setNumRelational((-352));
      checkClassifier0.testToString();
      boolean boolean2 = false;
      int int1 = (-869);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, true, true, false, false, (-352), (-869));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-352' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      int int0 = 98;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, false, true, true, true, true, 28, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '28' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "_V/'v@).";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V/'v@).");
      CheckClassifier checkClassifier0 = new CheckClassifier();
      LogitBoost logitBoost0 = new LogitBoost();
      checkClassifier0.setClassifier(logitBoost0);
      checkClassifier0.setNumNominal(4);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Tot";
      stringArray0[1] = "b1o$Vy'BXTxf9/";
      stringArray0[2] = "Logging started";
      AbstractClassifier.runClassifier(j48_0, stringArray0);
      checkClassifier0.setClassifier(j48_0);
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: null
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1365L));
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      checkClassifier0.instanceWeights(false, false, false, false, false, true, 3);
      checkClassifier0.canTakeOptions();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.setSilent(false);
      boolean boolean1 = true;
      try { 
        checkClassifier0.makeTestDataset(657, 657, 657, (-2676), 12, 34, (-2676), 84, 307, 12, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setClassifier((Classifier) null);
      boolean[] booleanArray0 = checkClassifier0.testToString();
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      checkClassifier0.correctBuildInitialisation(false, false, false, false, false, false, 4);
      boolean boolean0 = false;
      checkClassifier0.doesntUseTestClassVal(true, false, false, false, false, false, 3);
      checkClassifier0.getRevision();
      checkClassifier0.setNumNumeric(3);
      checkClassifier0.setClassifier((Classifier) null);
      boolean boolean1 = true;
      boolean boolean2 = true;
      boolean boolean3 = false;
      checkClassifier0.setNumInstancesRelational(13);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, true, true, true, true, true, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.testToString();
      checkClassifier0.updateableClassifier();
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = false;
      int int0 = 4;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, true, false, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.rules.ZeroR: Cannot handle relational class!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkScheme_PostProcessor0.getRevision();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      boolean boolean2 = true;
      checkClassifier0.listOptions();
      int int0 = (-1221);
      int int1 = 2;
      checkClassifier0.correctBuildInitialisation(false, true, true, true, true, false, 2);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, true, true, true, true, true, (-1221));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1221' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = 1418;
      checkClassifier0.setNumString(1418);
      boolean boolean0 = true;
      checkClassifier0.weightedInstancesHandler();
      boolean boolean1 = false;
      checkClassifier0.getRevision();
      Utils.SMALL = (-1757.6435);
      checkClassifier0.updateableClassifier();
      int int1 = (-887);
      NaiveBayes naiveBayes0 = new NaiveBayes();
      checkClassifier0.m_Classifier = (Classifier) naiveBayes0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, false, true, true, true, true, (-887));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-887' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getClassifier();
      M5Rules m5Rules0 = new M5Rules();
      boolean boolean0 = true;
      m5Rules0.setUseUnsmoothed(true);
      checkClassifier0.setClassifier(m5Rules0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      CostSensitiveClassifier costSensitiveClassifier0 = new CostSensitiveClassifier();
      checkClassifier0.setClassifier(costSensitiveClassifier0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "6g6{}0'EI)Aw F;W|ZI";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6g6{}0'EI)Aw F;W|ZI");
      stringArray0[1] = "";
      costSensitiveClassifier0.setOptions(stringArray0);
      checkClassifier0.canHandleZeroTraining(true, true, false, false, false, false, 1);
      boolean[] booleanArray0 = checkClassifier0.weightedInstancesHandler();
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      checkClassifier0.setNumInstancesRelational(3993);
      checkClassifier0.setNumNominal(3993);
      String[] stringArray0 = checkClassifier0.getOptions();
      Random.setNextRandom(17);
      checkClassifier0.updateableClassifier();
      checkClassifier0.testToString();
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = (-1400);
      Random.setNextRandom((-1400));
      FileSystemHandling.shouldAllThrowIOExceptions();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setDebug(true);
      SMO sMO0 = new SMO();
      sMO0.getTechnicalInformation();
      sMO0.getCapabilities();
      sMO0.getFilterType();
      checkClassifier0.testToString();
      checkClassifier0.setClassifier(sMO0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, false, true, false, false, true, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.datasetIntegrity(false, false, false, false, true, false, 0, false, true);
      checkClassifier0.weightedInstancesHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.canPredict(true, true, true, false, true, false, 50);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '50' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Random.setNextRandom(480);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      int int0 = 25;
      int int1 = 894;
      int int2 = 2151;
      int int3 = 2841;
      int int4 = (-2058);
      int int5 = 3;
      int int6 = 3;
      int int7 = 2661;
      boolean boolean0 = false;
      RandomForest randomForest0 = new RandomForest();
      randomForest0.getOptions();
      checkClassifier0.setClassifier(randomForest0);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, false, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, true, false, false, (-2737));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2737' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = false;
      int int0 = 2;
      checkClassifier0.datasetIntegrity(true, true, true, true, true, false, 2, true, true);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Problem determining ZeroR performance: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = (-295);
      int int1 = (-2570);
      int int2 = 20;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, false, false, false, (-2570));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2570' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = false;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean3 = true;
      boolean boolean4 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      boolean boolean5 = false;
      boolean boolean6 = false;
      checkClassifier0.getWords();
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, false, false, false, false, true, 5, false, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '5' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.testToString();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "FCXKRvWFTY678g,";
      stringArray0[1] = "\n=== Check on Classifier: ";
      CheckClassifier.main(stringArray0);
      boolean boolean0 = true;
      checkClassifier0.canTakeOptions();
      checkClassifier0.setWordSeparators("$Revision: 8034 $");
      int int0 = 74;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, false, true, false, true, true, 74, true, true, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '74' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(0L);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, false, false, false, false, false, (-2014));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2014' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      int int0 = (-912);
      int int1 = 2845;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, true, false, true, true, true, (-912), 2845);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-912' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      checkClassifier0.setDebug(true);
      checkClassifier0.setWordSeparators("");
      checkClassifier0.getRevision();
      boolean boolean1 = false;
      boolean boolean2 = false;
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, true, false, false, (-1506));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1506' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      int int0 = 10001;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(true, true, true, true, true, 10001);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '10001' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, false, false, false, false, 1274, true, false, 1274);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1274' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = true;
      boolean boolean3 = false;
      int int0 = 0;
      checkClassifier0.setDebug(true);
      checkClassifier0.setNumInstancesRelational(31);
      boolean boolean4 = true;
      boolean boolean5 = true;
      int int1 = 0;
      checkClassifier0.setNumString(0);
      boolean boolean6 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, true, true, true, true, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      checkClassifier0.setWordSeparators("");
      boolean[] booleanArray0 = checkClassifier0.canPredict(true, true, true, true, true, false, 0);
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      
      checkClassifier0.declaresSerialVersionUID();
      boolean[] booleanArray1 = checkClassifier0.updatingEquality(true, false, true, false, false, true, 0);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray1));
      
      boolean[] booleanArray2 = checkClassifier0.weightedInstancesHandler();
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray2));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(0, true, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumNominal(0);
      checkClassifier0.canHandleClassAsNthAttribute(true, false, false, true, true, false, 0, 0);
      checkClassifier0.setNumNumeric((-1552));
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, true, false, true, true, 1976, true, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -1549
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, false, false, false, false, false, (-2104));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2104' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ez");
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldAllThrowIOExceptions();
      checkClassifier0.multiInstanceHandler();
      String[] stringArray0 = new String[0];
      Utils.SMALL = 0.0;
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-44);
      byteArray0[0] = (byte) (-44);
      checkClassifier0.setNumNominal((byte) (-44));
      checkClassifier0.testToString();
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte) (-1);
      checkClassifier0.setNumNumeric((byte) (-123));
      byteArray0[4] = (byte)23;
      byteArray0[5] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      checkClassifier0.updateableClassifier();
      checkClassifier0.testToString();
      checkClassifier0.declaresSerialVersionUID();
      checkClassifier0.listOptions();
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, false, (byte) (-123));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-123' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte) (-40);
      byteArray0[3] = (byte)2;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      checkClassifier0.setDebug(true);
      checkClassifier0.setWordSeparators("");
      checkClassifier0.getRevision();
      boolean boolean1 = false;
      boolean boolean2 = false;
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      checkClassifier0.getClassifier();
      boolean boolean3 = true;
      checkClassifier0.canTakeOptions();
      checkClassifier0.canPredict(false, true, true, true, false, true, 0);
      checkClassifier0.canPredict(false, true, true, true, true, false, 0);
      checkClassifier0.getClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleNClasses(true, true, false, true, false, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: null
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "serialVersionUID...";
      stringArray0[1] = "Failed to instantiate class for classification output: ";
      stringArray0[2] = "=";
      stringArray0[3] = "pfNa~=K_$t,O[u";
      CheckClassifier.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      boolean boolean0 = false;
      checkClassifier0.getOptions();
      String string0 = "Here are the datasets:\n";
      checkClassifier0.getRevision();
      checkClassifier0.canHandleZeroTraining(true, false, false, false, true, false, 3);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = null;
      try { 
        checkClassifier0.makeTestDataset(4714, (-1312), (-1312), (-4239), 34, (-1312), 4714, 2754, 1976, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2114
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
