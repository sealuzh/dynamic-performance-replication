/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 07:56:41 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-42);
      byteArray0[3] = (byte) (-42);
      TiffField tiffField0 = new TiffField((byte) (-42), 125, fieldTypeRational0, 1814L, 6504L, byteArray0, byteOrder0, (byte) (-42));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals((-42), tiffField0.getTag());
      assertEquals(6504, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-42);
      TiffField tiffField0 = new TiffField((byte) (-42), 125, fieldTypeRational0, 1814L, 6504L, byteArray0, byteOrder0, (byte) (-42));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-42), tiffField0.getTag());
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(6504, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-792), (-792), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-792));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-792), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-792), tiffField0.getSortHint());
      assertEquals((-792), tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-460), (-460), fieldTypeRational0, 0L, 1814L, byteArray0, byteOrder0, (byte)3);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-460), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1814, tiffField0.getOffset());
      assertEquals((-460), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(324, 1, fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (-91));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getTag());
      assertEquals((-91), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-810), fieldTypeShort0, 3652L, (-357L), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-357), tiffField0.getOffset());
      assertEquals((-810), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-4466), "~^cfADk");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(65535, (-4466), fieldTypeByte0, 65535, (-2563L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(65535, int0);
      assertEquals((-4466), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2563), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-447), "RelatedImageFileFormat");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)27;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-447), (-1877), fieldTypeAscii0, 225L, 1042L, byteArray0, byteOrder0, (byte) (-64));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals((-447), tiffField0.getTag());
      assertEquals((-64), tiffField0.getSortHint());
      assertEquals((-1877), tiffField0.getDirectoryType());
      assertEquals(1042, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 3L, (-3152L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3152), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-506), 3432, fieldTypeFloat0, 0L, 1L, byteArray0, byteOrder0, (byte)121);
      int int0 = tiffField0.getSortHint();
      assertEquals(121, int0);
      assertEquals((-506), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3432, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte) (-12));
      tiffField0.getOffset();
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getTag());
      assertEquals((-12), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 2, fieldTypeByte0, 1L, (-3075L), byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getOffset();
      assertEquals(288, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-3075), int0);
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34850, 0, fieldTypeShort0, 34850, (-2948L), byteArray0, byteOrder0, (byte)85);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, int0);
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(34850, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2948), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-1771), 1186, fieldTypeByte0, 1L, (-748L), byteArray0, byteOrder0, 33723);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1186, tiffField0.getDirectoryType());
      assertEquals((-1771), tiffField0.getTag());
      assertEquals((-748), tiffField0.getOffset());
      assertEquals(33723, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-659), fieldTypeShort0, 1L, (-4816L), byteArray0, byteOrder0, (-659));
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-659), tiffField0.getDirectoryType());
      assertEquals((-4816), tiffField0.getOffset());
      assertEquals((-659), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 1027, fieldTypeLong0, 1L, 5776L, byteArray0, byteOrder0, (byte)123);
      tiffField0.getIntValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(1027, tiffField0.getDirectoryType());
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(5776, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      TiffField tiffField0 = new TiffField(34027, 1747, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-2680));
      tiffField0.getIntValue();
      assertEquals(34027, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1747, tiffField0.getDirectoryType());
      assertEquals((-2680), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-7), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeByte0, 6L, (-7), byteArray0, byteOrder0, 761);
      tiffField0.getFieldTypeName();
      assertEquals((-7), tiffField0.getOffset());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getTag());
      assertEquals(761, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      tiffField0.getFieldTypeName();
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getSortHint());
      assertEquals(288, tiffField0.getTag());
      assertEquals(288, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1248, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145346848, 2106965088, fieldTypeByte0, 2145346848, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2106965088, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2145346848, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-724), (-1), (FieldType) null, (-1), (-724), byteArray0, byteOrder0, 48);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-724), tiffField0.getOffset());
      assertEquals((-724), tiffField0.getTag());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "d=QQ+");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4368), fieldTypeFloat0, (-4368), 504L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(504, tiffField0.getOffset());
      assertEquals((-4368), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "xF@@gRSKcDoB~qo}Mz)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-829), 932, fieldTypeFloat0, 2859L, 1L, (byte[]) null, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(932, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-829), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)3;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)3, 37397, fieldTypeShort0, 1L, 37397, byteArray0, byteOrder0, (byte)3);
      tiffField0.getDoubleValue();
      assertEquals(37397, tiffField0.getOffset());
      assertEquals(37397, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      TiffField tiffField0 = new TiffField(34027, 1747, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-2680));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2680), tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(1747, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeRational0.SHORT, 0L, (-460), byteArray0, byteOrder0, (byte)3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, int0);
      assertEquals((-460), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-460), (-460), fieldTypeRational0, 0L, 1814L, byteArray0, byteOrder0, (byte)3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-460), int0);
      assertEquals(1814, tiffField0.getOffset());
      assertEquals((-460), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 3777, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getSortHint());
      assertEquals(3777, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50942, 50942, fieldTypeByte0, (-1L), (-1), byteArray0, (ByteOrder) null, 1699);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50942, tiffField0.getTag());
      assertEquals(1699, tiffField0.getSortHint());
      assertEquals(50942, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-532), (-532), fieldTypeDouble0, 0L, 1838L, byteArray0, byteOrder0, (byte)24);
      tiffField0.getBytesLength();
      assertEquals((-532), tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-532), tiffField0.getTag());
      assertEquals(1838, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1056), 0, fieldTypeByte0, (-1056), 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals((-1056), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(68, 65535, fieldTypeByte0, 1083, (byte)1, byteArray0, byteOrder0, 68);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      tiffField0.getByteArrayValue();
      assertEquals(288, tiffField0.getTag());
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getSortHint());
      assertEquals(288, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      MockFile mockFile0 = new MockFile("'El cVPN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(288, tiffField0.getSortHint());
      assertEquals(288, tiffField0.getTag());
      assertEquals(41L, mockFile0.length());
      assertEquals(288, tiffField0.getOffset());
      assertEquals(288, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 3777, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      MockFileWriter mockFileWriter0 = new MockFileWriter(", fieldType: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(3777, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeDouble0, 1, (-3554L), byteArray0, byteOrder0, (-2803));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 972, fieldTypeShort0, (-1), 972, byteArray0, byteOrder0, (-1979));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)50, (byte)0, fieldTypeShort0, (byte) (-102), 976L, byteArray0, (ByteOrder) null, 753);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeLong0, (-2147483648L), (-1L), byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeDouble0, 1, (-3554L), byteArray0, byteOrder0, (-2803));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "xF@@gRSKcDoB~qo}Mz)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-829), 932, fieldTypeFloat0, 2859L, 1L, (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "!h(,f@L;8vjJ^7d2w_0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(206, 0, fieldTypeFloat0.DOUBLE, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)4);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cn(}I6~g|(Ssm");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)59, 206, fieldTypeFloat0, 0L, (byte) (-33), byteArray0, byteOrder0, 2147420451);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Cn(}I6~g|(Ssm");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(206, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getTag());
      assertEquals(2147420451, tiffField0.getSortHint());
      assertEquals((-33), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-508), 50, fieldTypeRational0, 1061L, 50, byteArray0, (ByteOrder) null, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-508), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "{.ab");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-1L), 0, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(324, 1, fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (-91));
      tiffField0.getByteArrayValue();
      assertEquals((-91), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3016, 3016, fieldTypeLong0, 288, 4L, byteArray0, byteOrder0, 288);
      tiffField0.getFieldType();
      assertEquals(3016, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(3016, tiffField0.getTag());
      assertEquals(288, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 0, fieldTypeByte0, 19, 0, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      tiffField0.getValue();
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals((-455), tiffField0.getDirectoryType());
      assertEquals((-4685), tiffField0.getOffset());
      assertEquals((-455), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2777, 625, fieldTypeLong0.ASCII, 2777, 2777, byteArray0, byteOrder0, 2777);
      tiffField0.getTagInfo();
      assertEquals(2777, tiffField0.getSortHint());
      assertEquals(2777, tiffField0.getOffset());
      assertEquals(625, tiffField0.getDirectoryType());
      assertEquals(2777, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3990), 1054, fieldTypeRational0, 1429L, 0L, byteArray0, (ByteOrder) null, 1717986918);
      int int0 = tiffField0.getTag();
      assertEquals((-3990), int0);
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1054, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      tiffField0.getCount();
      assertEquals((-455), tiffField0.getTag());
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals((-455), tiffField0.getDirectoryType());
      assertEquals((-4685), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "Saturation");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 634, fieldTypeDouble0, 50, 634, byteArray0, (ByteOrder) null, 712);
      tiffField0.getBytesLength();
      assertEquals(634, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(712, tiffField0.getSortHint());
      assertEquals(634, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-508), 50, fieldTypeRational0, 1061L, 50, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals("-508 (0xfffffe04: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-792), (-792), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-792));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-792), tiffField0.getTag());
      assertEquals((-792), tiffField0.getDirectoryType());
      assertEquals((-792), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3990), 1054, fieldTypeRational0, 1429L, 0L, byteArray0, (ByteOrder) null, 1717986918);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte) (-12));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@b491b for: 288 (0x120: FreeOffsets): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)88, 0, fieldTypeLong0, 255L, (-2147483648L), byteArray0, byteOrder0, (byte)88);
      tiffField0.getIntValueOrArraySum();
      assertEquals(88, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2136240278, (byte) (-42), fieldTypeRational0, 1814L, 255L, byteArray0, byteOrder0, (-2146879547));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2927, 0, fieldTypeDouble0, (byte)0, (byte)30, byteArray0, byteOrder0, (byte)13);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(2927, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[213];
      TiffField tiffField0 = new TiffField(48323, 48323, fieldTypeLong0.FLOAT, 48323, 249, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(48323, tiffField0.getDirectoryType());
      assertEquals(249, tiffField0.getOffset());
      assertEquals(48323, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)88, 0, fieldTypeLong0, 255L, (-2147483648L), byteArray0, byteOrder0, (byte)88);
      tiffField0.getDoubleArrayValue();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(88, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(840, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2146879572), (-1), fieldTypeShort0, 21L, 840, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(840, tiffField0.getOffset());
      assertEquals((-2146879572), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(37388, 2, fieldTypeRational0, 255L, (byte)3, byteArray0, byteOrder0, (-3620));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(3, tiffField0.getOffset());
      assertEquals(37388, tiffField0.getTag());
      assertEquals((-3620), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, (byte) (-42), fieldTypeRational0, 1, 1931, byteArray0, byteOrder0, 58);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(1931, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 0L, byteArray0, byteOrder0, 288);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@65757751 for: 288 (0x120: FreeOffsets): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeLong0, (-2147483648L), (-1L), byteArray0, byteOrder0, (byte)13);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34850, 0, fieldTypeShort0, 34850, (-2948L), byteArray0, byteOrder0, (byte)85);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(69700, tiffField0.getBytesLength());
      assertEquals(34850, tiffField0.getTag());
      assertEquals((-2948), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 0, fieldTypeByte0, 19, 0, byteArray0, byteOrder0, 19);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@595a0ff0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1186, 303, fieldTypeRational0, 542L, (-460), byteArray0, byteOrder0, 365);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 2001, fieldTypeByte0, 1L, (-59L), byteArray0, byteOrder0, (-1116));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1116), tiffField0.getSortHint());
      assertEquals(2001, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-59), tiffField0.getOffset());
      assertEquals(288, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      tiffField0.getIntArrayValue();
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-455), tiffField0.getTag());
      assertEquals((-4685), tiffField0.getOffset());
      assertEquals((-455), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3701), "/E[w[");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3701), (-3701), fieldTypeFloat0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(288, "RelatedImageFileFormat");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-232), 2135212312, fieldTypeAscii0, 178L, 288, byteArray0, byteOrder0, (-232));
      String string0 = tiffField0.getStringValue();
      assertEquals((-232), tiffField0.getTag());
      assertEquals(178, tiffField0.getBytesLength());
      assertEquals(2135212312, tiffField0.getDirectoryType());
      assertEquals((-232), tiffField0.getSortHint());
      assertEquals(288, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3990), 1054, fieldTypeRational0, 1429L, 0L, byteArray0, (ByteOrder) null, 1717986918);
      String string0 = tiffField0.getTagName();
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1429L, tiffField0.getCount());
      assertEquals("Unknown Tag (0xfffff06a)", string0);
      assertEquals(1054, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      String string0 = tiffField0.getTagName();
      assertEquals(288, tiffField0.getOffset());
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getTag());
      assertEquals(288, tiffField0.getSortHint());
      assertEquals("FreeOffsets", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[213];
      TiffField tiffField0 = new TiffField(48323, 48323, fieldTypeLong0.FLOAT, 48323, 249, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(48323, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(48323, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(48323L, tiffField0.getCount());
      assertEquals(249, tiffField0.getOffset());
      assertEquals(193292, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[68];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(154, 154, fieldTypeLong0.BYTE, 154, 154, byteArray0, byteOrder0, 3231);
      String string0 = tiffField0.toString();
      assertEquals(3231, tiffField0.getSortHint());
      assertEquals(154, tiffField0.getOffset());
      assertEquals("154 (0x9a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (68) (154 Byte)", string0);
      assertEquals(154, tiffField0.getDirectoryType());
      assertEquals(154, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50685, 50685, fieldTypeLong0.DOUBLE, 50685, 50685, byteArray0, byteOrder0, 50685);
      String string0 = tiffField0.toString();
      assertEquals("50685 (0xc5fd: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (50685 Double)", string0);
      assertEquals(50685, tiffField0.getOffset());
      assertEquals(50685, tiffField0.getDirectoryType());
      assertEquals(50685, tiffField0.getSortHint());
      assertEquals(405480, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)109, (byte)109, fieldTypeLong0, (byte)109, 225L, byteArray0, byteOrder0, (byte)109);
      String string0 = tiffField0.toString();
      assertEquals("109 (0x6d: Unknown Tag): 0, 0, 0 (109 IFD)", string0);
      assertEquals(109, tiffField0.getSortHint());
      assertEquals(109, tiffField0.getDirectoryType());
      assertEquals(225, tiffField0.getOffset());
      assertEquals(436, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[111];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65550, 65550, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).FLOAT).SHORT, 65550, 65550, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65550, tiffField0.getDirectoryType());
      assertEquals(65550, tiffField0.getTag());
      assertEquals(65550L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(131100, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65550, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(3816, 3816, fieldTypeShort0, 3816, 3816, byteArray0, byteOrder0, 3816);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3816, tiffField0.getOffset());
      assertEquals(7632, tiffField0.getBytesLength());
      assertEquals(3816, tiffField0.getTag());
      assertEquals(3816, tiffField0.getSortHint());
      assertEquals(3816L, tiffField0.getCount());
      assertEquals(3816, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2777, 625, fieldTypeLong0.ASCII, 2777, 2777, byteArray0, byteOrder0, 2777);
      tiffField0.toString();
      assertEquals(2777L, tiffField0.getCount());
      assertEquals(625, tiffField0.getDirectoryType());
      assertEquals(2777, tiffField0.getOffset());
      assertEquals(2777, tiffField0.getSortHint());
      assertEquals(2777, tiffField0.getTag());
      assertEquals(2777, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(288, "RelatedImageFileFormat");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-232), 2135212312, fieldTypeAscii0, 178L, 288, byteArray0, byteOrder0, (-232));
      tiffField0.dump();
      assertEquals(178, tiffField0.getBytesLength());
      assertEquals(288, tiffField0.getOffset());
      assertEquals((-232), tiffField0.getSortHint());
      assertEquals((-232), tiffField0.getTag());
      assertEquals(178L, tiffField0.getCount());
      assertEquals(2135212312, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3701), "/E[w[");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3701), (-3701), fieldTypeFloat0, 1L, 0L, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.toString();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-3701), tiffField0.getDirectoryType());
      assertEquals((-3701), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(324, 1, fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, (-91));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-91), tiffField0.getSortHint());
      assertEquals(324, tiffField0.getTag());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 3777, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3563), 3777);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(3777, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-508), 50, fieldTypeRational0, 1061L, 50, byteArray0, (ByteOrder) null, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50L, tiffElement0.offset);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-508), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(1061L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40960, 40960, (FieldType) null, (-1L), (-1L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, 288, 288, byteArray0, byteOrder0, 288);
      int int0 = tiffField0.getOffset();
      assertEquals(288, tiffField0.getTag());
      assertEquals(288, tiffField0.getSortHint());
      assertEquals(288, int0);
      assertEquals(288, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1801L), (-1801L), byteArray0, byteOrder0, (-2176));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1801), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2176), int0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)28, (byte) (-1), fieldTypeFloat0, (byte)59, (byte) (-1), byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("RelatedImageFileFormat");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "#C");
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(59L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1462, 1462, fieldTypeLong0, 1462, 1462, byteArray0, byteOrder0, 157);
      String string0 = tiffField0.toString();
      assertEquals(1462, tiffField0.getOffset());
      assertEquals(1462, tiffField0.getDirectoryType());
      assertEquals("1462 (0x5b6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (1462 IFD)", string0);
      assertEquals(5848, tiffField0.getBytesLength());
      assertEquals(157, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 3777, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3563), 3777);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: ColorMatrix2, fieldType: KG;TChh[ ", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3777, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }
}
