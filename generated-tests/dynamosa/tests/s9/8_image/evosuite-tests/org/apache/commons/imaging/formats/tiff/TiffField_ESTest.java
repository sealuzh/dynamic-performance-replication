/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 18:48:47 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1339, fieldTypeFloat0, 1L, 1339, byteArray0, byteOrder0, (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1339, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1339, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)108, fieldTypeShort0, (byte)108, (byte)108, byteArray0, byteOrder0, 65535);
      tiffField0.getValue();
      assertEquals(108, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(216, tiffField0.getBytesLength());
      assertEquals(108, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(324, 29, fieldTypeShort0, 1L, 2400L, byteArray0, byteOrder0, 6);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(324, tagInfo0.tag);
      assertEquals(2400, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)108, fieldTypeShort0, (byte)108, (byte) (-2), byteArray0, byteOrder0, (byte) (-2));
      int int0 = tiffField0.getTag();
      assertEquals((-2), tiffField0.getOffset());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(280, 1923, fieldTypeRational0, 1320L, 1320L, byteArray0, byteOrder0, 287);
      int int0 = tiffField0.getTag();
      assertEquals(1923, tiffField0.getDirectoryType());
      assertEquals(1320, tiffField0.getOffset());
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(280, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-143), "AAS:T UK_");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)72;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte) (-11);
      TiffField tiffField0 = new TiffField(1, 2768, fieldTypeAscii0, 206L, 206L, byteArray0, byteOrder0, (byte)122);
      String string0 = tiffField0.getStringValue();
      assertEquals(206, tiffField0.getBytesLength());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(206, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2768, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146006721), (-2146006721), fieldTypeShort0, 4310L, 1340L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-2146006721), tiffField0.getDirectoryType());
      assertEquals((-2146006721), tiffField0.getTag());
      assertEquals(1340, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-505), 1932, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).ASCII).BYTE, 2181L, 2160, byteArray0, byteOrder0, (-2131337153));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2131337153), int0);
      assertEquals(1932, tiffField0.getDirectoryType());
      assertEquals(2160, tiffField0.getOffset());
      assertEquals((-505), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), 1, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)108);
      tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals((-2), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1031, 1191, fieldTypeFloat0, 1191, (-1021L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals((-1021), int0);
      assertEquals(1191, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1031, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)108;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), 1, fieldTypeShort0, 6196L, (byte)0, byteArray0, byteOrder0, (byte)108);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals((-2), tiffField0.getTag());
      assertEquals(12392, tiffField0.getBytesLength());
      assertEquals(27648, int0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-46);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (-400), fieldTypeLong0, (byte)46, (byte) (-46), byteArray0, byteOrder0, (-655));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-655), tiffField0.getSortHint());
      assertEquals((-58), tiffField0.getTag());
      assertEquals((-400), tiffField0.getDirectoryType());
      assertEquals((-46), tiffField0.getOffset());
      assertEquals(184, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-487), (-487), fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-487), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-487), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-46);
      TiffField tiffField0 = new TiffField((byte) (-46), 2144842216, fieldTypeLong0, 1L, 4L, byteArray0, (ByteOrder) null, 50);
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-46), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2144842216, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-108);
      TiffField tiffField0 = new TiffField((byte)23, (byte)67, fieldTypeByte0, 1L, (byte)67, byteArray0, (ByteOrder) null, (byte)67);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(772, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2800), 3129, fieldTypeFloat0, (byte)111, 4734L, byteArray0, byteOrder0, 611);
      tiffField0.getFieldTypeName();
      assertEquals(4734, tiffField0.getOffset());
      assertEquals(611, tiffField0.getSortHint());
      assertEquals((-2800), tiffField0.getTag());
      assertEquals(3129, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2781, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2781, 2781, fieldTypeRational0, 2781, 2781, byteArray0, byteOrder0, 9);
      tiffField0.getFieldTypeName();
      assertEquals(2781, tiffField0.getTag());
      assertEquals(2781, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(2781, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1110), 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, (byte) (-35));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-35), tiffField0.getSortHint());
      assertEquals((-1110), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (-400), fieldTypeLong0, (byte)46, (-1L), byteArray0, byteOrder0, (-655));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-655), tiffField0.getSortHint());
      assertEquals((-400), tiffField0.getDirectoryType());
      assertEquals((-58), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-918), "SecurityClassification");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeDouble0, (-918), 34028, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(34028, tiffField0.getDirectoryType());
      assertEquals(34028, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(34028, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      TiffField tiffField0 = new TiffField((byte)32, (byte)67, fieldTypeByte0, 1L, (byte)67, byteArray0, (ByteOrder) null, (byte)67);
      tiffField0.getDoubleValue();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-121);
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (byte) (-121));
      tiffField0.getDoubleValue();
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, (-1684L), byteArray0, byteOrder0, (-1406));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-1406), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1684), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-68), (-133), fieldTypeShort0.ASCII, 3130L, 255L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-133), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-28), 1, fieldTypeShort0, (byte)0, (-816L), byteArray0, byteOrder0, (-2131337153));
      tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-28), tiffField0.getTag());
      assertEquals((-816), tiffField0.getOffset());
      assertEquals((-2131337153), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " (");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-68), 1, fieldTypeDouble0, 5191L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 0, fieldTypeDouble0.SBYTE, 0L, 0, byteArray0, byteOrder0, (-179));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-179), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(321, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2131337153), (-2769), fieldTypeShort0, (-491L), (byte)0, byteArray0, byteOrder0, 1324);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2769), tiffField0.getDirectoryType());
      assertEquals(1324, tiffField0.getSortHint());
      assertEquals((-982), int0);
      assertEquals((-2131337153), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-487), (-487), fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals((-487), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-487), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)117, (byte)117, fieldTypeAscii0, (byte)117, (-2124L), byteArray0, byteOrder0, (byte)117);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-2124), tiffField0.getOffset());
      assertEquals(117, tiffField0.getTag());
      assertEquals(117, byteArray1.length);
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), 1, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)108);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(805, (byte)0, fieldTypeShort0, 611, 805, byteArray0, byteOrder0, (byte) (-89));
      MockPrintStream mockPrintStream0 = new MockPrintStream("@F1ThJO");
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockPrintStream0, charset0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(805, tiffField0.getTag());
      assertEquals(1222, tiffField0.getBytesLength());
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(805, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(533, 533, fieldTypeShort0, 533, 533, (byte[]) null, byteOrder0, 533);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2189), (-2189), fieldTypeFloat0.SHORT, (-2189), (-2189), byteArray0, byteOrder0, (-2189));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(63, 3098, (FieldType) null, 3098, 3098, byteArray0, byteOrder0, (-669));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)117, (byte)117, fieldTypeRational0, (byte)117, (byte)117, (byte[]) null, byteOrder0, (byte)117);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[70];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1610612735), (-1610612735), fieldTypeFloat0, (-1610612735), (-1610612735), byteArray0, byteOrder0, (-1610612735));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)59, (byte)59, fieldTypeRational0, 1L, (byte)59, byteArray0, byteOrder0, (byte)59);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 1157, fieldTypeRational0, (-40L), 1157, (byte[]) null, byteOrder0, 40093);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-7), fieldTypeRational0, (byte) (-7), (byte) (-7), byteArray0, byteOrder0, (byte) (-7));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)50, 262, fieldTypeLong0, 1L, 962L, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(533, 533, fieldTypeShort0, 533, 533, (byte[]) null, byteOrder0, 533);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1604), (-1604), fieldTypeShort0, (-1604), (-1604), byteArray0, byteOrder0, (-1604));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)93, 1, fieldTypeRational0, 1, (byte)93, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33922, 33922, (FieldType) null, 33922, 33922, (byte[]) null, byteOrder0, 33922);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeAscii0, 772, 772, (byte[]) null, byteOrder0, 772);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-21), (-21), fieldTypeShort0, (-21), (-21), byteArray0, byteOrder0, (-21));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (-1268), fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeAscii0, 772, 40095, byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2557, 2557, fieldTypeShort0, 2557, 2557, (byte[]) null, byteOrder0, 2557);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3192), (-3192), fieldTypeAscii0, (-3192), (-3192), byteArray0, byteOrder0, (-3192));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeAscii0, 772, 772, byteArray0, byteOrder0, 772);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(49, (byte)115, fieldTypeRational0, 1L, 49, byteArray0, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-476), (-476), fieldTypeShort0, (-476), (-476), (byte[]) null, byteOrder0, (-476));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-18), (-18), fieldTypeShort0, (-18), (-18), byteArray0, byteOrder0, (-18));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147359062, (FieldType) null, 778, (-1489L), byteArray0, byteOrder0, 2147359062);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(27, (-376), fieldTypeShort0, 27, (-376), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeShort0, 34, 34, (byte[]) null, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-101), (byte) (-101), fieldTypeRational0, (byte) (-101), (byte) (-101), byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33922, 33922, (FieldType) null, 33922, 33922, (byte[]) null, byteOrder0, 33922);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-21), (byte) (-21), fieldTypeRational0, (byte) (-21), (byte) (-21), byteArray0, byteOrder0, (byte) (-21));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 3321, fieldTypeRational0, 1, 3321, byteArray0, byteOrder0, 3321);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)56, (-1884), fieldTypeRational0, (-1884), (byte)56, byteArray0, byteOrder0, (-1884));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("JpgFromRawLength");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)49, (byte)49, fieldTypeRational0, 1L, (byte)49, byteArray0, byteOrder0, 50781);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Unknown: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(17, (byte)47, fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (byte)47);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2356, 2356, fieldTypeRational0, 2356, 2356, (byte[]) null, byteOrder0, 2356);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-6), (-6), fieldTypeShort0, (-6), (-6), byteArray0, byteOrder0, (-6));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)49, 42032, fieldTypeRational0, 1L, 42032, byteArray0, byteOrder0, (byte)49);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1425, (byte)0, fieldTypeByte0, (byte)23, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(785, 785, fieldTypeShort0, 785, 785, byteArray0, byteOrder0, 785);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(785, tiffField0.getOffset());
      assertEquals(785, tiffField0.getSortHint());
      assertEquals(785, tiffField0.getTag());
      assertEquals(785, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)23, (byte)67, fieldTypeByte0, 1L, (byte)67, byteArray0, (ByteOrder) null, (byte)67);
      tiffField0.getByteOrder();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)72, (byte)72, fieldTypeRational0, (byte)72, (-43336L), (byte[]) null, byteOrder0, (byte)72);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), 1, fieldTypeShort0, 6212L, (byte)0, byteArray0, byteOrder0, (byte)108);
      tiffField0.getFieldType();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals((-2), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-10), 1, fieldTypeShort0, 6212L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals((-10), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)49, (byte)49, fieldTypeRational0, (byte)49, (byte)49, byteArray0, byteOrder0, (byte)49);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 3932, fieldTypeLong0, 3932, 3058L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(3058, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3932, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      tiffField0.getTagInfo();
      assertEquals((-2), tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getSortHint());
      assertEquals((-2), tiffField0.getTag());
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-376), 280, fieldTypeRational0, 255L, 255L, byteArray0, byteOrder0, 280);
      int int0 = tiffField0.getTag();
      assertEquals((-376), int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(280, tiffField0.getDirectoryType());
      assertEquals(280, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " (");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-75), 790, fieldTypeDouble0, (-75), 2147483647L, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getCount();
      assertEquals((-75), tiffField0.getTag());
      assertEquals(790, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, (byte)74, (byte)74, byteArray0, byteOrder0, (byte)74);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getOffset());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals("74 (0x4a: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)23, (byte) (-108), fieldTypeByte0, 1L, 1L, byteArray0, (ByteOrder) null, 2144842216);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2144842216, tiffField0.getSortHint());
      assertEquals((-108), tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(49, (byte)115, fieldTypeRational0, 1L, 49, byteArray0, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeAscii0, 772, 772, byteArray0, byteOrder0, 772);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5ba63943 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, (byte)74, (byte)74, byteArray0, byteOrder0, (byte)74);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeAscii0, 772, 772, byteArray0, byteOrder0, 772);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6c7ecfb5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeDouble0, 10, 10, byteArray0, byteOrder0, 10);
      tiffField0.getDoubleArrayValue();
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(527, 527, fieldTypeLong0, 527, 527, byteArray0, byteOrder0, 527);
      tiffField0.getDoubleArrayValue();
      assertEquals(527, tiffField0.getDirectoryType());
      assertEquals(527L, tiffField0.getCount());
      assertEquals(2108, tiffField0.getBytesLength());
      assertEquals(527, tiffField0.getSortHint());
      assertEquals(527, tiffField0.getTag());
      assertEquals(527, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeShort0, 10, 10, byteArray0, byteOrder0, 10);
      tiffField0.getDoubleArrayValue();
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(20, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, (byte)74, (byte)74, byteArray0, byteOrder0, (byte)74);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(74, tiffField0.getTag());
      assertEquals(74L, tiffField0.getCount());
      assertEquals(74, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(592, tiffField0.getBytesLength());
      assertEquals(74, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[83];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(530, 530, fieldTypeFloat0, 530, 530, byteArray0, byteOrder0, 530);
      tiffField0.getDoubleArrayValue();
      assertEquals(2120, tiffField0.getBytesLength());
      assertEquals(530, tiffField0.getOffset());
      assertEquals(530, tiffField0.getDirectoryType());
      assertEquals(530, tiffField0.getSortHint());
      assertEquals(530, tiffField0.getTag());
      assertEquals(530L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(772, 772, fieldTypeAscii0, 772, 772, byteArray0, byteOrder0, 772);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@22f6288b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)49, (byte)49, fieldTypeRational0, (byte)49, (byte)49, byteArray0, byteOrder0, (byte)49);
      tiffField0.getIntArrayValue();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(392, tiffField0.getBytesLength());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeShort0, 10, 10, byteArray0, byteOrder0, 10);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(10L, tiffField0.getCount());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(10, tiffField0.getOffset());
      assertEquals(20, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, (byte)74, (byte)74, byteArray0, byteOrder0, (byte)74);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)108, 48321, fieldTypeAscii0, 0L, (-1L), byteArray0, byteOrder0, (byte)108);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(48321, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@4702298a
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeShort0, 10, 10, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xa)", string0);
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50828, 50828, fieldTypeShort0, 50828, 50828, byteArray0, byteOrder0, 50828);
      String string0 = tiffField0.getTagName();
      assertEquals(50828, tiffField0.getOffset());
      assertEquals(50828, tiffField0.getSortHint());
      assertEquals("OriginalRawFileData", string0);
      assertEquals(50828, tiffField0.getDirectoryType());
      assertEquals(50828, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2611, 2611, fieldTypeShort0, 2611, 2611, byteArray0, byteOrder0, 2611);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "&Uc^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[364];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(318, 318, fieldTypeFloat0, 318, 318, byteArray0, byteOrder0, 35);
      String string0 = tiffField0.getValueDescription();
      assertEquals(318L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(318, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (91)", string0);
      assertEquals(318, tiffField0.getTag());
      assertEquals(318, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeFloat0, 16, 16, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.toString();
      assertEquals("16 (0x10: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (16 Float)", string0);
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(16, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeDouble0, 10, 10, byteArray0, byteOrder0, 10);
      tiffField0.dump();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(80, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[344];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)57, (byte)57, fieldTypeLong0, (byte)57, (byte)57, byteArray0, byteOrder0, (byte)57);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(57, tiffField0.getOffset());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57)", string0);
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getTag());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)117, (byte)117, fieldTypeLong0, (byte)117, (byte)117, byteArray0, byteOrder0, (byte)117);
      String string0 = tiffField0.toString();
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals("117 (0x75: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (117 SLong)", string0);
      assertEquals(117, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[114];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeFloat0.SHORT, 256L, 4, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.toString();
      assertEquals("4 (0x4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (256 Short)", string0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(512, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(101, 50879, fieldTypeFloat0.ASCII, 2624, 101, byteArray0, byteOrder0, (-331));
      tiffField0.dump();
      assertEquals(101, tiffField0.getTag());
      assertEquals((-331), tiffField0.getSortHint());
      assertEquals(2624L, tiffField0.getCount());
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(2624, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 26, fieldTypeRational0.ASCII, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.dump();
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-294), (-294), fieldTypeFloat0, (-294), (-377L), byteArray0, byteOrder0, (-294));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-294), tiffField0.getTag());
      assertEquals((-294), tiffField0.getDirectoryType());
      assertEquals((-294), tiffField0.getSortHint());
      assertEquals((-377), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(599, (-5021), fieldTypeFloat0.DOUBLE, 599, 15L, byteArray0, byteOrder0, 599);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-5021), 599);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-5021), tiffField0.getDirectoryType());
      assertEquals(599, tiffField0.getSortHint());
      assertEquals(599, tiffField0.getTag());
      assertEquals(15, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(599, (-5021), fieldTypeFloat0.DOUBLE, 599, 15L, byteArray0, byteOrder0, 599);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-5021), 599);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(599, tiffField0.getTag());
      assertEquals(15, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-5021), tiffField0.getDirectoryType());
      assertEquals(599, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)119, (byte)119, fieldTypeRational0, (byte)119, (byte)119, byteArray0, byteOrder0, (byte)119);
      tiffField0.getFieldTypeName();
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(119, tiffField0.getOffset());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(119, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147441397, 2147441397, fieldTypeShort0.ASCII, 4310L, 2147441397, byteArray0, byteOrder0, 2147441397);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147441397, int0);
      assertEquals(2147441397, tiffField0.getDirectoryType());
      assertEquals(2147441397, tiffField0.getOffset());
      assertEquals(2147441397, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(27, (-199), fieldTypeRational0, (-199), 27, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-199), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField((-6), 91, fieldTypeFloat0.BYTE, 172L, 91, byteArray0, (ByteOrder) null, 91);
      tiffField0.dump();
      assertEquals(172L, tiffField0.getCount());
      assertEquals((-6), tiffField0.getTag());
      assertEquals(91, tiffField0.getDirectoryType());
      assertEquals(172, tiffField0.getBytesLength());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(91, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(97, 1, fieldTypeShort0, 1, (-634L), byteArray0, (ByteOrder) null, 97);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(97, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-634), tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeShort0, 10, 10, byteArray0, byteOrder0, 10);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10L, tiffElement0.offset);
      assertEquals(10, tiffField0.getDirectoryType());
  }
}
