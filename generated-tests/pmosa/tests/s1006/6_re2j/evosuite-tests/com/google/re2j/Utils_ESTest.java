/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 05:33:36 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      Utils.escapeRune(stringBuilder0, 13);
      assertEquals("i ?6\"nKF!=$\\r", stringBuilder0.toString());
      
      boolean boolean0 = Utils.isalnum(13);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utils.runeToString(0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "\u0000");
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 0);
      stringBuilder1.insert(0, (CharSequence) stringBuilder0);
      stringBuilder1.append(']');
      Utils.escapeRune(stringBuilder1, 0);
      Utils.isWordRune(0);
      Utils.isalnum((-785));
      Utils.runeToString(308);
      Utils.runeToString((-785));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte) (-124);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (byte) (-77), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      StringBuilder stringBuilder1 = new StringBuilder();
      Utils.escapeRune(stringBuilder1, 141);
      assertEquals("\\x8d", stringBuilder1.toString());
      
      String string0 = Utils.runeToString(2827);
      assertEquals("\u0B0B", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, (-3));
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (-3), 2380);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray1, 97);
      assertEquals(1, int0);
      
      boolean boolean0 = Utils.isalnum((byte)57);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte) (-86));
      int int1 = Utils.unhex(1463);
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 2891;
      Utils.unhex(2891);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)13;
      byteArray0[0] = (byte)13;
      int int1 = (-4168);
      int int2 = 1112;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (-4168), 1112);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utils.subarray(byteArray0, 0, 0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byte byte0 = (byte) (-67);
      byteArray1[1] = (byte) (-67);
      byteArray1[2] = (byte)4;
      byteArray1[3] = (byte) (-98);
      byte byte1 = (byte)47;
      byteArray1[4] = (byte)47;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)48;
      byteArray1[7] = (byte)0;
      byteArray1[8] = (byte)61;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray1, (-4990), 90);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("*#<\"}LU+c6HR1rO)");
      int[] intArray0 = new int[0];
      int[] intArray1 = Utils.subarray(intArray0, 324, 324);
      assertNotSame(intArray1, intArray0);
      assertArrayEquals(new int[] {}, intArray1);
      
      String string0 = Utils.runeToString(2);
      assertEquals("\u0002", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.EMPTY_END_LINE;
      boolean boolean0 = Utils.isalnum(2);
      assertFalse(boolean0);
      
      int int1 = Utils.emptyOpContext(2, 0);
      assertEquals(32, int1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utils.runeToString(0);
      Utils.emptyOpContext((-185), 4944);
      Utils.isWordRune(1071);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (byte)0, (-1522));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utils.isalnum(0);
      int[] intArray0 = Utils.stringToRunes("VcAwr[[o-");
      int[] intArray1 = Utils.stringToRunes("MD_xTp,q$*5O'(/DW:.");
      assertFalse(intArray1.equals((Object)intArray0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.delete(0, 0);
      Utils.escapeRune(stringBuilder1, 0);
      assertEquals("\\x00", stringBuilder1.toString());
      
      boolean boolean0 = Utils.isalnum(141);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 731;
      Utils.isalnum(731);
      int int1 = (-71);
      Utils.isWordRune((-71));
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utils.isWordRune(0);
      Utils.unhex(0);
      Utils.runeToString((-1));
      Utils.isalnum(0);
      int[] intArray0 = Utils.stringToRunes("Other_ID_Continue");
      Utils.isalnum(11379);
      int[] intArray1 = Utils.subarray(intArray0, 0, 0);
      Utils.subarray(intArray1, 0, 0);
      Utils.unhex(0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)32;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (-1), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-86);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte) (-15));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-106);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)0);
      assertEquals(0, int0);
      
      int int1 = Utils.unhex(930);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 70;
      Utils.emptyOpContext(70, 70);
      Utils.isWordRune(3526);
      int[] intArray0 = Utils.stringToRunes("Sm");
      Utils.runeToString(3526);
      Utils.isalnum(70);
      int int1 = (-3476);
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 0, (-3476));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 57;
      Utils.emptyOpContext(137, 57);
      Utils.emptyOpContext(16, 57);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(false);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(16, (float) 16);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 16
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-9);
      Utils.indexOf(byteArray0, byteArray0, (byte)0);
      Utils.unhex(2366);
      Utils.emptyOpContext(43394, 3530);
      Utils.unhex(919);
      Utils.emptyOpContext((byte)0, 102);
      int int0 = 3297;
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, 4, 3297);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      Utils.indexOf(byteArray0, byteArray0, (byte)125);
      Utils.indexOf(byteArray0, byteArray0, (byte)10);
      boolean boolean0 = Utils.isWordRune((byte)0);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)0);
      assertEquals(0, int0);
      
      int int1 = Utils.unhex((-1));
      assertEquals((-1), int1);
      
      boolean boolean1 = Utils.isWordRune(394);
      assertTrue(boolean1 == boolean0);
      
      int int2 = Utils.indexOf(byteArray0, byteArray0, 4);
      assertFalse(int2 == int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Utils.stringToRunes("\\");
      Utils.isWordRune((-637));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-100);
      byte byte0 = (byte)19;
      byteArray0[1] = (byte)19;
      byte byte1 = (byte)35;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-77);
      byteArray1[1] = (byte) (-15);
      byteArray1[2] = (byte) (-77);
      byteArray1[3] = (byte) (-77);
      byteArray1[4] = (byte) (-77);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte) (-15));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-77);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte)0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Utils.stringToRunes("W@4|MX4t1M~");
      StringBuilder stringBuilder0 = new StringBuilder("Des}r9.t");
      StringBuilder stringBuilder1 = stringBuilder0.append(1.0F);
      stringBuilder1.insert(0, (-579.7447104));
      Utils.escapeRune(stringBuilder1, (-496));
      assertEquals("-579.7447104Des}r9.t1.0\\xfffffe10", stringBuilder1.toString());
      assertEquals("-579.7447104Des}r9.t1.0\\xfffffe10", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-15);
      byteArray0[0] = (byte) (-15);
      byteArray0[5] = (byte) (-77);
      byteArray0[5] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-77);
      byteArray1[1] = (byte) (-15);
      byteArray1[2] = (byte) (-77);
      byteArray0[0] = (byte) (-77);
      byteArray1[4] = (byte) (-77);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte) (-15));
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isalnum(34);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-15);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-77);
      byteArray1[1] = (byte) (-15);
      byteArray1[3] = (byte) (-77);
      int int0 = Utils.indexOf(byteArray0, byteArray1, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, 0.0);
      Utils.escapeRune(stringBuilder1, 917759);
      int[] intArray0 = Utils.stringToRunes("i ?6\"nKF!=$");
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("2@V?#Fzs}8$R");
      Utils.escapeRune(stringBuilder0, 10);
      Utils.escapeRune(stringBuilder0, 34);
      int[] intArray0 = new int[2];
      intArray0[0] = 10;
      intArray0[1] = 10;
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 34, 10);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("2@V?#Fzs}8$R");
      Utils.escapeRune(stringBuilder0, 10);
      stringBuilder0.insert(10, true);
      Utils.escapeRune(stringBuilder0, 34);
      Utils.escapeRune(stringBuilder0, 8);
      assertEquals("2@V?#Fzs}8true$R\\n\"\\b", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("i ?6\"nKF!=$");
      Utils.escapeRune(stringBuilder0, 9);
      StringBuilder stringBuilder1 = stringBuilder0.append((float) 10);
      Utils.escapeRune(stringBuilder1, 10);
      assertEquals("i ?6\"nKF!=$\\t10.0\\n", stringBuilder1.toString());
      assertEquals("i ?6\"nKF!=$\\t10.0\\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 12);
      assertEquals("\\f", stringBuilder0.toString());
      
      boolean boolean0 = Utils.isalnum((-274));
      assertFalse(boolean0);
  }
}
