/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:02:56 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Signature;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "_cp.htl\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"";
      Class2HTML.toHTML("_cp.htl\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_cp.htl\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\n&lt;FRAME NAME=\"Attributes\" SRC=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = Class2HTML.toHTML("_cp.htl\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"\n<FRAME NAME=\"Attributes\" SRC=\"");
      assertEquals("_cp.htl\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"\\n&lt;FRAME NAME=\"Attributes\" SRC=\"", string0);
      
      String string1 = Class2HTML.referenceType("_cp.htl\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"\n<FRAME NAME=\"Attributes\" SRC=\"");
      assertEquals("<A HREF=\"_cp.htl\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"\n<FRAME NAME=\"Attributes\" SRC=\".html\" TARGET=_top>_cp.htl\" MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"\n<FRAME NAME=\"Attributes\" SRC=\"</A>", string1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = Class2HTML.referenceType("hsG)[zD5[:4P");
      assertEquals("<A HREF=\"hsG).html\" TARGET=_top>hsG)[zD5[:4P</A>", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class2HTML.referenceType("'</B></P>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassPath classPath0 = new ClassPath("jQ!zN@3Dvf.o3-[");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      javaClass0.isFinal(true);
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "jQ!zN@3Dvf.o3-[");
      Pattern.quote("<A HREF=\"'</B></P>.html\" TARGET=_top>'<.B><.P></A>");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "'</B></P>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String[] stringArray1 = new String[0];
      Class2HTML.main(stringArray1);
      String string0 = Class2HTML.referenceType("''vl:Xj|& vuzqhC31");
      assertEquals("<A HREF=\"''vl:Xj|& vuzqhC31.html\" TARGET=_top>''vl:Xj|& vuzqhC31</A>", string0);
      
      String string1 = Class2HTML.referenceType("boolean");
      assertEquals("<FONT COLOR=\"#00FF00\">boolean</FONT>", string1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-";
      stringArray0[2] = "-";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class2HTML.referenceType("_cp.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<FRAME NAME=\"Attributes\" SRC=\"");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class2HTML.toHTML("idiv");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/SimpleElementValue doesnt know how to write out type SimpleElementValue doesnt know how to write out type _code.html");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      String[] stringArray0 = new String[5];
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      ClassLoaderRepository classLoaderRepository1 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository1.loadClass(class0);
      javaClass0.isFinal(true);
      javaClass0.setClassName("SimpleElementValue doesnt know how to write out type ");
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "SimpleElementValue doesnt know how to write out type ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "_";
      ClassPath classPath0 = new ClassPath("_");
      ClassPath classPath1 = new ClassPath("_");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath1);
      Class2HTML.toHTML("_");
      EvoSuiteFile evoSuiteFile0 = null;
      Pattern.quote("_");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_";
      stringArray0[1] = "_";
      stringArray0[2] = "-zip";
      stringArray0[3] = "int";
      stringArray0[4] = "_";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // int (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class2HTML.referenceType("'</></");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassPath classPath0 = new ClassPath("-d");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/-d");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-d");
      String string0 = File.pathSeparator;
      String string1 = "java.lang.reflect.AnnotatedElement";
      Pattern.quote("java.lang.reflect.AnnotatedElement");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "L0%48,+'&FJSLrwn7{";
      stringArray0[1] = "-d";
      stringArray0[2] = ":";
      stringArray0[3] = "-d";
      stringArray0[4] = "C!zN@Dv.V3-[";
      stringArray0[5] = "'</></";
      stringArray0[6] = "'</></";
      stringArray0[4] = "'</></";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
