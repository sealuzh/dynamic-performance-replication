/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 11:27:43 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(26);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-752), "m~jW337", "m~jW337", "m~jW337", "m~jW337");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter1.put(byteVector0);
      assertSame(fieldWriter1, fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(0);
      ByteVector byteVector2 = byteVector1.putShort(2);
      ByteVector byteVector3 = byteVector2.putByte(1);
      ByteVector byteVector4 = byteVector3.put12(2, 65535);
      fieldWriter0.put(byteVector4);
      assertSame(byteVector2, byteVector4);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.version = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("gB|&SsyVhBE\"", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "q\n}IAJiklo+]np", "q\n}IAJiklo+]np", "q\n}IAJiklo+]np", mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@5180f2bf
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = null;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "EnclosingMethod", (String) null, (Object) null);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(571);
      int int0 = 4096;
      ByteVector byteVector2 = byteVector0.putShort(4096);
      int int1 = (-1566);
      byteVector1.putByte((-1566));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)3;
      // Undeclared exception!
      try { 
        byteVector2.putByteArray(byteArray0, (-1566), (byte)3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("gB|&SsyVhBE\"", true);
      fieldWriter0.visitAnnotation("gB|&SsyVhBE\"", true);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "gB|&SsyVhBE\"", "WxtX/l5ef%~", "iqy\"J,8&osU%RqZ", "iqy\"J,8&osU%RqZ");
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      int int0 = fieldWriter1.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "gB|&SsyVhBE\"", "WxtX/l5ef%~", "iqy\"J,8&osU%RqZ", "iqy\"J,8&osU%RqZ");
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-752), "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"");
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(26);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2175), "m~jW337", "SourceFile", (String) null, "SourceFile");
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(1);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter1.put(byteVector0);
      fieldWriter1.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter1.visitAnnotation("SourceFile", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.version = (-752);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-752), "m~jW337", "m~jW337", "m~jW337", "m~jW337");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putByte(2);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
  }
}
