/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:43:31 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1644));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "b[K)f";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1644), "b[K)f", "b[K)f", "Seprecated", stringArray0, true, true);
      methodWriter0.visitFieldInsn(3088, "b[K)f", "b[K)f", "b[K)f");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)84;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 188);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 188
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1819;
      intArray0[1] = 2355;
      intArray0[2] = 1;
      intArray0[3] = 1754;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2355, (-2163));
      assertEquals((-10447), int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)34;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte)4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 99);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 99
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 46;
      intArray0[1] = 1163;
      intArray0[2] = 366;
      intArray0[3] = 74;
      intArray0[4] = (-3101);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-3101), 247);
      assertEquals(3468, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-629));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-709), "Deprecated", "Deprecated", "b[K)f", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Seprecated", "b[K)f", "b[K)f", stringArray0, false, false);
      methodWriter0.visitFieldInsn(1, "Seprecated", "b[K)f", "b[K)f");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "b[K)f", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)<f", "b[K)<f", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 2);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitInsn(185);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("Deprecated", "Deprecated", "Deprecated", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-634));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-634), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitFrame((-634), 1, stringArray0, 2, stringArray0);
      methodWriter0.visitMethodInsn(2, "Deprecated", "Deprecated", "");
      int int0 = Type.LONG;
      int int1 = methodWriter0.getSize();
      assertEquals(69, int1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1511));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "F", ".s.IFJDCS", ".s.IFJDCS", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "Seprecated", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "eprecated", "b[K)f", "b[K)f", stringArray0, false, false);
      methodWriter0.visitIntInsn(1, 1);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(180, 2, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QoW7d", "Sepyecat*QoW7d", "Sepyecat*QoW7d", stringArray0, false, false);
      methodWriter0.visitIincInsn(1, 1);
      int int0 = methodWriter0.getSize();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "<init>", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(24, "t)=Cd]mQggdLO#}UNI7", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-663));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QoW7d", "Sepyecat*QoW7d", "Sepyecat*QoW7d", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<nit>", "a[K)f", "a[K)f", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-650), "a[K)f", "<nit>", "<nit>");
      methodWriter0.visitInsn(175);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QoW7d", "Sepyecat*QoW7d", "Sepyecat*QoW7d", stringArray0, false, false);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "Sepyecat*QoW7d");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "Sepyecat*QoW7d", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<inith>", "a[K)f", "a[K)f", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLineNumber((-3), label0);
      methodWriter0.visitMethodInsn((-650), "a[K)f", "<inith>", "<inith>");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      int int0 = Frame.BASE_KIND;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(186, label0);
      int int1 = methodWriter0.getSize();
      assertEquals(37, int1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2810);
      int int0 = Member.PUBLIC;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "npvPu6L5YIc.sJv", "b[K)B,2f", "npvPu6L5YIc.sJv", stringArray0, true, false);
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(integer0);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(6, 1, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QoW7d", "Sepyecat*QoW7d", "Sepyecat*QoW7d", stringArray0, false, false);
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-670));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitVarInsn(167, 167);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      classWriter0.addType("<init>");
      methodWriter0.visitVarInsn(2, 1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitVarInsn(188, 2);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-670));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitFrame((-670), (-670), stringArray0, 1, stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      int int0 = Frame.UNINITIALIZED;
      methodWriter0.visitVarInsn(188, 25165824);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-638));
      methodWriter0.visitLabel(label0);
      methodWriter0.visitVarInsn(1, (-638));
      methodWriter0.visitJumpInsn(1, label0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Depec96e|", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitIincInsn((-650), (-650));
      methodWriter0.visitEnd();
      methodWriter0.visitFieldInsn((-650), "Depec96e|", "Depec96e|", "b[K)f");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SepyecatW7d", "b[K)f", "b[K)f", stringArray0, true, true);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("b[K)f", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      classWriter0.newUTF8("Deprecated");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Deprecated", false);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(186, 1);
      methodWriter0.visitJumpInsn(186, label0);
      methodWriter0.visitMethodInsn(186, "Deprecated", "n}jrsM|3}tk?%Fc~rq,", "Deprecated");
      int int0 = methodWriter0.getSize();
      assertEquals(55, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, true);
      methodWriter0.visitIincInsn(24117248, 90);
      methodWriter0.visitFrame(196, (-1731), stringArray0, 90, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-650));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SepyecatW7d", "b+K)f", "b+K)f", stringArray0, true, true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-634));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(B7kP%>[oc=";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-634), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitFrame((-634), 1, stringArray0, (-1669), stringArray0);
      methodWriter0.visitFieldInsn(2, "(B7kP%>[oc=", "(B7kP%>[oc=", "O g3kf+Y*XSJ");
      Item item0 = classWriter0.key;
      classWriter0.toByteArray();
      int int0 = methodWriter0.getSize();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "RuntimeInvisibleAnnotations");
      methodWriter0.visitFrame(512, 967, stringArray0, 512, stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, stringArray0, (-650), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 20);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 1);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
      methodWriter0.exceptionCount = 2;
      methodWriter0.visitFrame(1, 1, stringArray0, 1, stringArray0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2650), "b[K)B,2f", "b[K)B,2f", "b[K)B,2f", stringArray0, true, true);
      Attribute attribute0 = new Attribute("b[K)B,2f");
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2810);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "npvPu6L5YIc.sJv", "b[K)B,2f", "npvPu6L5YIc.sJv", stringArray0, true, true);
      methodWriter0.visitLdcInsn(1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      methodWriter0.visitTypeInsn(1, "RuntimeInvisibleAnnotations");
      methodWriter0.visitFrame(512, 967, stringArray0, 512, stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "b[K)f", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "F<`9~crFxE", "F<`9~crFxE", stringArray0, false, false);
      methodWriter0.visitIntInsn(16, 4096);
      Label label0 = new Label();
      label0.getFirst();
      methodWriter0.visitAnnotation("F<`9~crFxE", true);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(255, "Deprecated");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(139, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      classWriter0.newUTF8("Deprecated");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "OU0", "OU0", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Deprecated", true);
      Label label0 = new Label();
      Label label1 = new Label();
      int[] intArray0 = new int[1];
      intArray0[0] = 1124075009;
      MethodWriter.getNewOffset(intArray0, intArray0, label1);
      methodWriter0.visitVarInsn(186, 1124075009);
      methodWriter0.visitJumpInsn(186, label1);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(186);
      ByteVector byteVector2 = byteVector1.putUTF8("`CHu<bZ[");
      byteVector1.put11(28, 1);
      ByteVector byteVector3 = byteVector0.put11(1, 186);
      byteVector3.putByte(267386880);
      ByteVector byteVector4 = byteVector2.putUTF8(" ");
      ByteVector byteVector5 = byteVector4.putInt((-3780));
      methodWriter0.put(byteVector5);
      assertSame(byteVector5, byteVector2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-662));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-662), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.visitTypeInsn(1, "Deprecated");
      methodWriter0.visitFieldInsn((-628), "O g3kf+Y*XSJ", "O g3kf+Y*XSJ", "O g3kf+Y*XSJ");
      classWriter0.toByteArray();
      int int0 = methodWriter0.getSize();
      assertEquals(54, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-683), "<init>", "a[K)f", "$7Ca!!hDF?XbUEX", stringArray0, true, true);
      Attribute attribute0 = new Attribute(":mWV^FD)|mS");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitTypeInsn(1, "BT-");
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.put12(285212682, (-683));
      ByteVector byteVector2 = byteVector1.putInt(2);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QFW7d", "Sepyecat*QFW7d", "Sepyecat*QFW7d", stringArray0, false, false);
      methodWriter0.visitInsn(2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "Sepyecat*QFW7d", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "Deprecated");
      methodWriter0.visitIincInsn((-650), 24117248);
      methodWriter0.visitFrame(2, 2, stringArray0, 2, stringArray0);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2796);
      int int0 = Member.PUBLIC;
      String[] stringArray0 = new String[0];
      Integer integer0 = new Integer(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2796, "b[K)B,2f", "b[K)B,2f", "b[K)B,2f", stringArray0, false, false);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      methodWriter0.visitIntInsn(1, 1);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      
      methodWriter0.visitLocalVariable("Deprecated", "Label offset position has not been resolved yet", "b[K)f", label0, label0, (-650));
      Frame frame0 = label0.frame;
      assertNotNull(frame0);
      
      Label label1 = frame0.owner;
      Label label2 = new Label();
      methodWriter0.visitLocalVariable("Label offset position has not been resolved yet", "b[K)f", "RuntimeVisibleParameterAnnotations", label1, label2, 2);
      assertSame(label1, label0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      methodWriter0.visitFieldInsn(1, "Seprecated", "b[K)f", "Seprecated");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-679));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-679), "b[K)f", "b[K)f", "b[K)f", (String[]) null, true, true);
      Attribute attribute0 = new Attribute("b[K)f");
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 2);
      classWriter0.addType("b[K)f");
      methodWriter0.visitLdcInsn("b[K)f");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      classWriter0.newUTF8("Deprecated");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "r", "Deprecated", "'to", stringArray0, false, false);
      Attribute attribute0 = new Attribute("ci%Z:8&mmRz*");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMethodInsn(1, "ci%Z:8&mmRz*", "W/S$z%ndb~1#C*?", "'.VbJ{&TqL3(),m0u");
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "eprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitLdcInsn("eprecated");
      classWriter0.visitAnnotation("b[K)f", true);
      int int0 = Frame.INTEGER;
      methodWriter0.visitTypeInsn(10, "eprecated");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(1, "Seprecated", "ETI_'R?}[^msdK", "Seprecated");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitMethodInsn((-650), "a[K)f", "<init>", "<init>");
      methodWriter0.visitInsn(188);
      methodWriter0.visitMultiANewArrayInsn("a[K)f", (-650));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SepyecatW7d", "b[K)f", "b[K)f", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("SepyecatW7d", "SepyecatW7d", (String) null, label0, label0, 2477);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "b[K)f", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "Seprecated", "b[K)f", "K8p0h;#");
      methodWriter0.visitIntInsn((-650), 1387);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2810);
      int int0 = Member.PUBLIC;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "npvPu6L5YIc.sJv", "b[K)B,2f", "npvPu6L5YIc.sJv", stringArray0, true, false);
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitIntInsn((-1135), 0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("K)f", "K)f", "K)f", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("HD!!`d6M7_TXwN", "HD!!`d6M7_TXwN", "1B#\"rKJ%P_Pd!99>2g", label0, label0, 4160);
      methodWriter0.visitFrame(3, 1, stringArray0, 4160, stringArray0);
      methodWriter0.visitIntInsn((-751), 0);
      methodWriter0.visitEnd();
      int int0 = methodWriter0.getSize();
      assertEquals(93, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$|CcvPz.~K3vO";
      stringArray0[1] = "Depr.cated";
      int int0 = Frame.CHAR;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Depr.cated", "Depr.cated", "Depr.cated", stringArray0, false, false);
      Label label0 = new Label();
      label0.getFirst();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter0.visitAnnotationDefault();
      int int1 = methodWriter1.getSize();
      assertEquals(46, int1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 2);
      classWriter0.addType("b[K)f");
      methodWriter0.visitInsn(185);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitMethodInsn((-650), "a[K)f", "<init>", "<init>");
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = ")V";
      stringArray0[1] = ")V";
      int int0 = Edge.NORMAL;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "F<`9~crFxE", "F<`9~crFxE", stringArray0, false, false);
      methodWriter0.visitFrame(0, 1, stringArray0, 1, stringArray0);
      methodWriter0.visitInsn((-122));
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-598));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[.)f", "b[.)f", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-797));
      methodWriter0.visitMethodInsn((-598), "Deprecated", "Deprecated", "b[.)f");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMaxs((-598), (-598));
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Synthetic");
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-839));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFieldInsn((-839), "j}S1vN[ENLWBMJ", "org.objectweb.asm.jip.Frame", "6Y");
      Attribute attribute0 = new Attribute("Deprecated");
      methodWriter0.visitAttribute(attribute0);
      methodWriter1.visitInsn(1);
      methodWriter1.visitTypeInsn((-839), "j}S1vN[ENLWBMJ");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitInsn(177);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitMethodInsn((-650), "a[K)f", "Seprecated", "Seprecated");
      methodWriter0.visitInsn(188);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.visitTypeInsn(1, "Deprecated");
      methodWriter0.visitFrame((-1891420042), (-1), stringArray0, (-1891420042), stringArray0);
      methodWriter0.visitIincInsn((-650), 24117248);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2, stringArray0, 4, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2810);
      int int0 = Member.PUBLIC;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "npvPu6L5YIc.sJv", "b[K)B,2f", "npvPu6L5YIc.sJv", stringArray0, true, false);
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitInsn(0);
      Label label0 = new Label();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2103;
      intArray0[3] = 2810;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {1, 2, 2103, 2810}, intArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitLdcInsn("Deprecated");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-598));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[.)f", "b[.)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-797));
      methodWriter0.visitMethodInsn((-598), "Deprecated", "Deprecated", "b[.)f");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMaxs((-598), (-598));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitLdcInsn("b[K)f");
      methodWriter0.visitFieldInsn(2, "?", "Deprecated", "Deprecated");
      methodWriter0.visitFieldInsn((-650), "Deprecated", "RuntimeVisibleAnnotations", "g.6?-Eei(on^WD'sX");
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(59, 1);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "E#0S2dd(#5%0C", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitVarInsn(17, 17);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      methodWriter0.visitFrame((-650), 2, stringArray0, 1, stringArray0);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "SepyecatW7d", "b+K)f", "b+K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitTypeInsn(131072, "b+K)f");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-650), "Deprecated", "Deprecated", "K)f");
      int int0 = Edge.NORMAL;
      methodWriter0.visitJumpInsn(2, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-650));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -650
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-839));
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMethodInsn((-638), "Deprecated", "Deprecated", "b[K)f");
      label0.status = (-638);
      classWriter0.addType("b[K)f");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMaxs(16777222, (-638));
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-634);
      ClassWriter classWriter0 = new ClassWriter((-634));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(B7kP%>[oc=";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-634), "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitFrame((-634), 1, stringArray0, (-1669), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(224, 178, stringArray0, (-638), stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "c97s^", ".JAR", "Deprecated", stringArray0, false, false);
      methodWriter0.visitFrame((-650), 3965, stringArray0, 267386880, stringArray0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitFrame(3, 658, stringArray0, (-1572), stringArray0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(4, "hr\"~_#6|Or=@M37", "hr\"~_#6|Or=@M37", "value ");
      Label label0 = new Label();
      label0.getFirst();
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      MethodWriter methodWriter4 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter3.visitFieldInsn(3, "C:j%MtL_%U*Fw&G", (String) null, "org.objectweb.asm.jip.ClassReader");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      classWriter0.newUTF8("Deprecated");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Deprecated", false);
      Label label0 = new Label();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitVarInsn(186, 1);
      methodWriter0.visitJumpInsn(186, label0);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put12(2, 1);
      methodWriter0.visitIntInsn(16777221, 22);
      methodWriter0.visitMethodInsn(16777225, "Deprecated", "c-,2yF}Zt2", "QaPtKaRL<=Qm<o83y");
      methodWriter0.visitLineNumber(285212676, label0);
      methodWriter0.visitLocalVariable("(8\"'iR8L8c6Ads", "|z1jHU*7I6m!<IZ", "(8\"'iR8L8c6Ads", label0, label0, (-128));
      methodWriter0.visitFrame(1924, (-1600), (Object[]) null, (-125), (Object[]) null);
      methodWriter0.visitLineNumber((-650), label0);
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 186;
      intArray1[2] = 1;
      intArray1[3] = (-128);
      MethodWriter.getNewOffset(intArray0, intArray1, label0);
      assertFalse(intArray1.equals((Object)intArray0));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$|CcvPz.~K3vO";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "F<`9~crFxE", "F<`9~crFxE", stringArray0, false, false);
      methodWriter0.visitIntInsn(16, 4096);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(132, label0);
      Label label1 = new Label();
      classWriter0.newLong((-1498L));
      methodWriter0.visitMethodInsn(1, "F<`9~crFxE", "T320b,g@zd(P.zHo", "$|CcvPz.~K3vO");
      int int0 = Type.LONG;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter1.visitMaxs(75, (-650));
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Seprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "Seprecated", "b[K)f", "K8p0h;#");
      methodWriter0.visitIincInsn((-650), 1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitVarInsn(1, 22);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      classWriter0.addType("<init>");
      methodWriter0.visitVarInsn(188, 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-683), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -683
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2150), "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      classWriter0.version = (-1801);
      methodWriter0.visitFieldInsn(15, "azJH-:'[", "0\"y]Ks", "b[K)f");
      Label label0 = new Label();
      label0.getFirst();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-650));
      label0.getFirst();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitFieldInsn(1, "0\"y]Ks", "0\"y]Ks", "j}S1vN[ENLWBMJ");
      Attribute attribute0 = new Attribute("P+rka(Xn@E94+RRfW");
      Label label1 = new Label();
      methodWriter1.visitLabel(label1);
      methodWriter1.visitInsn(2);
      methodWriter0.visitTypeInsn(15, "Deprecated");
      methodWriter0.visitLdcInsn("j}S1vN[ENLWBMJ");
      methodWriter1.visitMaxs(2, 1);
      methodWriter1.getSize();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2810);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "npvPu6L5YIc.sJv", "b[K)B,2f", "npvPu6L5YIc.sJv", stringArray0, true, false);
      methodWriter0.visitLdcInsn(1);
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-638));
      methodWriter0.visitMethodInsn(2601, "b[K)f", "b[K)f", "Deprecated");
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = (-650);
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      methodWriter0.visitIntInsn(15, 15);
      String string0 = "RuntimeInvisibleAnnotations";
      Label label0 = new Label();
      Object object0 = label0.info;
      label0.info = null;
      Label label1 = new Label();
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTryCatchBlock(label0, label0, label1, "Deprecated");
      byte[] byteArray0 = classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-650), 68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -650
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-602));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "b[K)f";
      stringArray0[1] = "b[K)f";
      stringArray0[2] = "Deprecated";
      stringArray0[3] = "StackMapTable";
      stringArray0[4] = "StackMapTable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1724051691), "Deprecated", "b[K)f", "StackMapTable", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitVarInsn(57, 169);
      methodWriter0.visitJumpInsn(169, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1724051691), (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-637));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<ini>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitIincInsn(64, (-637));
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(7, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-839));
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.classReaderOffset = 16777228;
      methodWriter0.visitFieldInsn(132, "s.{", "y\"5*<e6rfi}$4Os@L", "UafX=O%P&0{K");
      methodWriter0.visitMethodInsn(183, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "Deprecated", "b[K)f");
      int int0 = Type.LONG;
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "F<`9~crFxE";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-650), "Deprecated", "F<`9~crFxE", "F<`9~crFxE", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFrame((-1453), (-650), stringArray0, 22, stringArray0);
      methodWriter1.visitIntInsn(17, 2);
      methodWriter0.visitIntInsn(212, (-1425));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-839));
      methodWriter0.visitAnnotation("<init>", false);
      Label label1 = new Label();
      methodWriter0.visitVarInsn(22, 22);
      methodWriter0.visitJumpInsn(186, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-2306), "n}jrsM|3}tk?%Fc~rq,", "n}jrsM|3}tk?%Fc~rq,", "&bk8;4{");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-614));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.getSize();
      methodWriter0.visitLocalVariable("K)f", "Deprecated", "K)f", label0, label0, 16);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMethodInsn((-638), "Deprecated", "Deprecated", "b[K)f");
      classWriter0.addType("Deprecated");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMaxs((-638), (-638));
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitMaxs(631, (-638));
      Label label0 = new Label();
      label0.status = (-839);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", (-839));
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMethodInsn((-638), "Deprecated", "Deprecated", "b[K)f");
      classWriter0.addType("b[K)f");
      methodWriter0.visitLabel(label0);
      methodWriter0.visitMaxs(16777222, (-638));
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "\"srecaed", "b[K)f", "b[K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn("\"srecaed", (-839));
      methodWriter0.visitIntInsn(2, 169);
      Label label1 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitLabel(label1);
      methodWriter1.getSize();
      methodWriter1.visitVarInsn(169, (-638));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitFrame(3, 1, stringArray0, 4160, stringArray0);
      methodWriter0.visitIntInsn((-751), 0);
      methodWriter0.visitParameterAnnotation((-650), "Ljava/lang/Synthetic;", false);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "Deprecated", "b[K)f", "K8p0h;#");
      methodWriter0.visitVarInsn(55, 2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-637));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<ini>", "a[K)f", "a[K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "a[K)f");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(7, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "eprecated", "b[K)f", "b[K)f", stringArray0, true, false);
      methodWriter0.visitLdcInsn("eprecated");
      methodWriter0.visitMethodInsn(185, "b[K)f", "eprecated", "b[K)f");
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      classWriter0.newClass("<init>");
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "", "Signature", "<init>");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-633));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "<init>", "a[K)f", "a[K)f", stringArray0, true, true);
      methodWriter0.visitMethodInsn((-633), "a[K)f", "<init>", "<init>");
      methodWriter0.visitInsn(188);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      methodWriter0.visitTableSwitchInsn(188, 2, label0, labelArray0);
      methodWriter0.visitLineNumber((-1273), label0);
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-602));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-602), "Deprecated", "Deprecated", "K)f");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Deprecated");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "K)f");
      methodWriter0.visitMaxs(76, 2);
      int int0 = Frame.BYTE;
      methodWriter0.visitLineNumber(76, label0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      classWriter0.index = (-650);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-650), "Deprecated", "Deprecated", "K)f");
      classWriter0.addType("K)f");
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1), "K)f", "K)f", "int", stringArray0, true, true);
      methodWriter1.visitMaxs((-650), 1);
      methodWriter1.visitEnd();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-659));
      String[] stringArray0 = new String[0];
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-659), "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn(".r.|/1NX/7W9}s", (-254));
      methodWriter0.visitLabel(label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(879, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      methodWriter0.visitIntInsn(1, 1);
      Label label0 = new Label();
      methodWriter0.getSize();
      methodWriter0.visitLocalVariable("Deprecated", "Label offset position has not been resolved yet", "b[K)f", label0, label0, (-650));
      methodWriter0.visitTypeInsn((-611), "Deprecated");
      methodWriter0.visitLocalVariable("Deprecated", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", label0, label0, (-650));
      ByteVector byteVector0 = new ByteVector(36);
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.putInt((-611));
      methodWriter0.put(byteVector2);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-659));
      String string0 = "Deprecated";
      String[] stringArray0 = new String[0];
      ClassWriter classWriter1 = new ClassWriter((-2155));
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-2155), "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitMultiANewArrayInsn(".r.|/1NX/7W9}s", (-254));
      methodWriter0.visitLabel(label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(879, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 2);
      methodWriter0.visitMethodInsn(196, "Deprecated", "Deprecated", "Deprecated");
      methodWriter0.visitMultiANewArrayInsn("Deprecated", 1);
      classWriter0.version = 196;
      Label label0 = new Label();
      methodWriter0.visitJumpInsn((-650), label0);
      methodWriter0.visitInsn((-650));
      methodWriter0.visitIntInsn(2, 196);
      methodWriter0.exceptionCount = 2;
      methodWriter0.visitFrame(3, 1, stringArray0, 1, stringArray0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-602));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-602), "Deprecated", "Deprecated", "K)f");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "K)f");
      methodWriter0.visitMaxs(484, 1);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-683));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Sepyecat*QoW7d";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sepyecat*QoW7d", "a[K)f", "o4&F", stringArray0, true, false);
      methodWriter0.visitFieldInsn((-1496), "o4&F", "Sepyecat*QoW7d", "J^!YC3-]a");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-638));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "b[K)f", "b[K)f", stringArray0, true, true);
      Label label0 = new Label();
      Label label1 = new Label();
      Label label2 = label0.getFirst();
      methodWriter0.visitTryCatchBlock(label2, label1, label0, "x");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-332), (-1099978048));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-650));
      String[] stringArray0 = new String[0];
      classWriter0.index = (-650);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Deprecated", "K)f", "K)f", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-650), "Deprecated", "Deprecated", "K)f");
      methodWriter0.visitVarInsn(24, 2);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-643), "java/lang/Throwable", "Code", "`I`;xT2@Xk?eZp", stringArray0, false, false);
      Attribute attribute0 = new Attribute("java/lang/Throwable");
      String string0 = "H";
      MethodWriter methodWriter2 = null;
      try {
        methodWriter2 = new MethodWriter(classWriter0, 2, "java/lang/Throwable", "H", "-/?x'7Td$", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
