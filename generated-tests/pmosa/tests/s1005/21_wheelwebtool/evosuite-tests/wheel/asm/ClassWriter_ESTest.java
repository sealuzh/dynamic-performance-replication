/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 03:47:37 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.newLong(Integer.MAX_VALUE);
      classWriter0.newField("SourceDebugExtension", "SourceDebugExtension", "SourceDebugExtension");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-128));
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.TrueFileFilter", "wheel.asm.ClassWriter");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, (-3194));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.newField("zCnc,=12h4r-X", "zCnc,=12h4r-X", "zCnc,=12h4r-X");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      classWriter0.newClass("75(lAu0wY%hyWy");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("PB)a=|TBs", "PB)a=|TBs");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'PB)a=|TBs.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-88));
      classWriter0.newNameType("boolean", "0$6ls;`rm4GKJD<jsAS");
      classWriter0.addType("0$6ls;`rm4GKJD<jsAS");
      Item item0 = classWriter0.newFloat(1.0F);
      Item item1 = classWriter0.newFieldItem("0$6ls;`rm4GKJD<jsAS", "@l'q^(x.Qtz:s\"", "@l'q^(x.Qtz:s\"");
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212682);
      Object object0 = new Object();
      Item item0 = classWriter0.key2;
      int int0 = classWriter0.addType("Label offset position has not been resolved yet");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.toByteArray();
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("r7`peC3", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1147);
      ClassWriter classWriter0 = new ClassWriter((-1147));
      String string0 = "iO5ic2]pds";
      classWriter0.newClassItem("iO5ic2]pds");
      String string1 = "SourceFile";
      String[] stringArray0 = null;
      classWriter0.visit((-1147), 705, "SourceFile", "iO5ic2]pds", "m5", (String[]) null);
      String string2 = null;
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("iO5ic2]pds", "iO5ic2]pds", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(577);
      classWriter0.addUninitializedType("SourceFile", 577);
      classWriter0.visit(2, 854, "wheel.asm.ClassReader", (String) null, (String) null, (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-279));
      Item item0 = classWriter0.newLong((-279));
      Item[] itemArray0 = new Item[2];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.visitAnnotation("Signature", false);
      classWriter0.newLong((-279));
      classWriter0.newNameType("Signature", "Signature");
      classWriter0.newDouble((-279));
      classWriter0.newClass("");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-917));
      classWriter0.visitField((-917), "\"C,?!mY|[Dr-", "", "n!y>#wU}<6H", "\"C,?!mY|[Dr-");
      classWriter0.invalidFrames = true;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "RuntimeVisibleAnnotations", "n!y>#wU}<6H", "n!y>#wU}<6H", "n!y>#wU}<6H");
      classWriter0.firstField = fieldWriter0;
      Double double0 = new Double(1.0);
      Double.sum(2, 1.0);
      fieldWriter0.getSize();
      Double.min(0.0, 1.0);
      Double.min(0.75, (-1529.66));
      classWriter0.newConstItem(double0);
      classWriter0.newNameType("", "wi");
      classWriter0.visitAnnotation("Signature", true);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-88));
      classWriter0.newConst("");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 2042;
      ClassWriter classWriter0 = new ClassWriter(2042);
      classWriter0.threshold = 2042;
      String string0 = null;
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-88));
      classWriter0.newFloat(1);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      classWriter0.newDouble(0.0);
      classWriter0.visitInnerClass("", "", "Yv2S_;\"Hn!\u0006", (-525));
      classWriter0.addUninitializedType("Yv2S_;\"Hn!\u0006", 0);
      classWriter0.newLong((-219L));
      classWriter0.newFieldItem("'(&", "value ", "'(&");
      classWriter0.newLong(32);
      classWriter0.newLong((-219L));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "S@";
      stringArray0[1] = "Yv2S_;\"Hn!\u0006";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "value ";
      stringArray0[5] = "'(&";
      stringArray0[6] = "";
      stringArray0[7] = ";1doa";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(183, "", "'(&", "S@", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1576);
      Item item0 = classWriter0.key;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-2998));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.addUninitializedType("SourceFile", Integer.MAX_VALUE);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitAnnotation("Wz4ks86(rA'wzr(", true);
      classWriter0.addType("");
      classWriter0.newFieldItem("", "}]UhdDs", "}]UhdDs");
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-671));
      classWriter0.invalidFrames = true;
      classWriter0.newFieldItem("", "", "");
      classWriter0.newMethodItem("", "", "", false);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, "_u%A-meOO7&", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      int int0 = classWriter0.newMethod("Tams", "Tams", "Tams", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SB\"mVq";
      classWriter0.lastMethod = null;
      stringArray0[1] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(1660, 896, "SB\"mVq", "SB\"mVq", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1317);
      classWriter0.addUninitializedType("", 0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "oFW|{";
      stringArray0[1] = "oFW|{";
      classWriter0.visit(1317, 1673, "c>1dV(9d", "oFW|{", "", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(648);
      String[] stringArray0 = new String[0];
      classWriter0.visit(648, 648, "Synthetic", "Synthetic", "Synthetic", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      Item item0 = classWriter0.key2;
      classWriter0.visitOuterClass("wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(705);
      classWriter0.visitSource("m5", (String) null);
      Character character0 = new Character('t');
      Double double0 = new Double((-1147));
      assertEquals((-1147.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      classWriter0.newField("The array of prefixes must not be null", "wheel.asm.Frame", "LocalVariableTypeTable");
      Item item0 = classWriter0.newInteger(8);
      classWriter0.newNameType("", "");
      classWriter0.toByteArray();
      classWriter0.addType("");
      classWriter0.addUninitializedType("LocalVariableTypeTable", 19);
      classWriter0.newInteger(9);
      // Undeclared exception!
      try { 
        classWriter0.visitField(16, "", "9vV", "", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.newLong(Integer.MAX_VALUE);
      classWriter0.visitSource("SourceDebugExtension", "96>'!4");
      classWriter0.visitOuterClass("", (String) null, "h1/ni0L2/1:_V!/6V)L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      classWriter0.newNameType("@E\rc b{", "@E\rc b{");
      String[] stringArray0 = new String[0];
      classWriter0.visit(285212673, 8, "@E\rc b{", "@E\rc b{", "@E\rc b{", stringArray0);
      classWriter0.visit(8, 285212673, ";VyZ>2Re$@", "FJ8;DioEC%", "O n16~F]X1&ba]]3<2D", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-94));
      classWriter0.threshold = (-1230);
      Item item0 = classWriter0.newFloat(1.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 530);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("wheel.asm.ClassWriter", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      classWriter0.visitSource("", "");
      classWriter0.newInteger(1);
      classWriter0.newInteger(285212673);
      classWriter0.addType("");
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212673);
      ClassWriter classWriter1 = new ClassWriter(1);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PB)a=|TBs";
      classWriter1.visit(1, 1, "", (String) null, "", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-452));
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.newConst(boolean0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483638);
      Item item0 = classWriter0.newFloat(2147483638);
      String string0 = "\\uLQ:3Oe'/)";
      classWriter0.visitInnerClass(string0, "+vG_Nl`,w", "+vG_Nl`,w", (-1447));
      Item item1 = new Item();
      Item item2 = classWriter0.newFloat(2147483638);
      assertSame(item2, item0);
      assertNotNull(item2);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-452));
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.newConst(boolean0);
      Item item0 = classWriter0.newDouble((-452));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.newClass("Code");
      classWriter0.visitInnerClass("!n,*:W'y837I", "Code", "value ", 4202);
      classWriter0.newInteger(8);
      classWriter0.visitInnerClass("Code", "The array of suffixes must not be null", "!n,*:W'y837I", 0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("value ", "The list of prefixes must not be null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'value .class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      Type type0 = Type.SHORT_TYPE;
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      assertEquals("wheel.asm.ClassWriter", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.addType("x:elG<+i");
      classWriter0.addType("x:elG<+i");
      // Undeclared exception!
      try { 
        classWriter0.newField("x:elG<+i", "x:elG<+i", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.getCommonSuperClass("wheel.asm.ClassWriter", "org.apache.commons.io.filefilter.TrueFileFilter");
      classWriter0.newConstItem("java/lang/Object");
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rqxjsI,q>HBS$3%8Gks");
      ClassWriter classWriter0 = new ClassWriter(39);
      classWriter0.visitOuterClass("n3j*w&1i8a", "rqxjsI,q>HBS$3%8Gks", (String) null);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(39, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2297);
      classWriter0.newInteger((-4309));
      classWriter0.newInteger((-4309));
      classWriter0.visitInnerClass("Synthetic", "=;(\"h:p'A+Yh5", "8o", (-4309));
      int int0 = classWriter0.newUTF8("=;(\"h:p'A+Yh5");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(398);
      Item item0 = classWriter0.newMethodItem("&TB_ih", "&TB_ih", "&TB_ih", false);
      classWriter0.newDouble(59.954367);
      Item item1 = classWriter0.newDouble(59.954367);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2114));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "no";
      stringArray0[1] = ";,M";
      classWriter0.visit((-2114), (-2114), "wrldIjU", "wrldIjU", ";,M", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.getCommonSuperClass("wheel.asm.ClassWriter", "org.apache.commons.io.filefilter.TrueFileFilter");
      classWriter0.newConstItem("java/lang/Object");
      classWriter0.toByteArray();
      classWriter0.newConstItem("java/lang/Object");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(18, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      int int0 = classWriter0.addUninitializedType("", 4);
      assertEquals(1, int0);
      
      classWriter0.toByteArray();
      Double double0 = new Double(2);
      int int1 = classWriter0.addUninitializedType("", 4);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      Byte byte0 = new Byte((byte)53);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.TrueFileFilter");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      int int0 = classWriter0.newMethod("wheel.asm.ClaIsWriter", "wheel.asm.ClaIsWriter", "wheel.asm.ClaIsWriter", true);
      assertEquals(4, int0);
      
      classWriter0.newMethod("Zv^R{IIwu9V", "[)wCx}", "", true);
      int int1 = classWriter0.newMethod("Zv^R{IIwu9V", "[)wCx}", "", true);
      assertEquals(10, int1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483588);
      classWriter0.newField("wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      classWriter0.newField("wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      Item item0 = classWriter0.newLong((-921L));
      assertNotNull(item0);
  }
}
