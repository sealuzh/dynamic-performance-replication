/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 18:06:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-41));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-41), "<i{I9gVKN=", "<i{I9gVKN=", "<i{I9gVKN=", "<i{I9gVKN=");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2130));
      ByteVector byteVector0 = new ByteVector(1);
      classWriter0.index = (-2130);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2130), "3B;SwVT7$;", "", "", "");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      classWriter0.index = (-2164);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2164), "juWYdW@", "juWYdW@", "juWYdW@", "juWYdW@");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "u1)~`jXBg^._I''", "u1)~`jXBg^._I''", "u1)~`jXBg^._I''", "u1)~`jXBg^._I''");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "SPlh", "JSR/RET are not supported with computeFrames option", "Synthetic", "JSR/RET are not supported with computeFrames option");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(768);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777218, "", "org.apache.commons.io.filefilter.EmptyFileFilter", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "DT[*<qyo>dl6(", "JSR/RET are not supported with computeFrames option", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(11);
      Attribute attribute0 = new Attribute("QVq'RC(Lrj~$w%Sb<6_");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2140));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2140), "eu{WYT@", "eu{WYT@", "eu{WYT@", "eu{WYT@");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[0];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-41));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-41), "jf &dq&1", "jf &dq&1", "jf &dq&1", "jf &dq&1");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[3];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1371, (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2164), "uW{pYdpW@", "uW{pYdpW@", "uW{pYdpW@", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zic", "Zic", "Zic", "Zic");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      classWriter0.version = 1371;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-79), "ConstantValue", "Invalid IOCase name: ", "ConstantValue", (Object) null);
      ByteVector byteVector0 = new ByteVector(1138);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(768);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777218, "", "org.apache.commons.io.filefilter.EmptyFileFilter", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2164));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2164), "uWYdpW@", "uWYdpW@", "uWYdpW@", "uWYdpW@");
      Attribute attribute0 = new Attribute("uWYdpW@");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2169));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "P1u9)T`jXBg^._C'I", "P1u9)T`jXBg^._C'I", "P1u9)T`jXBg^._C'I", "P1u9)T`jXBg^._C'I");
      fieldWriter0.visitAnnotation("Ic0x1]EE", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-41));
      classWriter0.version = (-41);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-41), "jf &dq&x1", "jf &dq&x1", "jf &dq&x1", "jf &dq&x1");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zic", "Zic", "Zic", "Zic");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zic", "Zic", "Zic", "Zic");
      fieldWriter0.visitAnnotation("Invalid IOCase name: ", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(768);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777218, "", "org.apache.commons.io.filefilter.EmptyFileFilter", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zic", "Zic", "Zic", "Zic");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte) (-79), "ConstantValue", "Invalid IOCase name: ", "ConstantValue", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1371);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zic", "Zic", "Zic", "Zic");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2130));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2130), "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
