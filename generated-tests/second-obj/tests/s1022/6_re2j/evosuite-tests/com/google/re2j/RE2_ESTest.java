/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:35:58 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = new RE2("qr]h");
      int[] intArray0 = rE2_0.findSubmatchIndex("qr]h");
      assertArrayEquals(new int[] {0, 4}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.prefix = "";
      String string0 = rE2_0.replaceAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      RE2 rE2_0 = RE2.compilePOSIX("\"U5Dgg$hyEb-k");
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.numberOfCapturingGroups();
      List<String> list0 = rE2_0.findAll("j,m&", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("com.gogle.rej.E2");
      byte[] byteArray0 = new byte[0];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("com.gogle.rej.E2");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Submatch(byteArray0);
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("#3x^6olWY");
      String string0 = rE2_0.replaceFirst("#3x^6olWY", "");
      assertEquals("#3x^6olWY", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("z");
      String string0 = rE2_0.replaceFirst("z", "z");
      assertEquals("z", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = new RE2("z");
      String string0 = rE2_0.replaceAll("z", "z");
      assertEquals("z", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("y +\"");
      int[] intArray0 = rE2_0.findIndex("y +\"");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
      
      int[] intArray0 = rE2_0.findIndex("");
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findIndex("");
      List<int[]> list0 = rE2_0.findAllIndex("", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("com.google.re2j.Machine$1");
      String[] stringArray0 = rE2_0.findSubmatch("com.google.re2j.Machine$1");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = RE2.match("e+2^\"Ok", "e+2^\"Ok");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)121;
      rE2_0.findUTF8Submatch(byteArray0);
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("65?^G]vnZnF", 892, true);
      String string0 = rE2_0.find("can't happen");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("@jd-P-c~>");
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.reset();
      assertEquals("", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = new RE2("");
      int[] intArray0 = rE2_0.findUTF8SubmatchIndex(byteArray0);
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("=7*/k?1F61Q;<X!2=xZ");
      rE2_0.reset();
      int[] intArray0 = rE2_0.findSubmatchIndex("=7*/k?1F61Q;<X!2=xZ");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = RE2.quoteMeta("");
      RE2 rE2_0 = new RE2("");
      String string1 = rE2_0.find("");
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      RE2 rE2_0 = RE2.compilePOSIX("RKD=");
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, 212);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("Jvz:$Z~)5}R&X5wW", 43447, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-63);
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<String> list0 = rE2_0.findAll("", (-1));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("com.google.re2j.UnicodeTables");
      byte[] byteArray0 = new byte[0];
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, 16);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = new RE2("nop -> ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-24);
      List<int[]> list0 = rE2_0.findAllUTF8Index(byteArray0, 585);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("com.google.re2j.RE2", 65113, false);
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 1863);
      boolean boolean0 = rE2_0.match("com.google.re2j.RE2", 65113, (-696), 1863, (int[]) null, 65113);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 8490, false);
      List<String[]> list0 = rE2_0.findAllSubmatch("", 945);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllUTF8Submatch(byteArray0, 2776);
      rE2_0.prefixRune = (-5090);
      try { 
        RE2.compilePOSIX(".+*?()|[]{}^$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing closing ]: `[]{}^$`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[2];
      rE2_0.findAll("", (byte)0);
      byte[] byteArray1 = rE2_0.prefixUTF8;
      rE2_0.prefixUTF8 = byteArray1;
      rE2_0.longest = true;
      rE2_0.findAllUTF8Submatch(byteArray1, (-1208));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.toString();
      rE2_0.findSubmatchIndex("o7=qk~V&6?%[Q");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)97;
      byteArray0[0] = (byte) (-11);
      rE2_0.findAllUTF8Index(byteArray0, 1200);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = new RE2("o");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-11);
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 2993);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, 16);
      rE2_0.prefix = "";
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-117);
      rE2_0.matchUTF8(byteArray0);
      rE2_0.findAllSubmatch("Z", (byte)0);
      rE2_0.toString();
      byte[] byteArray1 = new byte[3];
      byteArray0[7] = (byte) (-8);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, (-2118));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-11);
      rE2_0.findAllSubmatchIndex("", (byte) (-11));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("2");
      rE2_0.findAllSubmatchIndex("B%BH+4N7A9:R", 6679);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("com.google.re2j.UnicodeTables");
      rE2_0.match("com.google.re2j.UnicodeTables");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Sc");
      rE2_0.findAllSubmatch("com.google.re2j.RE2", (-8));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllSubmatch("", (-8));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllIndex("", (-3921));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.replaceFirst("[k47/O\"^%R2YyBS", "Z");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2.quoteMeta("$_O7");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("can't happen");
      rE2_0.findAllSubmatch("can't happen", 7401);
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2.match("N715m3 G1", "N715m3 G1");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("[:^cntrl:]");
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)10;
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte) (-80);
      intArray0[1] = (int) (byte) (-80);
      rE2_0.match("[:^cntrl:]", (byte) (-80), (byte) (-80), (byte) (-80), intArray0, 2);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[6];
      rE2_0.findAll("3QZQhcjy[2`d", (byte)0);
      rE2_0.findAll("6FHX*x:BZP6iR.vV", (byte)0);
      rE2_0.findSubmatch("Pd");
      rE2_0.findAllUTF8Index(byteArray0, (byte)0);
      rE2_0.replaceFirst("t6b&(-6ngEH\"0eiC", "t6b&(-6ngEH\"0eiC");
      int[] intArray0 = new int[3];
      rE2_0.get();
      rE2_0.findAllSubmatch("6FHX*x:BZP6iR.vV", (byte)0);
      RE2 rE2_1 = RE2.compilePOSIX("6FHX*x:BZP6iR.vV");
      rE2_0.match("t6b&(-6ngEH\"0eiCt6b&(-6ngEH\"0eiC", (byte)0, 1322, 1322, (int[]) null, 1322);
      rE2_0.findUTF8Submatch(byteArray0);
      // Undeclared exception!
      try { 
        rE2_1.match("Pd", (-169), 1412, 1322, intArray0, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "^";
      RE2 rE2_0 = RE2.compilePOSIX("^");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-111);
      rE2_0.replaceAll("6FHX*x:BZP6iR.vV", "6FHX*x:BZP6iR.vV");
      rE2_0.findAll("6FHX*x:BZP6iR.vV", (byte) (-111));
      rE2_0.findSubmatch("^");
      rE2_0.findAllUTF8Index(byteArray0, (byte)0);
      int[] intArray0 = new int[3];
      Machine machine0 = new Machine(rE2_0);
      rE2_0.replaceAll("6FHX*x:BZP6iR.vV6FHX*x:BZP6iR.vV", "^");
      boolean boolean0 = rE2_0.longest;
      rE2_0.put(machine0);
      RE2 rE2_1 = new RE2("^6FHX*x:BZP6iR.vV6FHX*x:BZP6iR.vV");
      // Undeclared exception!
      try { 
        rE2_0.match("6FHX*x:BZP6iR.vV6FHX*x:BZP6iR.vV", (byte)0, 336, 1322, intArray0, 1322);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("$");
      byte byte0 = (byte)104;
      byte byte1 = (byte)113;
      String string0 = "SipFT'D?F&e:`6\"O@4";
      rE2_0.findAll("SipFT'D?F&e:`6\"O@4", (byte)113);
      String string1 = "\\f";
      rE2_0.findSubmatch("\f");
      String string2 = "qR#9ZHGy";
      // Undeclared exception!
      try { 
        rE2_0.replaceAll((String) null, "qR#9ZHGy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.RE2", e);
      }
  }
}
