/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:54:59 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PipedInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.lang.reflect.Method;
import java.net.URI;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.FunctionObject;
import org.mozilla.javascript.Interpreter;
import org.mozilla.javascript.NativeContinuation;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.addError("URIError", "URIError");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property URIError
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = parser0.getEncodedSource();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("c]W-O", "c]W-O", 816);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (c]W-O#816)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(":ji)Q&&X]z/%Cn1s", ":ji)Q&&X]z/%Cn1s", 124);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (:ji)Q&&X]z/%Cn1s#124)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      compilerEnvirons0.setXmlAvailable(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)126;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "XML");
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      String string0 = "Q%`Q\\q1X";
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("Q%`Qq1X", "error reporter", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegal character (error reporter#130)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "Nz><>`19@M";
      // Undeclared exception!
      try { 
        parser0.parse("Nz><>`19@M", "error reporter", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (error reporter#14)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.clearAssertionStatus();
      contextFactory0.createClassLoader(classLoader0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("[*7l.7,>z\"E", "-", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (-#100)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      boolean boolean0 = context0.generateObserverCount;
      // Undeclared exception!
      try { 
        parser0.parse("[f", "language version", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (language version#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.clearAssertionStatus();
      contextFactory0.createClassLoader(classLoader0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("E^|h&^-EQT:M;ewV", "?", 23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (?#23)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context1 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context1.setErrorReporter(defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Node.Scope node_Scope0 = new Node.Scope(context0.VERSION_1_5);
      Node.Scope.splitScope(node_Scope0);
      // Undeclared exception!
      try { 
        parser0.pushScope(node_Scope0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "set";
      // Undeclared exception!
      try { 
        parser0.parse("set", "set", (-1855));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      boolean boolean0 = context0.isContinuationsTopCall;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      String string0 = "7+}~Yl0Ba[U";
      // Undeclared exception!
      try { 
        parser0.parse(";=\"%DoB!J:21uHPNVcj", "[7==0", 15);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ([7==0#15)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      ContextFactory contextFactory1 = new ContextFactory();
      Context context1 = new Context();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.initFromContext(context0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ErrorReporter errorReporter1 = context1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("Ck8kNZn@]^6AJvWmC", "language version", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "w=#WX;=";
      // Undeclared exception!
      try { 
        parser0.parse("w=#WX;=", "sup", 2252);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (sup#2252)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      context0.seal(compilerEnvirons0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("cOovm? P1+&/^j#", "small", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegal character (small#5)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      defaultErrorReporter0.runtimeError("language version", "error reporter", 910, "language version", 140);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      StringReader stringReader0 = new StringReader("--");
      Parser parser0 = new Parser((CompilerEnvirons) null, defaultErrorReporter1);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("--", "A!vxaI#*bI(tGx7@<", 2020);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (A!vxaI#*bI(tGx7@<#2020)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      defaultErrorReporter0.runtimeError("language version", ")xq_^iMn", 13, "error reporter", 110);
      parser0.addStrictWarning("language version", ")xq_^iMn");
      String string0 = "msg.let.decl.not.in.block";
      // Undeclared exception!
      try { 
        parser0.parse("<Y", "language version", 3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (language version#3)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "msg.bad.return";
      String string1 = "39)?4yPw$]+>Ga";
      // Undeclared exception!
      try { 
        parser0.parse("msg.bad.return", "39)?4yPw$]+>Ga", 118);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (39)?4yPw$]+>Ga#118)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Context.reportWarning("set");
      parser0.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("v+(;y", "Lorg/mozilla/javascript/Scriptable;", 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Context.enter(context0);
      boolean boolean0 = context0.useDynamicScope;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter.forEval(errorReporter1);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser0.parse("GjG8x*^b~`oCl\"DP3", "[Loava/lang/ObjecK;", 157);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ([Loava/lang/ObjecK;#157)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      Context.toBoolean(parser0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      parser0.addStrictWarning("error reporter", "error reporter");
      context0.getErrorReporter();
      Node.Symbol node_Symbol0 = new Node.Symbol((-48), "language version");
      // Undeclared exception!
      try { 
        parser0.parse("X$f-@qN&", "*.AsHWmN&`GUf2A", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (*.AsHWmN&`GUf2A#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "@5V&UAc]";
      // Undeclared exception!
      try { 
        parser0.parse("@5V&UAc]", "@5V&UAc]", 111);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (@5V&UAc]#111)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("@rM4", "@rM4", 90);
      parser0.pushScope(scriptOrFnNode0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        defaultErrorReporter0.error("u4CLl", "@rM4", 90, "@rM4", 103);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // u4CLl (@rM4#90)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setXmlAvailable(false);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(errorReporter0);
      String string0 = "";
      // Undeclared exception!
      try { 
        parser0.parse("@rM4", "", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(sequenceInputStream0);
      parser0.parse((Reader) inputStreamReader0, "", 82);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(1384, false, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("{4/abRrqZ8rB2'", "org.iozilla.javascrqpt.NativeBoolean", 3483);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (org.iozilla.javascrqpt.NativeBoolean#3483)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Context context0 = contextFactory0.enter();
      Context.enter(context0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("-+FSvKC/[]w Y\bI", "!Q}H{;'%", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (!Q}H{;'%#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      contextFactory0.getApplicationClassLoader();
      contextFactory0.createClassLoader((ClassLoader) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("-", "msg.no.brace.catchblock", 1473);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (msg.no.brace.catchblock#1473)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(true);
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      Parser parser0 = new Parser((CompilerEnvirons) null, (ErrorReporter) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      parser0.insideFunction();
      // Undeclared exception!
      try { 
        parser0.parse("{~*>6`SEWw(Qev@f}", "{~*>6`SEWw(Qev@f}", 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("FFM}$", "language version", 428);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#428)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode("language version");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter2);
      compilerEnvirons0.setErrorReporter(defaultErrorReporter1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        parser0.parse("+D::[", (String) null, (-425));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -425
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("O(;)&J}gJ{=;p|\"d", "O(;)&J}gJ{=;p|\"d", 110);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (O(;)&J}gJ{=;p|\"d#110)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "8{.>,7WG_]lV";
      // Undeclared exception!
      try { 
        parser0.parse("W,", "8{.>,7WG_]lV", 135);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "~new Boolean(true))";
      parser0.compilerEnv = compilerEnvirons0;
      // Undeclared exception!
      try { 
        parser0.parse("~new Boolean(true))", "1$~*eWL(?z7)sM3", (-222));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = new Context();
      contextFactory0.getE4xImplementationFactory();
      context1.setErrorReporter(defaultErrorReporter0);
      boolean boolean0 = parser0.calledByCompileFunction;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "ni(fT{?<";
      String string1 = "get";
      // Undeclared exception!
      try { 
        parser0.parse("ni(fT{?<", "get", 429);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (get#429)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons3.initFromContext(context0);
      Parser parser2 = new Parser(compilerEnvirons3, errorReporter0);
      ErrorReporter errorReporter1 = context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Context context1 = new Context();
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      Parser parser3 = new Parser(compilerEnvirons4, errorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("new ", "error reporter", 52);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (error reporter#52)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "w4";
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("(c9^}iK%|#", "w4", 1056);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (w4#1056)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      compilerEnvirons0.setXmlAvailable(false);
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter1);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "msg.no.paren.after.switch";
      // Undeclared exception!
      try { 
        parser0.parse("msg.no.paren.after.switch", "msg.no.paren.after.switch", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing name after . operator (msg.no.paren.after.switch#14)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("1[vdf@", "1[vdf@", (-4476));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4476
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = new Context();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory.getGlobal();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter1);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, errorReporter2);
      parser0.addStrictWarning("language version", "set");
      // Undeclared exception!
      try { 
        parser0.parse("Oe&>Zy+|NV}ZRgKiyRV", (String) null, 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.no.paren.for.ctrl", "set");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "v;;icSh\"nU.L(|=&";
      // Undeclared exception!
      try { 
        parser0.parse("v;;icSh\"nU.L(|=&", "Z-+FSvKC/[]w Y\bI", 107);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (Z-+FSvKC/[]w Y\bI#107)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Context context1 = new Context(contextFactory0);
      boolean boolean0 = context0.useDynamicScope;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      DefaultErrorReporter.forEval(errorReporter1);
      FunctionNode functionNode0 = new FunctionNode("language version");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      EvaluatorException evaluatorException0 = new EvaluatorException("Ii0-?e(6");
      compilerEnvirons1.setErrorReporter(defaultErrorReporter0);
      boolean boolean1 = parser0.calledByCompileFunction;
      boolean boolean2 = context0.isContinuationsTopCall;
      // Undeclared exception!
      try { 
        parser0.parse("!", "[Loava/lang/ObjecK;", 18);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file ([Loava/lang/ObjecK;#18)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      ContextFactory contextFactory1 = new ContextFactory();
      Context context1 = new Context();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons0.initFromContext(context1);
      ErrorReporter errorReporter1 = context1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("void", "language version", 19);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (language version#19)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setXmlAvailable(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      compilerEnvirons1.setOptimizationLevel(0);
      Method[] methodArray0 = new Method[0];
      FunctionObject.findSingleMethod(methodArray0, "error reporter");
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, errorReporter0);
      parser0.parse("msg.bad.throw.eol", "ZF6ZSqP!", 6);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(2384, false, "msg.bad.throw.eol");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)33;
      // Undeclared exception!
      try { 
        parser0.parse("Tk|~<KDt", "language version", (int) (byte)33);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax (language version#33)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      context0.stringIsCompilableUnit("");
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("error reporter", "language version");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Node node0 = null;
      defaultErrorReporter0.runtimeError((String) null, "msg.bad.break", 100, "?,xm!f00h@@QD", 680);
      // Undeclared exception!
      try { 
        parser0.parse("final", "final", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (final#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter1);
      context0.setErrorReporter(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("/xK", "Cb&", 60);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (Cb&#60)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context1 = new Context();
      contextFactory0.getE4xImplementationFactory();
      context1.setErrorReporter(defaultErrorReporter0);
      boolean boolean0 = parser0.calledByCompileFunction;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      parser0.addStrictWarning("w4", "msg.no.paren.cond");
      contextFactory0.disableContextListening();
      // Undeclared exception!
      try { 
        parser0.parse("v<{4CLl*86H~!WS", "w4", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (w4#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(true);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      String string0 = "=vh`OnlX;lNDxd h";
      linkedHashSet0.add("[Loava/lang/ObjecK;");
      String string1 = "n*{SINL";
      // Undeclared exception!
      try { 
        parser0.parse("n*{SINL", "org.mozilla.javascript.jdk15.VMBridge_jdk15", 85);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing : after property id (org.mozilla.javascript.jdk15.VMBridge_jdk15#85)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      defaultErrorReporter1.runtimeError("gP", "language version", 11, "iLJWb%'WUd'M(V?", 10);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("yG>>I@LSG@M[G ", "yG>>I@LSG@M[G ", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (yG>>I@LSG@M[G #5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setXmlAvailable(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory.getGlobal();
      Interpreter interpreter0 = new Interpreter();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      context0.getErrorReporter();
      // Undeclared exception!
      try { 
        parser0.parse("\"\"sAc'u#l3", "D6X\"iw1=4FvP,9", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (D6X\"iw1=4FvP,9#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("C*s<{", "", 118);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      compilerEnvirons1.setXmlAvailable(false);
      Parser parser0 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      // Undeclared exception!
      try { 
        parser0.parse("$:3()H{@Voz{(1M", "language version", 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      context0.createClassLoader(classLoader0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("J:/.!3V-Q-^k/", "J:/.!3V-Q-^k/", 12);
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      parser0.eof();
      parser0.getCurrentLineNumber();
      assertEquals("\u0087'\u0001Jf\u00010\u000B/.!3V-Q-^k/Q\u0001", parser0.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.parse("null", "null", 179);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context0 = new Context();
      EvaluatorException evaluatorException0 = new EvaluatorException("msg.fn.redecl");
      // Undeclared exception!
      try { 
        context0.setErrorReporter((ErrorReporter) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext(context0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.setGenerateObserverCount(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      String string0 = "yh/@[";
      // Undeclared exception!
      try { 
        parser0.parse("yh/@[", "", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      Context context1 = contextFactory0.enterContext(context0);
      ErrorReporter errorReporter0 = context1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("Zx||3oPbZ~kS~", "m6e$%7", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      context0.createClassLoader(classLoader0);
      ContextFactory.getGlobal();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      defaultErrorReporter0.runtimeError("error reporter", "error reporter", 9, "error reporter", 1048576);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("J:/.!3V-Q-^k!/", "J:/.!3V-Q-^k!/", 12);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      // Undeclared exception!
      try { 
        parser0.parse("J:/.!3V-Q-^k!/", "error reporter", (-166));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons0.setXmlAvailable(false);
      String string0 = "\"`]O`I\"^A\"kITO";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      defaultErrorReporter0.runtimeError("language version", "\"`]O`I\"^A\"kITO", 13, "error reporter", 110);
      parser0.addStrictWarning("language version", "?+");
      parser0.currentScope = null;
      String string1 = "<Y";
      // Undeclared exception!
      try { 
        parser0.parse("<Y", "language version", 3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#3)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "Z-+FSvKC/[]w Y\\bI";
      String string1 = null;
      // Undeclared exception!
      try { 
        parser0.parse("{E", (String) null, 72);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing } in compound statement
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode("language version");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter2);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter2);
      EvaluatorException evaluatorException0 = new EvaluatorException("error reporter");
      compilerEnvirons0.setErrorReporter(defaultErrorReporter2);
      boolean boolean0 = context0.isContinuationsTopCall;
      // Undeclared exception!
      try { 
        parser0.parse("+D::J[", "oZBqp4QlZPp<xp>7e", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (oZBqp4QlZPp<xp>7e#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?,?vOOv%");
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      linkedHashSet0.containsAll(compilerEnvirons0.activationNames);
      String string0 = "null";
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      defaultErrorReporter1.runtimeError((String) null, "?,?vOOv%", 2015, "null", 2015);
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "msg.bad.throw.eol");
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        parser1.parse("typeof ", "9pK[Hr", 1696);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (9pK[Hr#1696)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
