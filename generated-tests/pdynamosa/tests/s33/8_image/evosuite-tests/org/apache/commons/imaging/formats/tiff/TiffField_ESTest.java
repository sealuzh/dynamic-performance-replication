/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:02:09 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-55), 291, fieldTypeByte0, 4, 1, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(291, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-55), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 0L, (-1940), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1940), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1074), 1, fieldTypeShort0, 2535L, 270, byteArray0, byteOrder0, (-1074));
      tiffField0.getValue();
      assertEquals((-1074), tiffField0.getTag());
      assertEquals((-1074), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(28, (-487), fieldTypeShort0, 4754L, 2147483647L, byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-487), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34665, 381, fieldTypeByte0, 381, 46L, byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(381, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(34665, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1940), fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, (byte) (-104));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-1940), tiffField0.getDirectoryType());
      assertEquals((-104), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1378, 18246, fieldTypeLong0, 1378, (-2912L), (byte[]) null, byteOrder0, 1027);
      int int0 = tiffField0.getTag();
      assertEquals(18246, tiffField0.getDirectoryType());
      assertEquals(1378, int0);
      assertEquals((-2912), tiffField0.getOffset());
      assertEquals(1027, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)96;
      byteArray0[7] = (byte)70;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(880, (-305), fieldTypeAscii0, 880, (-305), byteArray0, byteOrder0, 137);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(880, tiffField0.getTag());
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals((-305), tiffField0.getOffset());
      assertEquals(137, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 33448, fieldTypeLong0, 866L, 1L, (byte[]) null, byteOrder0, 33448);
      int int0 = tiffField0.getSortHint();
      assertEquals(33448, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(33448, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1062, 1062, fieldTypeDouble0, 1062, 1062, byteArray0, byteOrder0, (-1478));
      int int0 = tiffField0.getSortHint();
      assertEquals(1062, tiffField0.getDirectoryType());
      assertEquals(1062, tiffField0.getOffset());
      assertEquals(1062, tiffField0.getTag());
      assertEquals((-1478), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1598, 242, fieldTypeLong0, 1291L, (byte)0, byteArray0, byteOrder0, 280);
      int int0 = tiffField0.getOffset();
      assertEquals(242, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(280, tiffField0.getSortHint());
      assertEquals(1598, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(115, 115, (FieldType) null, 115, (-1085L), byteArray0, byteOrder0, (byte) (-26));
      int int0 = tiffField0.getOffset();
      assertEquals((-1085), int0);
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1484), "N|Fu7");
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-98);
      byteArray0[4] = (byte)96;
      TiffField tiffField0 = new TiffField(270, 1084, fieldTypeRational0, 2036L, (-2147483648L), byteArray0, byteOrder0, (-1564));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1564), tiffField0.getSortHint());
      assertEquals(421, int0);
      assertEquals(1084, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(270, ">dSUbjva-g");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-45);
      TiffField tiffField0 = new TiffField((-1330), (-4792), fieldTypeShort0, 544, 544, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1330), tiffField0.getTag());
      assertEquals((-11520), int0);
      assertEquals((-4792), tiffField0.getDirectoryType());
      assertEquals(544, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, (-268), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 270);
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-268), tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, (byte)79, fieldTypeShort0, (byte)1, (byte)79, byteArray0, byteOrder0, (-1390));
      tiffField0.getIntValue();
      assertEquals((-1390), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-55);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1734), 85, fieldTypeByte0, (-1734), 85, byteArray0, byteOrder0, 12);
      tiffField0.getFieldTypeName();
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals((-1734), tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(104, 104, fieldTypeFloat0, 1, (-516L), byteArray0, byteOrder0, (-924));
      tiffField0.getFieldTypeName();
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals((-516), tiffField0.getOffset());
      assertEquals((-924), tiffField0.getSortHint());
      assertEquals(104, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(270, (-1074), fieldTypeShort0, 2296L, 270, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1074), tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1019), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1019), 0, fieldTypeDouble0, 0, (-1659L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-1019), tiffField0.getTag());
      assertEquals((-1659), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1074), 1, fieldTypeShort0, 2535L, 270, byteArray0, byteOrder0, (-1074));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1074), tiffField0.getSortHint());
      assertEquals((-1074), tiffField0.getTag());
      assertEquals(270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2140154352, 48259, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-2713));
      tiffField0.getDoubleValue();
      assertEquals(2140154352, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(48259, tiffField0.getDirectoryType());
      assertEquals((-2713), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[40];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField((byte)74, 63, fieldTypeLong0, 1L, 48259, byteArray0, byteOrder0, 48259);
      tiffField0.getDoubleValue();
      assertEquals(48259, tiffField0.getOffset());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getTag());
      assertEquals(48259, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1617, 1, fieldTypeRational0.LONG, 1, 1617, byteArray0, byteOrder0, (byte)14);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1617, tiffField0.getOffset());
      assertEquals(1617, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(335, 0, fieldTypeDouble0, (-1L), 335, byteArray0, (ByteOrder) null, 335);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(335, tiffField0.getTag());
      assertEquals(335, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1940), fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, (byte) (-104));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-104), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1940), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1909), (-1909), fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getCount();
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals((-1909), tiffField0.getDirectoryType());
      assertEquals((-1909), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(335, 0, fieldTypeDouble0, (-1L), 335, byteArray0, (ByteOrder) null, 335);
      long long0 = tiffField0.getCount();
      assertEquals((-1L), long0);
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(335, tiffField0.getTag());
      assertEquals(335, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, (-480));
      tiffField0.getBytesLength();
      assertEquals((-480), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "<Xg]ui8lhDwho1V");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "<Xg]ui8lhDwho1V", 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte)104, fieldTypeAscii0, (byte)112, (byte)53, byteArray0, byteOrder0, 377);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(377, tiffField0.getSortHint());
      assertEquals(53, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-905), (FieldType) null, (-905), (-2921L), (byte[]) null, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals((-2921), tiffField0.getOffset());
      assertEquals((-905), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 116, fieldTypeShort0, 2535L, 5512L, byteArray0, byteOrder0, (byte)60);
      tiffField0.getByteArrayValue();
      assertEquals(116, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(5512, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3086, 2102, (FieldType) null, 203L, (-1779L), byteArray0, byteOrder0, 51008);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("{)");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 0L, (-1940), byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The magic number must contain at least one byte");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "=p$;+Xeb#F(|.Y]P(o");
      assertEquals((-1940), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1143, 65535, fieldTypeShort0, (-1074), 4L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1378, 18246, fieldTypeLong0, 1378, (-2912L), (byte[]) null, byteOrder0, 1027);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-5218), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40, (-2154), fieldTypeRational0, (-2154), 4L, byteArray0, byteOrder0, 2948);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(104, 104, fieldTypeLong0.FLOAT, 1, (-516L), byteArray0, byteOrder0, (-924));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)74, 3103, fieldTypeLong0, (-1073L), 3471L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1734), 85, fieldTypeByte0, (-1734), 85, byteArray0, byteOrder0, (-1734));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-905), (FieldType) null, (-905), (-2921L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50971, 4, fieldTypeByte0, (-1L), (byte) (-55), byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1734), 85, fieldTypeByte0, (-1734), 85, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(335, 0, fieldTypeDouble0, (-1L), 335, byteArray0, (ByteOrder) null, 335);
      MockFile mockFile0 = new MockFile("kisc.dr9MDS", "kisc.dr9MDS");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(831, "/ij");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147314779), 831, fieldTypeLong0, (-2176L), 813L, byteArray0, byteOrder0, (-2147302287));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1378, 18246, fieldTypeLong0, 1378, (-2912L), (byte[]) null, byteOrder0, 1027);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1378, tiffField0.getTag());
      assertEquals(18246, tiffField0.getDirectoryType());
      assertEquals(1027, tiffField0.getSortHint());
      assertEquals((-2912), tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(996, 996, fieldTypeShort0, 0L, 996, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(996, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(996, tiffField0.getTag());
      assertEquals(996, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(49, 2529, (FieldType) null, 255L, 49, (byte[]) null, byteOrder0, 2529);
      tiffField0.getFieldType();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(2529, tiffField0.getSortHint());
      assertEquals(2529, tiffField0.getDirectoryType());
      assertEquals(49, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(596, 596, fieldTypeDouble0, 596, 1L, byteArray0, byteOrder0, (byte) (-44));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(596, tiffField0.getTag());
      assertEquals(596, int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 1774, (FieldType) null, (-1717986917), 0, (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1530), (-1717986917), fieldTypeLong0, (-1907L), (-825L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1231, "Up%u*Y.'z&~9");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1983, (byte)0, fieldTypeByte0, (byte)39, (byte)21, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1983, tiffField0.getTag());
      assertEquals(21, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1530), (-1717986917), fieldTypeLong0, (-1907L), (-825L), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-825), tiffField0.getOffset());
      assertEquals((-1530), int0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-84), 50, fieldTypeLong0, 3003L, 112L, (byte[]) null, byteOrder0, (-3055));
      long long0 = tiffField0.getCount();
      assertEquals(3003L, long0);
      assertEquals((-3055), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getOffset());
      assertEquals((-84), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-111), (-111), fieldTypeLong0, (-1L), (-1L), byteArray0, byteOrder0, (-111));
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals((-111), tiffField0.getDirectoryType());
      assertEquals((-111), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(48259, 50, fieldTypeShort0, 624L, 624L, byteArray0, byteOrder0, 48259);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48246, 48246, fieldTypeDouble0.ASCII, 111, (-836L), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      CharBuffer charBuffer0 = CharBuffer.allocate(2727);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(293, 665, fieldTypeLong0, 1949, 2727, byteArray0, byteOrder0, 1466);
      tiffField0.getIntValueOrArraySum();
      assertEquals(665, tiffField0.getDirectoryType());
      assertEquals(1466, tiffField0.getSortHint());
      assertEquals(293, tiffField0.getTag());
      assertEquals(2727, tiffField0.getOffset());
      assertEquals(1949L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1086, 1086, fieldTypeByte0, 1086, 0L, byteArray0, byteOrder0, (byte) (-58));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7d3d8d4c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)1, (byte)79, fieldTypeShort0, (byte)1, (byte)79, byteArray0, byteOrder0, (-1390));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1390), tiffField0.getSortHint());
      assertEquals(79, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(79, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "<Xg]ui8lhDwho1V");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "<Xg]ui8lhDwho1V", 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34029, 34029, fieldTypeAscii0, 34029, 34029, byteArray0, byteOrder0, 841);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@3d66dfb8 for: 34029 (0x84ed: ColorCharacterization): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "+Fh1i-5f#UNSxg[|G'");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(78, 50719, fieldTypeFloat0, 78, (-2191L), byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals(78, tiffField0.getTag());
      assertEquals((-2191), tiffField0.getOffset());
      assertEquals(50719, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(78L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeLong0.FLOAT, (-2147483648L), 0L, byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeLong0, 6876L, 288L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(6876L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(288, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(270, 37389, fieldTypeDouble0, 270, 270, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(270L, tiffField0.getCount());
      assertEquals(270, tiffField0.getTag());
      assertEquals(37389, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(270, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "<Xg]ui8lhDwho1V");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(809, 2147285485, fieldTypeAscii0.RATIONAL, 4902L, 9L, byteArray0, byteOrder0, 809);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4902L, tiffField0.getCount());
      assertEquals(809, tiffField0.getSortHint());
      assertEquals(809, tiffField0.getTag());
      assertEquals(9, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2147285485, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField((byte)74, 63, fieldTypeLong0, 1L, 48259, byteArray0, byteOrder0, 48259);
      tiffField0.getDoubleArrayValue();
      assertEquals(48259, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getTag());
      assertEquals(48259, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1074), 1, fieldTypeShort0, 2535L, 270, byteArray0, byteOrder0, (-1074));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getOffset());
      assertEquals((-1074), tiffField0.getTag());
      assertEquals((-1074), tiffField0.getSortHint());
      assertEquals(2535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 751, fieldTypeAscii0, 5, (-1585L), byteArray0, byteOrder0, 699);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 2727);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2727, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1484), "N|Fu7");
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)96;
      TiffField tiffField0 = new TiffField(270, 1084, fieldTypeRational0, 2036L, (-2147483648L), byteArray0, byteOrder0, (-1564));
      tiffField0.getIntArrayValue();
      assertEquals(270, tiffField0.getTag());
      assertEquals(1084, tiffField0.getDirectoryType());
      assertEquals((-1564), tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2036L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1717986917), "ProfileEmbedPolicy");
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(37121);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(458, (-1717986917), fieldTypeLong0, 1L, 1068L, byteArray0, byteOrder0, (-2147314779));
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1068, tiffField0.getOffset());
      assertEquals(458, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-2147314779), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1074), 1, fieldTypeShort0, 2535L, 270, byteArray0, byteOrder0, (-1074));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getOffset());
      assertEquals(2535L, tiffField0.getCount());
      assertEquals((-1074), tiffField0.getTag());
      assertEquals((-1074), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeLong0.FLOAT, (-2147483648L), 0L, byteArray0, byteOrder0, (byte)9);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@61c2b4ee
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "");
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34029, 34029, fieldTypeAscii0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)79);
      String string0 = tiffField0.getStringValue();
      assertEquals(34029, tiffField0.getTag());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(34029, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-84), 50, fieldTypeLong0, 3003L, 112L, (byte[]) null, byteOrder0, (-3055));
      String string0 = tiffField0.getTagName();
      assertEquals(112, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xffffffac)", string0);
      assertEquals((-3055), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2147483646), fieldTypeLong0, 773L, (-2147483646), (byte[]) null, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(48132, 5, fieldTypeFloat0, 568, 0L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals("48132 (0xbc04: ImageType): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (568 Float)", string0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1231, "Up%u*Y.'z&~9");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1983, (byte)0, fieldTypeByte0, (byte)39, (byte)21, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("1983 (0x7bf: Unknown Tag): 0, 0, 0, 0 (39 Up%u*Y.'z&~9)", string0);
      assertEquals(21, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(111, 2196, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SSHORT).SBYTE, 3174, 5482L, byteArray0, byteOrder0, 2196);
      tiffField0.dump();
      assertEquals(3174L, tiffField0.getCount());
      assertEquals(2196, tiffField0.getDirectoryType());
      assertEquals(5482, tiffField0.getOffset());
      assertEquals(2196, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34740, 34740, fieldTypeFloat0.DOUBLE, 34740, 34740, byteArray0, byteOrder0, 34740);
      tiffField0.dump();
      assertEquals(34740, tiffField0.getSortHint());
      assertEquals(34740, tiffField0.getDirectoryType());
      assertEquals(34740, tiffField0.getTag());
      assertEquals(34740, tiffField0.getOffset());
      assertEquals(34740L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48283, 35, fieldTypeDouble0, 35, 48283, byteArray0, byteOrder0, 48283);
      String string0 = tiffField0.toString();
      assertEquals("48283 (0xbc9b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (35 Double)", string0);
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(48283, tiffField0.getOffset());
      assertEquals(48283, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2526), 2452, fieldTypeLong0, 546, (-1094L), byteArray0, byteOrder0, 546);
      String string0 = tiffField0.toString();
      assertEquals((-1094), tiffField0.getOffset());
      assertEquals("-2526 (0xfffff622: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (546 SLong)", string0);
      assertEquals(2452, tiffField0.getDirectoryType());
      assertEquals(546, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeFloat0.SSHORT, 71, (-1L), byteArray0, byteOrder0, (-1199));
      String string0 = tiffField0.getValueDescription();
      assertEquals(71, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(71, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1199), tiffField0.getSortHint());
      assertEquals(71L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)85, 862, fieldTypeShort0, (byte)85, (-1023L), byteArray0, byteOrder0, 59);
      String string0 = tiffField0.toString();
      assertEquals(862, tiffField0.getDirectoryType());
      assertEquals("85 (0x55: Unknown Tag): 0 (85 Short)", string0);
      assertEquals((-1023), tiffField0.getOffset());
      assertEquals(59, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "<Xg]ui8lhDwho1V");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)2, (byte)0, fieldTypeAscii0, 2147483647L, (byte)2, byteArray0, byteOrder0, (byte)104);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.toString();
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48246, 48246, fieldTypeDouble0.ASCII, 111, (-836L), byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(48246, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getBytesLength());
      assertEquals(111L, tiffField0.getCount());
      assertEquals(48246, tiffField0.getTag());
      assertEquals((-836), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[185];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(568, 568, fieldTypeFloat0, 568, (-4L), byteArray0, byteOrder0, 568);
      String string0 = tiffField0.getValueDescription();
      assertEquals(568, tiffField0.getTag());
      assertEquals(568, tiffField0.getDirectoryType());
      assertEquals(568, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(2272, tiffField0.getBytesLength());
      assertEquals(568L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, (-268), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 270);
      tiffField0.toString();
      assertEquals(1, tiffField0.getTag());
      assertEquals(270, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-268), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, (-406), fieldTypeLong0, (byte)0, 1, byteArray0, (ByteOrder) null, (-163));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-163), tiffField0.getSortHint());
      assertEquals((-406), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2680, 2680, fieldTypeLong0, 2680, 0, byteArray0, byteOrder0, (-2810));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147230794, (-406));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2680, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-2810), tiffField0.getSortHint());
      assertEquals(2680, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 0L, (-1940), byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1940), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65535, (String) null);
      TiffField tiffField0 = new TiffField(12, 17, fieldTypeFloat0, 11, 11, byteArray0, byteOrder0, 10);
      tiffField0.getFieldTypeName();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "... (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeLong0, (byte)39, 2359L, byteArray0, (ByteOrder) null, (-163));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2359L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(39L, tiffField0.getCount());
      assertEquals((-163), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(28, (-487), fieldTypeShort0, 4754L, 2147483647L, byteArray0, byteOrder0, 28);
      tiffField0.dump();
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals((-487), tiffField0.getDirectoryType());
      assertEquals(4754L, tiffField0.getCount());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeLong0, 50, 50, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "&O:CIwGcNS!");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1074), 1, fieldTypeShort0, 2535L, 270, byteArray0, byteOrder0, (-1074));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(270, tiffField0.getOffset());
      assertEquals((-1074), tiffField0.getSortHint());
      assertEquals(5070, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("-1074 (0xfffffbce: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "");
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34029, 34029, fieldTypeAscii0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)79);
      tiffField0.dump();
      assertEquals(34029, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(34029, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1440), (-1940), fieldTypeLong0, (-945), (-2921L), (byte[]) null, (ByteOrder) null, 41489);
      tiffField0.getByteOrder();
      assertEquals(41489, tiffField0.getSortHint());
      assertEquals((-2921), tiffField0.getOffset());
      assertEquals((-945L), tiffField0.getCount());
      assertEquals((-1940), tiffField0.getDirectoryType());
      assertEquals((-1440), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1734), 85, fieldTypeByte0, (-1734), 85, byteArray0, byteOrder0, (-1734));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147230794, 2147230794);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1734), tiffField0.getTag());
      assertEquals((-1734), tiffField0.getSortHint());
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Byte", string0);
      assertEquals(85, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
      assertNotNull(string0);
  }
}
