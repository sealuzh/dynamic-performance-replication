/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:37:20 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3257);
      String string0 = "+l?uN<`**k:9C[c$";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3257, "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$");
      boolean boolean0 = false;
      fieldWriter0.visitAnnotation("char", false);
      Attribute attribute0 = new Attribute("+l?uN<`**k:9C[c$");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      mockMinguoDate0.getMockedClassName();
      // Undeclared exception!
      try { 
        classWriter0.visitField(65508, "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", mockMinguoDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@7f5553ef
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("");
      ByteVector byteVector0 = new ByteVector(953);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3257, "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3257, "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3257, "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$", "+l?uN<`**k:9C[c$");
      Attribute attribute0 = new Attribute("+l?uN<`**k:9C[c$");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("+l?uN<`**k:9C[c$", true);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65508, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      attribute0.next = null;
      ByteVector byteVector0 = new ByteVector(65508);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.visitAttribute(attribute0);
      int int0 = Member.DECLARED;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3257);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3257, "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      ByteVector byteVector0 = new ByteVector(1);
      byte[] byteArray0 = new byte[0];
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("ConstantValue", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      ClassWriter classWriter1 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, (-318), "0'X_=*&\"", "+l?uN<`**k:9C[c$", "0'X_=*&\"", "+l?uN<`**k:9C[c$");
      Attribute attribute0 = new Attribute("j");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65508, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      ByteVector byteVector0 = new ByteVector(2225);
      fieldWriter0.put(byteVector0);
      classWriter0.version = (-28);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-28), "e.", "", "e.", "e.");
      ByteVector byteVector0 = new ByteVector(2225);
      fieldWriter0.put(byteVector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Type.VOID;
      ByteVector byteVector1 = null;
      try {
        byteVector1 = new ByteVector((-3227));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65508, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(2225);
      fieldWriter0.put(byteVector0);
      classWriter0.version = (-28);
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Type.VOID;
      fieldWriter0.visitAnnotation("The filter must not be null", false);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      fieldWriter0.put(byteVector0);
      int int1 = fieldWriter0.getSize();
      assertEquals(36, int1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1591), "", "", (String) null, "j");
      Attribute attribute0 = new Attribute("");
      ByteVector byteVector0 = new ByteVector(3754);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
