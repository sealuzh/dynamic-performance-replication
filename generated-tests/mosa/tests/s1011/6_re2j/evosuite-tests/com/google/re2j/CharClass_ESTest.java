/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:27:20 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[8];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[8];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(2677, 2);
      CharClass charClass1 = charClass0.cleanClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-116), 91);
      CharClass charClass2 = charClass0.cleanClass();
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-223), 3993);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(867, 867);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendRange(8488, (-3694));
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[18];
      CharClass charClass0 = new CharClass();
      charClass0.appendClassWithSign(intArray0, (-1742));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[12];
      intArray0[0] = 992;
      CharClass charClass0 = new CharClass();
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass1 = new CharClass();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][5];
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.appendTable(intArray0);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 4207;
      intArray0[1] = 1114111;
      intArray0[2] = 4207;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 4207);
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass2.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      charClass3.toArray();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(1300, 1411);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-238);
      intArray0[1] = 609;
      intArray0[2] = 1;
      intArray0[3] = (-238);
      intArray0[4] = 1009;
      intArray0[5] = 1401;
      intArray0[6] = 4180;
      intArray0[7] = 1114111;
      intArray0[8] = (-795);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      charClass0.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][5];
      charClass0.appendTableWithSign(intArray0, (-271));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-478), (-478));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      CharClass charClass2 = charClass1.appendTable(intArray0);
      charClass2.negateClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-2175), (-2175));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[8];
      int[][] intArray1 = new int[6][0];
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendFoldedRange(1, 1107492);
      CharClass charClass3 = charClass2.cleanClass();
      charClass3.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 4207;
      intArray0[1] = 1114111;
      intArray0[2] = 67640;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[3][3];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.negateClass();
      // Undeclared exception!
      charClass1.appendFoldedRange(352, 1090648);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[18];
      intArray0[0] = (-1723);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      charClass0.appendClassWithSign(intArray0, (-1723));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 978;
      intArray0[1] = 66639;
      int[][] intArray1 = new int[1][9];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange(617, 617);
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 608;
      charClass0.appendFoldedRange(64, 608);
      charClass0.cleanClass();
      CharGroup charGroup0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        charClass0.appendGroup(charGroup0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(68557, 68557);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray0 = new int[6][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 1;
      intArray1[1] = 1108;
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 1108;
      intArray2[1] = 91;
      intArray2[2] = 1;
      intArray2[4] = 64;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 1108;
      intArray0[2] = intArray3;
      intArray0[3] = intArray2;
      int[] intArray4 = new int[0];
      intArray0[4] = intArray4;
      int[] intArray5 = new int[9];
      intArray5[0] = 91;
      intArray5[1] = 1108;
      intArray5[2] = 4;
      intArray5[4] = 91;
      intArray5[5] = 4;
      intArray5[6] = 1;
      intArray5[7] = 3885;
      intArray5[8] = 1108;
      intArray0[5] = intArray5;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[1] = 1114111;
      intArray0[2] = 1114111;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = new CharClass();
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = new CharClass(intArray0);
      charClass0.appendLiteral(1114111, 1);
  }
}
