/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:11:04 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)102;
      Segment segment0 = new Segment(byteArray0, (byte)125, 198, true, false);
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, 8192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.push(segment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(459);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split((-100));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment1.limit = 99;
      Segment segment2 = segment0.prev.unsharedCopy();
      // Undeclared exception!
      try { 
        segment2.split(99);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)15;
      byteArray0[0] = (byte)15;
      Segment segment0 = new Segment(byteArray0, (byte)15, 10244, true, true);
      // Undeclared exception!
      try { 
        segment0.split(2982);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.prev = segment0;
      segment0.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      int int0 = 1;
      Segment segment1 = new Segment();
      segment1.owner = false;
      segment1.prev = segment0;
      segment1.prev.sharedCopy();
      // Undeclared exception!
      try { 
        segment1.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment(byteArray0, (byte)0, 10244, true, true);
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)15;
      Segment segment0 = new Segment(byteArray0, (byte)0, (byte)0, true, true);
      Segment segment1 = new Segment();
      segment1.pos = (int) (byte)103;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 9598);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.limit = 1436;
      segment1.limit = 1436;
      segment0.prev.next = segment1;
      Segment segment2 = segment1.sharedCopy();
      segment2.writeTo(segment1, 2872);
      // Undeclared exception!
      try { 
        segment0.prev.next.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.next = segment1;
      segment0.limit = 1436;
      segment1.limit = 1436;
      Segment segment2 = new Segment();
      segment0.prev.writeTo(segment1, 2872);
      segment1.unsharedCopy();
      Segment segment3 = segment0.unsharedCopy();
      segment0.compact();
      segment0.writeTo(segment1, 5320);
      Segment segment4 = new Segment();
      // Undeclared exception!
      try { 
        segment3.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte)47;
      Segment segment1 = new Segment(byteArray0, (-12), 1854, true, false);
      segment0.prev = segment1;
      segment0.compact();
      assertNotSame(segment0, segment1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      int int0 = 1496;
      segment0.limit = 1759;
      segment0.next = segment1;
      segment1.limit = 1759;
      Segment segment2 = segment0.prev.unsharedCopy();
      segment2.owner = false;
      segment2.shared = true;
      Segment segment3 = segment0.sharedCopy();
      segment3.writeTo(segment1, 3518);
      Segment segment4 = segment1.unsharedCopy();
      // Undeclared exception!
      try { 
        segment4.writeTo(segment0.prev, 7036);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
