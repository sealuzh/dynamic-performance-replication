/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 23:53:04 GMT 2018
 */

package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonPrimitive;
import com.google.gson.internal.Excluder;
import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.lang.reflect.Field;
import java.lang.reflect.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReflectiveTypeAdapterFactory_ESTest extends ReflectiveTypeAdapterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Field field0 = null;
      Gson gson0 = new Gson();
      Class<Object> class0 = Object.class;
      TypeToken<Object> typeToken0 = TypeToken.get(class0);
      Excluder excluder0 = new Excluder();
      excluder0.create(gson0, typeToken0);
      Class<Type> class1 = Type.class;
      gson0.toJson((Object) typeToken0, (Type) class1);
      Class<Type> class2 = Type.class;
      // Undeclared exception!
      try { 
        gson0.fromJson("{}", class2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to invoke no-args constructor for interface java.lang.reflect.Type. Register an InstanceCreator with Gson for this type may fix this problem.
         //
         verifyException("com.google.gson.internal.ConstructorConstructor$14", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Field field0 = null;
      Class<Object> class0 = Object.class;
      Excluder excluder0 = new Excluder();
      Gson gson0 = new Gson();
      Class<ReflectiveTypeAdapterFactory.BoundField> class1 = ReflectiveTypeAdapterFactory.BoundField.class;
      // Undeclared exception!
      try { 
        gson0.fromJson("This is not a JSON Primitive.", class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to invoke no-args constructor for class com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField. Register an InstanceCreator with Gson for this type may fix this problem.
         //
         verifyException("com.google.gson.internal.ConstructorConstructor$14", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Field field0 = null;
      Class<Object> class0 = Object.class;
      Excluder excluder0 = Excluder.DEFAULT;
      Gson gson0 = new Gson();
      int int0 = ObjectStreamConstants.baseWireHandle;
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(8257536);
      Class<InputStream> class1 = InputStream.class;
      // Undeclared exception!
      try { 
        gson0.fromJson((JsonElement) jsonPrimitive0, class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to invoke public java.io.InputStream() with no args
         //
         verifyException("com.google.gson.internal.ConstructorConstructor$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Field field0 = null;
      Gson gson0 = new Gson();
      Class<Object> class0 = Object.class;
      TypeToken<Object> typeToken0 = TypeToken.get(class0);
      Excluder excluder0 = Excluder.DEFAULT;
      Gson gson1 = new Gson();
      excluder0.create(gson0, typeToken0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TypeToken.getArray(class0);
      gson1.toJsonTree((Object) gson0, (Type) class0);
      // Undeclared exception!
      try { 
        gson1.toJson((Object) class0, (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.internal.$Gson$Preconditions", e);
      }
  }
}
