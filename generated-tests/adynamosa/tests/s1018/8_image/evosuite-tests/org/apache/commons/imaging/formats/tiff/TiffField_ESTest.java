/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 02:58:04 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2142825332, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[4] = (byte) (-84);
      TiffField tiffField0 = new TiffField((-1289), (-1289), fieldTypeRational0, 8336L, (byte) (-84), byteArray0, byteOrder0, (byte) (-84));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-84), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals((-1289), tiffField0.getTag());
      assertEquals((-84), tiffField0.getOffset());
      assertEquals((-1289), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2142825332, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-84);
      TiffField tiffField0 = new TiffField((-1289), (-1289), fieldTypeRational0, 8336L, (byte) (-84), byteArray0, byteOrder0, (byte) (-84));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1289), tiffField0.getDirectoryType());
      assertEquals((-84), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1289), tiffField0.getTag());
      assertEquals((-84), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-145), (-1100), fieldTypeLong0, 1, 5552L, byteArray0, byteOrder0, 50731);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-145), tiffField0.getTag());
      assertEquals((-1100), tiffField0.getDirectoryType());
      assertEquals(5552, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(50731, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40091, (byte)0, fieldTypeDouble0, 2759, 811L, byteArray0, byteOrder0, (-2146075461));
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2146075461), tiffField0.getSortHint());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (2759 Double)", string0);
      assertEquals(811, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, 50, fieldTypeByte0.SRATIONAL, 364L, 1732L, byteArray0, byteOrder0, 785);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals(1732, tiffField0.getOffset());
      assertEquals(785, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[362];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(27, (-2242), fieldTypeDouble0, (-2147483648L), 27, byteArray0, byteOrder0, 239);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-2242), tiffField0.getDirectoryType());
      assertEquals(239, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(400, 33447, fieldTypeShort0, 255L, (-6920L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals(33447, tiffField0.getDirectoryType());
      assertEquals((-6920), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "UH, td3bp_A^e%d");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, (byte) (-75));
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-75), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 0L, 817L, byteArray0, byteOrder0, 324);
      int int0 = tiffField0.getTag();
      assertEquals(817, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(324, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2302), (-1806), fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, 2147477177);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      TiffField tiffField1 = new TiffField((-1806), 0, fieldTypeShort0.ASCII, 6, 6, byteArray1, byteOrder0, 1350);
      assertEquals(0, byteArray1.length);
      
      String string0 = tiffField1.getStringValue();
      assertEquals(1350, tiffField1.getSortHint());
      assertEquals((-1806), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(6, tiffField1.getOffset());
      assertEquals((-1806), tiffField1.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1123, (FieldType) null, 1123, (-1501L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1123, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1501), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, 50, fieldTypeByte0.SRATIONAL, 364L, 1732L, byteArray0, byteOrder0, 785);
      int int0 = tiffField0.getOffset();
      assertEquals(1732, int0);
      assertEquals(36, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(785, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "InterColorProfile");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-779), (byte) (-8), fieldTypeDouble0, (byte) (-18), (-3547L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-3547), int0);
      assertEquals((-8), tiffField0.getDirectoryType());
      assertEquals((-779), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      TiffField tiffField0 = new TiffField(337, (byte)0, fieldTypeShort0, (byte)49, 337, byteArray0, byteOrder0, (-5194));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(49, int0);
      assertEquals(337, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(98, tiffField0.getBytesLength());
      assertEquals((-5194), tiffField0.getSortHint());
      assertEquals(337, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1485), (-487), fieldTypeByte0, 1L, 186L, byteArray0, byteOrder0, (-1436));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1485), tiffField0.getTag());
      assertEquals((-1436), tiffField0.getSortHint());
      assertEquals(186, tiffField0.getOffset());
      assertEquals((-487), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1180), (byte) (-64), fieldTypeLong0, 1, 817L, byteArray0, byteOrder0, 7);
      tiffField0.getIntValue();
      assertEquals((-64), tiffField0.getDirectoryType());
      assertEquals((-1180), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(817, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (byte)23, fieldTypeByte0, 1L, (-378L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals((-378), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-77);
      TiffField tiffField0 = new TiffField(2033, 1, fieldTypeByte0, 1L, (-4725L), byteArray0, (ByteOrder) null, (byte) (-94));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-94), tiffField0.getSortHint());
      assertEquals(2033, tiffField0.getTag());
      assertEquals((-4725), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3227), (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(36, (-1235), fieldTypeShort0, (-3336L), 36, byteArray0, byteOrder0, 2305);
      tiffField0.getFieldTypeName();
      assertEquals(36, tiffField0.getTag());
      assertEquals(2305, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
      assertEquals((-1235), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "InterColorProfile");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(984, 0, fieldTypeDouble0, 0, 984, byteArray0, byteOrder0, (-779));
      tiffField0.getFieldTypeName();
      assertEquals(984, tiffField0.getTag());
      assertEquals((-779), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(984, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 65535, (FieldType) null, 889L, (byte)49, byteArray0, byteOrder0, (byte)115);
      tiffField0.getFieldType();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 402L, 402L, byteArray0, byteOrder0, (-266));
      tiffField0.getFieldType();
      assertEquals(402, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-266), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-113), (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-48), (byte) (-48), fieldTypeShort0, 3465L, 2147483647L, byteArray0, byteOrder0, (byte) (-48));
      tiffField0.getFieldType();
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals((-48), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-48), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2910, 229, fieldTypeDouble0, 1L, 0, byteArray0, byteOrder0, (-2205));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(229, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2205), tiffField0.getSortHint());
      assertEquals(2910, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField(1, (byte) (-34), fieldTypeRational0, 1L, (-3575), byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getDoubleValue();
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3575), tiffField0.getOffset());
      assertEquals((-34), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[73];
      byteArray0[1] = (byte) (-121);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-79), (byte) (-121), fieldTypeShort0, 1L, (-79), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals((-79), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-79), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 50, fieldTypeByte0, 1L, 50, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3274, tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-63), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 2147462767);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-63), int0);
      assertEquals(2147462767, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeFloat0, 2877L, 65535, (byte[]) null, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)1, (byte) (-97), fieldTypeRational0.DOUBLE, 0, (byte)1, byteArray0, byteOrder0, 42033);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(42033, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-679), 0, fieldTypeByte0, (-679), 0L, byteArray0, byteOrder0, (byte) (-120));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-679), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-120), tiffField0.getSortHint());
      assertEquals((-679), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147475455, "TargetPrinter");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147475455, 2147475455, fieldTypeDouble0, 2147475455, (-964L), byteArray0, (ByteOrder) null, (byte) (-45));
      tiffField0.getByteOrder();
      assertEquals((-964), tiffField0.getOffset());
      assertEquals((-45), tiffField0.getSortHint());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(700, 1099, fieldTypeShort0.UNDEFINED, (-1529L), 1830, byteArray0, byteOrder0, 1099);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-31), (-2198), fieldTypeByte0, (-1294L), (byte) (-31), byteArray0, byteOrder0, (-433));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1343), "Feg)WZF#1 pbKQCE");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1343), (-1343), fieldTypeByte0, (-1343), (-1343), byteArray0, byteOrder0, 2146145651);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-685), 1394, fieldTypeLong0, (-685), (-685), (byte[]) null, byteOrder0, (-685));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1567, (byte)44, fieldTypeLong0, 2147483647L, (byte)14, byteArray0, byteOrder0, (byte) (-127));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41994, (-1), fieldTypeFloat0, (-89L), 41994, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 33434, fieldTypeLong0, 262140L, 2, byteArray0, byteOrder0, 1829);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "hhR|8$Gv,0Fs$Iy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1365), (-234), fieldTypeDouble0, 41492, (byte)97, byteArray0, (ByteOrder) null, (-2205));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3024, 2759, fieldTypeDouble0, 3024, 3024, byteArray0, byteOrder0, (byte)51);
      StringWriter stringWriter0 = new StringWriter((byte)31);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("3024 (0xbd0: Unknown Tag):  (3024 Double)\n", stringWriter0.toString());
      assertEquals(51, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-63), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 2147462767);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-63), tiffField0.getDirectoryType());
      assertEquals(2147462767, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146145651, (-1539), fieldTypeByte0, (byte)0, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getByteOrder();
      assertEquals(2146145651, tiffField0.getTag());
      assertEquals((-1539), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 50, fieldTypeByte0, 1L, 50, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1, byteArray1.length);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3274, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      tiffField0.getFieldType();
      assertEquals((-1744), tiffField0.getDirectoryType());
      assertEquals(2144705532, tiffField0.getSortHint());
      assertEquals((-71), tiffField0.getTag());
      assertEquals((-1744), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 3361, fieldTypeByte0, (byte)0, 50, byteArray0, byteOrder0, 3361);
      tiffField0.getValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3361, tiffField0.getSortHint());
      assertEquals(3361, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, byteOrder0, (byte) (-76));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1343), "Feg)WZF#1 pbKQCE");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1343), (-1343), fieldTypeByte0, (-1343), (-1343), byteArray0, byteOrder0, 2146145651);
      tiffField0.getCount();
      assertEquals((-1343), tiffField0.getDirectoryType());
      assertEquals(2146145651, tiffField0.getSortHint());
      assertEquals((-1343), tiffField0.getOffset());
      assertEquals((-1343), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48258, 3716, fieldTypeByte0, 2197L, 3716, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(48258, tiffField0.getTag());
      assertEquals(3716, tiffField0.getDirectoryType());
      assertEquals(2197, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3716, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2099, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 296, fieldTypeAscii0, 296, 288, byteArray0, byteOrder0, 1794);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 402L, 402L, byteArray0, byteOrder0, (-266));
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-266), tiffField0.getSortHint());
      assertEquals(1608, tiffField0.getBytesLength());
      assertEquals(402, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)36);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@551dea82 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)50, (-1428), fieldTypeDouble0, (byte)0, (-794L), byteArray0, (ByteOrder) null, 1135);
      tiffField0.getDoubleArrayValue();
      assertEquals((-794), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1428), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1135, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)127, (byte)1, fieldTypeFloat0, (byte)127, (byte)34, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(127, tiffField0.getTag());
      assertEquals(508, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2964), "12++O3+f");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50982, 50, fieldTypeLong0, 759L, (-132L), byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-132), tiffField0.getOffset());
      assertEquals(50982, tiffField0.getTag());
      assertEquals(3036, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 1, fieldTypeLong0.SHORT, (byte)31, (byte) (-1), byteArray0, byteOrder0, 793);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
      assertEquals(793, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte) (-31), fieldTypeByte0, (byte)0, 50, byteArray0, byteOrder0, (byte) (-31));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2a5f534e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 50, fieldTypeByte0, 1L, 50, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3274, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1865, (-871), fieldTypeRational0, 1146L, (-2127L), byteArray0, (ByteOrder) null, (byte) (-30));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1865, tiffField0.getTag());
      assertEquals((-2127), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals((-871), tiffField0.getDirectoryType());
      assertEquals(9168, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-5260), 32998, fieldTypeLong0, 1609L, 619L, byteArray0, byteOrder0, (-715));
      tiffField0.getIntArrayValue();
      assertEquals(619, tiffField0.getOffset());
      assertEquals((-5260), tiffField0.getTag());
      assertEquals((-715), tiffField0.getSortHint());
      assertEquals(6436, tiffField0.getBytesLength());
      assertEquals(32998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeShort0, 86L, 86L, byteArray0, byteOrder0, 86);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, intArray0.length);
      assertEquals(86, tiffField0.getOffset());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-1717986917), fieldTypeRational0, 2359L, 97, byteArray0, byteOrder0, (byte) (-93));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 47, fieldTypeByte0, 47, 2318L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@34ef300e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 50, fieldTypeByte0, 1L, 50, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(3274, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2429, (String) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte) (-127);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(10, (-499), fieldTypeAscii0, 4944L, 1558L, byteArray0, byteOrder0, 2429);
      String string0 = tiffField0.getStringValue();
      assertEquals((-499), tiffField0.getDirectoryType());
      assertEquals(2429, tiffField0.getSortHint());
      assertEquals(1558, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4944, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2429, (String) null);
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(10, (-499), fieldTypeAscii0, 4944L, 1558L, byteArray0, byteOrder0, 2429);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(10 (0xa: GPSMeasureMode): ): [Ljava.lang.String;@7a54734f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(130, "4/aP1}o7<DR 'Cv$1,n");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(100, 130, fieldTypeByte0, 130, (-2106L), byteArray0, byteOrder0, 1868);
      String string0 = tiffField0.getTagName();
      assertEquals(130, tiffField0.getDirectoryType());
      assertEquals((-2106), tiffField0.getOffset());
      assertEquals("Unknown Tag (0x64)", string0);
      assertEquals(1868, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-659), fieldTypeByte0, 2710L, (-640L), byteArray0, byteOrder0, 825);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string0);
      assertEquals(825, tiffField0.getSortHint());
      assertEquals((-659), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-640), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-5260), 32998, fieldTypeLong0, 1609L, 619L, byteArray0, byteOrder0, (-715));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|l0r@NI['V4}$n;vF9");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(32998, tiffField0.getDirectoryType());
      assertEquals((-715), tiffField0.getSortHint());
      assertEquals(6436, tiffField0.getBytesLength());
      assertEquals(1609L, tiffField0.getCount());
      assertEquals((-5260), tiffField0.getTag());
      assertEquals(619, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 210, fieldTypeShort0.FLOAT, 210, 86, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(86, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(840, tiffField0.getBytesLength());
      assertEquals(210L, tiffField0.getCount());
      assertEquals(210, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-359), (byte)50, fieldTypeByte0, 139L, (byte) (-121), byteArray0, byteOrder0, 512);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("-359 (0xfffffe99: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (139 SByte)", string0);
      assertEquals(512, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getOffset());
      assertEquals(139, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte)0, fieldTypeByte0, 'V', (byte)36, byteArray0, byteOrder0, (-2785));
      String string0 = tiffField0.toString();
      assertEquals(86, tiffField0.getBytesLength());
      assertEquals("36 (0x24: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (86 SByte)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2785), tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1308), 1109, fieldTypeFloat0, 745L, (-2278L), byteArray0, byteOrder0, 34737);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34737, tiffField0.getSortHint());
      assertEquals((-1308), tiffField0.getTag());
      assertEquals((-2278), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(745L, tiffField0.getCount());
      assertEquals(1109, tiffField0.getDirectoryType());
      assertEquals(2980, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65525, 65525, fieldTypeDouble0, 65525, 65525, byteArray0, byteOrder0, 65525);
      String string0 = tiffField0.toString();
      assertEquals(524200, tiffField0.getBytesLength());
      assertEquals("65525 (0xfff5: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65525 Double)", string0);
      assertEquals(65525, tiffField0.getSortHint());
      assertEquals(65525, tiffField0.getDirectoryType());
      assertEquals(65525, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(84, 84, fieldTypeShort0.LONG, 84, 84, byteArray0, byteOrder0, 84);
      tiffField0.dump();
      assertEquals(336, tiffField0.getBytesLength());
      assertEquals(84L, tiffField0.getCount());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getTag());
      assertEquals(84, tiffField0.getOffset());
      assertEquals(84, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1987), (-2741), fieldTypeLong0, 243L, 243L, byteArray0, byteOrder0, 71);
      MockFile mockFile0 = new MockFile("", "6m{l2oLk");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2741), tiffField0.getDirectoryType());
      assertEquals(243, tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(45L, mockFile0.length());
      assertEquals((-1987), tiffField0.getTag());
      assertEquals(972, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)50);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(400, 33447, fieldTypeShort0, 255L, (-6920L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(33447, tiffField0.getDirectoryType());
      assertEquals((-6920), tiffField0.getOffset());
      assertEquals(510, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(255L, tiffField0.getCount());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeShort0, 86L, 86L, byteArray0, byteOrder0, 86);
      tiffField0.dump();
      assertEquals(172, tiffField0.getBytesLength());
      assertEquals(86L, tiffField0.getCount());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-435), fieldTypeShort0.ASCII, 2116360696, 2116360696, byteArray0, byteOrder0, 2147477186);
      tiffField0.dump();
      assertEquals((-435), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2116360696L, tiffField0.getCount());
      assertEquals(2116360696, tiffField0.getBytesLength());
      assertEquals(2147477186, tiffField0.getSortHint());
      assertEquals(2116360696, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2099, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 296, fieldTypeAscii0, 296, 288, byteArray0, byteOrder0, 1794);
      String string0 = tiffField0.getValueDescription();
      assertEquals(288, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(296, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getOffset());
      assertEquals(296, tiffField0.getBytesLength());
      assertEquals(1794, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1987), (-2741), fieldTypeLong0, 243L, 243L, byteArray0, byteOrder0, 71);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(71, tiffField0.getSortHint());
      assertEquals((-2741), tiffField0.getDirectoryType());
      assertEquals((-1987), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(243L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 34020);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1744), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-71), tiffField0.getTag());
      assertEquals(2144705532, tiffField0.getSortHint());
      assertEquals((-1744), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1744), tiffField0.getOffset());
      assertEquals((-1744), tiffField0.getDirectoryType());
      assertEquals(2144705532, tiffField0.getSortHint());
      assertEquals((-71), tiffField0.getTag());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40091, (byte)0, fieldTypeDouble0, 2759, 811L, byteArray0, byteOrder0, (-2146075461));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2146075461), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(40091, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(811, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2385, fieldTypeLong0, 2385, 0, byteArray0, byteOrder0, (byte)116);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(116, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2385, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-63), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 2147462767);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2147462767, tiffField0.getSortHint());
      assertEquals((-63), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(337, (byte)0, fieldTypeShort0, (byte)49, 337, byteArray0, byteOrder0, (-5194));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-5194), tiffField0.getSortHint());
      assertEquals(337, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(337, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(42240, 42240, fieldTypeByte0, 280L, 42240, byteArray0, (ByteOrder) null, (byte) (-128));
      int int0 = tiffField0.getSortHint();
      assertEquals(42240, tiffField0.getTag());
      assertEquals((-128), int0);
      assertEquals(42240, tiffField0.getDirectoryType());
      assertEquals(42240, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40091, (byte)0, fieldTypeDouble0, 2759, 811L, byteArray0, byteOrder0, (-2146075461));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(811, tiffField0.getOffset());
      assertEquals((-2146075461), tiffField0.getSortHint());
      assertEquals("40091 (0x9c9b: XPTitle): ", string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 50, fieldTypeByte0, 1L, 50, byteArray0, byteOrder0, (byte)0);
      MockFile mockFile0 = new MockFile("", "R`/lp^k9$>y|[O");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(63L, mockFile0.length());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3274, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      tiffField0.getIntArrayValue();
      assertEquals(2144705532, tiffField0.getSortHint());
      assertEquals((-71), tiffField0.getTag());
      assertEquals((-1744), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1744), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-71), (-1744), fieldTypeRational0, 0L, (-1744), byteArray0, byteOrder0, 2144705532);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 34020);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-71), tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1744), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1744), tiffField0.getOffset());
      assertEquals(2144705532, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
  }
}
