/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 16:39:44 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.toHTML("F");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "~ cTLD>zz&";
      Class2HTML.toHTML("~ cTLD>zz&");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        Class2HTML.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pattern.quote("?");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      String string0 = Class2HTML.referenceType("?");
      assertEquals("<A HREF=\"?.html\" TARGET=_top>?</A>", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class2HTML.toHTML("?");
      Class2HTML.toHTML("");
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      Class2HTML.toHTML("['yQvnvFWnWt.#SgH");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "c?{Z";
      stringArray0[1] = "~X)8=";
      stringArray0[2] = "&o\"ca%.StOkz?N.";
      stringArray0[3] = "dCf";
      stringArray0[4] = "USL";
      stringArray0[5] = "";
      ClassPath classPath0 = new ClassPath(" ConstantUtf8 objects created");
      ClassPath classPath1 = new ClassPath(classPath0, "c?{Z");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath1);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, " ConstantUtf8 objects created");
      int int0 = 6;
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected class `CONSTANT_Class' at index 6 and got CONSTANT_String[8](string_index = 55)
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      java.lang.ClassLoader.getSystemClassLoader();
      Class2HTML.toHTML("=");
      Class2HTML.toHTML("=");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "=";
      stringArray0[2] = "0iLynN_3";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "F";
      Class2HTML.toHTML("F");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ">";
      String string0 = "-zip";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F");
      stringArray0[1] = "-zip";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[2] = "F";
      stringArray0[3] = "F";
      stringArray0[4] = "F";
      stringArray0[5] = "F";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // F (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class2HTML.toHTML("F");
      Class2HTML.toHTML("java.util.regex.Matcher");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "0iLynN_3";
      stringArray0[1] = "F";
      stringArray0[2] = "boolean";
      stringArray0[3] = "-d";
      stringArray0[4] = "0iLynN_3";
      stringArray0[5] = "0iLynN_3";
      stringArray0[6] = "-d";
      stringArray0[7] = "0iLynN_3";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class2HTML.toHTML("F");
      Class2HTML.toHTML("F");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("H&:WI0l->p7Bn~*tLB");
      ClassPath classPath1 = new ClassPath(classPath0, "v/");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath1);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.setClassName("H&:WI0l->p7Bn~*tLB");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "1twj%t@o_Z-");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class2HTML.toHTML("FH!ML0>#PA('|AIzM");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "FH!ML0&gt;#PA('|AIzM";
      stringArray0[1] = "FH!ML0&gt;#PA('|AIzM";
      stringArray0[2] = "-d";
      stringArray0[3] = "java.lang.String/";
      stringArray0[4] = "INSENSITIVE";
      stringArray0[5] = "FH!ML0&gt;#PA('|AIzM";
      stringArray0[6] = "FH!ML0>#PA('|AIzM";
      stringArray0[7] = "FH!ML0>#PA('|AIzM";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
