/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:47:43 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1055), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, true, true);
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitFrame(2, (-1055), stringArray0, 2, stringArray0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("do)r", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-273));
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "BR.-fU&[@C7`", "", "BR.-fU&[@C7`", (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.writeShort((byte[]) null, (-32768), (-32768));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 89;
      intArray0[1] = 8388607;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 89, (-1920682685));
      assertEquals((-1920682863), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitFrame(2, (-1015), stringArray0, 2, stringArray0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitMethodInsn(18, "RuntimeVisibleAnnotations", "Code", "`JDd0D3\"yDYkiE");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 18, "fPUEjr86in}", "<init>", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      methodWriter0.visitVarInsn((-1145047816), 65280);
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "fPUEjr86in}");
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "do)r", "Pi2HJ", stringArray0, true, true);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6799));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnoationDefault", "AnoationDefault", "AnoationDefault", stringArray0, false, false);
      methodWriter0.visitFieldInsn((-1034), ")3k}%+ X|ox)p", "O:40bizL", "NwNV@HYCoXRIA");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitMethodInsn(1, "G/JC<kP2Q8", "AnoationDefault", "Signature");
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-695));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 269, "5^n~LXw?s{e(W*&uS", "5^n~LXw?s{e(W*&uS", "5^n~LXw?s{e(W*&uS", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(269, "5^n~LXw?s{e(W*&uS", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      classWriter0.visitAnnotation("AnnotationDefalt", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "R8U=YD9j:OKb4,", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "W";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "W", "do)r", "W", stringArray0, true, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitMethodInsn(185, "W", "zxhv>B2XkKZVDl-sf=O", "do)r");
      int int0 = Type.DOUBLE;
      Frame frame0 = new Frame();
      methodWriter0.visitInsn(2);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1, stringArray0, 8, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6799));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnoationDefault", "EnclosingMethod", "EnclosingMethod", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("r~n3O<k", 1);
      methodWriter0.visitFrame(183, 183, stringArray0, 183, stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      int int0 = methodWriter1.getSize();
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 191;
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      classWriter0.visitAnnotation("AnnotationDefalt", false);
      Label label0 = new Label();
      String string0 = "$MX*1_LwcW1rWb7*NT";
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 252, "$MX*1_LwcW1rWb7*NT", (String) null, "AnnotationDefalt", stringArray0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitFrame(2, (-1015), stringArray0, 2, stringArray0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 197;
      intArray0[2] = 941;
      intArray0[3] = 185;
      intArray0[4] = 12;
      intArray0[5] = 68;
      intArray0[6] = 68;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 185, 197);
      assertEquals(209, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      Attribute attribute0 = new Attribute("AnnotationDefault");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("jw}yQr%");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2pHJ";
      classWriter0.addType("do)r");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2pHJ", "do)r", "Pi2pHJ", stringArray0, true, false);
      String[] stringArray1 = new String[5];
      stringArray1[2] = "Pi2pHJ";
      Label label0 = new Label();
      methodWriter0.visitMaxs(2, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter0.newInteger(2);
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, 1, stringArray1, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-6824));
      String[] stringArray0 = new String[2];
      boolean boolean0 = ClassReader.RESIZE;
      stringArray0[0] = "{j\u0003W{w9>dcq";
      int int0 = Frame.UNINITIALIZED_THIS;
      stringArray0[1] = "{j\u0003W{w9>dcq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-6824), "{j\u0003W{w9>dcq", "{j\u0003W{w9>dcq", "{j\u0003W{w9>dcq", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitMultiANewArrayInsn("{j\u0003W{w9>dcq", 16777222);
      methodWriter0.visitFrame(4, 34, stringArray0, 4, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber((-199), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "do)r", "Pi2HJ", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(1, 17);
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "LocalVariableTypeTable";
      stringArray0[1] = "LocalVariableTypeTable";
      stringArray0[2] = "<init>";
      stringArray0[3] = "dBq";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTypeTable", "tqG$4GG-Chg9XPz82", "<init>", stringArray0, false, false);
      methodWriter0.visitCode();
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "Ljava/lang/Synthetic;");
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "uJXBbUZ1i");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-881));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "^JP>]+[`";
      stringArray0[1] = "RuntimeVisibleAnnotations";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-881), "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitMethodInsn(255, "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations");
      methodWriter0.visitMaxs(255, (-881));
      methodWriter0.visitTypeInsn(186, "^\"X_{w;z+[(=8<*I7K-");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("Pi0pHJ");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMaxs(2, 1);
      int int0 = Frame.FLOAT;
      methodWriter0.visitFieldInsn(1, "do%)r", "5}JAR", "Pi0pHJ");
      methodWriter0.visitFrame(2, 1, stringArray0, 2, stringArray0);
      boolean boolean0 = ClassReader.RESIZE;
      methodWriter0.visitVarInsn(2, 2);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("Pi0pHJ", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "q";
      stringArray0[1] = "q";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "q", "9>HepW9}", (String) null, stringArray0, false, false);
      methodWriter0.visitVarInsn(2, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " 2:ub");
      ClassWriter classWriter0 = new ClassWriter(168);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "", "<zsH3", (String[]) null, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6799));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnoationDefault", "EnclosingMethod", "EnclosingMethod", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitMethodInsn(197, "G/JC<kP2Q8", "EnclosingMethod", "Signature");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      methodWriter0.visitCode();
      methodWriter0.visitMethodInsn(18, "RuntimeVisibleAnnotations", "Code", "`JDd0D3\"yDhkiE");
      methodWriter0.visitAnnotation("tKZG", true);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "do)r", "Pi2HJ", stringArray0, true, false);
      classWriter0.newInteger(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitIincInsn(1257, 1257);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8388608, "S_rprb", "StackMapTable", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(50);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Wi2J";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wi2J";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Wi2J", "do)r", "Wi2J", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Wi2J", 2);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.visitMethodInsn(185, "Wi2J", "zxhv>B2XkKZVDl-sf=O", "do)r");
      int int0 = Type.ARRAY;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1640, "Wi2J", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, true, false);
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitAnnotation("AnnotationDefault", false);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putLong(2039L);
      ByteVector byteVector2 = byteVector1.putInt(951);
      methodWriter0.put(byteVector2);
      methodWriter0.visitMethodInsn((-1970886741), "h{XY^32", "-J&dPm8oWK_K&", "do)r");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      methodWriter0.visitFieldInsn((-1504), "AnnotationDefault", "do)r", "RuntimLInvisiblePaKameterAnnotatiqns");
      methodWriter0.visitCode();
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      classWriter0.newField("Pi0pHJ", "Pi0pHJ", "Pi0pHJ");
      classWriter0.newClass("do%)r");
      boolean boolean0 = ClassReader.WRITER;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      methodWriter0.visitMaxs(69, 1);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      methodWriter0.visitLdcInsn("Pi0pHJ");
      methodWriter0.getSize();
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitIincInsn(69, 69);
      methodWriter0.visitFrame(6, 2262, stringArray0, 6, stringArray0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      byte[] byteArray0 = new byte[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(44, "PiJ", "o)r", "PiJ");
      classWriter0.thisName = "o)r";
      methodWriter0.visitIincInsn(1, 2);
      Item item0 = classWriter0.key3;
      methodWriter1.visitTypeInsn(1, "o)r");
      methodWriter1.visitMaxs(2, 1);
      methodWriter1.visitMethodInsn(1, "o)r", "o)r", "Ljava/lang/Synthetic;");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6753));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "BYiVvz>[;.[3sf=(", "Z", "RuntimeVisibleParameterAnnotations", (String[]) null, false, false);
      methodWriter0.visitIntInsn((-6753), 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "do)r";
      stringArray1[1] = "do)r";
      stringArray1[2] = "{H4";
      stringArray1[3] = "AnnotationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "do)r", "{H4", "AnnotationDefault", stringArray1, false, false);
      methodWriter0.visitCode();
      Frame frame0 = new Frame();
      methodWriter0.visitAnnotation("AnnotationDefault", true);
      methodWriter0.visitTypeInsn(1, "");
      methodWriter0.visitIincInsn(1, (-2037));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      classWriter0.invalidFrames = false;
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", ",v.)<jp|1gYW", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      label0.inputStackTop = (-1268);
      classWriter0.newLong(0);
      intArray0[0] = 1;
      intArray0[1] = 0;
      methodWriter0.visitAnnotation("<init>", true);
      methodWriter0.visitTypeInsn(1, "<init>");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 191);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6799));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnoationDefault", "EnclosingMethod", "EnclosingMethod", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitMethodInsn(197, "G/JC<kP2Q8", "EnclosingMethod", "Signature");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitTableSwitchInsn((-6799), 385, label0, labelArray0);
      assertSame(methodWriter1, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 20, "<init>", ",v.)<jp|1gYW", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 0;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 256);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "AngationDefalt", "AngationDefalt", "AngationDefalt", (Object) null);
      fieldWriter0.next = fieldWriter0;
      int int0 = Type.LONG;
      String[] stringArray0 = new String[1];
      classWriter0.newUTF8("=r$e");
      stringArray0[0] = "AngationDefalt";
      Item item0 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 115, "AngationDefalt", "AngationDefalt", "AngationDefalt", stringArray0, false, false);
      classWriter0.newFloat(0.0F);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("=r$e", "AngationDefalt", "=r$e", label0, label0, 2);
      int int1 = methodWriter0.getSize();
      assertEquals(26, int1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "62zTWm{=HU9K-oe";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "62zTWm{=HU9K-oe", "62zTWm{=HU9K-oe", "62zTWm{=HU9K-oe", stringArray0, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.getSize();
      classWriter0.visit(2078, (-1507), "62zTWm{=HU9K-oe", "62zTWm{=HU9K-oe", "do)r", stringArray0);
      methodWriter0.visitMethodInsn(184, "B`XzkY", "62zTWm{=HU9K-oe", "z(WGmZC2I2g IOK");
      methodWriter0.visitInsn(184);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefault";
      classWriter0.newMethod("AnnotationDefault", "<ql]Z`[S{yR(?y?J{m1", "OM{Wm_<u", false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1015), "AnnotationDefault", "do)r", "AnnotationDefault", stringArray0, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(18, 512);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "do)r", "Pi2HJ", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      methodWriter1.visitFieldInsn(251, "do)r", "`Zb\"", "da");
      int int0 = methodWriter0.getSize();
      assertEquals(54, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitMaxs(2, 1);
      int int0 = Frame.FLOAT;
      methodWriter0.visitFieldInsn(1, "do%)r", "5}JAR", "Pi0pHJ");
      methodWriter0.visitFrame(1, 1, stringArray0, 2, stringArray0);
      boolean boolean0 = ClassReader.RESIZE;
      methodWriter0.visitVarInsn(2, 2);
      classWriter0.visitAnnotation("Pi0pHJ", true);
      methodWriter0.visitIntInsn(65, 2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Ljava/lang/Synthetic;";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ljava/lang/Synthetic;", "do)r", "Ljava/lang/Synthetic;", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitFrame(11, 201, stringArray0, 201, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("do)r", "do)r", "do)r", label0, label0, 1374);
      label0.visitSubroutine(label0, 201, 201);
      methodWriter0.visitVarInsn(45, (-3453));
      methodWriter1.visitLineNumber(45, label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6842));
      classWriter0.visitField((-6842), "HL.#EH2xffT|H}2^% :", "HL.#EH2xffT|H}2^% :", "<init>", "<init>");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o)r";
      stringArray0[1] = "o)r";
      classWriter0.visit((-6842), (-6842), "<init>", "<init>", "o)r", stringArray0);
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod((-6842), "o)r", "o)r", "o)r", stringArray0);
      methodWriter0.signature = "HL.#EH2xffT|H}2^% :";
      methodWriter0.visitMultiANewArrayInsn("o)r", 1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", ",v.)<jp|1gYW", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((byte)121, "org.objectweb.asm.jip.MethodWriter", " },[4w<A((xU|A", "<init>");
      methodWriter0.visitFrame(1716, 2, stringArray0, 1, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(992, 54, stringArray0, (byte)121, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", ",v.)<jp|1gYW", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitAnnotation("!>", false);
      methodWriter0.visitTypeInsn(1, ",v.)<jp|1gYW");
      methodWriter0.visitFrame(254, 0, stringArray0, 2, stringArray0);
      methodWriter0.visitVarInsn(741, 251);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.getSize();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFrame(131072, 251, stringArray0, 251, stringArray0);
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-6824));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "long";
      int int0 = Type.VOID;
      stringArray0[1] = "long";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-6824), "long", "long", "long", stringArray0, false, false);
      methodWriter0.visitFrame(1, 1, stringArray0, 1, stringArray0);
      methodWriter0.visitMaxs(1, 2);
      methodWriter0.visitMethodInsn((-3395), "long", "7B#c9zJ{h Djf", "long");
      String string0 = null;
      Label label0 = new Label();
      Label label1 = label0.successor;
      int int1 = (-2159);
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("long", (String) null, (String) null, (Label) null, (Label) null, (-2159));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.newLong(18);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AngationDefalt";
      classWriter0.newInteger(18);
      Item item0 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 115, "do)r", "do)r", "StackMap", stringArray0, true, true);
      Attribute attribute0 = new Attribute("do)r");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "69531.hG*l-6=P<>Ih", "StackMap", " },[4w<A((xU|A");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Wi2J";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wi2J";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Wi2J", "do)r", "Wi2J", stringArray0, true, false);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "do)r";
      stringArray1[0] = "Wi2J";
      stringArray1[2] = "do)r";
      stringArray1[3] = "Wi2J";
      methodWriter0.visitAnnotation("Wi2J", false);
      methodWriter0.visitFrame(3, 185, stringArray1, 185, stringArray0);
      methodWriter0.visitVarInsn(185, (-1623746563));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int int0 = methodWriter1.getSize();
      assertEquals(66, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Ljava/lang/Synthetic;";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Ljava/lang/Synthetic;", "do)r", "Ljava/lang/Synthetic;", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter1.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitFrame(11, 201, stringArray0, 201, stringArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter2.visitLocalVariable("*|5y'_5ko)Ag", "*|5y'_5ko)Ag", "*|5y'_5ko)Ag", label1, label1, 1374);
      label0.visitSubroutine(label1, 201, 256);
      methodWriter0.visitVarInsn(45, (-3453));
      methodWriter2.visitLineNumber(45, label1);
      ByteVector byteVector1 = classWriter0.pool;
      methodWriter1.put(byteVector1);
      assertSame(methodWriter1, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "do)r", "AnnoationDefault", stringArray0, true, true);
      stringArray0[0] = "Pi2HJ";
      methodWriter0.visitLdcInsn("AnnoationDefault");
      Item item0 = classWriter0.key;
      methodWriter0.visitTypeInsn(18, "6");
      methodWriter0.classReaderLength = 18;
      methodWriter0.visitFrame(515, 18, stringArray0, 18, stringArray0);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "_do)r";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "62zTm,=HqK-o%", "_do)r", "62zTm,=HqK-o%", stringArray0, true, true);
      classWriter0.visit(2, 25, "62zTm,=HqK-o%", "62zTm,=HqK-o%", "_do)r", stringArray0);
      methodWriter0.visitMethodInsn(25, "_do)r", "62zTm,=HqK-o%", "62zTm,=HqK-o%");
      Label label0 = new Label();
      Label label1 = label0.successor;
      label0.toString();
      methodWriter0.visitVarInsn(21, (-1253));
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(21, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String[] stringArray0 = new String[5];
      classWriter0.newClass("AngationDefalt");
      stringArray0[0] = "AngationDefalt";
      Item item0 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 129, "AngationDefalt", "AngationDefalt", "AngationDefalt", (String[]) null, false, false);
      methodWriter0.visitInsn(17);
      methodWriter0.visitAnnotation("=r$e", true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitAnnotationDefault();
      methodWriter1.getSize();
      Label label0 = new Label();
      Edge edge0 = new Edge();
      methodWriter0.visitJumpInsn(17, label0);
      Integer integer0 = new Integer(53);
      methodWriter1.visitEnd();
      methodWriter0.visitVarInsn(2, (-620));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "do)r", "Pi2HJ", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.getSize();
      Label label0 = new Label();
      methodWriter1.visitJumpInsn(185, label0);
      methodWriter0.visitLdcInsn("Pi2HJ");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = 26;
      ClassWriter classWriter0 = new ClassWriter(26);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "do)r", "AnnoationDefault", stringArray0, true, false);
      int int1 = (-1048576);
      int int2 = 3800;
      methodWriter0.visitIincInsn((-738), 3800);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "<init>", ",v.)<jp|1gYW", "<init>", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitAnnotation("!>", false);
      methodWriter0.visitTypeInsn(1, ",v.)<jp|1gYW");
      methodWriter0.visitFrame(254, 0, stringArray0, 2, stringArray0);
      methodWriter0.visitVarInsn(741, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.getSize();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1667);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "RN?`k^-";
      stringArray0[2] = "RN?`k^-";
      stringArray0[3] = "RN?`k^-";
      stringArray0[4] = "RN?`k^-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-8), "RN?`k^-", "RN?`k^-", "", stringArray0, false, false);
      classWriter0.toByteArray();
      methodWriter0.visitMethodInsn(28, ",$PBk", "bZ4UjZ", " },[4w<A((xU|A");
      methodWriter0.visitVarInsn((-8), 2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-6824));
      String[] stringArray0 = new String[2];
      boolean boolean0 = ClassReader.RESIZE;
      stringArray0[0] = "+Min";
      int int0 = Frame.UNINITIALIZED_THIS;
      stringArray0[1] = "+Min";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-6824), "+Min", "+Min", "+Min", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1048575, "+Min", "+Min", "+Min");
      methodWriter0.visitLdcInsn("+Min");
      methodWriter0.visitMultiANewArrayInsn("*\"T4\"R;s2+", 1053);
      methodWriter0.visitAnnotationDefault();
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      assertNull(label0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-6824));
      String[] stringArray0 = new String[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringArray0[0] = "long";
      stringArray0[1] = "long";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-6824), "long", "long", "long", stringArray0, false, false);
      methodWriter0.visitVarInsn(57, (-290));
      methodWriter0.signature = "long";
      methodWriter0.visitMethodInsn((-290), ")V", ")V", ")V");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 1, stringArray0, (-1), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.thisName = "Code";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Code", "do)r", "Code", stringArray0, true, false);
      String[] stringArray1 = new String[7];
      classWriter0.newNameType("Code", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEDDEEDDEE");
      stringArray1[0] = "do)r";
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitAnnotationDefault();
      classWriter0.visitSource("37D+[2J~)'*);", "Deprecated");
      classWriter0.toByteArray();
      methodWriter0.signature = "Br(/";
      int int0 = (-1);
      classWriter0.visitInnerClass("LineNumberTable", "rFe #bRat'[EW$", "LineNumberTable", 2595);
      int int1 = 879;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 879, stringArray1, (-1), stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newField("9?1<lI-%/(]WTBQQ\"", "Pi0pHJ", "Pi0pHJ");
      classWriter0.newClass("do%)r");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      Edge edge0 = new Edge();
      methodWriter0.visitMaxs(2, 1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFieldInsn(2, "[=?j!", "Pi0pHJ", "[=?j!");
      int int0 = Type.ARRAY;
      methodWriter1.visitLdcInsn("Pi0pHJ");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+InM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+InM", "de4go)r", "+InM", stringArray0, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newNameTypeItem("+InM", "+InM");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "de4go)r";
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("de4go)r", "LocalVariableTable", "z2b*`>`_1E+j6^", label0, label0, 1);
      Label label1 = new Label();
      Label label2 = new Label();
      methodWriter0.visitLineNumber(2, label2);
      methodWriter0.visitLocalVariable("de4go)r", "z2b*`>`_1E+j6^", "de4go)r", label2, label0, 1554);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1554, 285212683);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1554
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = 185;
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "RuntimeInvisibleParameterAnnotations";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeInvisibleParameterAnnotations", "do)r", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      int int1 = Frame.INTEGER;
      Attribute attribute0 = new Attribute("aQ");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitAttribute(attribute0);
      int int2 = 32767;
      methodWriter0.visitFrame(32767, 2, stringArray0, 3673, stringArray0);
      methodWriter1.visitCode();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector(185);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2pHJ";
      classWriter0.addType("do)r");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2pHJ", "do)r", "Pi2pHJ", stringArray0, true, true);
      classWriter0.newInteger(2);
      Item item0 = classWriter0.key;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "{!do)r", "Pi2HJ", stringArray0, true, false);
      methodWriter0.visitInsn(2);
      methodWriter0.visitAnnotation("Ruh", true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitAnnotationDefault();
      methodWriter1.getSize();
      Label label0 = new Label();
      Edge edge0 = new Edge();
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn((-1312), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1312
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Wi2J";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wi2J";
      classWriter0.newFloat(1.0F);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Wi2J", "do)r", "Wi2J", stringArray0, true, true);
      methodWriter0.visitMultiANewArrayInsn("Wi2J", 2);
      String[] stringArray1 = new String[5];
      int[] intArray0 = new int[0];
      methodWriter0.exceptions = intArray0;
      stringArray1[0] = "Wi2J";
      stringArray1[0] = "Wi2J";
      stringArray0[0] = "do)r";
      boolean boolean0 = ClassReader.WRITER;
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(2442, 55, label0, labelArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(68, 2442);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(188);
      classWriter0.newUTF8("StackMapTable");
      classWriter0.thisName = "StackMapTable";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "StackMapTable";
      classWriter0.newConst("StackMapTable");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMapTable", "do)r", "StackMapTable", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("StackMapTable", 2);
      classWriter0.newLong(1);
      classWriter0.newUTF8("do)r");
      int[] intArray0 = new int[5];
      methodWriter0.exceptions = intArray0;
      methodWriter0.classReaderLength = 188;
      classWriter0.newMethodItem("StackMapTable", "StackMapTable", "StackMapTable", true);
      methodWriter0.visitIincInsn(2, 2);
      methodWriter0.visitTypeInsn(188, "StackMapTable");
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Ljava/lang/Synthetic;");
      methodWriter0.visitMaxs(166, (-561));
      Label label1 = label0.successor;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(3, 166, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("jwyQ%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pi0pHJ");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      classWriter0.newInteger(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      Item item0 = classWriter0.key;
      methodWriter0.visitVarInsn(169, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(1048575, 1048575);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "do)r", "AnnoationDefault", stringArray0, true, false);
      stringArray0[0] = "Pi2HJ";
      methodWriter0.visitLdcInsn("AnnoationDefault");
      Item item0 = classWriter0.key;
      methodWriter0.visitTypeInsn(32, "6");
      methodWriter0.classReaderLength = 18;
      methodWriter0.visitFrame(515, 18, stringArray0, 18, stringArray0);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      int int0 = Frame.SHORT;
      stringArray0[0] = "Yi2H!L";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Yi2H!L", "do)r", "Yi2H!L", stringArray0, true, false);
      Edge edge0 = new Edge();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      boolean boolean0 = classWriter0.invalidFrames;
      Label label0 = new Label();
      classWriter0.visit((-1142), 16777228, "LO;{TH_=TX4U 1", "Yi2H!L", "Yi2H!L", stringArray0);
      Label label1 = label0.successor;
      methodWriter0.visitMaxs(256, (-1142));
      methodWriter1.visitLabel(label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(methodWriter1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.MethodWriter@b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 618, "do)r", "do)r", "CS", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitFieldInsn(1, "E>j!", "do)r", "RuntimeVisibleAnnotations");
      methodWriter0.visitFrame(191, 248, stringArray0, 248, stringArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)28;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 248, 618);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 256
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 18;
      ClassWriter classWriter0 = new ClassWriter(18);
      String string0 = "Pi2HJ";
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      classWriter0.index = 1675;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "do)r", "AnnoationDefault", stringArray0, true, true);
      stringArray0[0] = "Pi2HJ";
      methodWriter0.visitLdcInsn("AnnoationDefault");
      Item item0 = classWriter0.key;
      int int1 = 32;
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(32, "pl");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)55;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      stringArray0[0] = "o)r";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(44, "PiJ", "o)r", "PiJ");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      classWriter0.thisName = "G3(A4_N^R32$(kwS";
      Label label1 = label0.getFirst();
      label0.info = (Object) label1;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (-1303));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1303
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      Item[] itemArray0 = new Item[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.typeTable = itemArray0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, true, true);
      stringArray0[0] = "o)r";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int int0 = Edge.NORMAL;
      methodWriter1.visitFieldInsn(1, "PiJ", "o)r", "PiJ");
      ByteVector byteVector0 = new ByteVector();
      Label label0 = new Label();
      label0.position = 0;
      methodWriter1.visitJumpInsn(0, label0);
      methodWriter0.visitFrame(0, 0, itemArray0, 18, itemArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "d4go)r", "AnnoationDefault", stringArray0, true, false);
      classWriter0.newNameTypeItem("do)r", "AnnoationDefault");
      String[] stringArray1 = new String[5];
      stringArray1[0] = "K>";
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLocalVariable("JSR/RET are not supported with computeFrames option", "LocalVariableTable", "z2b*`>`_1E+j6^", label1, label1, 1);
      methodWriter0.visitInsn(172);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      methodWriter0.visitMaxs((-895), (-6796));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      Label label0 = new Label();
      Label label1 = label0.successor;
      classWriter0.newUTF8("LO;{TH_=TX4U 1");
      classWriter0.visitField(2, "do)r", "do)r", "do)r", (Object) null);
      stringArray0[0] = "LO;{TH_=TX4U 1";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Yi2H!L", "do)r", "Yi2H!L", stringArray0, true, false);
      Label label2 = new Label();
      classWriter0.newMethodItem("Yi2H!L", "Yi2H!L", "do)r", true);
      methodWriter0.visitVarInsn(184, 184);
      classWriter0.newClassItem("Yi2H!L");
      methodWriter0.visitTryCatchBlock(label2, label0, (Label) null, "Yi2H!L");
      methodWriter0.visitMultiANewArrayInsn("Yi2H!L", 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(61, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newField("9?1<lI-%/(]WTBQQ\"", "Pi0pHJ", "jf1$");
      classWriter0.newClass("jyQ%");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do,)3", "Pi0pHJ", stringArray0, true, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ")I`1hPo1'fVp.D");
      Label label1 = new Label();
      methodWriter0.visitMaxs(2, 1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-69);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.thisName = "viHJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnoationDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnoationDefault", "do)r", "AnnoationDefault", (String[]) null, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.getSize();
      methodWriter0.visitMaxs(1, 2);
      methodWriter0.visitVarInsn(3, 1);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter1.visitParameterAnnotation(1, "Ljava/lang/Synthetic;", false);
      methodWriter0.visitIincInsn(16, 71);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+InM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+InM", "d4go)r", "+InM", stringArray0, true, false);
      classWriter0.newMethod("+InM", "aR|vp,", "+InM", true);
      methodWriter0.visitIincInsn((-1817052737), 59);
      methodWriter0.visitTypeInsn(1, "d4go)r");
      methodWriter0.visitIntInsn(990, 108);
      Item item0 = new Item();
      methodWriter0.visitMultiANewArrayInsn("Ljava/lang/Synthetic;", (-3243));
      Label label0 = new Label();
      int int0 = (-1694);
      Label[] labelArray0 = new Label[1];
      Label label1 = new Label();
      labelArray0[0] = label1;
      methodWriter0.visitTableSwitchInsn(367, (-1694), label0, labelArray0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label1, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      classWriter0.thisName = "Pi2HJ";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2HJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2HJ", "{!do)r", "Pi2HJ", stringArray0, true, false);
      methodWriter0.visitInsn(185);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{!do)r");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitAnnotationDefault();
      methodWriter1.getSize();
      Label label0 = new Label();
      Edge edge0 = new Edge();
      edge0.successor = label0;
      label0.successors = edge0;
      methodWriter1.visitJumpInsn(185, label0);
      classWriter0.version = 1;
      methodWriter1.visitMaxs(25165824, 25165824);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+InM";
      classWriter0.newNameType("P3e", "Exceptions");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+InM", "de4go)r", "+InM", stringArray0, true, true);
      classWriter0.newNameTypeItem("+InM", "+InM");
      Label label0 = new Label();
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn((-59), 16777216, label0, labelArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-3477), (-3477));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      classWriter0.visitField((-6796), "b[%", "do)r", "S_rprb", "do)r");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S_rprb";
      classWriter0.newNameType("P3e", "Exceptions");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "S_rprb", "de4go)r", "S_rprb", stringArray0, true, true);
      boolean boolean0 = ClassReader.FRAMES;
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("S_rprb", "LocalVariableTable", "2b*`>`_1E+6^", label0, label0, 1);
      Edge edge0 = label0.successors;
      Edge edge1 = label0.successors;
      Attribute attribute0 = new Attribute("Exceptions");
      methodWriter0.visitAttribute(attribute0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitFrame(16777220, 7, stringArray0, (-6796), stringArray0);
      Label label1 = new Label();
      Label label2 = new Label();
      methodWriter0.visitLocalVariable("b[%", "do)r", "b[%", label0, label2, 1);
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pVy";
      classWriter0.newInteger(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pVy", "d%)r", "Pi0pVy", stringArray0, true, false);
      Item item0 = classWriter0.key;
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(integer0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(169, 169);
      methodWriter0.visitVarInsn(24, 1);
      Label label0 = new Label();
      label0.outputStackMax = (-19);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Pi0pVy");
      methodWriter1.visitMaxs(1, 1);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      int int0 = methodWriter2.getSize();
      assertEquals(57, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-6824));
      String[] stringArray0 = new String[2];
      boolean boolean0 = ClassReader.RESIZE;
      stringArray0[0] = "+Min";
      int int0 = Frame.UNINITIALIZED_THIS;
      stringArray0[1] = "+Min";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-6824), "+Min", "+Min", "+Min", stringArray0, false, false);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 34, stringArray0, (-1), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 185;
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter(185);
      String string0 = "Wi2J";
      classWriter0.thisName = "Wi2J";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wi2J";
      classWriter0.toByteArray();
      String string1 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean1 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Wi2J", "do)r", "Wi2J", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Wi2J", 2);
      methodWriter0.classReaderLength = 2;
      Item item0 = classWriter0.key2;
      String string2 = null;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
      methodWriter0.visitTypeInsn(2, "Wi2J");
      methodWriter0.visitMaxs(2, 255);
      ByteVector byteVector0 = new ByteVector(6038);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "tb", "AngationDefalt", "tb", (Object) null);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.getSize();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "tb";
      Item item0 = classWriter0.key2;
      Item item1 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 115, "do)r", "do)r", "StackMap", stringArray0, false, false);
      methodWriter0.exceptionCount = 185;
      Label label0 = new Label();
      methodWriter0.visitLineNumber(64, label0);
      methodWriter0.visitLineNumber(115, label0);
      methodWriter0.visitMethodInsn((-3), "do)r", "tb", "Code");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6796));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+InM";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+InM", "d4go)r", "+InM", stringArray0, true, false);
      classWriter0.newMethod("+InM", "aR|vp,", "+InM", true);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-6796), "aR|vp,", "Pl#)T$W&XF$`>G GM&", "d4go)r", stringArray0, true, true);
      methodWriter0.visitVarInsn(26, 1);
      Label label0 = new Label();
      Frame frame0 = new Frame();
      frame0.owner = label0;
      Label label1 = frame0.owner;
      methodWriter0.visitTryCatchBlock(label1, label1, label0, "d?V1z2:}Dg");
      label0.visitSubroutine(label0, 2, (-1264));
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitTypeInsn((-181), "aR|vp,");
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(2, 360);
      methodWriter0.visitIntInsn((-1264), (-6796));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1667);
      int int0 = (-8);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "RN?`k^-";
      classWriter0.version = 1680;
      stringArray0[2] = "RN?`k^-";
      stringArray0[3] = "RN?`k^-";
      stringArray0[4] = "RN?`k^-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-8), "RN?`k^-", "RN?`k^-", "", stringArray0, false, false);
      classWriter0.toByteArray();
      methodWriter0.visitMethodInsn(28, ",$PBk", "9z\"<q4O=", " },[4w<A((xU|A");
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-8));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnNoaVionDefault";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AnNoaVionDefault", "do)r", "AnNoaVionDefault", stringArray0, true, true);
      String[] stringArray1 = new String[5];
      stringArray1[1] = "Pi2HJ";
      stringArray1[2] = "do)r";
      stringArray1[3] = "Pi2HJ";
      stringArray1[4] = "E>j!";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      classWriter0.newLong((-1L));
      methodWriter1.getSize();
      methodWriter1.visitCode();
      methodWriter1.visitTypeInsn(2, "Pi2HJ");
      methodWriter1.visitFrame(2, 2, stringArray1, 29, stringArray0);
      int[] intArray0 = new int[10];
      intArray0[1] = 29;
      intArray0[2] = 2;
      intArray0[1] = 26;
      intArray0[4] = 1;
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLocalVariable("Pi2HJ", "E>j!", "do)r", label0, label0, 26);
      methodWriter1.getSize();
      label1.info = (Object) label0;
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(196);
      classWriter0.thisName = "JSR/RET are not supported with computeFrames option";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSR/RET are not supported with computeFrames option";
      boolean boolean0 = ClassReader.ANNOTATIONS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "JSR/RET are not supported with computeFrames option", "do)r", "JSR/RET are not supported with computeFrames option", stringArray0, true, false);
      int int0 = (-253890473);
      classWriter0.newInteger(196);
      methodWriter0.visitInsn(196);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.next = methodWriter0;
      methodWriter1.next = methodWriter0;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitFieldInsn(172, "JSR/RET are not supported with computeFrames option", "do)r", "JSR/RET are not supported with computeFrames option");
      int int1 = Type.ARRAY;
      methodWriter1.next.signature = "do)r";
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        methodWriter2.visitLdcInsn(methodWriter1.next);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.MethodWriter@b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("AnnotationDefalt", 2);
      String[] stringArray1 = new String[4];
      int[] intArray0 = new int[5];
      methodWriter0.exceptions = intArray0;
      stringArray1[3] = "AnnotationDefalt";
      methodWriter0.visitTypeInsn(1, "{PG{hI");
      methodWriter0.classReaderOffset = 191;
      methodWriter0.visitIincInsn(182, 182);
      methodWriter0.visitIntInsn(2, 191);
      methodWriter0.visitAnnotationDefault();
      int int0 = Type.OBJECT;
      Label label0 = new Label();
      label0.resolve(methodWriter0, 10, (byte[]) null);
      methodWriter0.visitJumpInsn(1, label0);
      Integer integer0 = new Integer(2);
      Integer.sum(1, 91);
      methodWriter0.visitVarInsn(191, 92);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1986);
      classWriter0.newInteger(1986);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("AnnotationDefalt", 2);
      String[] stringArray1 = new String[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N6~YErFRnD_RNie");
      stringArray1[3] = "AnnotationDefalt";
      classWriter0.newClassItem(".tOdBf&gkSp6Q2}edzu");
      methodWriter0.visitTypeInsn(1, "{PG{hI");
      methodWriter0.classReaderOffset = 1986;
      methodWriter0.visitFrame(2, 1986, stringArray1, 1986, stringArray1);
      int int0 = Frame.KIND;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1, 1986);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      Integer integer0 = new Integer(1986);
      methodWriter0.visitLdcInsn("AnnotationDefalt");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newClassItem("RuntimLInvisibleParameterAnnotations");
      classWriter0.thisName = "RuntimLInvisibleParameterAnnotations";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimLInvisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimLInvisibleParameterAnnotations", "do)r", "RuntimLInvisibleParameterAnnotations", stringArray0, true, false);
      classWriter0.newInteger(185);
      methodWriter0.visitInsn(185);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.exceptionCount = 178;
      methodWriter1.visitAnnotationDefault();
      methodWriter1.visitMultiANewArrayInsn("NsPAq#BT$", 1);
      methodWriter0.exceptions = null;
      methodWriter1.visitLdcInsn("do)r");
      methodWriter1.signature = "RuntimLInvisibleParameterAnnotations";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimLInvisibleParameterAnnotations");
      methodWriter0.getSize();
      methodWriter1.visitTypeInsn(185, "do)r");
      Integer integer0 = new Integer(411);
      Label label0 = new Label();
      label0.info = (Object) classWriter0;
      methodWriter0.visitLocalVariable("", "JSR/RET are not supported with computeFrames option", "RuntimLInvisibleParameterAnnotations", label0, label0, 178);
      methodWriter1.getSize();
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "JSR/RET are not supported with computeFrames option");
      methodWriter0.visitCode();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)102;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte) (-5));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      String[] stringArray0 = new String[1];
      classWriter0.newUTF8("=r$e");
      stringArray0[0] = "AngationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AngationDefalt", "AngationDefalt", "AngationDefalt", stringArray0, false, false);
      methodWriter0.getSize();
      classWriter0.newFloat(0.0F);
      classWriter0.visit(3071, 16777218, "AngationDefalt", "AngationDefalt", "rsH~Nm?~B>v7)UP.0K", stringArray0);
      methodWriter0.visitMethodInsn(32767, "rsH~Nm?~B>v7)UP.0K", "AngationDefalt", "StackMap");
      boolean boolean0 = ClassReader.FRAMES;
      Object[] objectArray0 = new Object[1];
      methodWriter0.visitFrame((-515), 173, stringArray0, 32767, objectArray0);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      Label label0 = new Label();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newClass("jw}yQr%");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi2pHJ";
      classWriter0.addType("do)r");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi2pHJ", "do)r", "Pi2pHJ", stringArray0, true, false);
      String[] stringArray1 = new String[5];
      stringArray1[2] = "Pi2pHJ";
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter0.newInteger(2);
      methodWriter0.exceptionCount = (-1954274699);
      methodWriter0.visitVarInsn(57, (-1954274699));
      Label label1 = new Label();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.invalidFrames = false;
      classWriter0.thisName = "Cod";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Cod";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Cod", "o)r", "Cod", stringArray0, false, false);
      String[] stringArray1 = new String[17];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray1[2] = "o)r";
      methodWriter0.visitInsn((-1));
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2589, stringArray1, (-1), stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-31));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o)r");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "k", "o)r", "k", stringArray0, true, true);
      methodWriter0.classReaderLength = (-31);
      methodWriter0.visitAnnotation("k", true);
      int int0 = Type.OBJECT;
      Integer integer0 = new Integer(54);
      Integer.sum(2, 54);
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      methodWriter0.visitVarInsn(56, 1);
      methodWriter0.visitAnnotationDefault();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "PiJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      stringArray0[0] = "o)r";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int int0 = Type.OBJECT;
      boolean boolean0 = classWriter0.invalidFrames;
      Label label0 = new Label();
      classWriter0.visit(44, 44, "o)r", "o)r", "Synthetic", stringArray0);
      Label label1 = label0.successor;
      label0.successor = null;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "o)r");
      methodWriter0.visitMaxs(10, (-3142));
      // Undeclared exception!
      try { 
        methodWriter1.visitIntInsn((-3142), 568);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.thisName = "}0:";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "}0:";
      classWriter0.newClass("{!do)r");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "}0:", "{!do)r", "}0:", stringArray0, true, false);
      Integer integer0 = new Integer(1);
      Integer.getInteger("}0:", (Integer) 2);
      Integer.max(32767, 1);
      Integer.compare(2, 2);
      Integer.sum(1, 185);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitEnd();
      int int0 = Frame.BASE;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(186, "bUST>[!p883", "Wi2J", "bUST>[!p883");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String[] stringArray0 = new String[6];
      classWriter0.newClass("AngationDefalt");
      classWriter0.newUTF8("=r$e");
      stringArray0[0] = "=r$e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 148, "AngationDefalt", "AngationDefalt", "AngationDefalt", (String[]) null, false, false);
      classWriter0.newClassItem("Nxf[t>x9kWbnx+%xyZ");
      methodWriter0.visitIntInsn(2, 2);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(148, label0);
      methodWriter0.getSize();
      int[] intArray0 = new int[6];
      intArray0[0] = 17;
      intArray0[1] = 2;
      intArray0[2] = 48;
      intArray0[3] = 17;
      intArray0[4] = 2;
      intArray0[5] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 8, 148);
      methodWriter0.visitVarInsn((-2016541512), 148);
      methodWriter0.visitMaxs(2, 17);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)112;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (-1152));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1152
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "do%)r";
      int[] intArray0 = new int[0];
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      Edge edge0 = new Edge();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      Label label1 = new Label();
      Integer.sum((-769), (-642));
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("AnnotationDefalt", 2);
      String[] stringArray1 = new String[4];
      int[] intArray0 = new int[5];
      methodWriter0.exceptions = intArray0;
      stringArray1[3] = "AnnotationDefalt";
      methodWriter0.visitTypeInsn(1, "{PG{hI");
      methodWriter0.classReaderOffset = 2060;
      classWriter0.lastMethod = methodWriter0;
      methodWriter0.visitIincInsn(182, 182);
      methodWriter0.visitIntInsn(2, (-1913));
      methodWriter0.visitTypeInsn(0, "AnnotationDefalt");
      methodWriter0.visitFieldInsn(191, "AnnotationDefalt", "qd<$Du#T|DmM$3", "qd<$Du#T|DmM$3");
      classWriter0.index = 1;
      methodWriter0.visitTypeInsn(2, "qd<$Du#T|DmM$3");
      methodWriter0.visitFrame(3, 191, stringArray1, 191, stringArray0);
      methodWriter0.visitAnnotation("AnnotationDefalt", false);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)24;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)72;
      classWriter0.lastMethod.visitFrame(3, 255, stringArray1, (byte)72, stringArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "AnnotationDefalt";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AnnotationDefalt";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("AnnotationDefalt", 2);
      String[] stringArray1 = new String[4];
      int[] intArray0 = new int[5];
      methodWriter0.exceptions = intArray0;
      stringArray1[3] = "AnnotationDefalt";
      methodWriter0.visitTypeInsn(1, "{PG{hI");
      methodWriter0.classReaderOffset = 191;
      methodWriter0.visitIincInsn(182, 182);
      methodWriter0.visitIntInsn(2, 191);
      methodWriter0.visitTypeInsn(0, "AnnotationDefalt");
      methodWriter0.visitInsn(2);
      methodWriter0.visitFieldInsn(191, "AnnotationDefalt", "AnnotationDefalt", "AnnotationDefalt");
      classWriter0.index = 191;
      methodWriter0.visitTypeInsn(191, "AnnotationDefalt");
      methodWriter0.visitAnnotation("AnnotationDefalt", false);
      methodWriter0.visitIincInsn(91, 191);
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      stringArray0[0] = "o)r";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int int0 = Type.VOID;
      boolean boolean0 = ClassReader.RESIZE;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      methodWriter1.visitFieldInsn(13, "PiJ", "o)r", "PiJ");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      classWriter0.thisName = "G3(A4_N^R32$(kwS";
      Label label1 = label0.successor;
      label0.successor = null;
      methodWriter1.visitLocalVariable("o)r", "G3(A4_N^R32$(kwS", "5u rr' ;:)>?", label0, label0, (byte)0);
      methodWriter1.visitTypeInsn(0, "5u rr' ;:)>?");
      int int1 = Type.SHORT;
      label0.visitSubroutine((Label) null, 13, 4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter1.visitJumpInsn(13, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(0, (-3142));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      byte[] byteArray0 = new byte[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      stringArray0[0] = "o)r";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(44, "PiJ", "o)r", "PiJ");
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      classWriter0.thisName = "G3(A4_N^R32$(kwS";
      Label label1 = label0.getFirst();
      label0.info = (Object) label1;
      methodWriter0.visitIincInsn(1, 2);
      label0.resolve(methodWriter1, 50, byteArray0);
      Edge edge0 = label0.successors;
      methodWriter1.visitTypeInsn(1, "G3(A4_N^R32$(kwS");
      int int0 = Type.SHORT;
      label0.visitSubroutine((Label) null, (byte)0, 4);
      methodWriter1.visitMaxs(4, 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "value ", "{!do)r", (String) null, (String[]) null, false, true);
      methodWriter0.visitAnnotation("kbKGFe", true);
      methodWriter0.visitAnnotationDefault();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = classWriter0.invalidFrames;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putShort(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitIincInsn(2, 2);
      methodWriter0.put(byteVector0);
      methodWriter0.visitIntInsn(137, 48);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Type.ARRAY;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1205), "PiJ", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(199);
      boolean boolean0 = ClassReader.FRAMES;
      Item item0 = classWriter0.key3;
      classWriter0.thisName = "9C;b>,'t9td(;qZ;0e";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "d)r";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "9C;b>,'t9td(;qZ;0e", "d)r", "9C;b>,'t9td(;qZ;0e", stringArray0, true, true);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      methodWriter0.visitFrame((-1542), 199, stringArray0, 1, stringArray0);
      boolean boolean1 = ClassReader.SIGNATURES;
      Label label0 = new Label();
      Object object0 = label0.info;
      methodWriter0.visitMaxs(1, (-1542));
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "a2*_wMt");
      methodWriter0.visitMaxs((-1252), (-1252));
      methodWriter0.visitIntInsn(2, 1);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      classWriter0.thisName = "uYjDjw+,HT7z`FB";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "uYjDjw+,HT7z`FB";
      boolean boolean0 = ClassReader.ANNOTATIONS;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "uYjDjw+,HT7z`FB", "do)r", "uYjDjw+,HT7z`FB", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("uYjDjw+,HT7z`FB", 179);
      methodWriter0.visitInsn(191);
      methodWriter0.visitFrame(191, 2, stringArray0, 1, stringArray0);
      classWriter0.visitSource("do)r", "RN?`X-N");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(57, 19);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitAnnotationDefault();
      Integer integer0 = Integer.valueOf(1);
      methodWriter0.visitLdcInsn(integer0);
      Integer integer1 = new Integer(131072);
      methodWriter0.visitLdcInsn(integer1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-20);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(217);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.thisName = "i2HX";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "i2HX";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "i2HX", "{!do)r", "i2HX", stringArray0, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i2HX");
      boolean boolean1 = classWriter0.invalidFrames;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putInt(217);
      methodWriter0.visitIincInsn(217, 1);
      methodWriter0.put(byteVector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{!do)r");
      methodWriter0.visitIntInsn(186, (-3652));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitIntInsn(17, 17);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) methodWriter1;
      methodWriter0.visitFrame(186, 215, objectArray0, (-1292), stringArray0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(184);
      classWriter0.thisName = "Wi2J";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wi2J";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Wi2J", "do)r", "Wi2J", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("Wi2J", 2);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.visitMethodInsn(184, "Wi2J", "=|gRD:R=ls;@Q", "do)r");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classWriter0.lastMethod = methodWriter1;
      classWriter0.lastMethod.visitIntInsn(1510, (-176));
      methodWriter0.visitMultiANewArrayInsn(",N--W~]", 673);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "o)r";
      byte[] byteArray0 = new byte[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PiJ", "o)r", "PiJ", stringArray0, false, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      classWriter0.thisName = "o)r";
      methodWriter0.visitIincInsn(1, 2);
      classWriter0.newInteger((-1852));
      methodWriter1.visitMaxs(2, 1);
      methodWriter1.visitMethodInsn(1, "o)r", "o)r", "o)r");
      classWriter0.visitInnerClass("PiJ", "Ru#w\"N", "SY(ZOy<R25$", 44);
      methodWriter1.visitVarInsn((byte)55, 44);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      classWriter0.newField("Pi0pHJ", "Pi0pHJ", "Pi0pHJ");
      classWriter0.newClass("do%)r");
      boolean boolean0 = ClassReader.WRITER;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pi0pHJ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Pi0pHJ", "do%)r", "Pi0pHJ", stringArray0, true, false);
      Edge edge0 = new Edge();
      methodWriter0.visitMaxs(69, 1);
      methodWriter0.visitFieldInsn(1, "Pi0pHJ", "Pi0pHJ", "Pi0pHJ");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      methodWriter0.visitLdcInsn("Pi0pHJ");
      Label label0 = new Label();
      methodWriter0.visitAnnotation("do%)r", true);
      int int1 = Type.FLOAT;
      methodWriter0.visitVarInsn(2, (-1257));
      Label label1 = new Label();
      label1.outputStackMax = 2;
      methodWriter0.visitFieldInsn(4, "IlfO*LgY\r <BMm'XPo", "LocalVariableTypeTable", "Deprecated");
      methodWriter0.visitMultiANewArrayInsn("IlfO*LgY\r <BMm'XPo", 1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      Label label0 = new Label();
      Label label1 = label0.successor;
      classWriter0.newUTF8("LO;{TH_=TX4U 1");
      classWriter0.visitField(2, "do)r", "do)r", "do)r", (Object) null);
      stringArray0[0] = "LO;{TH_=TX4U 1";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Yi2H!L", "do)r", "Yi2H!L", stringArray0, true, true);
      Edge edge0 = new Edge();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Type.OBJECT;
      boolean boolean0 = classWriter0.invalidFrames;
      Label label2 = new Label();
      classWriter0.visit((-1142), 10, "LO;{TH_=TX4U 1", "Yi2H!L", "Yi2H!L", stringArray0);
      Label label3 = label2.successor;
      methodWriter1.visitTryCatchBlock(label2, label0, label0, "Synthetic");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(256, (-1142));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(188);
      int int0 = Frame.TOP;
      classWriter0.thisName = "StackMapTable";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "StackMapTable";
      int int1 = Member.DECLARED;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "StackMapTable", "do)r", "StackMapTable", stringArray0, true, false);
      methodWriter0.visitMultiANewArrayInsn("StackMapTable", 2);
      classWriter0.index = (-2767);
      classWriter0.newLong(16777216);
      methodWriter0.visitIntInsn(188, 2);
      Label label0 = new Label();
      Integer integer0 = new Integer(188);
      classWriter0.visitInnerClass((String) null, "StackMapTable", "StackMapTable", 8);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
      methodWriter0.visitMaxs(666, 1);
  }
}
