/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 12:33:55 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)62);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)62, (-2108), fieldTypeShort0, 3174L, (byte)2, byteArray0, byteOrder0, 442);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(442, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, int0);
      assertEquals((-2108), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-44), (-3541), fieldTypeByte0, 4L, (-1648L), byteArray0, byteOrder0, (-3541));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1648), tiffField0.getOffset());
      assertEquals((-44), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-3541), tiffField0.getSortHint());
      assertEquals((-3541), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40093, 2147475904, fieldTypeDouble0, (byte)16, 524L, byteArray0, (ByteOrder) null, (byte)16);
      String string0 = tiffField0.getValueDescription();
      assertEquals(524, tiffField0.getOffset());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(2147475904, tiffField0.getDirectoryType());
      assertEquals(40093, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, (-432), fieldTypeLong0, 42112, 0L, byteArray0, byteOrder0, (-432));
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-432), tiffField0.getSortHint());
      assertEquals(42112, tiffField0.getTag());
      assertEquals((-432), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.SRATIONAL, 236L, 1L, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(785, 2795, fieldTypeShort0, 521, 17179869176L, byteArray0, byteOrder0, (-1));
      tiffField0.getValue();
      assertEquals(2795, tiffField0.getDirectoryType());
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(785, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(273, 257, fieldTypeShort0, 257, 257, byteArray0, byteOrder0, 25);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(257, tiffField0.getOffset());
      assertEquals(273, tagInfo0.tag);
      assertEquals(257, tiffField0.getDirectoryType());
      assertEquals(273, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(521, 521, fieldTypeShort0, (byte)62, 2147483647L, byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getTag();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(521, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(521, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-24), (byte)84, fieldTypeDouble0, 853, 0L, byteArray0, byteOrder0, (-3337));
      int int0 = tiffField0.getTag();
      assertEquals((-24), int0);
      assertEquals((-3337), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(84, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(317, "y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-17);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 8, fieldTypeAscii0, 8, 317, byteArray0, byteOrder0, 2147441327);
      String string0 = tiffField0.getStringValue();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(317, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147441327, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(2662, 65535, fieldTypeByte0.RATIONAL, 0L, (-328L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2662, tiffField0.getTag());
      assertEquals((-328), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(785, 2795, fieldTypeShort0, 502, 17179869176L, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(785, tiffField0.getTag());
      assertEquals((-8), tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals(2795, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-24), (byte)84, fieldTypeDouble0, 853, 0L, byteArray0, byteOrder0, (-3337));
      int int0 = tiffField0.getOffset();
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-3337), tiffField0.getSortHint());
      assertEquals((-24), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.RATIONAL, 236L, 1L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getOffset();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, (-432), fieldTypeLong0, 42112, 0L, byteArray0, byteOrder0, (-432));
      tiffField0.getIntValueOrArraySum();
      assertEquals(42112, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-432), tiffField0.getDirectoryType());
      assertEquals((-432), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[6] = (byte) (-1);
      TiffField tiffField0 = new TiffField(582, (byte)0, fieldTypeRational0, 10, 299113L, byteArray0, byteOrder0, 10);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(582, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(299113, tiffField0.getOffset());
      assertEquals((-21588), int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1811), fieldTypeShort0, 1, (byte) (-52), byteArray0, byteOrder0, 5664);
      tiffField0.getIntValue();
      assertEquals((-1811), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(5664, tiffField0.getSortHint());
      assertEquals((-52), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)16;
      CharBuffer charBuffer0 = CharBuffer.allocate(421);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-471), 2146974886, fieldTypeShort0, 1L, 10L, byteArray0, byteOrder0, 2495);
      tiffField0.getIntValue();
      assertEquals(2495, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(2146974886, tiffField0.getDirectoryType());
      assertEquals((-471), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-44);
      TiffField tiffField0 = new TiffField(65535, 3563, fieldTypeByte0, 1, 3563, byteArray0, byteOrder0, (-1431655764));
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(3563, tiffField0.getDirectoryType());
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals(3563, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(16, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42112, 1, fieldTypeShort0, 42112, 1, byteArray0, byteOrder0, 42112);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(42112, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(42112, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2331, 2331, fieldTypeShort0.SRATIONAL, 2331, 2331, byteArray0, byteOrder0, 2331);
      tiffField0.getFieldTypeName();
      assertEquals(2331, tiffField0.getTag());
      assertEquals(2331, tiffField0.getDirectoryType());
      assertEquals(2331, tiffField0.getSortHint());
      assertEquals(2331, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 2144450479, fieldTypeShort0, (-2147483648L), 2945, byteArray0, byteOrder0, (byte) (-5));
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2945, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(2144450479, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "&DA\"7a=Zt5-Q=39B7{");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)84, 63, fieldTypeDouble0, (byte)0, (byte)59, byteArray0, byteOrder0, 40091);
      tiffField0.getFieldType();
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(40091, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1), "&DA\"7a=Zt5-Q=39B7{");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)84, 63, fieldTypeDouble0, (byte)0, (byte)59, byteArray0, byteOrder0, 40091);
      tiffField0.getFieldType();
      assertEquals(40091, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(327, (byte)0, fieldTypeByte0, 10L, (-1081L), byteArray0, byteOrder0, (-7));
      tiffField0.getFieldType();
      assertEquals(327, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1081), tiffField0.getOffset());
      assertEquals((-7), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2471, 2172, fieldTypeLong0, 1L, 2471, byteArray0, byteOrder0, 42112);
      tiffField0.getDoubleValue();
      assertEquals(2172, tiffField0.getDirectoryType());
      assertEquals(42112, tiffField0.getSortHint());
      assertEquals(2471, tiffField0.getTag());
      assertEquals(2471, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)16;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0, 1L, (byte)16, byteArray0, (ByteOrder) null, 106);
      tiffField0.getDoubleValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(106, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-44);
      TiffField tiffField0 = new TiffField(738, (byte) (-44), fieldTypeByte0, 1L, 3236L, byteArray0, byteOrder0, 2077);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(3236, tiffField0.getOffset());
      assertEquals(2077, tiffField0.getSortHint());
      assertEquals((-44), tiffField0.getDirectoryType());
      assertEquals(738, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((-1), (byte)0, fieldTypeRational0, (byte)0, 796L, byteArray0, byteOrder0, 10);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(796, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3660, "?iP");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4753), (-4753), fieldTypeAscii0, (-734L), 1L, byteArray0, (ByteOrder) null, (-2378));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-4753), tiffField0.getTag());
      assertEquals((-4753), int0);
      assertEquals((-2378), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((-1), (byte)0, fieldTypeRational0, (byte)0, 796L, byteArray0, byteOrder0, 10);
      tiffField0.getCount();
      assertEquals(796, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(317, "y");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 8, fieldTypeAscii0, 8, 317, byteArray0, byteOrder0, 2147441327);
      long long0 = tiffField0.getCount();
      assertEquals(317, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8L, long0);
      assertEquals(2147441327, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1), "&DA\"7a=Zt5-Q=39B7{");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)84, 63, fieldTypeDouble0, (byte)0, (byte)59, byteArray0, byteOrder0, 40091);
      tiffField0.getBytesLength();
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getTag());
      assertEquals(40091, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2945, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146697886), (-1), fieldTypeShort0, (-1), 1L, byteArray0, byteOrder0, 1953);
      tiffField0.getBytesLength();
      assertEquals((-2146697886), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1953, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-876), 0, fieldTypeFloat0, 208L, (byte)127, byteArray0, byteOrder0, (byte)44);
      tiffField0.getByteOrder();
      assertEquals((-876), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 9, fieldTypeByte0.ASCII, 1, 9, byteArray0, byteOrder0, 13);
      tiffField0.getByteArrayValue();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 1646);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1646, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(853, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 853, fieldTypeDouble0, 147L, 147L, byteArray0, byteOrder0, 1374);
      StringWriter stringWriter0 = new StringWriter((byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("0 (0x0: Unknown Tag):  (147 )\n", stringWriter0.toString());
      assertEquals(853, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeShort0, 2353, 2353, (byte[]) null, byteOrder0, 2353);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-623), (-623), fieldTypeShort0.RATIONAL, (-623), (-623), byteArray0, byteOrder0, (-623));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2331, 2331, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 2331);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-5271), 50, (FieldType) null, (-5271), 42112, byteArray0, (ByteOrder) null, (-831));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, (byte[]) null, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1878), (-1878), fieldTypeShort0, (-1878), (-1878), byteArray0, byteOrder0, (-1878));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 1L, 65535, byteArray0, byteOrder0, (-3740));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-484), fieldTypeShort0.LONG, 28, (-1038L), byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-797), (-797), fieldTypeShort0, (-797), (-4789L), byteArray0, byteOrder0, (-797));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2354), (-703), fieldTypeShort0, 1L, (-703), byteArray0, byteOrder0, (-2354));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33441, 33441, fieldTypeShort0, 33441, 33441, (byte[]) null, byteOrder0, 33441);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1412), (-1412), fieldTypeShort0, (-1412), (-1412), byteArray0, byteOrder0, (-1412));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1493), 65110, fieldTypeShort0, 1L, (-1493), byteArray0, byteOrder0, 65110);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[319];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, (FieldType) null, 255L, 255L, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeShort0, 3, 3, (byte[]) null, (ByteOrder) null, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 1603, fieldTypeShort0, 1603, (-388L), byteArray0, byteOrder0, 1603);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeShort0, 64, 64, (byte[]) null, byteOrder0, 64);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-426), (-426), fieldTypeShort0.SRATIONAL, (-426), (-426), byteArray0, byteOrder0, (-426));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33392, 33392, fieldTypeShort0.SRATIONAL, 33392, 33392, byteArray0, byteOrder0, 33392);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2331, 2331, fieldTypeShort0, 2331, 2331, (byte[]) null, byteOrder0, 2331);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-601), (-601), fieldTypeShort0, (-601), (-601), byteArray0, byteOrder0, (-601));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-98), fieldTypeShort0, 27, 1L, byteArray0, byteOrder0, (-98));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2339, 2339, fieldTypeShort0, 2339, 2339, (byte[]) null, byteOrder0, 2339);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2354), (-2354), fieldTypeShort0, (-2354), (-2354), byteArray0, byteOrder0, (-2354));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2339, 2339, fieldTypeShort0, 2339, 2339, (byte[]) null, byteOrder0, 2339);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-11), (byte) (-11), fieldTypeShort0, (byte) (-11), (byte) (-11), byteArray0, (ByteOrder) null, (byte) (-11));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2339, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 2339);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1784), (-1784), fieldTypeShort0, (-1784), (-1784), byteArray0, (ByteOrder) null, (-1784));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1398), (-1398), fieldTypeFloat0, (-1398), (-1398), byteArray0, byteOrder0, (-1398));
      StringWriter stringWriter0 = new StringWriter(39);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33404, 33404, fieldTypeRational0, 33404, 33404, byteArray0, byteOrder0, 33404);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-1885), fieldTypeShort0, (-1885), (-14272L), byteArray0, byteOrder0, (-1885));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-4554), (-4554), fieldTypeDouble0, (-4554), (-4554), byteArray0, byteOrder0, (-4554));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33357, "");
      TiffField tiffField0 = new TiffField(33357, 33357, fieldTypeDouble0, 1L, 33357, byteArray0, byteOrder0, 33357);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MockFile mockFile0 = new MockFile("SubTileBlockSize", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-814), 1, fieldTypeLong0, 255L, 50746L, byteArray0, byteOrder0, (byte) (-60));
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50746, tiffField0.getOffset());
      assertEquals(44L, mockFile0.length());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-814), tiffField0.getTag());
      assertEquals((-60), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1351), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2282), (-1351), fieldTypeAscii0, (-1351), (-2282), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2282), tiffField0.getTag());
      assertEquals((-2282), tiffField0.getOffset());
      assertEquals((-1351), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-2511L), 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1234), (-1234), fieldTypeRational0, (-1234), (-1234), (byte[]) null, byteOrder0, (-1234));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, 4, (FieldType) null, 14L, 199, byteArray0, (ByteOrder) null, 4);
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(199, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(23, (-3582), fieldTypeShort0, 1L, 1174L, byteArray0, byteOrder0, (-3582));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(584, 584, (FieldType) null, 584, 584, byteArray0, byteOrder0, 584);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(327, (byte)0, fieldTypeByte0, 10L, (-1081L), byteArray0, byteOrder0, (-7));
      int int0 = tiffField0.getOffset();
      assertEquals((-1081), int0);
      assertEquals(327, tiffField0.getTag());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(28, (-208), fieldTypeByte0, 1070L, 28, byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-208), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 118, fieldTypeDouble0, 118, 0, byteArray0, byteOrder0, (byte)123);
      int int0 = tiffField0.getTag();
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(118, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, (-1081L), 1, byteArray0, byteOrder0, (byte)4);
      long long0 = tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-1081L), long0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L3'%K]");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2586L, 0, byteArray0, byteOrder0, (-1222));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1222), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33397, 33397, fieldTypeShort0, 33397, 33397, byteArray0, byteOrder0, 33397);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33410, 33410, fieldTypeLong0, 33410, 33410, byteArray0, byteOrder0, 33410);
      tiffField0.getIntValueOrArraySum();
      assertEquals(33410, tiffField0.getOffset());
      assertEquals(33410, tiffField0.getSortHint());
      assertEquals(33410, tiffField0.getTag());
      assertEquals(33410L, tiffField0.getCount());
      assertEquals(33410, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeLong0.FLOAT, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3a288239 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33357, 33357, fieldTypeShort0.SRATIONAL, 33357, 33357, byteArray0, byteOrder0, 33357);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2339, 2339, fieldTypeDouble0, 2339, 2339, byteArray0, byteOrder0, 2339);
      tiffField0.getDoubleArrayValue();
      assertEquals(2339, tiffField0.getOffset());
      assertEquals(2339, tiffField0.getTag());
      assertEquals(2339L, tiffField0.getCount());
      assertEquals(2339, tiffField0.getDirectoryType());
      assertEquals(2339, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[306];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeByte0, 12, 12, byteArray0, byteOrder0, 12);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5eaccaee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2328, 2328, fieldTypeLong0, 2328, 2328, byteArray0, byteOrder0, 2328);
      tiffField0.getDoubleArrayValue();
      assertEquals(2328, tiffField0.getTag());
      assertEquals(2328, tiffField0.getSortHint());
      assertEquals(2328L, tiffField0.getCount());
      assertEquals(2328, tiffField0.getOffset());
      assertEquals(2328, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeShort0, (byte)3, (byte)3, byteArray0, (ByteOrder) null, (byte)3);
      tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(821, 821, fieldTypeFloat0, 821, 821, byteArray0, byteOrder0, 821);
      tiffField0.getDoubleArrayValue();
      assertEquals(821, tiffField0.getOffset());
      assertEquals(821, tiffField0.getTag());
      assertEquals(821L, tiffField0.getCount());
      assertEquals(821, tiffField0.getDirectoryType());
      assertEquals(821, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33364, 33364, fieldTypeShort0.SRATIONAL, 33364, 33364, byteArray0, byteOrder0, 33364);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(33364, tiffField0.getTag());
      assertEquals(33364, tiffField0.getDirectoryType());
      assertEquals(33364L, tiffField0.getCount());
      assertEquals(33364, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(33364, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33364, 33364, fieldTypeShort0.SRATIONAL, 33364, 33364, byteArray0, byteOrder0, 33364);
      tiffField0.getDoubleArrayValue();
      assertEquals(33364L, tiffField0.getCount());
      assertEquals(33364, tiffField0.getSortHint());
      assertEquals(33364, tiffField0.getDirectoryType());
      assertEquals(33364, tiffField0.getTag());
      assertEquals(33364, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(33364, 33364, fieldTypeDouble0, 33364, 33364, byteArray0, byteOrder0, 33364);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@14c3b2be for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[156];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2336, 2336, fieldTypeLong0, 2336, 2336, byteArray0, byteOrder0, 2336);
      tiffField0.getIntArrayValue();
      assertEquals(2336, tiffField0.getOffset());
      assertEquals(2336L, tiffField0.getCount());
      assertEquals(2336, tiffField0.getDirectoryType());
      assertEquals(2336, tiffField0.getSortHint());
      assertEquals(2336, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33397, 33397, fieldTypeShort0.SRATIONAL, 33397, 33397, byteArray0, byteOrder0, 33397);
      tiffField0.getIntArrayValue();
      assertEquals(33397L, tiffField0.getCount());
      assertEquals(33397, tiffField0.getTag());
      assertEquals(33397, tiffField0.getDirectoryType());
      assertEquals(33397, tiffField0.getSortHint());
      assertEquals(33397, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33357, 33357, fieldTypeShort0.SRATIONAL, 33357, 33357, byteArray0, byteOrder0, 33357);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeShort0, (byte)3, (byte)3, byteArray0, (ByteOrder) null, (byte)3);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 9, fieldTypeByte0.ASCII, 1, 9, byteArray0, byteOrder0, 13);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@4546b0cd
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33397, 33397, fieldTypeShort0.SRATIONAL, 33397, 33397, byteArray0, byteOrder0, 33397);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8275)", string0);
      assertEquals(33397, tiffField0.getOffset());
      assertEquals(33397, tiffField0.getSortHint());
      assertEquals(33397, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(305, 305, fieldTypeDouble0, 305, 305, byteArray0, byteOrder0, 305);
      String string0 = tiffField0.getTagName();
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(305, tiffField0.getTag());
      assertEquals(305, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getOffset());
      assertEquals("Software", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2339, 2339, fieldTypeDouble0, 2339, 2339, byteArray0, byteOrder0, 2339);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Z9)g+Tz|>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[241];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeFloat0, 58, 58, byteArray0, byteOrder0, 58);
      String string0 = tiffField0.toString();
      assertEquals("58 (0x3a: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (58) (58 Float)", string0);
      assertEquals(58, tiffField0.getOffset());
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[156];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2327, 2327, fieldTypeByte0, 2327, 0L, byteArray0, byteOrder0, 2327);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("2327 (0x917: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (156) (2327 Undefined)", string0);
      assertEquals(2327, tiffField0.getBytesLength());
      assertEquals(2327, tiffField0.getDirectoryType());
      assertEquals(2327, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(821, 821, fieldTypeFloat0, 821, 821, byteArray0, byteOrder0, 821);
      String string0 = tiffField0.toString();
      assertEquals("821 (0x335: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (821 Float)", string0);
      assertEquals(821, tiffField0.getSortHint());
      assertEquals(821, tiffField0.getDirectoryType());
      assertEquals(3284, tiffField0.getBytesLength());
      assertEquals(821, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2339, 2339, fieldTypeDouble0, 2339, 2339, byteArray0, byteOrder0, 2339);
      String string0 = tiffField0.toString();
      assertEquals(2339, tiffField0.getOffset());
      assertEquals(2339, tiffField0.getDirectoryType());
      assertEquals("2339 (0x923: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (2339 Double)", string0);
      assertEquals(2339, tiffField0.getSortHint());
      assertEquals(18712, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[417];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37373, 37373, fieldTypeDouble0, 37373, 37373, byteArray0, byteOrder0, 37373);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(37373L, tiffField0.getCount());
      assertEquals(37373, tiffField0.getDirectoryType());
      assertEquals(298984, tiffField0.getBytesLength());
      assertEquals(37373, tiffField0.getTag());
      assertEquals(37373, tiffField0.getOffset());
      assertEquals(37373, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[336];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2102, 14, fieldTypeLong0, 2102, 14, byteArray0, byteOrder0, 14);
      String string0 = tiffField0.toString();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals("2102 (0x836: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (84) (2102 IFD)", string0);
      assertEquals(8408, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(2634, 2634, fieldTypeByte0, 2634, 2634, byteArray0, byteOrder0, 2634);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2634, tiffField0.getSortHint());
      assertEquals(2634, tiffField0.getDirectoryType());
      assertEquals(2634, tiffField0.getTag());
      assertEquals(2634L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(2634, tiffField0.getOffset());
      assertEquals(2634, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-931), (-488), fieldTypeShort0, 9474L, 0L, byteArray0, byteOrder0, (-800));
      String string0 = tiffField0.toString();
      assertEquals((-488), tiffField0.getDirectoryType());
      assertEquals("-931 (0xfffffc5d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (9474 Short)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(18948, tiffField0.getBytesLength());
      assertEquals((-800), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33397, 33397, fieldTypeShort0, 33397, 33397, byteArray0, byteOrder0, 33397);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33397L, tiffField0.getCount());
      assertEquals(66794, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(33397, tiffField0.getDirectoryType());
      assertEquals(33397, tiffField0.getTag());
      assertEquals(33397, tiffField0.getOffset());
      assertEquals(33397, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(559, 559, fieldTypeAscii0, 559, 559, byteArray0, byteOrder0, 559);
      tiffField0.toString();
      assertEquals(559, tiffField0.getDirectoryType());
      assertEquals(559, tiffField0.getSortHint());
      assertEquals(559, tiffField0.getTag());
      assertEquals(559, tiffField0.getOffset());
      assertEquals(559L, tiffField0.getCount());
      assertEquals(559, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(352, 2145338309, fieldTypeAscii0, 352, 2147483647L, byteArray0, byteOrder0, 2145338309);
      tiffField0.toString();
      assertEquals(352L, tiffField0.getCount());
      assertEquals(352, tiffField0.getTag());
      assertEquals(352, tiffField0.getBytesLength());
      assertEquals(2145338309, tiffField0.getSortHint());
      assertEquals(2145338309, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33441, 11, fieldTypeShort0.FLOAT, 33441, 1178, byteArray0, byteOrder0, (-2320));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(11, 33441);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2320), tiffField0.getSortHint());
      assertEquals(33441, tiffField0.getTag());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(133764, tiffField0.getBytesLength());
      assertEquals(1178, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-52), 1078, fieldTypeByte0, 1078, 1078, byteArray0, byteOrder0, 2145957362);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2145957362, 37388);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(2145957362, tiffField0.getSortHint());
      assertEquals((-52), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Byte", string0);
      assertNotNull(string0);
      assertEquals(1078, tiffField0.getOffset());
      assertEquals(1078, tiffField0.getDirectoryType());
      assertEquals(1078, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(821, 50736, (FieldType) null, 386L, 821, byteArray0, byteOrder0, 50736);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)22, fieldTypeByte0, (byte)22, 1, byteArray0, byteOrder0, (byte)22);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(22, int0);
      assertEquals(22, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1346, 219, fieldTypeLong0, 2147482054, 1346, byteArray0, (ByteOrder) null, 1346);
      int int0 = tiffField0.getSortHint();
      assertEquals(1346, tiffField0.getOffset());
      assertEquals(1346, int0);
      assertEquals((-6376), tiffField0.getBytesLength());
      assertEquals(219, tiffField0.getDirectoryType());
      assertEquals(1346, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33403, 33403, fieldTypeShort0, 33403, 33403, byteArray0, byteOrder0, 33403);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(33403, tiffField0.getOffset());
      assertEquals("33403 (0x827b: Unknown Tag): ", string0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals(33403, tiffField0.getSortHint());
      assertEquals(33403, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2711), (-2711), (FieldType) null, 584, 584, byteArray0, byteOrder0, (-2711));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33364, 33364, fieldTypeShort0.SRATIONAL, 33364, 33364, byteArray0, byteOrder0, 33364);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(33364, tiffField0.getDirectoryType());
      assertEquals(33364, tiffField0.getTag());
      assertEquals(33364, tiffField0.getSortHint());
      assertEquals(33364L, tiffElement0.offset);
  }
}
