/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 12:14:11 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)65;
      byteArray0[4] = (byte)65;
      TiffField tiffField0 = new TiffField(1770, (-457), fieldTypeRational0, (byte)65, (-1275L), byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1275), tiffField0.getOffset());
      assertEquals(1770, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-457), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)65;
      TiffField tiffField0 = new TiffField(1770, (-457), fieldTypeRational0, (byte)65, (-1275L), byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1770, tiffField0.getTag());
      assertEquals((-457), tiffField0.getDirectoryType());
      assertEquals((-1275), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1200, 1200, fieldTypeShort0, 2L, 1L, byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1200, tiffField0.getTag());
      assertEquals(1200, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(40091, 0, fieldTypeRational0.SSHORT, (-136L), (-136L), byteArray0, byteOrder0, 116);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(116, tiffField0.getSortHint());
      assertEquals(40091, tiffField0.getTag());
      assertEquals((-136), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(330, 164, fieldTypeRational0.SHORT, 0, (byte)49, byteArray0, byteOrder0, (byte)49);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getTag());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(164, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.SLONG, 3748L, (-266L), byteArray0, byteOrder0, (-332));
      int int0 = tiffField0.getTag();
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals((-266), tiffField0.getOffset());
      assertEquals(1790, tiffField0.getDirectoryType());
      assertEquals(1790, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(91, 283, fieldTypeAscii0, 0L, 2027L, byteArray0, byteOrder0, 91);
      String string0 = tiffField0.getStringValue();
      assertEquals(2027, tiffField0.getOffset());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(91, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1562), (-2099761788), fieldTypeLong0, (-2099761788), 1830L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1562), tiffField0.getTag());
      assertEquals((-2099761788), tiffField0.getDirectoryType());
      assertEquals(1830, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1138), fieldTypeByte0, 0, 3005L, byteArray0, byteOrder0, (byte) (-18));
      int int0 = tiffField0.getSortHint();
      assertEquals(3005, tiffField0.getOffset());
      assertEquals((-18), int0);
      assertEquals((-1138), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1, 518, fieldTypeByte0, (-963L), 518, (byte[]) null, (ByteOrder) null, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(518, int0);
      assertEquals(518, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2322), (-2322), fieldTypeLong0, (-2322), (-1L), byteArray0, byteOrder0, (byte) (-53));
      int int0 = tiffField0.getOffset();
      assertEquals((-2322), tiffField0.getTag());
      assertEquals((-2322), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-53), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)101;
      TiffField tiffField0 = new TiffField((-2233), (-1), fieldTypeByte0, 1L, 3681, byteArray0, byteOrder0, (byte)101);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(3681, tiffField0.getOffset());
      assertEquals((-2233), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-18);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-21), (byte)81, fieldTypeByte0.SSHORT, 1916L, 199L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-21), tiffField0.getTag());
      assertEquals(199, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-4608), int0);
      assertEquals(81, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-21), (-1080), fieldTypeShort0, 1L, (byte)81, byteArray0, byteOrder0, (-1249));
      tiffField0.getIntValue();
      assertEquals((-1249), tiffField0.getSortHint());
      assertEquals((-1080), tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getOffset());
      assertEquals((-21), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)71;
      TiffField tiffField0 = new TiffField((byte)71, (-1), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 5117);
      tiffField0.getIntValue();
      assertEquals(71, tiffField0.getTag());
      assertEquals(5117, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2786, "g0)_{cd");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-103);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(47);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(47, 1, fieldTypeByte0, 1, 47, byteArray0, byteOrder0, (-2591));
      tiffField0.getIntValue();
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2591), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(246, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 246, (-1267L), byteArray0, (ByteOrder) null, (byte) (-123));
      tiffField0.getFieldTypeName();
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1267), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-175), (-509), fieldTypeByte0, (-509), (-509), byteArray0, byteOrder0, 5);
      tiffField0.getFieldTypeName();
      assertEquals((-509), tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-175), tiffField0.getTag());
      assertEquals((-509), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(739, 739, (FieldType) null, 739, (-269L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldType();
      assertEquals(739, tiffField0.getTag());
      assertEquals((-269), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(739, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)0, (String) null);
      TiffField tiffField0 = new TiffField((byte)0, 391, fieldTypeRational0, 112L, 391, byteArray0, byteOrder0, (-332));
      tiffField0.getFieldType();
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals(391, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(391, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-489), "Missing value: ");
      TiffField tiffField0 = new TiffField(29, (-879), fieldTypeShort0, 9864L, 2133L, byteArray0, byteOrder0, (-879));
      tiffField0.getFieldType();
      assertEquals(29, tiffField0.getTag());
      assertEquals(2133, tiffField0.getOffset());
      assertEquals((-879), tiffField0.getDirectoryType());
      assertEquals((-879), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeByte0, 1, 2147483647L, byteArray0, byteOrder0, 2140709251);
      tiffField0.getDoubleValue();
      assertEquals(2140709251, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      TiffField tiffField0 = new TiffField(0, (byte) (-54), fieldTypeShort0, 1L, 2232L, byteArray0, byteOrder0, (byte) (-54));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2232, tiffField0.getOffset());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals((-54), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-80);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(915, 915, fieldTypeFloat0, 1, (-611L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleValue();
      assertEquals((-611), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(915, tiffField0.getDirectoryType());
      assertEquals(915, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(593, 0, fieldTypeRational0.SBYTE, 1613, 2580L, byteArray0, byteOrder0, 1613);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2580, tiffField0.getOffset());
      assertEquals(593, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1613, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, (-1080), fieldTypeFloat0, 0L, (-2917L), (byte[]) null, byteOrder0, 58);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2917), tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals((-1080), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1321L, 0, byteArray0, byteOrder0, (byte)76);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(76, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-175), (-509), fieldTypeByte0, (-509), (-509), byteArray0, byteOrder0, 5);
      tiffField0.getCount();
      assertEquals((-175), tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-509), tiffField0.getDirectoryType());
      assertEquals((-509), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 32947, fieldTypeDouble0, 2959L, 32947, byteArray0, (ByteOrder) null, (byte)98);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(32947, tiffField0.getDirectoryType());
      assertEquals(32947, tiffField0.getOffset());
      assertEquals(98, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, (-4161L), 1916L, byteArray0, byteOrder0, (byte) (-21));
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-21), tiffField0.getSortHint());
      assertEquals(1916, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(7, 0, (FieldType) null, (byte)13, (-155), byteArray0, (ByteOrder) null, (byte)21);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
      assertEquals((-155), tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1701, "CameraCalibration2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(532, 532, fieldTypeLong0, 532, 532, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(532, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(532, tiffField0.getTag());
      assertEquals(532, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-175), (-175), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals((-175), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-175), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3669), 2147020927, fieldTypeByte0.SHORT, (-40), (-1625L), byteArray0, byteOrder0, (-40));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)40, 65101, fieldTypeRational0, 0L, 1916L, byteArray0, (ByteOrder) null, (-2145365813));
      File file0 = MockFile.createTempFile("TCH3yO@cQ*t", (String) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "TCH3yO@cQ*t");
      assertEquals(53L, file0.length());
      assertEquals(1916, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1, 518, fieldTypeByte0, (-963L), 518, (byte[]) null, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(907, 907, (FieldType) null, 1968L, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)49, (-2146541354), fieldTypeRational0.SHORT, (-3915L), 40091, byteArray0, byteOrder0, 40091);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1199), (-1), (FieldType) null, (-1199), (-1L), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-3648), (FieldType) null, (-3648), (-3648), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2128), (-2128), fieldTypeRational0, (-58L), (-1644L), byteArray0, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(928, (-2135070446), fieldTypeByte0, (-1157), 928, byteArray0, byteOrder0, (byte) (-26));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1315, "w+Q9)iHz>GjYW]3@VE");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1315, 1315, (byte[]) null, byteOrder0, 1315);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[123];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 2838, fieldTypeShort0, (-84L), 524280L, byteArray0, byteOrder0, (-8032));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1199, 5, fieldTypeShort0.IFD, (-975L), (-975L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 2817, fieldTypeShort0.FLOAT, (-630L), 1L, byteArray0, byteOrder0, (-879));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0, (-4161L), 1916L, byteArray0, byteOrder0, (byte) (-21));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-472), 609, (FieldType) null, 0L, (-1134L), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50684, 50684, fieldTypeShort0.LONG, (-1L), 50684, byteArray0, byteOrder0, (-29));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1741, 150, fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (-4582));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-155), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeFloat0, (-1L), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1820, (-40), fieldTypeByte0.SHORT, (-5486L), 3067L, byteArray0, byteOrder0, 1820);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2612), (-2612), fieldTypeAscii0, (byte)81, (-85L), byteArray0, byteOrder0, (-1840700268));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2612), tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-1840700268), tiffField0.getSortHint());
      assertEquals((-85), tiffField0.getOffset());
      assertEquals((-2612), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2612), (-2612), fieldTypeAscii0, (byte)81, (-85L), byteArray0, byteOrder0, (-1840700268));
      tiffField0.getByteArrayValue();
      assertEquals((-2612), tiffField0.getTag());
      assertEquals((-2612), tiffField0.getDirectoryType());
      assertEquals((-85), tiffField0.getOffset());
      assertEquals((-1840700268), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 391, fieldTypeByte0.RATIONAL, 112L, 391, byteArray0, byteOrder0, (-332));
      tiffField0.getFieldType();
      assertEquals(391, tiffField0.getDirectoryType());
      assertEquals(391, tiffField0.getOffset());
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(479, (-1393), fieldTypeByte0, 479, (-1813L), byteArray0, byteOrder0, (-3878));
      tiffField0.getValue();
      assertEquals((-3878), tiffField0.getSortHint());
      assertEquals((-1393), tiffField0.getDirectoryType());
      assertEquals(479, tiffField0.getTag());
      assertEquals((-1813), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)101, fieldTypeByte0, (-2147483648L), 0L, byteArray0, byteOrder0, (byte)101);
      int int0 = tiffField0.getOffset();
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(915, 915, fieldTypeFloat0, 1, (-611L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getTagInfo();
      assertEquals(915, tiffField0.getTag());
      assertEquals((-611), tiffField0.getOffset());
      assertEquals(915, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2347, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1717986917), 2347, fieldTypeRational0, 255L, 2347, byteArray0, byteOrder0, 2004318071);
      int int0 = tiffField0.getTag();
      assertEquals((-1717986917), int0);
      assertEquals(2004318071, tiffField0.getSortHint());
      assertEquals(2347, tiffField0.getDirectoryType());
      assertEquals(2347, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1138), fieldTypeByte0, 0, 3005L, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getCount();
      assertEquals(3005, tiffField0.getOffset());
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals((-1138), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 2479L, byteArray0, byteOrder0, (byte)81);
      tiffField0.getBytesLength();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2479, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2488), fieldTypeAscii0, 2004L, 235L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-18), (byte) (-18), fieldTypeByte0, (byte)0, (byte) (-18), byteArray0, byteOrder0, (-1131));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.SLONG, 3748L, (-266L), byteArray0, byteOrder0, (-332));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals(1790, tiffField0.getDirectoryType());
      assertEquals(1790, tiffField0.getTag());
      assertEquals((-266), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3597, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 3597, 65535, byteArray0, byteOrder0, 3597);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7ba4f732 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1770, (-457), fieldTypeRational0, (byte)65, (-1275L), byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "(0");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-32), 1, fieldTypeDouble0, (-2147483648L), 1, byteArray0, byteOrder0, 2144273657);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2144273657, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-32), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(31, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(31, 1741, fieldTypeFloat0, 508L, 4L, byteArray0, byteOrder0, 31);
      tiffField0.getDoubleArrayValue();
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(928, 65535, fieldTypeLong0, 255L, (-740L), byteArray0, byteOrder0, 2224);
      tiffField0.getDoubleArrayValue();
      assertEquals(928, tiffField0.getTag());
      assertEquals((-740), tiffField0.getOffset());
      assertEquals(2224, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(479, (-1393), fieldTypeByte0, 479, (-1813L), byteArray0, byteOrder0, (-3878));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@26a5faaa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2099761788), (-1222), fieldTypeRational0, (-2099761788), (-1L), byteArray0, byteOrder0, (-1222));
      assertEquals(381774880, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1222), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1222), tiffField0.getSortHint());
      assertEquals((-2099761788), tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1273), (-540), fieldTypeShort0, (byte)38, 21L, byteArray0, byteOrder0, 909);
      tiffField0.getDoubleArrayValue();
      assertEquals(909, tiffField0.getSortHint());
      assertEquals(76, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getOffset());
      assertEquals((-1273), tiffField0.getTag());
      assertEquals((-540), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 41995, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, (-1610612735));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(41995, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.LONG, 3748L, (-266L), byteArray0, byteOrder0, (-332));
      tiffField0.getIntArrayValue();
      assertEquals(1790, tiffField0.getDirectoryType());
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals((-266), tiffField0.getOffset());
      assertEquals(1790, tiffField0.getTag());
      assertEquals(14992, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1741, fieldTypeFloat0.SHORT, 494L, 1, byteArray0, byteOrder0, (byte)108);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(988, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeRational0, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeByte0, 215L, 302L, byteArray0, byteOrder0, 2261);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@65f4cb89 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)81, fieldTypeByte0, 1L, 939L, byteArray0, byteOrder0, 65535);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(939, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2347, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1717986917), 2347, fieldTypeRational0, 255L, 2347, byteArray0, byteOrder0, 2004318071);
      tiffField0.getIntArrayValue();
      assertEquals(2347, tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2004318071, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(2347, tiffField0.getOffset());
      assertEquals(2040, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)81;
      TiffField tiffField0 = new TiffField((-2612), (-2612), fieldTypeAscii0, (byte)81, (-85L), byteArray0, byteOrder0, (-1840700268));
      String string0 = tiffField0.getStringValue();
      assertEquals(81, tiffField0.getBytesLength());
      assertEquals((-1840700268), tiffField0.getSortHint());
      assertEquals((-85), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2612), tiffField0.getDirectoryType());
      assertEquals((-2612), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1273), (-540), fieldTypeShort0, (byte)38, 21L, byteArray0, byteOrder0, 909);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6bbce1a4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1080), (-226), fieldTypeAscii0, (byte)86, 2027L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffffbc8)", string0);
      assertEquals(2027, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-226), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1154), fieldTypeByte0, 0, 3005L, byteArray0, byteOrder0, (byte) (-18));
      String string0 = tiffField0.getTagName();
      assertEquals(3005, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1154), tiffField0.getDirectoryType());
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2198, 2198, fieldTypeShort0.FLOAT, 2198, 2198, byteArray0, byteOrder0, (-140));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2198, tiffField0.getOffset());
      assertEquals(8792, tiffField0.getBytesLength());
      assertEquals(2198, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-140), tiffField0.getSortHint());
      assertEquals(2198L, tiffField0.getCount());
      assertEquals(2198, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1741, 1741, fieldTypeFloat0, 508L, 1741, byteArray0, byteOrder0, 2144273657);
      String string0 = tiffField0.getValueDescription();
      assertEquals(508L, tiffField0.getCount());
      assertEquals(1741, tiffField0.getOffset());
      assertEquals(1741, tiffField0.getTag());
      assertEquals(1741, tiffField0.getDirectoryType());
      assertEquals(2032, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2144273657, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeRational0.BYTE, 610L, (byte)65, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(610, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65, tiffField0.getTag());
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(610L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(65, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(479, (-1393), fieldTypeByte0, 479, (-1813L), byteArray0, byteOrder0, (-3878));
      String string0 = tiffField0.toString();
      assertEquals((-1393), tiffField0.getDirectoryType());
      assertEquals("479 (0x1df: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (479 SByte)", string0);
      assertEquals(479, tiffField0.getBytesLength());
      assertEquals((-3878), tiffField0.getSortHint());
      assertEquals((-1813), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2143, (-970), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).DOUBLE, 2817, 1, byteArray0, byteOrder0, (-879));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-879), tiffField0.getSortHint());
      assertEquals(22536, tiffField0.getBytesLength());
      assertEquals(2143, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-970), tiffField0.getDirectoryType());
      assertEquals(2817L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 32947, fieldTypeDouble0, 2959L, 32947, byteArray0, (ByteOrder) null, (byte)98);
      String string0 = tiffField0.getValueDescription();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(2959L, tiffField0.getCount());
      assertEquals(32947, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(32947, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(23672, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(36, (byte)21, fieldTypeShort0.LONG, 972L, (byte) (-95), byteArray0, byteOrder0, 36);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-95), tiffField0.getOffset());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(972L, tiffField0.getCount());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(3888, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, ": ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeFloat0.LONG, 3748L, (-266L), byteArray0, byteOrder0, (-332));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-332), tiffField0.getSortHint());
      assertEquals((-266), tiffField0.getOffset());
      assertEquals(1790, tiffField0.getDirectoryType());
      assertEquals(1790, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(14992, tiffField0.getBytesLength());
      assertEquals(3748L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2817, 113, fieldTypeShort0, 515L, (-245L), byteArray0, byteOrder0, (-885));
      String string0 = tiffField0.toString();
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(1030, tiffField0.getBytesLength());
      assertEquals((-885), tiffField0.getSortHint());
      assertEquals((-245), tiffField0.getOffset());
      assertEquals("2817 (0xb01: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (515 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2145365813), (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0.SSHORT, 1916L, 508L, byteArray0, byteOrder0, (byte) (-127));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3832, tiffField0.getBytesLength());
      assertEquals(1916L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(508, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1286, 1286, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).ASCII, 9965L, 37382, byteArray0, byteOrder0, 37382);
      tiffField0.toString();
      assertEquals(9965L, tiffField0.getCount());
      assertEquals(1286, tiffField0.getDirectoryType());
      assertEquals(9965, tiffField0.getBytesLength());
      assertEquals(37382, tiffField0.getOffset());
      assertEquals(1286, tiffField0.getTag());
      assertEquals(37382, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1478), (-1840700268), fieldTypeAscii0, 0L, (-1840700268), byteArray0, byteOrder0, 308);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1478), tiffField0.getTag());
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals((-1840700268), tiffField0.getOffset());
      assertEquals(308, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1092, (-540), fieldTypeShort0, (byte)0, 21L, byteArray0, byteOrder0, 928);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(928, tiffField0.getSortHint());
      assertEquals(1092, tiffField0.getTag());
      assertEquals(21, tiffField0.getOffset());
      assertEquals((-540), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(928, (-2135070446), fieldTypeByte0, (-1157), 928, byteArray0, byteOrder0, (byte) (-26));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(928, tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-2135070446), tiffField0.getDirectoryType());
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(928, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(479, (-1393), fieldTypeByte0, 479, (-1813L), byteArray0, byteOrder0, (-3878));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(795, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals((-1813), tiffField0.getOffset());
      assertEquals(479, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-3878), tiffField0.getSortHint());
      assertEquals((-1393), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2347, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1717986917), 2347, fieldTypeRational0, 255L, 2347, byteArray0, byteOrder0, 2004318071);
      tiffField0.getFieldTypeName();
      assertEquals(2347, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(2347, tiffField0.getOffset());
      assertEquals(2004318071, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, (-1L), 1, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (-304L), byteArray0, byteOrder0, 6);
      tiffField0.dump();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-304), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7503, 7503, fieldTypeByte0, 1629L, 551L, byteArray0, byteOrder0, (byte)9);
      int int0 = tiffField0.getSortHint();
      assertEquals(7503, tiffField0.getTag());
      assertEquals(551, tiffField0.getOffset());
      assertEquals(9, int0);
      assertEquals(7503, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1092, (-540), fieldTypeShort0, (byte)0, 21L, byteArray0, byteOrder0, 928);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(928, tiffField0.getSortHint());
      assertEquals("1092 (0x444: Unknown Tag): ", string0);
      assertEquals((-540), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1221), (-1080), fieldTypeByte0, 1L, (byte) (-21), byteArray0, byteOrder0, (-1067));
      MockPrintStream mockPrintStream0 = new MockPrintStream("a5xa%7j?N7O=06K?Kfw");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-21), tiffField0.getOffset());
      assertEquals((-1067), tiffField0.getSortHint());
      assertEquals((-1080), tiffField0.getDirectoryType());
      assertEquals((-1221), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2347, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1717986917), 2347, fieldTypeRational0, 255L, 2347, byteArray0, byteOrder0, 2004318071);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2347, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(2004318071, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(2347L, tiffElement0.offset);
  }
}
