/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 11:13:10 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-4);
      TiffField tiffField0 = new TiffField(2, (-815), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).FLOAT).SSHORT, (byte)52, (byte) (-60), byteArray0, byteOrder0, (-508));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getTag());
      assertEquals((-1024), int0);
      assertEquals((-60), tiffField0.getOffset());
      assertEquals((-508), tiffField0.getSortHint());
      assertEquals((-815), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1622), (byte)0, fieldTypeDouble0, 935L, (-2658L), byteArray0, byteOrder0, 3131);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3131, tiffField0.getSortHint());
      assertEquals((-1622), tiffField0.getTag());
      assertEquals((-2658), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)31, "");
      TiffField tiffField0 = new TiffField(28, (-1609), fieldTypeAscii0, 0L, 1781L, byteArray0, byteOrder0, 9);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1609), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(1781, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(330, 974, fieldTypeRational0, 974, 2926L, byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(974, tiffField0.getDirectoryType());
      assertEquals(2926, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2145838066, (FieldType) null, 1618L, (-1603L), byteArray0, byteOrder0, 1355);
      int int0 = tiffField0.getTag();
      assertEquals(1355, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1603), tiffField0.getOffset());
      assertEquals(2145838066, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50939, (byte)0, fieldTypeDouble0.SBYTE, (byte)0, 935L, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(935, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50939, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-38);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2506L, 2506L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2506, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50939, (byte)0, fieldTypeDouble0.UNDEFINED, (byte)0, 935L, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(50939, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(935, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (byte)0, (-1382), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), int0);
      assertEquals((-1382), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(50784, 1779, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 50);
      tiffField0.getOffset();
      assertEquals(1779, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50784, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, (byte) (-115), fieldTypeRational0, 50, (-2147122178), byteArray0, byteOrder0, (-612));
      int int0 = tiffField0.getOffset();
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-612), tiffField0.getSortHint());
      assertEquals((-2147122178), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147479551, (-2671), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 473);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2671), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(473, tiffField0.getSortHint());
      assertEquals(2147479551, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte) (-10);
      TiffField tiffField0 = new TiffField((-1268), (-1358), fieldTypeRational0, (-2097542166), (-1358), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1268), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1358), tiffField0.getOffset());
      assertEquals((-1358), tiffField0.getDirectoryType());
      assertEquals((-7843007), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 457);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(457, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147479551, (-2671), fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 473);
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2147479551, tiffField0.getTag());
      assertEquals((-2671), tiffField0.getDirectoryType());
      assertEquals(473, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-115);
      TiffField tiffField0 = new TiffField(50, (-2671), fieldTypeByte0, 1L, 3170L, byteArray0, byteOrder0, 37520);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2671), tiffField0.getDirectoryType());
      assertEquals(37520, tiffField0.getSortHint());
      assertEquals(3170, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 381L, byteArray0, byteOrder0, 925);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(381, tiffField0.getOffset());
      assertEquals(925, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[45];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-4146), (String) null);
      TiffField tiffField0 = new TiffField((-4146), (-1), fieldTypeLong0, 4370L, 200L, byteArray0, byteOrder0, 4145);
      tiffField0.getFieldTypeName();
      assertEquals((-4146), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getOffset());
      assertEquals(4145, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-905), (-1303), fieldTypeByte0, 3011L, (-1303), byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals((-1303), tiffField0.getDirectoryType());
      assertEquals((-905), tiffField0.getTag());
      assertEquals((-1303), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1975, 1, (FieldType) null, 1975, 0L, byteArray0, byteOrder0, (-988));
      tiffField0.getFieldType();
      assertEquals((-988), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1975, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "`");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte) (-38), fieldTypeAscii0, (byte) (-38), 2147483647L, byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getFieldType();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-466), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2144789188), (-2144789188), fieldTypeDouble0, (-2144789188), (-2144789188), byteArray0, byteOrder0, (byte)95);
      tiffField0.getFieldType();
      assertEquals((-2144789188), tiffField0.getTag());
      assertEquals((-2144789188), tiffField0.getDirectoryType());
      assertEquals((-2144789188), tiffField0.getOffset());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (byte)117, fieldTypeByte0, 1L, 837L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleValue();
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(837, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-40);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 31, fieldTypeFloat0.IFD, 1L, 1L, byteArray0, byteOrder0, (-2535));
      tiffField0.getDoubleValue();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2535), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-4);
      TiffField tiffField0 = new TiffField((byte)50, 50, fieldTypeByte0.DOUBLE, 1L, 1634L, byteArray0, byteOrder0, (-1287));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1634, tiffField0.getOffset());
      assertEquals((-1287), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 381L, byteArray0, byteOrder0, 925);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(381, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(925, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1240, fieldTypeLong0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1240, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50939, (byte)0, fieldTypeDouble0.UNDEFINED, (byte)0, 935L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getCount();
      assertEquals(50939, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(935, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1268), (-1358), fieldTypeRational0, (-2097542166), (-1358), byteArray0, byteOrder0, 50);
      long long0 = tiffField0.getCount();
      assertEquals((-1268), tiffField0.getTag());
      assertEquals((-1358), tiffField0.getOffset());
      assertEquals((-2097542166L), long0);
      assertEquals((-1358), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "org.apache.commons.io.filefilter.WildcardFilter");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 630L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(630, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-276), (-2144789188), fieldTypeRational0, (-276), (byte) (-115), byteArray0, byteOrder0, (-2144789188));
      tiffField0.getBytesLength();
      assertEquals((-276), tiffField0.getTag());
      assertEquals((-2144789188), tiffField0.getDirectoryType());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals((-2144789188), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(879, "G|_J$l");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2199), 1434, fieldTypeRational0, 1434, 879, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(879, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1434, tiffField0.getDirectoryType());
      assertEquals((-2199), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-6), (-275), fieldTypeByte0.IFD, 454L, 1476, byteArray0, byteOrder0, (byte)117);
      tiffField0.getByteArrayValue();
      assertEquals(1476, tiffField0.getOffset());
      assertEquals((-275), tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1735), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1563, (-792), fieldTypeByte0, 0, (-792), byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getByteArrayValue();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals((-792), tiffField0.getDirectoryType());
      assertEquals(1563, tiffField0.getTag());
      assertEquals((-792), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65000, 65000, fieldTypeLong0, (byte) (-42), 1308L, byteArray0, byteOrder0, 5);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(":~|.@j");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1267, (-3300), fieldTypeDouble0.IFD, (-18112L), 1255, byteArray0, byteOrder0, 83);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2145838066, (FieldType) null, 1618L, (-1603L), byteArray0, byteOrder0, 1355);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-536), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)19, (-78), fieldTypeShort0.DOUBLE, (-78), (-1L), byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(906, (byte) (-23), fieldTypeByte0, (-3952L), (byte) (-128), byteArray0, byteOrder0, (-774));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4765, 4765, fieldTypeByte0, 4765, 4765, (byte[]) null, byteOrder0, (-905));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1944, fieldTypeByte0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-942), (-942), fieldTypeByte0, (-942), (-942), byteArray0, byteOrder0, (byte)16);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[45];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(40960, 822, fieldTypeLong0.ASCII, (-1L), (-1L), byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1L), 1, byteArray0, byteOrder0, 37397);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 265, fieldTypeByte0, 4L, 4L, (byte[]) null, byteOrder0, 1569);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)31, "");
      TiffField tiffField0 = new TiffField(15, (byte) (-23), fieldTypeAscii0, (byte) (-7), (-1719L), byteArray0, byteOrder0, (-2846));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2940, 1230, fieldTypeByte0.SRATIONAL, (-60L), (-2671), byteArray0, byteOrder0, (byte) (-115));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-742), "c(Oe)S-");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1038, (-742), fieldTypeDouble0, (-742), 1038, byteArray0, (ByteOrder) null, 1691);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ",ei<ycB~s");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      MockPrintStream mockPrintStream0 = new MockPrintStream("=/tHNQdZHYx!:");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      TiffField tiffField0 = new TiffField(18, (-387), fieldTypeShort0, (-2332L), 2738L, byteArray0, (ByteOrder) null, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1975, 1, (FieldType) null, 1975, 0L, byteArray0, byteOrder0, (-988));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34911, (-4), fieldTypeAscii0, (-932), 1730L, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeDouble0, (-2209L), (-2209L), byteArray0, byteOrder0, 48259);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("}G4S%9FroaEc}Keg:");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "bL$Dp8");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1748), (-792), fieldTypeByte0, (-792), (-1748), byteArray0, byteOrder0, 3109);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3109, tiffField0.getSortHint());
      assertEquals((-792), tiffField0.getDirectoryType());
      assertEquals((-1748), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-1748), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 3433, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SBYTE).RATIONAL, 3433, 1332L, byteArray0, byteOrder0, (byte) (-8));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3433, tiffField0.getDirectoryType());
      assertEquals((-8), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(1332, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "zOWrn17@x)jf0W");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(305, 0, fieldTypeAscii0, 510L, (-773L), byteArray0, (ByteOrder) null, (-876));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-876), tiffField0.getSortHint());
      assertEquals((-773), tiffField0.getOffset());
      assertEquals(305, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)88, (-2097542166), fieldTypeRational0, 1798L, 0L, byteArray0, byteOrder0, (-1795));
      tiffField0.getFieldType();
      assertEquals((-1795), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2097542166), tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1735), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1563, (-792), fieldTypeByte0, 0, (-792), byteArray0, byteOrder0, (byte) (-111));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(1563, tiffField0.getTag());
      assertEquals((-792), int0);
      assertEquals((-792), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2246), 2650, fieldTypeAscii0.IFD, 631L, 631L, byteArray0, byteOrder0, 453);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeLong0, 4L, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeLong0, 4L, 50, byteArray0, byteOrder0, (byte) (-42));
      int int0 = tiffField0.getOffset();
      assertEquals(50, int0);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-42), tiffField0.getDirectoryType());
      assertEquals((-42), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1622), (byte)0, fieldTypeDouble0, 935L, (-2658L), byteArray0, byteOrder0, 3131);
      int int0 = tiffField0.getTag();
      assertEquals((-2658), tiffField0.getOffset());
      assertEquals(3131, tiffField0.getSortHint());
      assertEquals((-1622), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2147122178), (-1748), fieldTypeRational0, (byte)88, (-1052L), byteArray0, byteOrder0, (-1748));
      long long0 = tiffField0.getCount();
      assertEquals((-1052), tiffField0.getOffset());
      assertEquals((-1748), tiffField0.getDirectoryType());
      assertEquals((-2147122178), tiffField0.getTag());
      assertEquals(88L, long0);
      assertEquals((-1748), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, (byte) (-115), fieldTypeRational0, 50, (-2147122178), byteArray0, byteOrder0, (-612));
      tiffField0.getBytesLength();
      assertEquals((-612), tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2147122178), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[45];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)126, (byte)126, fieldTypeLong0, 338, (byte)0, byteArray0, byteOrder0, (byte)126);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("126 (0x7e: Unknown Tag): ", string0);
      assertEquals(126, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-6), (-275), fieldTypeByte0.LONG, 454L, 1476, byteArray0, byteOrder0, (byte)117);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[58];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)57, 2606, fieldTypeDouble0.UNDEFINED, 1705, 45312L, byteArray0, byteOrder0, 1705);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2506L, 2506L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2, (-815), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).FLOAT).SSHORT, (byte)52, (byte) (-60), byteArray0, byteOrder0, (-508));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-508), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(52L, tiffField0.getCount());
      assertEquals((-60), tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-815), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)88, (-2097542166), fieldTypeRational0, 1798L, 0L, byteArray0, byteOrder0, (-1795));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeLong0, 4L, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2845, 65535, fieldTypeDouble0, (-2147364269), 744L, byteArray0, byteOrder0, 50725);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(744, tiffField0.getOffset());
      assertEquals(50725, tiffField0.getSortHint());
      assertEquals(2845, tiffField0.getTag());
      assertEquals((-2147364269L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-115), (-1), fieldTypeByte0.FLOAT, (byte)52, 1513L, byteArray0, byteOrder0, (byte) (-4));
      tiffField0.getDoubleArrayValue();
      assertEquals((-115), tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1513, tiffField0.getOffset());
      assertEquals(52L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2506L, 2506L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2, (-815), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).FLOAT).SHORT, (byte)52, (byte) (-60), byteArray0, byteOrder0, (-508));
      tiffField0.getDoubleArrayValue();
      assertEquals(52L, tiffField0.getCount());
      assertEquals((-815), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-60), tiffField0.getOffset());
      assertEquals((-508), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)88, (-2097542166), fieldTypeRational0, 1798L, 0L, byteArray0, byteOrder0, (-1795));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1798L, tiffField0.getCount());
      assertEquals((-1795), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-2097542166), tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 457);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(457, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeLong0, 4L, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getDoubleArrayValue();
      assertEquals((-42), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-42), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-60), (-240), fieldTypeByte0.SLONG, 408L, (-1644), byteArray0, byteOrder0, (byte)109);
      tiffField0.getIntArrayValue();
      assertEquals((-1644), tiffField0.getOffset());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals(408L, tiffField0.getCount());
      assertEquals((-60), tiffField0.getTag());
      assertEquals((-240), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-356), (-1382), fieldTypeDouble0.SHORT, 4L, 531L, byteArray0, byteOrder0, (-1382));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1382), tiffField0.getDirectoryType());
      assertEquals((-1382), tiffField0.getSortHint());
      assertEquals((-356), tiffField0.getTag());
      assertEquals(531, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-10);
      TiffField tiffField0 = new TiffField((-1268), (-1358), fieldTypeRational0, (-2097542166), (-1358), byteArray0, byteOrder0, 50);
      assertEquals(399531856, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1268), tiffField0.getTag());
      assertEquals((-1358), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2097542166L), tiffField0.getCount());
      assertEquals((-1358), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, (byte) (-115), fieldTypeRational0, 50, (-2147122178), byteArray0, byteOrder0, (-612));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-60), (-275), fieldTypeByte0.SLONG, 1L, (-1644), byteArray0, byteOrder0, (byte)75);
      tiffField0.getIntArrayValue();
      assertEquals((-1644), tiffField0.getOffset());
      assertEquals((-60), tiffField0.getTag());
      assertEquals((-275), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(75, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3109, (-2313), fieldTypeByte0, 2889L, (-1382), byteArray0, byteOrder0, 607);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@630599d2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2506L, 2506L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2506, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2506, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(906, (-481), fieldTypeDouble0, 408L, (-4570L), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@4c1f9ea6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeAscii0, 525L, 1730L, byteArray0, (ByteOrder) null, (-932));
      String string0 = tiffField0.getTagName();
      assertEquals((-932), tiffField0.getSortHint());
      assertEquals(1730, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x20)", string0);
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(330, 974, fieldTypeRational0, 974, 2926L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals("SubIFDs", string0);
      assertEquals(330, tiffField0.getTag());
      assertEquals(2926, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(974, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1674), 1178, fieldTypeFloat0, 72L, 627L, byteArray0, byteOrder0, 3161);
      String string0 = tiffField0.getValueDescription();
      assertEquals(627, tiffField0.getOffset());
      assertEquals(3161, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1178, tiffField0.getDirectoryType());
      assertEquals(72L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52)", string0);
      assertEquals((-1674), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-115), (-1), fieldTypeByte0.FLOAT, (byte)52, 1513L, byteArray0, byteOrder0, (byte) (-4));
      String string0 = tiffField0.toString();
      assertEquals("-115 (0xffffff8d: Unknown Tag): 0.0, 0.0 (52 Float)", string0);
      assertEquals(1513, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(208, tiffField0.getBytesLength());
      assertEquals((-4), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3109, (-2313), fieldTypeByte0, 2889L, (-1382), byteArray0, byteOrder0, 607);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "FY}C2x4F!Q@*LCRa");
      assertEquals(607, tiffField0.getSortHint());
      assertEquals((-1382), tiffField0.getOffset());
      assertEquals(3109, tiffField0.getTag());
      assertEquals(2889, tiffField0.getBytesLength());
      assertEquals(2889L, tiffField0.getCount());
      assertEquals((-2313), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[58];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)57, 2606, fieldTypeDouble0.BYTE, 1705, 45312L, byteArray0, byteOrder0, 1705);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2606, tiffField0.getDirectoryType());
      assertEquals(1705L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(57, tiffField0.getTag());
      assertEquals(1705, tiffField0.getBytesLength());
      assertEquals(1705, tiffField0.getSortHint());
      assertEquals(45312, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)73, (-3), fieldTypeLong0, 334L, 334L, byteArray0, byteOrder0, 696);
      String string0 = tiffField0.toString();
      assertEquals("73 (0x49: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (334 IFD)", string0);
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals(1336, tiffField0.getBytesLength());
      assertEquals(334, tiffField0.getOffset());
      assertEquals(696, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeShort0, (byte)76, 4L, byteArray0, byteOrder0, 41);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53)", string0);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getTag());
      assertEquals(76L, tiffField0.getCount());
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-258), 498, fieldTypeByte0.SSHORT, 906, (-10496L), byteArray0, byteOrder0, 1603);
      String string0 = tiffField0.toString();
      assertEquals("-258 (0xfffffefe: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (906 SShort)", string0);
      assertEquals(1603, tiffField0.getSortHint());
      assertEquals(1812, tiffField0.getBytesLength());
      assertEquals((-10496), tiffField0.getOffset());
      assertEquals(498, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeAscii0, 525L, 1730L, byteArray0, (ByteOrder) null, (-932));
      String string0 = tiffField0.getValueDescription();
      assertEquals(32, tiffField0.getTag());
      assertEquals(32, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(525, tiffField0.getBytesLength());
      assertEquals((-932), tiffField0.getSortHint());
      assertEquals(1730, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)31, "");
      TiffField tiffField0 = new TiffField((byte) (-7), 33, fieldTypeAscii0, 1389L, (-2846), byteArray0, byteOrder0, (byte)31);
      tiffField0.toString();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(1389, tiffField0.getBytesLength());
      assertEquals((-7), tiffField0.getTag());
      assertEquals((-2846), tiffField0.getOffset());
      assertEquals(1389L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2506L, 2506L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(2506L, tiffField0.getCount());
      assertEquals(2506, tiffField0.getBytesLength());
      assertEquals(2506, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 457);
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(457, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(274, 18, fieldTypeByte0, (byte) (-127), 0L, byteArray0, byteOrder0, 58);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-2120));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(18, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(274, tiffField0.getTag());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(274, 18, fieldTypeByte0, (byte) (-127), 0L, byteArray0, byteOrder0, 58);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-2120));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(274, tiffField0.getTag());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Orientation, fieldType: Undefined", string0);
      assertEquals(58, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 265, fieldTypeByte0, 4L, 4L, (byte[]) null, byteOrder0, 1569);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(1569, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-830), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, (-2708L), (-1268L), byteArray0, (ByteOrder) null, (byte)13);
      tiffField0.getFieldTypeName();
      assertEquals((-1268), tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1622), (byte)0, fieldTypeDouble0, 935L, (-2658L), byteArray0, byteOrder0, 3131);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3131, int0);
      assertEquals((-2658), tiffField0.getOffset());
      assertEquals((-1622), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)31, "");
      TiffField tiffField0 = new TiffField(28, (-1609), fieldTypeAscii0, 0L, 1781L, byteArray0, byteOrder0, 9);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1781, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1609), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeLong0, 4L, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.dump();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-42), tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[23];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(906, (-481), fieldTypeDouble0, 408L, (-4570L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals((-4570), tiffField0.getOffset());
      assertEquals(3264, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-481), tiffField0.getDirectoryType());
      assertEquals("906 (0x38a: Unknown Tag): 0.0, 0.0 (408 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2843, "\"U");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-1), 2843, fieldTypeFloat0, (byte)102, 4L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2843, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(4L, tiffElement0.offset);
      assertEquals(102L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }
}
