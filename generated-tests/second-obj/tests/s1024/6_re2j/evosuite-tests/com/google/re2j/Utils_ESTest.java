/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 10:14:45 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)0);
      assertEquals(0, int0);
      
      int int1 = Utils.unhex(0);
      assertEquals((-1), int1);
      
      boolean boolean0 = Utils.isWordRune(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Utils.emptyOpContext(97, 97);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(1339);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)102);
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isWordRune((-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = Utils.unhex(120);
      assertEquals((-1), int0);
      
      int int1 = Utils.emptyOpContext((-1), (-1));
      assertEquals(47, int1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = Utils.emptyOpContext(97, (-1829));
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = Utils.emptyOpContext(57, 57);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = Utils.unhex(83);
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isWordRune(83);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = Utils.subarray(byteArray0, (-3352), (-3352));
      boolean boolean0 = Utils.isalnum(27);
      assertFalse(boolean0);
      
      int int0 = Utils.indexOf(byteArray0, byteArray1, (-3352));
      assertArrayEquals(new byte[] {}, byteArray1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = Utils.runeToString((-3613));
      assertEquals("\uF1E3", string0);
      
      int[] intArray0 = Utils.stringToRunes("\uF1E3");
      int[] intArray1 = Utils.subarray(intArray0, (-3613), (-3613));
      assertArrayEquals(new int[] {}, intArray1);
      assertArrayEquals(new int[] {61923}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(8469);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 2);
      assertEquals("\\x02", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(48);
      assertTrue(boolean0);
      
      String string0 = Utils.runeToString(48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.subarray((byte[]) null, (-2515), 1227);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utils.runeToString(43465);
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 413, 43465);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 413
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = Utils.unhex(100);
      assertEquals(13, int0);
      
      boolean boolean0 = Utils.isWordRune(100);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = Utils.unhex(70);
      assertEquals(15, int0);
      
      boolean boolean0 = Utils.isWordRune(70);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = Utils.unhex(95);
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isWordRune(95);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(90);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(122);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)2;
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append((long) 175);
      Utils.escapeRune(stringBuilder1, 175);
      assertEquals("175\u00AF", stringBuilder1.toString());
      assertEquals("175\u00AF", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 330);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)117;
      byteArray0[4] = (byte)0;
      boolean boolean0 = Utils.isWordRune((byte)117);
      assertTrue(boolean0);
      
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)117;
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte)0);
      assertEquals(1, int0);
      
      int int1 = Utils.unhex(1);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)12;
      byteArray0[3] = (byte)12;
      byteArray0[1] = (byte)0;
      boolean boolean0 = Utils.isWordRune((byte)12);
      assertFalse(boolean0);
      
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)12;
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte)0);
      int int1 = Utils.unhex((-1));
      assertTrue(int1 == int0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-29);
      byteArray0[1] = (byte) (-29);
      byte[] byteArray1 = new byte[5];
      byteArray0[1] = (byte) (-29);
      int int0 = Utils.indexOf(byteArray0, byteArray1, (byte) (-29));
      int int1 = Utils.unhex((-1));
      assertTrue(int1 == int0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = Utils.unhex(57);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      Utils.escapeRune(stringBuilder0, 12);
      assertEquals("\\f", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, 10);
      assertEquals("\\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = Utils.EMPTY_END_LINE;
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Rw");
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(92);
      Utils.escapeRune(stringBuilder1, 92);
      assertEquals("Rw\\\\\\", stringBuilder1.toString());
      assertEquals("Rw\\\\\\", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 8;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = new StringBuilder("#pe<=OR_%{H9!sc");
      Utils.escapeRune(stringBuilder0, (byte)31);
      Object object0 = new Object();
      stringBuilder1.reverse();
      int int0 = 9;
      Utils.escapeRune(stringBuilder1, 9);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(9, "#pe<=OR_%{H9!sc");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 9
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 3322);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = Utils.emptyOpContext(10, 10);
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("#pe<qOR_%{H9!sc");
      Object object0 = new Object();
      Utils.escapeRune(stringBuilder0, (byte)13);
      int int0 = Utils.EMPTY_NO_WORD_BOUNDARY;
      // Undeclared exception!
      try { 
        stringBuilder0.insert(32, "#pe<qOR_%{H9!sc");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 32
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
}
