/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:09:55 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(965);
      classWriter0.visitField(965, "wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(82);
      Item item0 = classWriter0.newFieldItem("", "", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      Item item0 = classWriter0.newDouble(60);
      Item item1 = classWriter0.newDouble(60);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      Item item0 = classWriter1.newFloat(4);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1411);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1411, 1411, "value ", "value ", "value ", stringArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      int int0 = Frame.SHORT;
      classWriter0.visitInnerClass(" @H2R~~?I`X5)Qe1lQ)", " @H2R~~?I`X5)Qe1lQ)", " @H2R~~?I`X5)Qe1lQ)", (-50));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Character.getName(2179);
      ClassWriter classWriter0 = new ClassWriter(2179);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1044);
      classWriter0.visitSource("<\"1g75Y9cC0{@", "<\"1g75Y9cC0{@");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1281);
      classReader0.accept((ClassVisitor) classWriter0, 1281);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1531);
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 4);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(108);
      classWriter0.newConst(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.newConst(boolean0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      classWriter0.visitAnnotation("", false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      classWriter0.visitOuterClass("Ytr6(C", (String) null, "");
      classWriter0.newDouble(2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      classWriter0.visitInnerClass("InnerClasses", "InnerClasses", "wheel.asm.MethodWriter", 725);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "java/lang/Throwable");
      Double double0 = new Double(2);
      classWriter0.newConstItem(double0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2424);
      classWriter0.newMethod("java/lang/Throwable", "java/lang/Throwable", "java/lang/Throwable", true);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2069);
      classWriter0.visitInnerClass((String) null, (String) null, "The suffix must not be null", 2069);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(756);
      classWriter0.newFloat(756);
      classWriter0.visitInnerClass("=Ay,2?KJBmj}Ll}oir*", "z\"j7kPo=`\"=7t", (String) null, 756);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3887));
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.newConst(type0);
      classWriter0.newDouble((-3887));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2405);
      classWriter0.newMethod("java/lang/Throwable", "java/lang/Throwable", "java/lang/Throwable", false);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      classWriter0.getCommonSuperClass("java/lang/Throwable", "wheel.asm.Type");
      classWriter0.visitInnerClass("java/lang/Object", "", "GkbKqvp:/r=gJGy]l", (-1082));
      classWriter0.visitInnerClass("java/lang/Throwable", "kh>", "java/lang/Throwable", (-1082));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Short short0 = new Short((short)8);
      classWriter0.newConst(short0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitOuterClass("org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-404));
      classWriter0.newField("LwZ:U`=P H{{8=1:'", "LwZ:U`=P H{{8=1:'", "_ib*mm(9S_#I");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "wheel.asm.Type");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(89);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "char", "java/lang/Object");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      Character character0 = new Character('!');
      classWriter0.newConst(character0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1943));
      classWriter0.toByteArray();
      classWriter0.newInteger((-1943));
      classWriter0.newLong(4294967295L);
      classWriter0.toByteArray();
      classWriter0.newInteger((-1943));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1012);
      classWriter0.invalidFrames = false;
      classWriter0.getCommonSuperClass("java/lang/Throwable", "wheel.asm.Type");
      classWriter0.getCommonSuperClass("wheel.asm.Type", "java/lang/Object");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("Signature", 0);
      Type type0 = Type.getObjectType("Signature");
      classWriter0.newConstItem(type0);
      classWriter0.toByteArray();
      classWriter0.addUninitializedType("Signature", 0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1531);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(125);
      classWriter0.visitAnnotation("snA0Y-", true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      int int0 = Character.BYTES;
      System.setCurrentTimeMillis(1);
      classWriter0.visitSource((String) null, "RuntimeInvisibleAnnotations");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "java/lang/Throwable");
      Float float0 = new Float(0.0F);
      classWriter0.newConstItem(float0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFloat((-1.0F));
      Boolean boolean0 = new Boolean(true);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1531);
      classReader0.accept((ClassVisitor) classWriter0, 4);
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(220);
      classWriter0.visitOuterClass("", "java/lang/Throwable", (String) null);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Boolean boolean0 = Boolean.FALSE;
      Byte byte0 = new Byte((byte)4);
      classWriter0.newConst(byte0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 2023);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.toByteArray();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      classWriter0.threshold = (-1096);
      String[] stringArray0 = new String[0];
      classWriter0.visit(4, (-1096), "VDC=x&f(eDB", "VDC=x&f(eDB", "", stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1531);
      classReader0.accept((ClassVisitor) classWriter0, 652);
      classWriter0.getMergedType(8, 2);
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 1886);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3764, 3764);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3764
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1015);
      classWriter0.toByteArray();
      classWriter0.visit(1015, 100, "", "", "]-5S+Jo*", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-134));
      classWriter0.visit(50, (-134), "", "xZ)FIu;C6!C4)bKf", "RuntimeVisibleAnnotations", (String[]) null);
      classWriter0.visitField(18, "", "W$uGQ?aOj", "W$uGQ?aOj", "");
      Double double0 = new Double(1878);
      classWriter0.newConst("xZ)FIu;C6!C4)bKf");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1012);
      classWriter0.newLong((-641L));
      classWriter0.newFloat(0.0F);
      classWriter0.newFloat(0.0F);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.visitAnnotation("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", false);
      classWriter1.toByteArray();
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      classWriter0.visitAnnotation("\"xbIU[LxYdo(2/>", true);
      classWriter0.toByteArray();
      String string0 = "N/akV;^i{C@+k|";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("N/akV;^i{C@+k|", "The array of prefixes must not be null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: N/akV;^i{C@+k|
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = (-1894);
      ClassWriter classWriter0 = new ClassWriter((-1894));
      Attribute attribute0 = new Attribute("b@ICO\"hOpz");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(1048575);
      classReader0.accept((ClassVisitor) classWriter0, 652);
      classWriter0.getMergedType(4, 2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1E");
      classWriter0.newClass("<");
      classWriter0.toByteArray();
  }
}
