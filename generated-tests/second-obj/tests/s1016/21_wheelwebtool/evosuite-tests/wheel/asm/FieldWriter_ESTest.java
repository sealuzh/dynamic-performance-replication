/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:30:36 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter(69);
      Item item0 = classWriter0.key2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector(126);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4356);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "P", "P", "RuntimeInvisibleAnnotations", "P");
      ByteVector byteVector0 = new ByteVector(1);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1702), "RuntimeInvisibleAnnotations", "LineNumberTable", "RuntimeInvisibleAnnotations", mockMinguoDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@3add93eb
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-221), "SW+GC", "SW+GC", "SW+GC", "");
      ByteVector byteVector0 = new ByteVector(4096);
      int int0 = Frame.LONG;
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter1 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "g", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = new ByteVector();
      byteVector2.put12(1, 0);
      byteVector2.putInt(49);
      byteVector0.putShort(1);
      fieldWriter0.put(byteVector2);
      assertFalse(byteVector2.equals((Object)byteVector1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "untimeInvisibleAnnotations", "");
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putInt((-1252));
      ByteVector byteVector2 = byteVector1.putShort(2);
      fieldWriter0.put(byteVector2);
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.key2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4466, ":eZa%[WrV?2", ":eZa%[WrV?2", "ConstantValue", "7Q");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putLong(1);
      ByteVector byteVector2 = new ByteVector(202);
      byteVector1.length = 0;
      byteVector0.putShort(202);
      fieldWriter0.put(byteVector1);
      fieldWriter0.visitAnnotation("wheel.asm.Frame", false);
      Attribute attribute0 = new Attribute("<C2'=YaXZ5eK,Qpg^p");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-231), "SW+C", "g", "SW+C", "");
      int int0 = Frame.SHORT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putInt((-1252));
      ByteVector byteVector3 = byteVector2.putShort(2);
      ByteVector byteVector4 = byteVector0.putInt(49);
      ByteVector byteVector5 = byteVector2.putUTF8("");
      byteVector5.putShort((-1252));
      fieldWriter0.put(byteVector4);
      assertSame(byteVector4, byteVector3);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "", "The prefix must not be null", (String) null, "");
      int int0 = classWriter0.newClass("SW+GC");
      assertEquals(5, int0);
      
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(0);
      fieldWriter0.getSize();
      int int1 = fieldWriter0.getSize();
      assertEquals(16, int1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-221), "SW+GC", "SW+GC", "SW+GC", "SW+GC");
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = new ByteVector(4096);
      byteVector0.putLong((-708L));
      ByteVector byteVector2 = byteVector0.putByte((-221));
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("boolean", true);
      fieldWriter0.put(byteVector2);
      assertFalse(byteVector2.equals((Object)byteVector1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.key2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4466, ":eZa%[WrV?2", ":eZa%[WrV?2", "ConstantValue", "7Q");
      ByteVector byteVector0 = new ByteVector(1);
      Attribute attribute0 = new Attribute("<C2'=YaXZ5eK,Qpg^p");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4466, ":eZa%[WrV?2", "7Q", "ConstantValue", "7Q");
      ByteVector byteVector0 = new ByteVector(202);
      byteVector0.putByte((-2452));
      ByteVector byteVector1 = new ByteVector(0);
      fieldWriter0.put(byteVector1);
      ByteVector byteVector2 = classWriter0.pool;
      byteVector1.putShort(202);
      ByteVector byteVector3 = new ByteVector();
      ByteVector byteVector4 = byteVector0.putByteArray((byte[]) null, 10, 131072);
      byteVector1.putLong((-2452));
      byteVector4.putByte(2);
      fieldWriter0.put(byteVector4);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      Item item0 = classWriter0.key2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4466, ":eZa%[WrV?2", "7Q", "ConstantValue", "7Q");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.version = (-20);
      ByteVector byteVector1 = byteVector0.putLong(1);
      ByteVector byteVector2 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      ByteVector byteVector3 = classWriter0.pool;
      ByteVector byteVector4 = new ByteVector();
      ByteVector byteVector5 = byteVector3.putByteArray((byte[]) null, 4466, 10);
      ByteVector byteVector6 = byteVector1.putLong(32L);
      byteVector6.putByte(30);
      fieldWriter0.put(byteVector3);
      fieldWriter0.visitAnnotation("%(ccrGDbGY3-", true);
      fieldWriter0.put(byteVector5);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }
}
