/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:04:31 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "org.apache.commons.io.filefilter.CanWriteFileFilter");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SyntheticRepository.getInstance();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_mosa/projects/1_bcel/org.apache.bcel.util.Class2HTML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.bcel.util.Class2HTML");
      String[] stringArray0 = new String[18];
      stringArray0[0] = "-d";
      stringArray0[1] = "org.apache.bcel.util.Class2HTML";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-zip";
      stringArray0[1] = "\\";
      stringArray0[2] = "Fn'tZegp ";
      stringArray0[3] = "java.lang.reflect.AnnotatedType";
      stringArray0[4] = "org.apache.bcel.classfile.ClassParser";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // \\ (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"";
      stringArray0[1] = "-d/";
      stringArray0[2] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"";
      stringArray0[3] = "-d";
      stringArray0[4] = "-d/";
      stringArray0[5] = "-d";
      stringArray0[6] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"";
      stringArray0[7] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"";
      stringArray0[8] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<PipedInputStream> class0 = PipedInputStream.class;
      ClassPath classPath0 = new ClassPath("r/`&@MX;+T");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.setClassName("r/`&@MX;+T");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "\"");
  }
}
