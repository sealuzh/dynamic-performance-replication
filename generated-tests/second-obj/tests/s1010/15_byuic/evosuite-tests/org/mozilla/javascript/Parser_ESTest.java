/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:19:31 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.FunctionObject;
import org.mozilla.javascript.InterpretedFunction;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.NativeWith;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;
import org.mozilla.javascript.Scriptable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser((CompilerEnvirons) null, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addError((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      contextFactory0.onContextReleased(context0);
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      int int0 = FunctionObject.JAVA_SCRIPTABLE_TYPE;
      context0.getE4xImplementationFactory();
      // Undeclared exception!
      try { 
        parser0.parse("'c.YVz^lF'SEKN9+iP", "msg.no.brace.try", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (msg.no.brace.try#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Node.Scope node_Scope0 = new Node.Scope(9);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      int int0 = FunctionObject.JAVA_SCRIPTABLE_TYPE;
      StringReader stringReader0 = new StringReader("E-KR`F K");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) lineNumberReader0, "language version", 6363);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#6363)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = null;
      Parser parser0 = new Parser((CompilerEnvirons) null, (ErrorReporter) null);
      parser0.createDecompiler((CompilerEnvirons) null);
      // Undeclared exception!
      try { 
        parser0.parse("9(\"q]X=ms", "", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Node.Scope node_Scope0 = new Node.Scope(9);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.addStrictWarning("language version", "msg.in.after.for.name");
      // Undeclared exception!
      try { 
        parser0.parse("msg.in.after.for.name", "error reporter", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (error reporter#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Locale locale0 = new Locale("language version", "error reporter");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string0 = "";
      // Undeclared exception!
      try { 
        parser0.parse(";?ybb", "", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      StringReader stringReader0 = new StringReader("2':3,");
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) pushbackReader0, "2':3,", 992);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (2':3,#992)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("@2t8$)jr;h_F#Xo");
      stringReader0.reset();
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      lineNumberReader0.setLineNumber(2261);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) lineNumberReader0, "", 85);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (#85)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ContextFactory.getGlobal();
      Locale locale0 = new Locale("language version");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      Locale locale1 = new Locale("language version");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(89);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      compilerEnvirons1.setGenerateDebugInfo(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("msg.bad.for.in.destruct", "error reporter", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setGenerateDebugInfo(true);
      StringReader stringReader0 = new StringReader("[!wRha.W H");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "pow", (-1236));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1236
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      boolean boolean0 = parser0.calledByCompileFunction;
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.bad.var", "msg.bad.var");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        parser0.parse("brT?BwOKga#|", "qU.!<A@", 131072);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (qU.!<A@#131072)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      Locale locale0 = new Locale("language version");
      Locale locale1 = new Locale("error reporter");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1));
      context0.getErrorReporter();
      context0.getErrorReporter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory.getGlobal();
      compilerEnvirons0.setGeneratingSource(false);
      // Undeclared exception!
      try { 
        parser0.parse("+", "-8kE=f;XO", (-998));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -998
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory.getGlobal();
      Node.Scope node_Scope0 = new Node.Scope(145, 2145386496);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter1);
      context0.setErrorReporter(errorReporter1);
      String string0 = "msg.overlarge.min";
      compilerEnvirons0.initFromContext(context0);
      boolean boolean0 = false;
      compilerEnvirons0.setGenerateDebugInfo(false);
      // Undeclared exception!
      try { 
        parser1.parse("!dmpXlXb'.KpIDdH", (String) null, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: unterminated string literal
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      contextFactory0.exit();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("C|-lmN}h(_x6,`5vX", "M", 160);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (M#160)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      compilerEnvirons0.setGenerateDebugInfo(false);
      compilerEnvirons0.setGenerateDebugInfo(false);
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser1.parse("smGWs", "smGWs", 46);
      parser0.getEncodedSource();
      Parser parser2 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGenerateDebugInfo(true);
      StringReader stringReader0 = new StringReader("Array");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      ScriptOrFnNode scriptOrFnNode0 = parser2.parse((Reader) lineNumberReader0, "smGWs", 8);
      parser1.pushScope(scriptOrFnNode0);
      Parser parser3 = new Parser(compilerEnvirons0, errorReporter0);
      parser2.eof();
      parser1.createDecompiler(compilerEnvirons0);
      Parser parser4 = new Parser(compilerEnvirons1, errorReporter0);
      parser4.getEncodedSource();
      parser2.popScope();
      // Undeclared exception!
      try { 
        parser1.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Locale locale0 = new Locale("language version", "language version");
      String string0 = "/uSKi:I\\CQP&R!u";
      Locale locale1 = new Locale("/uSKi:ICQP&R!u");
      locale1.getUnicodeLocaleKeys();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      StringReader stringReader0 = new StringReader("/uSKi:ICQP&R!u");
      // Undeclared exception!
      try { 
        parser0.parse("/uSKi:ICQP&R!u", "/uSKi:ICQP&R!u", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (/uSKi:ICQP&R!u#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      int int0 = FunctionObject.JAVA_SCRIPTABLE_TYPE;
      compilerEnvirons0.setGenerateDebugInfo(false);
      contextFactory0.getE4xImplementationFactory();
      // Undeclared exception!
      try { 
        parser0.parse("bYJ$<LmL[\"m,amc", "B+'Re$&9)Ra(|:Qo=D", 2155);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (B+'Re$&9)Ra(|:Qo=D#2155)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("error reporter");
      String string0 = "6;\")_";
      // Undeclared exception!
      try { 
        parser0.parse("6;\")_", "+", 2576);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (+#2576)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@@");
      // Undeclared exception!
      try { 
        parser0.parse("<!RQF1", "language version", 184);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      defaultErrorReporter0.runtimeError("msg.no.colon.prop", "kL>gFl+iS", 0, "msg.no.colon.prop", 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        parser0.parse("5@O\"s[)+DD", "4Q/4_'x{^lxAPr", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hkS=z]d\"b=?e");
      Context context0 = contextFactory0.enter();
      char[] charArray0 = new char[31];
      charArray0[0] = 'N';
      charArray0[1] = ':';
      charArray0[2] = 'N';
      charArray0[3] = ':';
      charArray0[4] = ':';
      charArray0[5] = 'N';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      boolean boolean0 = context0.generateObserverCount;
      charArrayReader1.read();
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser1.addStrictWarning("getUTCScods", "");
      parser0.addStrictWarning("getUTCScods", "");
      // Undeclared exception!
      try { 
        parser0.parse("x^zR26B{_w|[", "", 140);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "OLP!=r";
      FunctionNode functionNode0 = new FunctionNode("OLP!=r");
      functionNode0.setEncodedSourceBounds(14, 85);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse("RFgcJ=#2qH0sC)hL", "", (-4167));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4167
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.getErrorReporter();
      char[] charArray0 = new char[2];
      charArray0[1] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(140);
      parser0.currentScriptOrFn = scriptOrFnNode0;
      String string0 = "resumeGenerator() not implemented";
      // Undeclared exception!
      try { 
        parser0.parse("resumeGenerator() not implemented", "error reporter", 65535);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (error reporter#65535)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.getErrorReporter();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      char[] charArray0 = new char[2];
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      Context context1 = contextFactory0.enterContext(context0);
      compilerEnvirons0.initFromContext(context1);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      parser0.parse("O&t", "O&t", 6);
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      parser0.eof();
      // Undeclared exception!
      try { 
        parser0.addError("error reporter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property error reporter
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.getErrorReporter();
      contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("$+", "+", 72);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (+#72)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      context0.getLocale();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1));
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      boolean boolean1 = context0.compileFunctionsWithDynamicScopeFlag;
      parser0.addStrictWarning("error reporter", "language version");
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      compilerEnvirons0.setGenerateObserverCount(false);
      String string0 = "H>{W22Jd-Tcu\"dH";
      // Undeclared exception!
      try { 
        parser0.parse("H>{W22Jd-Tcu\"dH", "language version", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (language version#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      Locale locale0 = new Locale("language version");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      Locale locale1 = new Locale("language version");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1));
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.addStrictWarning("", (String) null);
      ContextFactory.getGlobal();
      compilerEnvirons0.setXmlAvailable(false);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "msg.no.semi.for.cond";
      compilerEnvirons0.setGenerateObserverCount(true);
      // Undeclared exception!
      try { 
        parser0.parse("XRNQd.+#S@", "namespace", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (namespace#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons0.setGenerateDebugInfo(true);
      Locale locale0 = new Locale("1p0}=ed", "msg.var.hides.arg");
      Context context0 = new Context();
      Locale locale1 = context0.getLocale();
      locale1.getUnicodeLocaleAttributes();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      StringReader stringReader0 = new StringReader("AgiRsPQo0[#3");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "VWqE^uB>&WP8y&k%", 1062);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      StringReader stringReader0 = new StringReader("[:.s}9$");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      contextFactory0.getE4xImplementationFactory();
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(86);
      Context context0 = contextFactory0.enter();
      context0.getErrorReporter();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning("error reporter", "");
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      defaultErrorReporter1.runtimeError("z*/:j2)=NT.", "$N5cx{=", 10, "msg.bad.uri", 146);
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      ContextFactory.getGlobal();
      // Undeclared exception!
      try { 
        parser0.parse("z*/:j2)=NT.", "", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      EvaluatorException evaluatorException0 = new EvaluatorException("error reporter", "M\u0000M\u0000\u0000\u0000", 11, "language version", 160);
      charArray0[3] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "msg.anon.generator.returns", 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      StringReader stringReader0 = new StringReader("!{%u");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      stringReader0.reset();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) lineNumberReader0, "!{%u", (-2372));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      char[] charArray0 = new char[6];
      charArray0[0] = 'N';
      charArray0[1] = ':';
      charArray0[2] = ':';
      EvaluatorException evaluatorException0 = new EvaluatorException("error reporter", "M\u0000M\u0000\u0000\u0000", 11, "language version", 160);
      charArray0[3] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "msg.anon.generator.returns", 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      compilerEnvirons0.setXmlAvailable(false);
      parser0.insideFunction();
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "U4\"sF3\"9$(", 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.getEncodedSource();
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("msg.dup.parms", (String) null, 3043);
      assertEquals("\u0087'\u0003msgk'\u0003dupk'\u0005parmsQ\u0001", parser0.getEncodedSource());
      assertEquals(3043, scriptOrFnNode0.getEndLineno());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "";
      compilerEnvirons0.setGenerateObserverCount(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      String string1 = "BZ/#xjY)<AP?xl(1_";
      // Undeclared exception!
      try { 
        parser0.parse("BZ/#xjY)<AP?xl(1_", "", 37);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (#37)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("language version");
      // Undeclared exception!
      try { 
        parser0.parse("cP$(7Wy'sk", "&", 16);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (&#16)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[2] = '-';
      charArray0[3] = '-';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader2);
      lineNumberReader0.setLineNumber(2);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) lineNumberReader0, "eval code", 100);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (eval code#100)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      char[] charArray0 = new char[17];
      charArray0[0] = ',';
      charArray0[1] = 'Z';
      charArray0[2] = ',';
      charArray0[3] = ',';
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      parser0.compilerEnv = compilerEnvirons1;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader1.read();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader1, "language version", 1596);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#1596)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      compilerEnvirons0.setGenerateDebugInfo(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("(", "error reporter", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.getErrorReporter();
      char[] charArray0 = new char[6];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      charArray0[2] = ':';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = 'G';
      charArray0[4] = 'G';
      charArray0[5] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      defaultErrorReporter0.runtimeError("", "toFixed", 110, "error reporter", 43);
      parser0.parse((Reader) charArrayReader1, "msg.unterm.paren", 2);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      parser0.popScope();
      // Undeclared exception!
      try { 
        parser0.defineSymbol(19, false, "language version");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Node.Scope node_Scope0 = new Node.Scope(5);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      int int0 = Context.VERSION_1_4;
      StringReader stringReader0 = new StringReader("");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      parser0.parse((Reader) lineNumberReader0, "language version", 6406);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(22, false, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = ':';
      charArray0[2] = ':';
      charArray0[3] = 'M';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      parser0.parse((Reader) charArrayReader0, "language version", 133);
      String string0 = "msg.no.brace.after.body";
      // Undeclared exception!
      try { 
        parser0.defineSymbol(3222, false, "msg.no.brace.after.body");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "msg.reserved.keyword");
      compilerEnvirons0.setGenerateDebugInfo(false);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      Context context0 = new Context(contextFactory0);
      context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      parser1.addStrictWarning("h|x^e!`-HS", "error reporter");
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser2.parse("@f7o", "h|x^e!`-HS", 12);
      assertEquals(9, scriptOrFnNode0.getEncodedSourceEnd());
      assertEquals(12, scriptOrFnNode0.getBaseLineno());
      assertEquals("h|x^e!`-HS", scriptOrFnNode0.getSourceName());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      Locale locale0 = new Locale("language version");
      Locale locale1 = new Locale("error reporter");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1));
      char[] charArray0 = new char[2];
      charArray0[1] = '\u0000';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      char[] charArray1 = new char[4];
      charArray0[1] = '\u0000';
      charArray1[1] = '.';
      charArray0[1] = '.';
      charArray1[3] = 'K';
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("[1xtAtr,", "[1xtAtr,", 153);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ] after element list ([1xtAtr,#153)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[3] = ':';
      charArray0[4] = ':';
      FunctionNode functionNode0 = new FunctionNode("msg.conversion.not.allowed");
      parser0.parse("", "", 1);
      parser0.defineSymbol(152, false, "");
      parser0.popScope();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0);
      parser0.getCurrentLineNumber();
      parser0.addStrictWarning("", "msg.conversion.not.allowed");
      String string0 = "writeAdapterObject";
      String string1 = null;
      // Undeclared exception!
      try { 
        parser0.addWarning("writeAdapterObject", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property writeAdapterObject
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      Locale locale0 = new Locale("language version");
      Locale locale1 = new Locale("error reporter");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      context0.getDebugger();
      DefaultErrorReporter.forEval(errorReporter0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'M';
      charArray0[1] = ':';
      charArray0[2] = 'M';
      charArray0[3] = ':';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = 'M';
      charArray0[7] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      String string0 = "";
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // duplicated label (#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = null;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("OLP!=r", (String) null, (-1977));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      compilerEnvirons0.setGenerateDebugInfo(false);
      ContextFactory.getGlobal();
      Locale locale0 = new Locale("", "`d'`S|V/GE5,+ 6S");
      Locale locale1 = new Locale("");
      locale0.getExtensionKeys();
      FunctionNode functionNode0 = new FunctionNode("");
      functionNode0.setEncodedSourceBounds(553, 2923);
      compilerEnvirons0.setXmlAvailable(true);
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser0.parse("", "9", 9);
      FunctionNode functionNode1 = new FunctionNode("get");
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser1.parse("msg.bad.throw.eol", "", (-2275));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = new Context(contextFactory0);
      context0.stringIsCompilableUnit("");
      Scriptable scriptable0 = null;
      NativeWith nativeWith0 = new NativeWith((Scriptable) null, (Scriptable) null);
      InterpreterData interpreterData0 = null;
      try {
        interpreterData0 = new InterpreterData((InterpreterData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.InterpreterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      contextFactory0.getE4xImplementationFactory();
      char[] charArray0 = new char[15];
      charArray0[0] = 'M';
      charArray0[1] = ':';
      charArray0[2] = 'M';
      charArray0[8] = ':';
      charArray0[4] = 'M';
      charArray0[4] = 'M';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      boolean boolean0 = context0.generateObserverCount;
      charArrayReader1.read();
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser1.addStrictWarning("getUTCSeconds", "");
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)103;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte)106;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader2, "language version", 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[4] = ':';
      String string0 = "msg.conversion.not.allowed";
      FunctionNode functionNode0 = new FunctionNode("msg.conversion.not.allowed");
      parser0.parse("", "", 40);
      boolean boolean0 = true;
      parser0.defineSymbol(152, true, "");
      parser0.popScope();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser2.parse((Reader) charArrayReader0, "msg.conversion.not.allowed", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = 'K';
      charArray0[2] = '-';
      charArray0[3] = '-';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      boolean boolean0 = context0.generateObserverCount;
      context0.getE4xImplementationFactory();
      charArrayReader1.read();
      EvaluatorException evaluatorException0 = new EvaluatorException("error reporter", "M", 5, "W22Jd", 10);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      parser0.parse((Reader) charArrayReader1, "toDateString", 1);
      String string0 = parser0.getEncodedSource();
      assertEquals("\u0087'\u0001KjQ\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[9];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[4] = ':';
      parser0.calledByCompileFunction = false;
      String string0 = "msg.conversion.not.allowed";
      FunctionNode functionNode0 = new FunctionNode("msg.conversion.not.allowed");
      // Undeclared exception!
      try { 
        parser0.parse("sZ||t^KbPT(", "", (-238));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -238
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      int int0 = (-101);
      // Undeclared exception!
      try { 
        parser0.parse("null", "null", (-101));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = ':';
      charArray0[3] = 'M';
      charArray0[4] = ':';
      charArray0[5] = 'M';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader2 = new CharArrayReader(charArray0);
      charArrayReader0.ready();
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse((Reader) charArrayReader0, "Q=aR<>q2 K)p6{PDUrD", (-897));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = '-';
      charArray0[2] = '-';
      charArray0[3] = '-';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      context0.getE4xImplementationFactory();
      charArrayReader0.read();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      charArrayReader0.read();
      compilerEnvirons1.setXmlAvailable(false);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "error reporter", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (error reporter#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      compilerEnvirons0.setGenerateDebugInfo(false);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      context0.getErrorReporter();
      DefaultErrorReporter.forEval((ErrorReporter) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = ':';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      compilerEnvirons0.setGenerateObserverCount(false);
      // Undeclared exception!
      try { 
        parser0.parse("{i0O}~WU*793z`M", "error reporter", (-2436));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      compilerEnvirons0.setGenerateDebugInfo(false);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      context0.getE4xImplementationFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.getApplicationClassLoader();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context1 = contextFactory0.enterContext();
      context1.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setGenerateObserverCount(true);
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter0);
      ContextFactory.getGlobal();
      parser1.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser1.parse("[native code, arity=", "language version", 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (language version#8)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
