/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 21:08:49 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      TiffField tiffField0 = new TiffField(50831, 2147451104, fieldTypeShort0, 1980L, (-1017L), byteArray0, byteOrder0, 281);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1017), tiffField0.getOffset());
      assertEquals(251, int0);
      assertEquals(2147451104, tiffField0.getDirectoryType());
      assertEquals(50831, tiffField0.getTag());
      assertEquals(281, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-122);
      byteArray0[4] = (byte) (-68);
      TiffField tiffField0 = new TiffField((-1), 50709, fieldTypeRational0, 50709, (byte) (-68), byteArray0, byteOrder0, (byte)94);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals((-68), tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals(50709, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2146757410, 2146757410, fieldTypeRational0.FLOAT, 1L, (byte)3, byteArray0, byteOrder0, 2147402270);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146757410, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(2147402270, tiffField0.getSortHint());
      assertEquals(2146757410, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-86), fieldTypeLong0, 16704L, (-3934L), byteArray0, byteOrder0, (byte) (-86));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3934), tiffField0.getOffset());
      assertEquals((-86), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-86), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(40094, (byte)86, fieldTypeLong0.ASCII, 0L, (-2283L), byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-2283), tiffField0.getOffset());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(40094, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(27, (-3086), fieldTypeByte0, (-2720L), 203752L, byteArray0, byteOrder0, 34675);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(203752, tiffField0.getOffset());
      assertEquals((-3086), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals(34675, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(400, 1385, fieldTypeRational0, 478L, 512, byteArray0, byteOrder0, (byte) (-12));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-12), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
      assertEquals(512, tiffField0.getOffset());
      assertEquals(1385, tiffField0.getDirectoryType());
      assertEquals(400, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 2147451506, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE).FLOAT, 1444L, 11140L, byteArray0, byteOrder0, 517);
      int int0 = tiffField0.getTag();
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(11140, tiffField0.getOffset());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(3274, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4961), (-4961), fieldTypeRational0, (-4961), (-1L), byteArray0, byteOrder0, (byte) (-15));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-4961), int0);
      assertEquals((-4961), tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)95;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(634, 634, fieldTypeAscii0, 634, 634, byteArray0, byteOrder0, 2132);
      String string0 = tiffField0.getStringValue();
      assertEquals(634, tiffField0.getTag());
      assertEquals(634, tiffField0.getDirectoryType());
      assertEquals(634, tiffField0.getOffset());
      assertEquals(2132, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, (-1846), fieldTypeLong0, (byte) (-86), (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(6, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1846), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1201), 384, fieldTypeShort0, 65992L, 4L, byteArray0, byteOrder0, (byte)21);
      int int0 = tiffField0.getSortHint();
      assertEquals(384, tiffField0.getDirectoryType());
      assertEquals((-1201), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(21, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(315, 2147451506, fieldTypeLong0, (byte)0, 2147451506, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getOffset();
      assertEquals(2147451506, int0);
      assertEquals(315, tiffField0.getTag());
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-86), fieldTypeLong0, 16704L, (-3934L), byteArray0, byteOrder0, (byte) (-86));
      int int0 = tiffField0.getOffset();
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals((-3934), int0);
      assertEquals((-86), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-99);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2141400124, (byte)0, fieldTypeLong0, 255L, 2147483647L, byteArray0, byteOrder0, (-1876));
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2141400124, tiffField0.getTag());
      assertEquals((-1876), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      CharBuffer charBuffer0 = CharBuffer.allocate(1484);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-22);
      TiffField tiffField0 = new TiffField((short)974, 1, fieldTypeLong0, 1, (byte)77, byteArray0, byteOrder0, (byte)77);
      tiffField0.getIntValueOrArraySum();
      assertEquals(77, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(974, tiffField0.getTag());
      assertEquals(77, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-113), 1340, fieldTypeByte0, 1L, (-1083L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getIntValue();
      assertEquals((-1083), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-113), tiffField0.getTag());
      assertEquals(1340, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeShort0, 1, (byte)29, byteArray0, byteOrder0, 2147467577);
      tiffField0.getIntValue();
      assertEquals(29, tiffField0.getOffset());
      assertEquals(2147467577, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getTag());
      assertEquals(74, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-109);
      TiffField tiffField0 = new TiffField(1628, 2144454770, fieldTypeShort0, 1L, (-5757L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(1628, tiffField0.getTag());
      assertEquals(2144454770, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-5757), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1891, 2147324916, fieldTypeByte0, (byte)13, 6149L, byteArray0, byteOrder0, (byte)74);
      tiffField0.getFieldTypeName();
      assertEquals(6149, tiffField0.getOffset());
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(1891, tiffField0.getTag());
      assertEquals(2147324916, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2142743065, 1544, fieldTypeLong0, 255L, 1544, byteArray0, byteOrder0, (byte) (-86));
      tiffField0.getFieldTypeName();
      assertEquals(2142743065, tiffField0.getTag());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(1544, tiffField0.getDirectoryType());
      assertEquals(1544, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TiffField tiffField0 = new TiffField(2144454757, 50, (FieldType) null, 50, 2144454757, (byte[]) null, (ByteOrder) null, (-2207));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2144454757, tiffField0.getOffset());
      assertEquals((-2207), tiffField0.getSortHint());
      assertEquals(2144454757, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "sa^XVAW Cu");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-58), 9, fieldTypeDouble0, 2559L, 2942L, byteArray0, byteOrder0, 34736);
      tiffField0.getFieldType();
      assertEquals(34736, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(2942, tiffField0.getOffset());
      assertEquals((-58), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2306), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2306), (-2306), fieldTypeRational0, (-1846L), (-1846L), byteArray0, byteOrder0, 1410);
      tiffField0.getFieldType();
      assertEquals(1410, tiffField0.getSortHint());
      assertEquals((-2306), tiffField0.getTag());
      assertEquals((-1846), tiffField0.getOffset());
      assertEquals((-2306), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-113), 1340, fieldTypeByte0, 1L, (-1083L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleValue();
      assertEquals(1340, tiffField0.getDirectoryType());
      assertEquals((-113), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1083), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField((-2578), (-1650), fieldTypeShort0, 1L, (-476L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1650), tiffField0.getDirectoryType());
      assertEquals((-476), tiffField0.getOffset());
      assertEquals((-2578), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-122);
      TiffField tiffField0 = new TiffField((byte)94, 2734, fieldTypeRational0, 1L, 8512L, byteArray0, byteOrder0, 20);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(94, tiffField0.getTag());
      assertEquals(8512, tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(2734, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 255);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(255, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-2185), fieldTypeLong0, (byte)0, (byte)0, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2185), int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(272, "DateTime");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50217, 34676, fieldTypeByte0, 272, 272, byteArray0, byteOrder0, (byte)68);
      long long0 = tiffField0.getCount();
      assertEquals(272L, long0);
      assertEquals(50217, tiffField0.getTag());
      assertEquals(272, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(34676, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147), 992, fieldTypeLong0, (-2147), 992, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals((-2147), tiffField0.getTag());
      assertEquals(992, tiffField0.getOffset());
      assertEquals(992, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147L), long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(1786);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-455), 5603, fieldTypeShort0, 0L, 5603, byteArray0, byteOrder0, 2116);
      tiffField0.getBytesLength();
      assertEquals(5603, tiffField0.getDirectoryType());
      assertEquals((-455), tiffField0.getTag());
      assertEquals(2116, tiffField0.getSortHint());
      assertEquals(5603, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147290823, 4, fieldTypeShort0, (-1L), (-71L), byteArray0, byteOrder0, (-2100799219));
      tiffField0.getBytesLength();
      assertEquals(2147290823, tiffField0.getTag());
      assertEquals((-2100799219), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-71), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34022, 4, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE.FLOAT).SRATIONAL, 1874L, 512, byteArray0, (ByteOrder) null, 2146964304);
      tiffField0.getByteOrder();
      assertEquals(2146964304, tiffField0.getSortHint());
      assertEquals(512, tiffField0.getOffset());
      assertEquals(34022, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-889), 0, fieldTypeDouble0, 0, (-889), byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals((-889), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-889), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 255);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-851), (-851), fieldTypeLong0, (-851), (-851), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(3676, 1, fieldTypeLong0, (-1L), 2175L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)96, (byte)0, fieldTypeLong0, (-995L), 0, byteArray0, byteOrder0, (byte) (-99));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      CharBuffer charBuffer0 = CharBuffer.allocate(1484);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1484, 2725, fieldTypeLong0, (-323L), 1, byteArray0, byteOrder0, (byte)77);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "sa^XVW Cu");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-1244), fieldTypeDouble0, (-121L), 2024L, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 2147451104, fieldTypeLong0, 1, (byte) (-28), byteArray0, byteOrder0, 723);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-249), 5, fieldTypeShort0, 17048L, (-249), byteArray0, byteOrder0, 2146964304);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "GPSAltitudeRef");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147451104, 2, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 2147451104);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-860), (-860), fieldTypeShort0, (-860), (-860), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-518), (-1), fieldTypeShort0.SLONG, 801L, 801L, byteArray0, byteOrder0, (-1419));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ExifImageWidth");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(801L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(801, tiffField0.getOffset());
      assertEquals((-1419), tiffField0.getSortHint());
      assertEquals((-518), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1538, 1538, fieldTypeByte0, (-796L), (-796L), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(1538, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1538, tiffField0.getTag());
      assertEquals((-796), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)101, fieldTypeByte0, 6149L, 16704L, byteArray0, byteOrder0, (-2786));
      tiffField0.getByteArrayValue();
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(16704, tiffField0.getOffset());
      assertEquals((-2786), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)77, (byte)77, fieldTypeLong0, (byte)77, (-8146L), byteArray0, byteOrder0, (byte)77);
      tiffField0.getFieldType();
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals((-8146), tiffField0.getOffset());
      assertEquals(77, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3664, 225, fieldTypeByte0, 225, 3664, byteArray0, byteOrder0, (byte)101);
      tiffField0.getValue();
      assertEquals(3664, tiffField0.getTag());
      assertEquals(225L, tiffField0.getCount());
      assertEquals(3664, tiffField0.getOffset());
      assertEquals(225, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 255);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)0, (byte)77, fieldTypeLong0, (byte)77, (-8146L), byteArray0, byteOrder0, (byte)77);
      int int0 = tiffField0.getTag();
      assertEquals(77, tiffField0.getSortHint());
      assertEquals((-8146), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(77, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 4L, byteArray0, byteOrder0, 1646);
      tiffField0.getCount();
      assertEquals(1646, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3664, 225, fieldTypeByte0, 225, 3664, byteArray0, byteOrder0, (byte)101);
      tiffField0.getBytesLength();
      assertEquals(3664, tiffField0.getTag());
      assertEquals(3664, tiffField0.getOffset());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(225, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(512, 2133261901, fieldTypeAscii0, 0L, 225L, byteArray0, byteOrder0, (byte)77);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147467577, 1, fieldTypeShort0, 2234L, (byte)29, byteArray0, byteOrder0, (-1812));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2141400124, (byte)0, fieldTypeLong0, 255L, 2147483647L, byteArray0, byteOrder0, (-1876));
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(2141400124, tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals((-1876), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), 50709, fieldTypeRational0, 50709, (byte) (-68), byteArray0, byteOrder0, (byte)94);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3664, 225, fieldTypeByte0, 225, 3664, byteArray0, byteOrder0, (byte)101);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4e22cf93 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)101, fieldTypeByte0, 6149L, 16704L, byteArray0, byteOrder0, (-2786));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@c2bd952 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 2147451506, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE).FLOAT, 50938, 14328L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(14328, tiffField0.getOffset());
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 517, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE).FLOAT, 50938, 517, byteArray0, byteOrder0, 2147451506);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals(2147451506, tiffField0.getSortHint());
      assertEquals(517, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)3, 3281, fieldTypeLong0, (byte)3, 1739L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleArrayValue();
      assertEquals(3L, tiffField0.getCount());
      assertEquals(1739, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3281, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50938, "g{pDB?");
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(512, 50, fieldTypeDouble0, 512, 50938, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(512L, tiffField0.getCount());
      assertEquals(50938, tiffField0.getOffset());
      assertEquals(512, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)3, 1, fieldTypeRational0, 2439L, (byte)3, byteArray0, byteOrder0, 84);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(2439L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Float float0 = new Float(0.0F);
      byte[] byteArray0 = fieldTypeLong0.SRATIONAL.writeData(float0, byteOrder0);
      TiffField tiffField0 = new TiffField(2147290823, 0, fieldTypeLong0, 1L, (-2878L), byteArray0, byteOrder0, 2147290823);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2878), tiffField0.getOffset());
      assertEquals(2147290823, tiffField0.getSortHint());
      assertEquals(2147290823, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(315, 2147451506, fieldTypeLong0, (byte)0, 2147451506, byteArray0, byteOrder0, 3);
      tiffField0.getIntArrayValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(315, tiffField0.getTag());
      assertEquals(2147451506, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2185), (byte)0, fieldTypeShort0, 2069L, (-1L), byteArray0, byteOrder0, 2147290823);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-2185), tiffField0.getTag());
      assertEquals(2147290823, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2069L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)77, (byte)3, fieldTypeRational0, 66816L, 3391L, byteArray0, byteOrder0, 473);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0L, 0, byteArray0, byteOrder0, (byte)94);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2578), (-1650), fieldTypeShort0, 1L, (-476L), byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1650), tiffField0.getDirectoryType());
      assertEquals((-2578), tiffField0.getTag());
      assertEquals((-476), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50938, "g{pDB?");
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(512, 50, fieldTypeDouble0, 512, 50938, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@62a27641 for: 512 (0x200: JPEGProc): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(512, 2133261901, fieldTypeAscii0, 0L, 225L, byteArray0, byteOrder0, (byte)77);
      String string0 = tiffField0.getStringValue();
      assertEquals(77, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(512, tiffField0.getTag());
      assertEquals(225, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2133261901, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147467577, 1, fieldTypeShort0, 2234L, (byte)29, byteArray0, byteOrder0, (-1812));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@4dbb285e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1113), (byte) (-17), fieldTypeLong0, (byte)89, (-851), byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals((-17), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xfffffba7)", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-851), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(400, 1385, fieldTypeRational0, 478L, 512, byteArray0, byteOrder0, (byte) (-12));
      String string0 = tiffField0.getTagName();
      assertEquals(1385, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
      assertEquals(512, tiffField0.getOffset());
      assertEquals("GlobalParametersIFD", string0);
      assertEquals((-12), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1113), (byte) (-17), fieldTypeLong0, (byte)89, (-851), byteArray0, (ByteOrder) null, 65535);
      MockPrintStream mockPrintStream0 = new MockPrintStream("-~F> x*We");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(89L, tiffField0.getCount());
      assertEquals((-1113), tiffField0.getTag());
      assertEquals((-851), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(356, tiffField0.getBytesLength());
      assertEquals((-17), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-373), 16, fieldTypeLong0.FLOAT, 410, (-373), byteArray0, byteOrder0, (-373));
      String string0 = tiffField0.toString();
      assertEquals("-373 (0xfffffe8b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (410 Float)", string0);
      assertEquals((-373), tiffField0.getOffset());
      assertEquals(1640, tiffField0.getBytesLength());
      assertEquals((-373), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3274, 2147451506, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).DOUBLE).FLOAT, 1444L, 11140L, byteArray0, byteOrder0, 517);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("WangAnnotation");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(5776, tiffField0.getBytesLength());
      assertEquals(11140, tiffField0.getOffset());
      assertEquals(1444L, tiffField0.getCount());
      assertEquals(3274, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1626, 3575, fieldTypeByte0, 1163, 1163, byteArray0, byteOrder0, (-535));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1163, tiffField0.getOffset());
      assertEquals(1163, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1626, tiffField0.getTag());
      assertEquals((-535), tiffField0.getSortHint());
      assertEquals(3575, tiffField0.getDirectoryType());
      assertEquals(1163L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 517, fieldTypeRational0.FLOAT, 50938, 517, byteArray0, byteOrder0, 2147451506);
      String string0 = tiffField0.getValueDescription();
      assertEquals(517, tiffField0.getOffset());
      assertEquals(203752, tiffField0.getBytesLength());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals(517, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2147451506, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33921, 27, fieldTypeDouble0, 33921, 4735L, byteArray0, byteOrder0, 19);
      try { 
        fieldTypeDouble0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 33921 (0x8481: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (33921 Double) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1692, 3, fieldTypeRational0.DOUBLE, 50938, 2147290823, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(2147290823, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(407504, tiffField0.getBytesLength());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1692, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-558), 43, fieldTypeLong0, 82L, 82L, byteArray0, byteOrder0, (-373));
      String string0 = tiffField0.toString();
      assertEquals("-558 (0xfffffdd2: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (82 IFD)", string0);
      assertEquals((-373), tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2144454757, 1634, fieldTypeShort0, 1634, 1634, byteArray0, byteOrder0, 577);
      String string0 = tiffField0.toString();
      assertEquals(1634, tiffField0.getDirectoryType());
      assertEquals(3268, tiffField0.getBytesLength());
      assertEquals("2144454757 (0x7fd1c865: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (1634 SShort)", string0);
      assertEquals(577, tiffField0.getSortHint());
      assertEquals(1634, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[70];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1831), 50738, fieldTypeDouble0.ASCII, 2010, 1, byteArray0, byteOrder0, 2010);
      tiffField0.toString();
      assertEquals(50738, tiffField0.getDirectoryType());
      assertEquals(2010L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2010, tiffField0.getBytesLength());
      assertEquals((-1831), tiffField0.getTag());
      assertEquals(2010, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-97), (byte) (-79), fieldTypeRational0, (byte)60, 255L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(480, tiffField0.getBytesLength());
      assertEquals(60L, tiffField0.getCount());
      assertEquals((-79), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(512, 2133261901, fieldTypeAscii0, 0L, 225L, byteArray0, byteOrder0, (byte)77);
      String string0 = tiffField0.getValueDescription();
      assertEquals(225, tiffField0.getOffset());
      assertEquals(2133261901, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(512, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-113), 1340, fieldTypeByte0, 1L, (-1083L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.toString();
      assertEquals((-113), tiffField0.getTag());
      assertEquals(1340, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1083), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(315, 2147451506, fieldTypeLong0, (byte)0, 2147451506, byteArray0, byteOrder0, 3);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147451506, tiffField0.getDirectoryType());
      assertEquals(315, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(2147451506, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, (-1198L), byteArray0, byteOrder0, 1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-31), (-3142));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1198), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)3, 1, fieldTypeRational0, 2439L, (byte)3, byteArray0, byteOrder0, 84);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-1), (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(3, tiffField0.getOffset());
      assertEquals(2439L, tiffField0.getCount());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertNotNull(string0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2147483646), (-17), fieldTypeByte0, 489L, 65992L, byteArray0, byteOrder0, (-101));
      tiffField0.getFieldTypeName();
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(489L, tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-17), tiffField0.getDirectoryType());
      assertEquals(65992, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3664, 225, fieldTypeByte0, 225, 3664, byteArray0, byteOrder0, (byte)101);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(3664L, tiffElement0.offset);
      assertEquals(3664, tiffField0.getTag());
      assertEquals(225L, tiffField0.getCount());
      assertEquals(225, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2055, "1zWxOHY*prS4");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(135, 135, fieldTypeDouble0, 806L, 0L, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(135, int0);
      assertEquals(135, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (-888));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-888), int0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1113), (byte) (-17), fieldTypeLong0, (byte)89, (-851), byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1113 (0xfffffba7: Unknown Tag): ", string0);
      assertEquals((-17), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(89L, tiffField0.getCount());
      assertEquals((-851), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3664, 225, fieldTypeByte0, 225, 3664, byteArray0, byteOrder0, (byte)101);
      tiffField0.dump();
      assertEquals(3664, tiffField0.getOffset());
      assertEquals(225L, tiffField0.getCount());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(225, tiffField0.getDirectoryType());
      assertEquals(225, tiffField0.getBytesLength());
      assertEquals(3664, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32769, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147467577, 1, fieldTypeShort0, 2234L, (byte)29, byteArray0, byteOrder0, (-1812));
      tiffField0.getDoubleArrayValue();
      assertEquals(29, tiffField0.getOffset());
      assertEquals(4468, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2147467577, tiffField0.getTag());
      assertEquals(2234L, tiffField0.getCount());
      assertEquals((-1812), tiffField0.getSortHint());
  }
}
