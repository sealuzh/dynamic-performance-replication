/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 03:21:51 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      TiffField tiffField0 = new TiffField(338, (byte) (-1), fieldTypeShort0, 4L, (byte)51, byteArray0, (ByteOrder) null, 422);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(422, tiffField0.getSortHint());
      assertEquals(51, int0);
      assertEquals(51, tiffField0.getOffset());
      assertEquals(338, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)70;
      byteArray0[5] = (byte)52;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(508, 106, fieldTypeRational0, 2784L, 508, byteArray0, byteOrder0, 17);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(508, tiffField0.getOffset());
      assertEquals(22272, tiffField0.getBytesLength());
      assertEquals(1, int0);
      assertEquals(508, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(106, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)76;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(508, 106, fieldTypeRational0, 2784L, (-2147483648L), byteArray0, byteOrder0, 17);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(106, tiffField0.getDirectoryType());
      assertEquals(508, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(22272, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146141470, (-597), fieldTypeByte0, 4L, 2146141470, byteArray0, byteOrder0, 4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(2146141470, tiffField0.getTag());
      assertEquals((-597), tiffField0.getDirectoryType());
      assertEquals(2146141470, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (byte) (-12), fieldTypeRational0, 291L, 63824L, byteArray0, byteOrder0, 28);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(63824, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-12), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-77), (-153), fieldTypeShort0, (byte)0, (byte)104, byteArray0, (ByteOrder) null, 1663);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-153), tiffField0.getDirectoryType());
      assertEquals(1663, tiffField0.getSortHint());
      assertEquals((-77), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(104, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (byte) (-12), fieldTypeRational0, 291L, 63824L, byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-12), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(63824, tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(0, (-52), fieldTypeShort0, (-50L), (-1369L), byteArray0, (ByteOrder) null, 263);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-1369), tiffField0.getOffset());
      assertEquals(263, tiffField0.getSortHint());
      assertEquals((-52), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-77), (-123), fieldTypeShort0, (byte)0, (byte)104, byteArray0, (ByteOrder) null, 1663);
      int int0 = tiffField0.getTag();
      assertEquals(1663, tiffField0.getSortHint());
      assertEquals(104, tiffField0.getOffset());
      assertEquals((-77), int0);
      assertEquals((-123), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-347), "D!7Bz6'81:h)z7y_");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-151), 1, fieldTypeAscii0, 43712L, (byte)0, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.getStringValue();
      assertEquals(43712, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-151), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2574, 544, fieldTypeShort0, 2574, 2574, byteArray0, (ByteOrder) null, (byte) (-77));
      int int0 = tiffField0.getSortHint();
      assertEquals(544, tiffField0.getDirectoryType());
      assertEquals((-77), int0);
      assertEquals(2574, tiffField0.getTag());
      assertEquals(2574, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "zAy3");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 4, fieldTypeFloat0, 262140L, 255L, (byte[]) null, byteOrder0, (-1569));
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1569), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-217), (-217), (FieldType) null, (-217), (-139L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals((-217), tiffField0.getTag());
      assertEquals((-139), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-217), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (-412), fieldTypeByte0.IFD, 2775L, 2775L, byteArray0, byteOrder0, (-412));
      byteArray0[51] = (byte)6;
      tiffField0.getIntValueOrArraySum();
      assertEquals(11100, tiffField0.getBytesLength());
      assertEquals(2775, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-412), tiffField0.getSortHint());
      assertEquals((-412), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-96);
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 1L, (-778L), byteArray0, byteOrder0, 137);
      tiffField0.getIntValueOrArraySum();
      assertEquals(137, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-778), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 287, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getIntValue();
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(287, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)3;
      TiffField tiffField0 = new TiffField((-2028), (byte)1, fieldTypeByte0, (byte)1, (-2028), byteArray0, byteOrder0, (-51));
      tiffField0.getIntValue();
      assertEquals((-2028), tiffField0.getOffset());
      assertEquals((-51), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2028), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-96);
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 1L, (-778L), byteArray0, byteOrder0, 137);
      tiffField0.getIntValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-778), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(137, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2146540112), (String) null);
      TiffField tiffField0 = new TiffField((byte)104, 1663, fieldTypeDouble0, 3314L, (-2146540112), byteArray0, (ByteOrder) null, (-2146540112));
      tiffField0.getFieldTypeName();
      assertEquals((-2146540112), tiffField0.getSortHint());
      assertEquals((-2146540112), tiffField0.getOffset());
      assertEquals(1663, tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(48258, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34023, (-3079), fieldTypeFloat0, 48258, 34023, (byte[]) null, byteOrder0, (-5537));
      tiffField0.getFieldTypeName();
      assertEquals((-5537), tiffField0.getSortHint());
      assertEquals(34023, tiffField0.getTag());
      assertEquals(34023, tiffField0.getOffset());
      assertEquals((-3079), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 26, (FieldType) null, 26, 26880L, byteArray0, byteOrder0, (byte)9);
      tiffField0.getFieldType();
      assertEquals(26880, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown Tag (0x3e9)");
      TiffField tiffField0 = new TiffField(23, 0, fieldTypeRational0, 1L, (-1381L), byteArray0, byteOrder0, 48131);
      tiffField0.getFieldType();
      assertEquals(23, tiffField0.getTag());
      assertEquals((-1381), tiffField0.getOffset());
      assertEquals(48131, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2091), "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeDouble0, 2147483647L, (-776L), byteArray0, byteOrder0, (-2035));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2035), tiffField0.getSortHint());
      assertEquals((-776), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2378), (-123), fieldTypeShort0, 1L, 1663, byteArray0, (ByteOrder) null, (byte)104);
      tiffField0.getDoubleValue();
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2378), tiffField0.getTag());
      assertEquals((-123), tiffField0.getDirectoryType());
      assertEquals(1663, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      TiffField tiffField0 = new TiffField((byte)104, (byte)0, fieldTypeShort0, 1, (-863L), byteArray0, (ByteOrder) null, 1);
      tiffField0.getDoubleValue();
      assertEquals(104, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-863), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-96);
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 1L, (-778L), byteArray0, byteOrder0, 137);
      tiffField0.getDoubleValue();
      assertEquals(137, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-778), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(735, (byte)0, fieldTypeByte0.SRATIONAL, (byte)12, (-2363L), byteArray0, byteOrder0, 2346);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(735, tiffField0.getTag());
      assertEquals((-2363), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2346, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 4, fieldTypeByte0, (-1886L), 1L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals((-79), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 3041, fieldTypeLong0, 3041, 3041, byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals(3041, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(3041, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50936, (-1569), fieldTypeShort0, (-1341L), (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals((-1569), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50936, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "zAy3");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 4, fieldTypeFloat0, 262140L, 255L, (byte[]) null, byteOrder0, (-1569));
      int int0 = tiffField0.getBytesLength();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1569), tiffField0.getSortHint());
      assertEquals(1048560, int0);
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50936, (-1569), fieldTypeShort0, (-1341L), (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50936, tiffField0.getTag());
      assertEquals((-1569), tiffField0.getDirectoryType());
      assertEquals((-2682), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(2145428639, 37521, fieldTypeShort0, 272184L, 163856L, byteArray0, (ByteOrder) null, 37521);
      tiffField0.getByteOrder();
      assertEquals(163856, tiffField0.getOffset());
      assertEquals(2145428639, tiffField0.getTag());
      assertEquals(37521, tiffField0.getDirectoryType());
      assertEquals(37521, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147457764, (-543), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).IFD).DOUBLE, 4004L, 6340L, byteArray0, byteOrder0, (-543));
      tiffField0.getByteArrayValue();
      assertEquals(2147457764, tiffField0.getTag());
      assertEquals(6340, tiffField0.getOffset());
      assertEquals((-543), tiffField0.getDirectoryType());
      assertEquals((-543), tiffField0.getSortHint());
      assertEquals(32032, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 375);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(375, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(735, 34264, (FieldType) null, 671L, 1L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-464), 0, (FieldType) null, 1L, 0, byteArray0, (ByteOrder) null, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1864, (byte) (-98), fieldTypeFloat0.DOUBLE, (-1L), (-872L), byteArray0, byteOrder0, 1559);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1088), 4529, fieldTypeByte0, (-1088), 66L, byteArray0, byteOrder0, 1882);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "zAy3");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 4, fieldTypeFloat0, 262140L, 255L, (byte[]) null, byteOrder0, (-1569));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51, (-1836), fieldTypeByte0, (-412), 2775L, byteArray0, byteOrder0, (-1995));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1234), (-1), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).LONG).DOUBLE, (-1381L), 2897L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "AMa9hrx");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-853), (-853), fieldTypeLong0, (-1945L), 1257L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1671), (-1671), (FieldType) null, (-6096L), (-6096L), byteArray0, (ByteOrder) null, (byte) (-81));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[244];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(45, 69, fieldTypeFloat0.LONG, (-104L), 1485L, byteArray0, byteOrder0, 69);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-77), (-123), fieldTypeShort0, (byte)0, (byte)104, byteArray0, (ByteOrder) null, 1663);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33451, "");
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1964), (-2147206659), fieldTypeDouble0, (-1964), 596L, byteArray0, byteOrder0, (byte) (-76));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(316);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-702), 48323, fieldTypeRational0, 13860L, 13860L, byteArray0, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1679, 1679, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, 1679);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OU}gA'Fm/1g");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1679, tiffField0.getSortHint());
      assertEquals(1679, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1679, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, 1585, fieldTypeByte0.IFD, 3465, (-430L), byteArray0, byteOrder0, 3465);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-430), tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
      assertEquals(3465, tiffField0.getSortHint());
      assertEquals(1585, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 287, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals(287, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2390), "R'}");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)51, 2581L, byteArray0, byteOrder0, 41485);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("R'}");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(41485, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2581, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)3, 14, fieldTypeByte0, 3346L, (byte)119, byteArray0, byteOrder0, (byte)3);
      tiffField0.getValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals(3346, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(119, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.getOffset();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)3, 14, fieldTypeByte0, 3346L, (byte)119, byteArray0, byteOrder0, (byte)3);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(119, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-1), tagInfo0.length);
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48323, (-971), fieldTypeShort0, 0L, 1048L, byteArray0, byteOrder0, 959);
      int int0 = tiffField0.getTag();
      assertEquals(959, tiffField0.getSortHint());
      assertEquals(1048, tiffField0.getOffset());
      assertEquals(48323, int0);
      assertEquals((-971), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1574, 1478, fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)3, 14, fieldTypeByte0, 3346L, (byte)119, byteArray0, byteOrder0, (byte)3);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)26, 2725, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).IFD).SRATIONAL, 2725, (-271L), byteArray0, byteOrder0, 830);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (-3592), fieldType0, 735, (-21L), byteArray0, byteOrder0, (-2361));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@eafc5f1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2288), 2147457785, fieldTypeByte0.ASCII, 544342L, 1593L, byteArray0, byteOrder0, 100);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@aff58d7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34020, (-1717986917), fieldTypeFloat0, 572, (byte)51, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(2288, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(34020, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147457785, 2147457785, fieldTypeByte0.DOUBLE, 1593L, 6318L, byteArray0, byteOrder0, 2147457785);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147457785, tiffField0.getTag());
      assertEquals(2147457785, tiffField0.getDirectoryType());
      assertEquals(6318, tiffField0.getOffset());
      assertEquals(2147457785, tiffField0.getSortHint());
      assertEquals(12744, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 2062L, 1663, byteArray0, (ByteOrder) null, 2124392425);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2124392425, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1663, tiffField0.getOffset());
      assertEquals(4124, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2282, 2282, fieldTypeByte0.SRATIONAL, 2282, 1L, byteArray0, byteOrder0, 2147144767);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2282, tiffField0.getDirectoryType());
      assertEquals(18256, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(2282, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2147144767, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (-412), fieldTypeByte0.SLONG, 2775L, 2775L, byteArray0, byteOrder0, (-412));
      tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals((-412), tiffField0.getSortHint());
      assertEquals((-412), tiffField0.getDirectoryType());
      assertEquals(11100, tiffField0.getBytesLength());
      assertEquals(2775, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2028), (byte)1, fieldTypeByte0, (byte)1, (-2028), byteArray0, byteOrder0, (-51));
      tiffField0.getDoubleArrayValue();
      assertEquals((-51), tiffField0.getSortHint());
      assertEquals((-2028), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2028), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeRational0, 0, 2972L, byteArray0, byteOrder0, 2185);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2185, tiffField0.getSortHint());
      assertEquals(2972, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2390), "R'}");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)51, 2581L, byteArray0, byteOrder0, 41485);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@19523df9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 2062L, 1663, byteArray0, (ByteOrder) null, 2124392425);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2124392425, tiffField0.getSortHint());
      assertEquals(4124, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1663, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, (byte)43);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-702), 48323, fieldTypeRational0, 13860L, 13860L, byteArray0, byteOrder0, 16);
      tiffField0.getIntArrayValue();
      assertEquals(48323, tiffField0.getDirectoryType());
      assertEquals(110880, tiffField0.getBytesLength());
      assertEquals(13860, tiffField0.getOffset());
      assertEquals((-702), tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2028), (byte)1, fieldTypeByte0, (byte)1, (-2028), byteArray0, byteOrder0, (-51));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-51), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2028), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2028), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (-412), fieldTypeByte0.SLONG, 2775L, 2775L, byteArray0, byteOrder0, (-412));
      tiffField0.getIntArrayValue();
      assertEquals((-412), tiffField0.getSortHint());
      assertEquals(2775, tiffField0.getOffset());
      assertEquals(2775L, tiffField0.getCount());
      assertEquals(11100, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getTag());
      assertEquals((-412), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1726, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1726, (-1609), fieldTypeAscii0, 729L, 1726, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1609), tiffField0.getDirectoryType());
      assertEquals(729, tiffField0.getBytesLength());
      assertEquals(1726, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1726, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1726, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1726, (-1609), fieldTypeAscii0, 729L, 1726, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@4f9270c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-954), (-954), (FieldType) null, (-954), (-954), (byte[]) null, byteOrder0, 1193);
      String string0 = tiffField0.getTagName();
      assertEquals((-954), tiffField0.getOffset());
      assertEquals(1193, tiffField0.getSortHint());
      assertEquals((-954), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xfffffc46)", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeByte0, (byte)0, 287, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(287, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(265, 336, fieldTypeFloat0, 336, 2147483647L, byteArray0, byteOrder0, (-4));
      String string0 = tiffField0.getValueDescription();
      assertEquals(265, tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(336L, tiffField0.getCount());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(336, tiffField0.getDirectoryType());
      assertEquals(1344, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50, (-2665), fieldTypeShort0.BYTE, 4140L, (-1L), byteArray0, byteOrder0, 1986);
      tiffField0.dump();
      assertEquals((-2665), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1986, tiffField0.getSortHint());
      assertEquals(4140, tiffField0.getBytesLength());
      assertEquals(4140L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, 3259, fieldTypeByte0.FLOAT, 3259, 817L, byteArray0, byteOrder0, 3465);
      String string0 = tiffField0.getValueDescription();
      assertEquals(13036, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(3259, tiffField0.getDirectoryType());
      assertEquals(3259L, tiffField0.getCount());
      assertEquals(817, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(3465, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[425];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte) (-120), (byte)58, fieldTypeFloat0.DOUBLE, 59, (byte)58, byteArray0, byteOrder0, (byte)58);
      MockFile mockFile0 = new MockFile("w]AKR+2@Q^3kFmfq");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "w]AKR+2@Q^3kFmfq");
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals((-120), tiffField0.getTag());
      assertEquals(324L, mockFile0.length());
      assertEquals(58, tiffField0.getOffset());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147457764, (-543), fieldTypeByte0.DOUBLE, 4004L, 6340L, byteArray0, byteOrder0, (-543));
      String string0 = tiffField0.toString();
      assertEquals(32032, tiffField0.getBytesLength());
      assertEquals("2147457764 (0x7fff9ae4: Unknown Tag): 0.0, 0.0 (4004 Double)", string0);
      assertEquals((-543), tiffField0.getDirectoryType());
      assertEquals((-543), tiffField0.getSortHint());
      assertEquals(6340, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeFloat0.IFD, 2959L, 2626L, byteArray0, byteOrder0, (byte) (-104));
      tiffField0.dump();
      assertEquals(41, tiffField0.getTag());
      assertEquals(11836, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(2626, tiffField0.getOffset());
      assertEquals((-104), tiffField0.getSortHint());
      assertEquals(2959L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, (-412), fieldTypeByte0.SLONG, 2775L, 2775L, byteArray0, byteOrder0, (-412));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-412), tiffField0.getDirectoryType());
      assertEquals(2775L, tiffField0.getCount());
      assertEquals(2775, tiffField0.getOffset());
      assertEquals(11100, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(19, tiffField0.getTag());
      assertEquals((-412), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147457785, 2074, fieldTypeByte0.SSHORT, 6318L, (-1236L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(2074, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("2147457785 (0x7fff9af9: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (6318 SShort)", string0);
      assertEquals(12636, tiffField0.getBytesLength());
      assertEquals((-1236), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, 1730, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).IFD).SSHORT, 255L, 2147483647L, byteArray0, byteOrder0, 1934);
      String string0 = tiffField0.getValueDescription();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(1730, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(1934, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2288), 2147457785, fieldTypeByte0.ASCII, 544342L, 1593L, byteArray0, byteOrder0, 100);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147457785, tiffField0.getDirectoryType());
      assertEquals(1593, tiffField0.getOffset());
      assertEquals(544342, tiffField0.getBytesLength());
      assertEquals((-2288), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(100, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(306, 306, fieldTypeRational0.ASCII, 0L, 1948L, byteArray0, (ByteOrder) null, 37395);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37395, tiffField0.getSortHint());
      assertEquals(306, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(306, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1948, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 50, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-79), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34020, (-1717986917), fieldTypeFloat0, 572, (byte)51, byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), 34018);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(51, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(572L, tiffField0.getCount());
      assertEquals(34020, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2287, 0, fieldTypeLong0, 1L, 2287, byteArray0, (ByteOrder) null, (byte)4);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(34736, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string0);
      assertNotNull(string0);
      assertEquals(2287, tiffField0.getTag());
      assertEquals(2287, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, 735);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(735, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3225), (-3225), fieldTypeDouble0, 305L, 8L, byteArray0, byteOrder0, 1795);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-3225), tiffField0.getDirectoryType());
      assertEquals((-3225), tiffField0.getTag());
      assertEquals(8L, tiffElement0.offset);
      assertEquals(1795, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(305L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-954), (-954), (FieldType) null, (-954), (-954), (byte[]) null, byteOrder0, 1193);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-954L), tiffField0.getCount());
      assertEquals((-954), int0);
      assertEquals(1193, tiffField0.getSortHint());
      assertEquals((-954), tiffField0.getTag());
      assertEquals((-954), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34020, (-1717986917), fieldTypeFloat0, 572, (byte)51, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(65535, int0);
      assertEquals(34020, tiffField0.getTag());
      assertEquals(2288, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, (-412), fieldTypeByte0.IFD, 2775L, 2775L, byteArray0, byteOrder0, (-412));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-412), tiffField0.getDirectoryType());
      assertEquals((-412), tiffField0.getSortHint());
      assertEquals("19 (0x13: GPSDestLatitudeRef): ", string0);
      assertEquals(2775, tiffField0.getOffset());
      assertEquals(11100, tiffField0.getBytesLength());
  }
}
