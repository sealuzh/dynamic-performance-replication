/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:37:47 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.push(segment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      Segment segment1 = new Segment(byteArray0, (byte)69, 1, false, false);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, (byte)8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.sharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      segment0.writeTo(segment1, 369);
      assertFalse(segment1.equals((Object)segment0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Segment segment0 = new Segment(byteArray0, (byte)107, (byte)107, true, true);
      segment0.owner = false;
      // Undeclared exception!
      try { 
        segment0.split(874);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.pos = 0;
      // Undeclared exception!
      try { 
        segment0.split((-2507));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)114;
      Segment segment0 = new Segment(byteArray0, (-979), (byte)114, false, true);
      // Undeclared exception!
      try { 
        segment0.split(874);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      segment0.owner = true;
      byteArray0[3] = (byte) (-96);
      segment0.pos = (int) (byte) (-96);
      Segment segment1 = new Segment(byteArray0, (byte) (-96), (byte)0, false, true);
      SegmentPool.next = segment1;
      segment0.prev = SegmentPool.next;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.prev = segment0;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)126;
      segment0.owner = true;
      byteArray0[3] = (byte) (-96);
      segment0.pos = (int) (byte) (-96);
      Segment segment1 = new Segment(byteArray0, (byte) (-96), (byte)0, false, false);
      segment1.prev = segment0;
      SegmentPool.next = segment1;
      SegmentPool.next.limit = (int) (byte)126;
      segment0.prev = SegmentPool.next;
      segment0.compact();
      assertFalse(segment0.equals((Object)segment1));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte)69;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8283);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)69;
      Segment segment1 = new Segment(byteArray0, 8192, 8192, false, true);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, (byte)8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)69;
      Segment segment1 = new Segment(byteArray0, 8192, 8192, true, true);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, (byte)8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)126;
      byteArray0[3] = (byte) (-96);
      segment0.pos = (int) (byte) (-96);
      boolean boolean0 = true;
      Segment segment1 = new Segment(byteArray0, (byte) (-96), (byte)126, true, true);
      segment1.prev = segment1;
      SegmentPool.next = segment1;
      segment1.next = SegmentPool.next;
      SegmentPool.next.limit = (int) (byte)126;
      segment0.prev = SegmentPool.next;
      segment1.pop();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)126;
      byteArray0[3] = (byte) (-96);
      segment0.pos = (int) (byte) (-96);
      boolean boolean0 = true;
      Segment segment1 = new Segment(byteArray0, (byte) (-96), (byte)126, false, true);
      segment1.prev = segment1;
      SegmentPool.next = segment1;
      segment1.next = SegmentPool.next;
      SegmentPool.next.limit = 8097;
      segment0.prev = SegmentPool.next;
      segment0.compact();
      Segment segment2 = new Segment();
      // Undeclared exception!
      try { 
        segment2.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      int int0 = (-1900);
      Segment segment0 = new Segment(byteArray0, (-1900), (byte)107, true, false);
      // Undeclared exception!
      try { 
        segment0.split(1113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
