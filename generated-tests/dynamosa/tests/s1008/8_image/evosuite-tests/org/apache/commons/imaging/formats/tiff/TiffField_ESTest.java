/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 09:02:46 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)46;
      TiffField tiffField0 = new TiffField(3239, 4, fieldTypeFloat0.SSHORT, 3239, 100L, byteArray0, byteOrder0, (-3456));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(100, tiffField0.getOffset());
      assertEquals((-3456), tiffField0.getSortHint());
      assertEquals(3239, tiffField0.getTag());
      assertEquals(46, int0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)97;
      byteArray0[5] = (byte)9;
      TiffField tiffField0 = new TiffField(41485, 108, fieldTypeRational0, 108, 108, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(108, tiffField0.getOffset());
      assertEquals(41485, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getDirectoryType());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)9;
      TiffField tiffField0 = new TiffField(41485, 108, fieldTypeRational0, 108, 108, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(108, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(41485, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeLong0, 1L, (-1886L), byteArray0, (ByteOrder) null, 2790);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(341, tiffField0.getTag());
      assertEquals(341, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(2790, tiffField0.getSortHint());
      assertEquals((-1886), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40094, 50, fieldTypeShort0, 0L, (-2988L), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2988), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("40094 (0x9c9e: XPKeywords): Invalid value: Text field not encoded as bytes. (0 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Gamma");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3554), 1419, fieldTypeAscii0, 0L, 1032L, byteArray0, byteOrder0, 24);
      tiffField0.getValue();
      assertEquals(1419, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals((-3554), tiffField0.getTag());
      assertEquals(1032, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeRational0.FLOAT, 609, 400, byteArray0, byteOrder0, 609);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tagInfo0.tag);
      assertEquals(609, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 0L, 45L, byteArray0, byteOrder0, (-293));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getOffset());
      assertEquals((-293), tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1351), 11, fieldTypeByte0, 22464L, (-1351), byteArray0, byteOrder0, (-1351));
      int int0 = tiffField0.getTag();
      assertEquals((-1351), int0);
      assertEquals((-1351), tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals((-1351), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-105);
      byteArray0[4] = (byte)67;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147062985, (-253), fieldTypeAscii0, 1542L, 1542L, byteArray0, byteOrder0, 3012);
      String string0 = tiffField0.getStringValue();
      assertEquals((-253), tiffField0.getDirectoryType());
      assertEquals(2147062985, tiffField0.getTag());
      assertEquals(1542, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3012, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4873, 4873, fieldTypeLong0, 450L, (-2960L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(4873, tiffField0.getTag());
      assertEquals(4873, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2960), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "U(/m9>G{d[^b");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-826L), 0, byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getSortHint();
      assertEquals(73, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32773, (byte) (-16), fieldTypeLong0.DOUBLE, (-892L), 32773, byteArray0, byteOrder0, (-1937));
      int int0 = tiffField0.getOffset();
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-1937), tiffField0.getSortHint());
      assertEquals(32773, int0);
      assertEquals(32773, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146776772), (-391), fieldTypeRational0, 22464L, (byte) (-1), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals((-391), tiffField0.getDirectoryType());
      assertEquals((-2146776772), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4873, 4873, fieldTypeLong0, 450L, (-2960L), byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2960), tiffField0.getOffset());
      assertEquals(4873, tiffField0.getDirectoryType());
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(4873, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-58);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4873, 4873, fieldTypeLong0, 4633L, (-2960L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2960), tiffField0.getOffset());
      assertEquals(4873, tiffField0.getDirectoryType());
      assertEquals(4873, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1L, (byte)116, byteArray0, byteOrder0, (-391));
      tiffField0.getIntValue();
      assertEquals(116, tiffField0.getOffset());
      assertEquals((-391), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)105;
      byteArray0[4] = (byte) (-73);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1174, 1, fieldTypeRational0, 1, 1174L, byteArray0, byteOrder0, (byte)105);
      tiffField0.getIntValue();
      assertEquals(1174, tiffField0.getTag());
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1174, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-33);
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeLong0, 1L, (-1886L), byteArray0, (ByteOrder) null, 2790);
      tiffField0.getIntValue();
      assertEquals((-1886), tiffField0.getOffset());
      assertEquals(2790, tiffField0.getSortHint());
      assertEquals(341, tiffField0.getTag());
      assertEquals(341, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(90, (String) null);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, 90, fieldTypeShort0, 90, (-4114L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4114), tiffField0.getOffset());
      assertEquals(90, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50323, 50323, fieldTypeShort0, 50323, 50323, byteArray0, byteOrder0, 50323);
      tiffField0.getFieldTypeName();
      assertEquals(50323, tiffField0.getTag());
      assertEquals(50323, tiffField0.getOffset());
      assertEquals(50323, tiffField0.getDirectoryType());
      assertEquals(50323, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2313, 2313, fieldTypeShort0, (-3124L), 2313, byteArray0, byteOrder0, (byte)67);
      tiffField0.getFieldTypeName();
      assertEquals(67, tiffField0.getSortHint());
      assertEquals(2313, tiffField0.getTag());
      assertEquals(2313, tiffField0.getOffset());
      assertEquals(2313, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(432, 0, (FieldType) null, (-1073L), 432, byteArray0, byteOrder0, 717);
      tiffField0.getFieldType();
      assertEquals(432, tiffField0.getOffset());
      assertEquals(717, tiffField0.getSortHint());
      assertEquals(432, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, (String) null);
      TiffField tiffField0 = new TiffField(858, 858, fieldTypeLong0, 4985L, 858, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(858, tiffField0.getTag());
      assertEquals(858, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(858, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4873, 4873, fieldTypeLong0, 4633L, (-2960L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(4873, tiffField0.getDirectoryType());
      assertEquals(4873, tiffField0.getTag());
      assertEquals((-2960), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 1L, 179712L, byteArray0, byteOrder0, 3374);
      tiffField0.getDoubleValue();
      assertEquals(3374, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(179712, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      TiffField tiffField0 = new TiffField((byte)18, (byte)18, fieldTypeShort0.LONG, 1L, 1L, byteArray0, byteOrder0, (byte)18);
      tiffField0.getDoubleValue();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(18, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-38);
      TiffField tiffField0 = new TiffField((byte) (-38), 4, fieldTypeShort0, 1L, 3309L, byteArray0, byteOrder0, 37380);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(37380, tiffField0.getSortHint());
      assertEquals(3309, tiffField0.getOffset());
      assertEquals((-38), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ";)h0B*8D7J|o");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-1236));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1236), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-861), (-2253), fieldTypeShort0, 0L, 1322L, byteArray0, byteOrder0, 48258);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-861), tiffField0.getTag());
      assertEquals(1322, tiffField0.getOffset());
      assertEquals((-2253), int0);
      assertEquals(48258, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)114, 40, fieldTypeRational0, 0L, (byte) (-19), byteArray0, byteOrder0, 1815);
      tiffField0.getCount();
      assertEquals((-19), tiffField0.getOffset());
      assertEquals(114, tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(1815, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "p6Tl#m<MI0c<7>Q]p");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(263, 2147388038, fieldTypeRational0, 2047L, 1146L, byteArray0, byteOrder0, (byte)12);
      long long0 = tiffField0.getCount();
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(2147388038, tiffField0.getDirectoryType());
      assertEquals(1146, tiffField0.getOffset());
      assertEquals(2047L, long0);
      assertEquals(263, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2808, 32773, fieldTypeRational0, (-2147483648L), 2808, byteArray0, byteOrder0, (byte) (-16));
      tiffField0.getBytesLength();
      assertEquals(2808, tiffField0.getOffset());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals(2808, tiffField0.getTag());
      assertEquals(32773, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2145121179, (-1601), fieldTypeFloat0, 2145121179, 2145121179, byteArray0, byteOrder0, (-1601));
      tiffField0.getBytesLength();
      assertEquals((-1601), tiffField0.getDirectoryType());
      assertEquals(2145121179, tiffField0.getTag());
      assertEquals(2145121179, tiffField0.getOffset());
      assertEquals((-1601), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65112, "");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1059, 679, fieldTypeLong0, 679, (-1990L), byteArray0, (ByteOrder) null, 2004);
      tiffField0.getByteOrder();
      assertEquals(679, tiffField0.getDirectoryType());
      assertEquals((-1990), tiffField0.getOffset());
      assertEquals(1059, tiffField0.getTag());
      assertEquals(2004, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(37390, 37390, fieldTypeShort0, 37390, (-888L), byteArray0, byteOrder0, 41994);
      tiffField0.getByteArrayValue();
      assertEquals(37390, tiffField0.getDirectoryType());
      assertEquals(41994, tiffField0.getSortHint());
      assertEquals((-888), tiffField0.getOffset());
      assertEquals(37390, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (byte)1);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2808, 32773, fieldTypeRational0, (-2147483648L), 2808, byteArray0, byteOrder0, (byte) (-16));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3027, 3027, fieldTypeRational0, 3027, 3027, (byte[]) null, byteOrder0, 3027);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-22), (byte) (-22), fieldTypeRational0, (byte) (-22), (byte) (-22), byteArray0, byteOrder0, (byte) (-22));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50316, 50316, fieldTypeFloat0, 1L, (-3527L), byteArray0, byteOrder0, 50316);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeRational0, (byte)20, (byte)20, (byte[]) null, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-43), (byte) (-43), fieldTypeShort0, (byte) (-43), (byte) (-43), byteArray0, byteOrder0, (byte) (-43));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, 1, fieldTypeRational0, 1, (byte)28, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-166), fieldTypeShort0, (byte)28, 1L, byteArray0, byteOrder0, (-166));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2751), (-2751), fieldTypeShort0, (-2751), (-2751), byteArray0, byteOrder0, (-2751));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50341, 50341, (FieldType) null, 50341, 50341, byteArray0, byteOrder0, 50341);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-23), (byte) (-23), fieldTypeRational0, (byte) (-23), (byte) (-23), byteArray0, byteOrder0, (byte) (-23));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 340, fieldTypeRational0, 340, 340, (byte[]) null, byteOrder0, 340);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1715, 1715, fieldTypeRational0, 1715, 1715, (byte[]) null, byteOrder0, 1715);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-10), (byte) (-10), fieldTypeRational0, (byte) (-10), (byte) (-10), byteArray0, byteOrder0, (byte) (-10));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[154];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50714, 50714, (FieldType) null, 50714, 50714, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2100), (-2100), fieldTypeRational0, (-2100), (-2100), byteArray0, byteOrder0, (-2100));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-5), (byte) (-5), fieldTypeRational0, (byte) (-5), (byte) (-5), byteArray0, byteOrder0, (byte) (-5));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-928), fieldTypeRational0, 4L, (-928), byteArray0, byteOrder0, (-928));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50335, 50335, fieldTypeFloat0, 50335, 50335, (byte[]) null, byteOrder0, 50335);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-32), (byte) (-32), fieldTypeRational0, (byte) (-32), (byte) (-32), byteArray0, byteOrder0, (byte) (-32));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)25, (byte)25, fieldTypeShort0, 1L, (byte)25, byteArray0, byteOrder0, (byte)25);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1625), (-1625), fieldTypeShort0, (-1625), (-1625), byteArray0, byteOrder0, (-1625));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2108, 2108, (FieldType) null, 255L, 1541L, byteArray0, byteOrder0, (byte) (-43));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (-4530), fieldTypeRational0, (-4530), (-4530), byteArray0, byteOrder0, 13);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)16, 1, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("YZKTDwH0yXHPD5sD]Ra");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "t2+<v;@Htkr5ipD9{");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeShort0, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-4120), fieldTypeRational0, 1L, 50, byteArray0, byteOrder0, 741);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, (byte[]) null, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2093, 2093, fieldTypeRational0, (-2183L), 2093, byteArray0, byteOrder0, (-2571));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 1L, 179712L, byteArray0, byteOrder0, 3374);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(3374, tiffField0.getSortHint());
      assertEquals(179712, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146776772), (-391), fieldTypeRational0, 22464L, (byte) (-1), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2146776772), tiffField0.getTag());
      assertEquals((-391), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(228, (byte)2, fieldTypeLong0, (byte)2, 4L, byteArray0, byteOrder0, 263);
      tiffField0.getByteOrder();
      assertEquals(228, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(263, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeLong0, (-1L), 7, (byte[]) null, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2773), ">s~<'");
      TiffField tiffField0 = new TiffField(936, 936, fieldTypeRational0, (-1L), (-1930L), byteArray0, byteOrder0, 3);
      tiffField0.getFieldType();
      assertEquals((-1930), tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(936, tiffField0.getTag());
      assertEquals(936, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(228, (byte)2, fieldTypeLong0, (byte)2, 4L, byteArray0, byteOrder0, 263);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(263, tiffField0.getSortHint());
      assertEquals(228, tiffField0.getTag());
      assertEquals(2, int0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-18), (byte) (-18), fieldTypeRational0, (byte) (-18), (byte) (-18), byteArray0, byteOrder0, (byte) (-18));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(51, 51, fieldTypeRational0, 1L, 1L, (byte[]) null, byteOrder0, 51);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(228, (byte)2, fieldTypeLong0, (byte)2, 4L, byteArray0, byteOrder0, 263);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(263, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(228, tiffField0.getTag());
      assertEquals((-1), tagInfo0.length);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ";)hD0B*?8D7J|o");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, (-1236));
      int int0 = tiffField0.getTag();
      assertEquals((-1236), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2808, 32773, fieldTypeRational0, (-2147483648L), 2808, byteArray0, byteOrder0, (byte) (-16));
      long long0 = tiffField0.getCount();
      assertEquals(2808, tiffField0.getOffset());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-2147483648L), long0);
      assertEquals(2808, tiffField0.getTag());
      assertEquals(32773, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4653, (-2210), fieldTypeLong0, 3931L, 0L, (byte[]) null, byteOrder0, (-3176));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2210), tiffField0.getDirectoryType());
      assertEquals(4653, tiffField0.getTag());
      assertEquals((-3176), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeFloat0, 34, 34, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50335, 50335, fieldTypeFloat0, 50335, 50335, byteArray0, byteOrder0, 50335);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@65215934 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, (byte)28, (byte)28, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[313];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)43, (byte)43, fieldTypeDouble0, (byte)43, (byte)43, byteArray0, byteOrder0, (byte)43);
      tiffField0.getDoubleArrayValue();
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(43L, tiffField0.getCount());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-231), (-2253), fieldTypeShort0, 1636L, (-781L), byteArray0, byteOrder0, 1194);
      tiffField0.getDoubleArrayValue();
      assertEquals((-781), tiffField0.getOffset());
      assertEquals((-231), tiffField0.getTag());
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(1636L, tiffField0.getCount());
      assertEquals((-2253), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)25, (byte)25, fieldTypeRational0, (byte)25, (byte)25, byteArray0, byteOrder0, (byte)25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeFloat0, 34, 34, byteArray0, byteOrder0, 34);
      tiffField0.getDoubleArrayValue();
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(34L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50328, 50328, fieldTypeFloat0, 50328, 50328, byteArray0, byteOrder0, 50328);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@96a9b5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)18, (byte)18, fieldTypeShort0, (byte)18, (byte)18, byteArray0, byteOrder0, (byte)18);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(18L, tiffField0.getCount());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@f794bcb
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)77, (byte)77, fieldTypeAscii0, (byte)77, (byte)77, byteArray0, byteOrder0, (byte)77);
      String string0 = tiffField0.getStringValue();
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getBytesLength());
      assertEquals(77, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50382, 50382, fieldTypeShort0, 50382, 50382, byteArray0, byteOrder0, 50382);
      String string0 = tiffField0.getTagName();
      assertEquals(50382, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xc4ce)", string0);
      assertEquals(50382, tiffField0.getSortHint());
      assertEquals(50382, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(315, 315, fieldTypeFloat0, 315, 315, byteArray0, byteOrder0, 315);
      String string0 = tiffField0.getTagName();
      assertEquals(315, tiffField0.getDirectoryType());
      assertEquals(315, tiffField0.getOffset());
      assertEquals(315, tiffField0.getTag());
      assertEquals("Artist", string0);
      assertEquals(315, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50328, 50328, fieldTypeFloat0, 50328, 50328, byteArray0, byteOrder0, 50328);
      String string0 = tiffField0.toString();
      assertEquals(201312, tiffField0.getBytesLength());
      assertEquals(50328, tiffField0.getSortHint());
      assertEquals(50328, tiffField0.getOffset());
      assertEquals("50328 (0xc498: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (50328 Float)", string0);
      assertEquals(50328, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[154];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(136, 136, fieldTypeByte0, 136, 136, byteArray0, byteOrder0, 23);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(136, tiffField0.getOffset());
      assertEquals(136L, tiffField0.getCount());
      assertEquals(136, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (136)", string0);
      assertEquals(136, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[329];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1934, 1934, fieldTypeFloat0, 1934, 520L, byteArray0, byteOrder0, 1934);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1934, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1934, tiffField0.getDirectoryType());
      assertEquals(7736, tiffField0.getBytesLength());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(1934L, tiffField0.getCount());
      assertEquals(1934, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2805, 50721, fieldTypeDouble0, 2805, 555L, byteArray0, byteOrder0, 50721);
      String string0 = tiffField0.getValueDescription();
      assertEquals(555, tiffField0.getOffset());
      assertEquals(22440, tiffField0.getBytesLength());
      assertEquals(2805L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50721, tiffField0.getSortHint());
      assertEquals(50721, tiffField0.getDirectoryType());
      assertEquals(2805, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[167];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(132, 132, fieldTypeDouble0, 132, 132, byteArray0, byteOrder0, 132);
      String string0 = tiffField0.getValueDescription();
      assertEquals(132, tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(132, tiffField0.getTag());
      assertEquals(132L, tiffField0.getCount());
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(132, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[313];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)76, (byte)76, fieldTypeLong0, 691L, 691L, byteArray0, byteOrder0, (byte)76);
      String string0 = tiffField0.toString();
      assertEquals("76 (0x4c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (78) (691 IFD)", string0);
      assertEquals(691, tiffField0.getOffset());
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(2764, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0.LONG, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1723, 1723, fieldTypeShort0, 1723, 1723, byteArray0, byteOrder0, 1723);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1723, tiffField0.getTag());
      assertEquals(1723L, tiffField0.getCount());
      assertEquals(3446, tiffField0.getBytesLength());
      assertEquals(1723, tiffField0.getSortHint());
      assertEquals(1723, tiffField0.getOffset());
      assertEquals(1723, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[367];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)62, (byte)62, fieldTypeAscii0, 1388L, (-4699L), byteArray0, byteOrder0, (byte)62);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1388, tiffField0.getBytesLength());
      assertEquals((-4699), tiffField0.getOffset());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(62, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3261, 48259, fieldTypeAscii0, (-8589934592L), 48259, byteArray0, byteOrder0, 3261);
      tiffField0.toString();
      assertEquals((-8589934592L), tiffField0.getCount());
      assertEquals(3261, tiffField0.getSortHint());
      assertEquals(3261, tiffField0.getTag());
      assertEquals(48259, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(48259, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 50936, fieldTypeByte0, 50936, 50936, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50936, tiffField0.getBytesLength());
      assertEquals(50936, tiffField0.getDirectoryType());
      assertEquals(50936, tiffField0.getOffset());
      assertEquals("1 (0x1: Unknown Tag): 0 (50936 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(50341, 50341, fieldTypeShort0, 50341, 50341, byteArray0, byteOrder0, 50341);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-5635), (-1852));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50341, tiffField0.getDirectoryType());
      assertEquals(50341, tiffField0.getTag());
      assertEquals(50341, tiffField0.getOffset());
      assertEquals(50341, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(50341L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, (-807), fieldTypeRational0, 3458L, (-807), byteArray0, byteOrder0, (-807));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-807), 33);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-807), tiffField0.getOffset());
      assertEquals(33, tiffField0.getTag());
      assertEquals((-807), tiffField0.getSortHint());
      assertEquals((-807), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals(27664, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, (FieldType) null, (byte)16, (byte)16, byteArray0, byteOrder0, 1619);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2808, 32773, fieldTypeRational0, (-2147483648L), 2808, byteArray0, byteOrder0, (byte) (-16));
      int int0 = tiffField0.getSortHint();
      assertEquals((-16), int0);
      assertEquals(32773, tiffField0.getDirectoryType());
      assertEquals(2808, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(2808, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-1491), fieldTypeShort0, (-1491), 27, (byte[]) null, byteOrder0, (-1491));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-12), (-12), fieldTypeRational0, (-12), (-12), byteArray0, byteOrder0, (-12));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeShort0, (byte)28, (byte)28, byteArray0, byteOrder0, (byte)28);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(28L, tiffElement0.offset);
      assertEquals(28, tiffField0.getTag());
  }
}
