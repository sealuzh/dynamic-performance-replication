/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 11:21:29 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-636));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-636), "|7q2<&vyM/k", "|7q2<&vyM/k", "|7q2<&vyM/k", "|7q2<&vyM/k");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-663));
      classWriter0.index = (-663);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-663), "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "))'s2Oj";
      stringArray0[2] = "))'s2Oj";
      stringArray0[3] = "Class not found";
      stringArray0[4] = "Class not found";
      stringArray0[5] = "Class not found";
      classWriter0.visit((-453), (-18), "Class not found", "Class not found", "))'s2Oj", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-790), "r>*TX*`8HTnOUM;yP4", "r>*TX*`8HTnOUM;yP4", "smsf@Y00{>47h_jV[;C", "r>*TX*`8HTnOUM;yP4");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.index = (-974);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "6)k-3", "6)k-3", "6)k-3", "6)k-3");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "6)k-u3", "6)k-u3", "6)k-u3", "6)k-u3");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1890);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1890, "/^0Y,QO0(9_", "/^0Y,QO0(9_", "/^0Y,QO0(9_", "/^0Y,QO0(9_");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1890);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1890, "/^0Y,QO0(9_", "/^0Y,QO0(9_", (String) null, "/^0Y,QO0(9_");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.NameFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "\"6)k:H", "\"6)k:H", "\"6)k:H", "\"6)k:H");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 65524;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1477), "xy,|0i\"", "wheel.asm.FieldWriter", "The filter must not be null", (Object) null);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "xy,|0i\"", "w`D", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("$4qJ:<uVB", false);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[4];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1924);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-960), "", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@1f2395bd
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByteArray((byte[]) null, (-5175), (-2005));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 834, "wheel.asm.FieldWriter", "aa]{'NQ?", "", "wheel.asm.FieldWriter");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1890);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1890, "/^0Y,QO0(9_", "/^0Y,QO0(9_", (String) null, "/^0Y,QO0(9_");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-615));
      classWriter0.version = (-615);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-615), "srg.apache.commons.io.filefiltr.NameFileFilter", "srg.apache.commons.io.filefiltr.NameFileFilter", "srg.apache.commons.io.filefiltr.NameFileFilter", "srg.apache.commons.io.filefiltr.NameFileFilter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "w7eel.asm.ByteVector", "bz/+>V5l@D(+", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-36), "xy,?0i\"", "Uw94", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65516);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "\"6)k:H", "\"6)k:H", "\"6)k:H", "\"6)k:H");
      fieldWriter0.visitAnnotation("\"6)k:H", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-636));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-636), "|7q2<&vyM/k", "|7q2<&vyM/k", "|7q2<&vyM/k", "|7q2<&vyM/k");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2962);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "|72q2<&vyM/Gk", "Uw94", "Uw94", "|72q2<&vyM/Gk");
      fieldWriter0.visitAnnotation("|72q2<&vyM/Gk", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-18), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1048576), "2ciesNb", "2ciesNb", "", "2ciesNb");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 834, "wheel.asm.FieldWriter", "aa]{'NQ?", "", "wheel.asm.FieldWriter");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "EB}.", "q", "EB}.", "q");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-645), "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.NameFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
