/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:40:07 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34817, 34817, fieldTypeLong0, 34817, 34817, byteArray0, byteOrder0, 34817);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(34817, tiffField0.getDirectoryType());
      assertEquals(34817, tiffField0.getSortHint());
      assertEquals(34817, tiffField0.getOffset());
      assertEquals("34817 (0x8801: Unknown Tag): ", string0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)0, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34891, 34891, fieldTypeDouble0, 34891, 34891, byteArray0, byteOrder0, 34891);
      tiffField0.dump();
      assertEquals(279128, tiffField0.getBytesLength());
      assertEquals(34891, tiffField0.getTag());
      assertEquals(34891, tiffField0.getDirectoryType());
      assertEquals(34891L, tiffField0.getCount());
      assertEquals(34891, tiffField0.getOffset());
      assertEquals(34891, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37369, 37369, fieldTypeFloat0, 37369, 37369, byteArray0, byteOrder0, 37369);
      tiffField0.getFieldTypeName();
      assertEquals(37369, tiffField0.getDirectoryType());
      assertEquals(37369, tiffField0.getSortHint());
      assertEquals(37369, tiffField0.getTag());
      assertEquals(37369, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37376, 37376, fieldTypeFloat0, 37376, 37376, byteArray0, byteOrder0, 37376);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(37376, tiffField0.getSortHint());
      assertEquals(37376, tiffField0.getDirectoryType());
      assertEquals(37376, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(37376, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37383, 37383, fieldTypeFloat0, 37383, 37383, byteArray0, byteOrder0, 37383);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(37383, 37383);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(149532, tiffField0.getBytesLength());
      assertEquals(37383, tiffField0.getOffset());
      assertEquals(37383L, tiffField0.getCount());
      assertEquals(37383, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(37383, tiffField0.getTag());
      assertEquals(37383, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[374];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(123, 123, fieldTypeDouble0, 123, 123, byteArray0, byteOrder0, 123);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(123, tiffField0.getTag());
      assertEquals(123, tiffField0.getOffset());
      assertEquals(123, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37381, 37381, fieldTypeFloat0, 37381, 37381, byteArray0, byteOrder0, 37381);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@5d69077e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1675), (-1675), fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (-2282));
      tiffField0.dump();
      assertEquals((-2282), tiffField0.getSortHint());
      assertEquals((-1675), tiffField0.getDirectoryType());
      assertEquals((-1675), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37405, 37405, fieldTypeFloat0, 37405, 37405, byteArray0, byteOrder0, 37405);
      int int0 = tiffField0.getSortHint();
      assertEquals(37405, tiffField0.getOffset());
      assertEquals(37405, tiffField0.getTag());
      assertEquals(37405, tiffField0.getDirectoryType());
      assertEquals(37405, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[349];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(362, 362, fieldTypeDouble0, 362, 362, byteArray0, byteOrder0, 362);
      tiffField0.getDoubleArrayValue();
      assertEquals(362, tiffField0.getOffset());
      assertEquals(362, tiffField0.getSortHint());
      assertEquals(362, tiffField0.getTag());
      assertEquals(362, tiffField0.getDirectoryType());
      assertEquals(362L, tiffField0.getCount());
      assertEquals(2896, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2965, 2965, fieldTypeFloat0, 2965, 2965, byteArray0, byteOrder0, 2965);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2965, 2965);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2965, tiffField0.getTag());
      assertEquals(2965, tiffField0.getSortHint());
      assertEquals(2965, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(2965, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65533, (byte)0, fieldTypeLong0, 65533, 65533, byteArray0, byteOrder0, 65533);
      tiffField0.dump();
      assertEquals(262132, tiffField0.getBytesLength());
      assertEquals(65533, tiffField0.getSortHint());
      assertEquals(65533, tiffField0.getOffset());
      assertEquals(65533, tiffField0.getTag());
      assertEquals(65533L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65533, (byte)0, fieldTypeLong0, 65533, 65533, byteArray0, byteOrder0, 65533);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1114, 1114, fieldTypeShort0, 182, 1114, byteArray0, byteOrder1, 1114);
      tiffField0.getDoubleArrayValue();
      assertEquals(364, tiffField0.getBytesLength());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals(182L, tiffField0.getCount());
      assertEquals(1114, tiffField0.getTag());
      assertEquals(1114, tiffField0.getSortHint());
      assertEquals(1114, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)0, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeShort0, 49, 49, byteArray0, byteOrder0, 49);
      tiffField0.getIntArrayValue();
      tiffField0.dump();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(98, tiffField0.getBytesLength());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeRational0, 2464L, 2464L, byteArray0, byteOrder0, (byte)60);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(60, tiffField0.getTag());
      assertEquals(19712, tiffField0.getBytesLength());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(2464, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2464L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37381, 37381, fieldTypeFloat0, 37381, 37381, byteArray0, byteOrder0, 37381);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@62ae0372 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, (-4294967285L), (-4294967285L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-4294967285L), tiffField0.getCount());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(22, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)1, 8, fieldTypeByte0, 1040, 1040, byteArray0, byteOrder0, 1040);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1e56e629 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(34665, 34665, fieldTypeByte0, 34665, 34665, byteArray0, byteOrder0, 34665);
      tiffField0.dump();
      tiffField0.getByteOrder();
      assertEquals(34665, tiffField0.getTag());
      assertEquals(34665, tiffField0.getOffset());
      assertEquals(34665, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getBytesLength());
      assertEquals(34665, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeRational0, 49, 49, byteArray0, byteOrder0, (-3428));
      tiffField0.toString();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(392, tiffField0.getBytesLength());
      assertEquals((-3428), tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37376, 37376, fieldTypeFloat0, 37376, 37376, byteArray0, byteOrder0, 37376);
      String string0 = tiffField0.getTagName();
      assertEquals(37376, tiffField0.getOffset());
      assertEquals(37376, tiffField0.getSortHint());
      assertEquals(37376, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x9200)", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2995, (-423), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 2995);
      tiffField0.getDoubleArrayValue();
      tiffField0.getIntValue();
      assertEquals(2995, tiffField0.getSortHint());
      assertEquals(2995, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-423), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65533, (byte)0, fieldTypeLong0, 65533, 65533, byteArray0, byteOrder0, 65533);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41964, 41964, fieldTypeLong0, 41964, 41964, byteArray0, byteOrder0, 41964);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 34857, fieldTypeLong0, 34857, 34857, byteArray0, byteOrder0, 34857);
      String string0 = tiffField0.getTagName();
      assertEquals(34857, tiffField0.getOffset());
      assertEquals(34857, tiffField0.getDirectoryType());
      assertEquals(34857, tiffField0.getSortHint());
      assertEquals("Interlace", string0);
      assertEquals(34857, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder1, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)60, (-1893), fieldTypeRational0, (byte)60, (-1893), byteArray0, byteOrder0, (byte)60);
      ByteOrder.nativeOrder();
      tiffField0.getIntArrayValue();
      assertEquals((-1893), tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getTag());
      assertEquals((-1893), tiffField0.getOffset());
      assertEquals(480, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37424, 37424, fieldTypeFloat0, 37424, 37424, byteArray0, byteOrder0, 37424);
      tiffField0.getDoubleArrayValue();
      assertEquals(149696, tiffField0.getBytesLength());
      assertEquals(37424, tiffField0.getOffset());
      assertEquals(37424, tiffField0.getSortHint());
      assertEquals(37424, tiffField0.getDirectoryType());
      assertEquals(37424, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, 34857, fieldTypeLong0, 34857, 34857, byteArray0, byteOrder0, 34857);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(27, "");
      TiffField tiffField0 = new TiffField(1387, 41911, fieldTypeRational0, 34665L, (-15832L), byteArray0, byteOrder0, 27);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "");
      TiffField tiffField0 = new TiffField(34891, 34891, fieldTypeRational0, 149528L, 149528L, byteArray0, byteOrder0, 106);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3015, "");
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, 3015, 6284L, byteArray0, byteOrder1, 3015);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      
      int int0 = ObjectStreamConstants.baseWireHandle;
      tiffField0.getFieldType();
      tiffField0.getByteOrder();
      assertEquals(24120, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(6284, tiffField0.getOffset());
      assertEquals(3015, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65102, (-787), fieldTypeFloat0.ASCII, 2929L, 2975, byteArray0, byteOrder0, (-787));
      String string0 = tiffField0.getStringValue();
      assertEquals(65102, tiffField0.getTag());
      assertEquals((-787), tiffField0.getSortHint());
      assertEquals((-787), tiffField0.getDirectoryType());
      assertEquals(2929, tiffField0.getBytesLength());
      assertEquals(2975, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2147469285, 40, fieldTypeAscii0, 2807L, 40, byteArray0, byteOrder0, 2147469285);
      tiffField0.dump();
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(2807, tiffField0.getBytesLength());
      assertEquals(2147469285, tiffField0.getTag());
      assertEquals(2147469285, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[291];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(41970, 41970, fieldTypeByte0, 41970, 2147483652L, byteArray0, byteOrder0, 41970);
      tiffField0.dump();
      assertEquals(41970, tiffField0.getDirectoryType());
      assertEquals((-2147483644), tiffField0.getOffset());
      assertEquals(41970, tiffField0.getBytesLength());
      assertEquals(41970, tiffField0.getTag());
      assertEquals(41970, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(41986, 41986, fieldTypeShort0, 41986, 41986, byteArray0, byteOrder0, 43);
      tiffField0.dump();
      assertEquals(41986, tiffField0.getTag());
      assertEquals(41986, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(41986, tiffField0.getOffset());
      assertEquals(83972, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[291];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41927, 41927, fieldTypeLong0, 41927, 41927, byteArray0, byteOrder0, 41927);
      tiffField0.dump();
      assertEquals(41927, tiffField0.getSortHint());
      assertEquals(41927, tiffField0.getOffset());
      assertEquals(167708, tiffField0.getBytesLength());
      assertEquals(41927, tiffField0.getTag());
      assertEquals(41927, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-296), 1307, fieldTypeDouble0.FLOAT, 1307, 1307, byteArray0, byteOrder0, (-296));
      tiffField0.dump();
      assertEquals((-296), tiffField0.getTag());
      assertEquals((-296), tiffField0.getSortHint());
      assertEquals(1307, tiffField0.getDirectoryType());
      assertEquals(5228, tiffField0.getBytesLength());
      assertEquals(1307, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(173, 173, fieldTypeDouble0, 173, 173, byteArray0, byteOrder0, 173);
      tiffField0.dump();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteOrder.nativeOrder();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@62648aa0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
