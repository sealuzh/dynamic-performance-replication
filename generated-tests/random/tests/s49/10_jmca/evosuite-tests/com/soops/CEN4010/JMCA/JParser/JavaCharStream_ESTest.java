/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 11:17:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char char0 = ';';
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E{Z(4`V!l*!ULu%UD");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 845, 845);
      javaCharStream0.inBuf = 845;
      javaCharStream0.FillBuff();
      javaCharStream0.adjustBeginLineColumn(845, 3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qa)}Q");
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = '$';
      stringReader0.read(charArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream.hexval('d');
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = 2993;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2993, 368);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.bufpos = 1213;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.markSupported();
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      byteArrayInputStream0.markSupported();
      javaCharStream0.GetSuffix(79);
      javaCharStream0.getEndLine();
      javaCharStream0.getBeginColumn();
      JavaCharStream.hexval('7');
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char char0 = 'C';
      JavaCharStream.hexval('C');
      StringReader stringReader0 = new StringReader("");
      long long0 = (-2235L);
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">9@0>L4");
      byteArray0[4] = (byte) (-121);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      int int0 = 2057;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2057, (byte)1, (byte)15);
      char char0 = ']';
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)1, (int) (byte) (-14), 5);
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('c');
      StringReader stringReader0 = new StringReader("aAKH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 12);
      stringReader0.ready();
      javaCharStream0.nextCharInd = 12;
      stringReader0.markSupported();
      int[] intArray0 = new int[0];
      stringReader0.markSupported();
      int int0 = 1;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "aAKH", 1, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "d_^e`14j");
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader("d_^e`14j");
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = '4';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 98, 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rg%UkHU~lJ(:D@G}8(");
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("");
      int int0 = 1;
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = 'L';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[5] = '3';
      charArray0[6] = '3';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[7] = '3';
      stringReader0.read(charArray0);
      stringReader0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-112);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-201), 58);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)71, (-541));
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.adjustBeginLineColumn((byte) (-112), (-201));
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 169, (-2192));
      javaCharStream0.ReInit((Reader) stringReader0, 117, 1);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("{tjzyp*%J5Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, (-951));
      javaCharStream0.line = 2;
      javaCharStream0.getBeginColumn();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte) (-46);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)101;
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte) (-34);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-46), 102, 91);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      JavaCharStream.hexval('a');
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
      
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaCharStream.hexval('9');
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)120;
      byteArray0[4] = (byte) (-20);
      byteArray0[5] = (byte)85;
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte)59;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-121), 4056);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream1 = null;
      try {
        bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, (byte) (-20));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      int int0 = 14;
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'm';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 14);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0, 14, 10);
      javaCharStream0.adjustBeginLineColumn(65, 14);
      stringReader0.close();
      char[] charArray1 = new char[3];
      charArray1[0] = 'f';
      charArray1[1] = 'i';
      charArray1[2] = 'O';
      try { 
        stringReader0.read(charArray1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char char0 = 'A';
      JavaCharStream.hexval('A');
      int int0 = (-873);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-873));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.bufsize = 74;
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%l9'");
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3484), (-1583));
      javaCharStream0.bufpos = 3;
      javaCharStream0.getLine();
      javaCharStream0.getEndColumn();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      char char0 = javaCharStream0.readChar();
      assertEquals((-3483), javaCharStream0.getEndLine());
      assertEquals('l', char0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("r7KV.t{Yrcr38Cs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1230), (-2981));
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`k:BqaOR,<IqIr<i]");
      char[] charArray0 = new char[2];
      charArray0[0] = '-';
      charArray0[1] = '6';
      stringReader0.read(charArray0, 0, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4097), 73, 1613);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(73, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("NTnhvv$Tt*%");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JavaCharStream.hexval('f');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 15);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      int int0 = 33;
      int int1 = 4096;
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 33, 33, 4096);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-28);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 3519, 4081, 4081);
      JavaCharStream.hexval('8');
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")4)$E_X~sk Bux");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = 3;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3, 3);
      javaCharStream0.backup(3);
      javaCharStream0.maxNextCharInd = 3;
      stringReader0.close();
      javaCharStream0.adjustBeginLineColumn(3, (-1));
      javaCharStream0.readChar();
      int int1 = (-340);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-340));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JavaCharStream.hexval('0');
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SB%,y*v%_o");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream.hexval('2');
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(82, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-3320L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1332), (-1332));
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1332);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      javaCharStream0.bufline = intArray0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      stringReader0.mark(94);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lkh}~E_YYZ6+");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.bufpos = 8;
      javaCharStream0.adjustBeginLineColumn(8, 3949);
      javaCharStream0.tokenBegin = 4080;
      assertEquals(8, javaCharStream0.getEndLine());
      
      javaCharStream0.ReInit((Reader) null, 3949, 846, 3949);
      pipedInputStream0.markSupported();
      StringReader stringReader0 = new StringReader("Lkh}~E_YYZ6+");
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetImage();
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{Ky'=v[O'}4Mb<&}");
      char[] charArray0 = new char[5];
      stringReader0.ready();
      charArray0[0] = '@';
      charArray0[1] = '!';
      charArray0[2] = '|';
      charArray0[3] = '|';
      charArray0[4] = 'E';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(5);
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReadByte();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('[', char0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6&'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.Done();
      int[] intArray0 = new int[3];
      intArray0[0] = 54;
      javaCharStream0.tokenBegin = 2981;
      intArray0[1] = 54;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[2] = 4096;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.backup(11);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6&'");
      stringReader0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4064);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-3694);
      int int1 = 0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '\"';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3694), 0, 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xEBzJ:Lam'g");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)88;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (-692));
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)88, (-1));
      byteArrayInputStream0.reset();
      javaCharStream0.prevCharIsCR = false;
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-1365);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1365), (-1365));
      int int1 = 4081;
      javaCharStream0.backup(4081);
      pipedInputStream0.mark(4081);
      javaCharStream0.GetImage();
      javaCharStream0.line = 290;
      javaCharStream0.bufsize = 4081;
      javaCharStream0.bufpos = 290;
      pipedInputStream0.mark(4081);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('m');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)123;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m|?SZG)cqD$k^]3 !>");
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[5] = (byte)20;
      byteArray0[6] = (byte) (-2);
      byteArray0[7] = (byte) (-37);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-109), (byte)123);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-37), (byte)123);
      javaCharStream0.backup((byte) (-91));
      javaCharStream0.prevCharIsCR = false;
      byteArrayInputStream0.markSupported();
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn((byte)1, (byte) (-91));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 1121;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1121, 1121);
      stringReader0.reset();
      javaCharStream0.getBeginColumn();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.column = 1968;
      JavaCharStream.hexval('1');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 1124, 1188);
      javaCharStream0.column = 1188;
      javaCharStream0.GetSuffix(92);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k`Y]cN~'VGNb");
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JavaCharStream.hexval('6');
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0);
      StringReader stringReader0 = new StringReader("?!w");
      stringReader0.close();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1431), 83);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      int int0 = (-1196);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1196), (-1196));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`$/_#");
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 4158, 4830);
      javaCharStream0.AdjustBuffSize();
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)60;
      byteArray0[5] = (byte) (-104);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)27;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, 3373);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 73, (-120), 73);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 1287);
      stringReader0.skip((-2238L));
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      stringReader0.read(charBuffer0);
      javaCharStream0.Done();
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      charArray0[2] = 'T';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-4087));
      assertEquals(4086, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)96;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 57, 1);
      int int0 = 60;
      byteArrayInputStream0.mark(1);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 60, 866, (-675));
      javaCharStream0.GetImage();
      javaCharStream0.tokenBegin = (int) (byte) (-120);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, (-5933), 0, 1971);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)42, (byte) (-5));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 0, (byte) (-5));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char char0 = '.';
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[0");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 906, 906, 1369);
      javaCharStream0.Done();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("cE");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<l/cX0MC8Z]!F2");
      int int0 = 1971;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1971, 1971);
      javaCharStream0.adjustBeginLineColumn(1971, 1971);
      javaCharStream0.getBeginColumn();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1971, (-1));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      int int1 = 2559;
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 2559, 1971);
      try { 
        bufferedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Resetting to invalid mark
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3405), (-3405));
      char[] charArray0 = new char[4];
      charArray0[0] = 'q';
      charArray0[1] = 'I';
      charArray0[2] = '&';
      charArray0[3] = ']';
      stringReader0.read(charArray0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.adjustBeginLineColumn(411, (-1104));
      javaCharStream0.ReInit((Reader) stringReader0, 411, (-3405), 830);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)67;
      int int0 = 0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (byte)1);
      byteArrayInputStream0.skip((byte)84);
      javaCharStream0.column = (-3361);
      javaCharStream0.AdjustBuffSize();
      Reader reader0 = null;
      int int1 = 4096;
      byteArrayInputStream0.skip(1L);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)22;
      byte byte0 = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 98, (byte)22);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      JavaCharStream.hexval('b');
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.backup(12);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w':Hv@X\"]A!?{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "cF5o");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-784), 96);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 96);
      bufferedInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 96);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 4, (-784));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = (-64);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-64));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
