/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 08:53:08 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[4] = (byte)4;
      TiffField tiffField0 = new TiffField((-1717986917), (-1126), fieldTypeRational0, (byte)4, 179L, byteArray0, byteOrder0, (byte)4);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(179, tiffField0.getOffset());
      assertEquals((-1126), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2112278998, 12, fieldTypeShort0.SLONG, 1L, (-450), byteArray0, byteOrder0, 2112278998);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-450), tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(2112278998, tiffField0.getSortHint());
      assertEquals(2112278998, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1923), fieldTypeShort0, (-1L), (-1803L), byteArray0, byteOrder0, (-1923));
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-1923), tiffField0.getDirectoryType());
      assertEquals((-1923), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1803), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 1465, fieldTypeFloat0, (-2147483648L), 0L, byteArray0, byteOrder0, 1750);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1465, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1750, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getValue();
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37510, (-2553), fieldTypeByte0, 3319L, (-1892L), byteArray0, byteOrder0, 50768);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(50768, tiffField0.getSortHint());
      assertEquals(37510, tagInfo0.tag);
      assertEquals((-2553), tiffField0.getDirectoryType());
      assertEquals(37510, tiffField0.getTag());
      assertEquals((-1892), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(330, (-2145191775), fieldTypeShort0, 1533, (-3936L), byteArray0, (ByteOrder) null, (byte)58);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(58, tiffField0.getSortHint());
      assertEquals((-2145191775), tiffField0.getDirectoryType());
      assertEquals(330, tagInfo0.tag);
      assertEquals((-3936), tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2147483647), 48325, fieldTypeDouble0.LONG, 83L, (-14432L), byteArray0, byteOrder0, 11);
      int int0 = tiffField0.getTag();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(48325, tiffField0.getDirectoryType());
      assertEquals((-2147483647), int0);
      assertEquals((-14432), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-15);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 839, fieldTypeRational0, 839, (-194L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-194), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(839, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 1465, fieldTypeFloat0, (-2147483648L), 0L, byteArray0, byteOrder0, 1750);
      int int0 = tiffField0.getSortHint();
      assertEquals(1465, tiffField0.getDirectoryType());
      assertEquals(1750, int0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1533, 1533, fieldTypeShort0.RATIONAL, 1533, 0L, byteArray0, byteOrder0, 1533);
      int int0 = tiffField0.getOffset();
      assertEquals(1533, tiffField0.getTag());
      assertEquals(1533, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1533, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, (-1), (-1), byteArray0, byteOrder0, 37397);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(37397, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146009740, 2146009740, fieldTypeAscii0.LONG, 1533, (-2083L), byteArray0, byteOrder0, (-1077));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1077), tiffField0.getSortHint());
      assertEquals(2146009740, tiffField0.getDirectoryType());
      assertEquals((-2083), tiffField0.getOffset());
      assertEquals(2146009740, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-107);
      TiffField tiffField0 = new TiffField((byte) (-107), (byte) (-107), fieldTypeAscii0.SHORT, 3347, (-1918L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-27392), int0);
      assertEquals((-107), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1918), tiffField0.getOffset());
      assertEquals((-107), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)125;
      TiffField tiffField0 = new TiffField((-891), 251, fieldTypeLong0, 1L, 8581387392L, byteArray0, byteOrder0, (-2146890910));
      tiffField0.getIntValue();
      assertEquals((-891), tiffField0.getTag());
      assertEquals((-8547200), tiffField0.getOffset());
      assertEquals((-2146890910), tiffField0.getSortHint());
      assertEquals(251, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-113);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(404, 65535, fieldTypeByte0, 1L, (-453L), byteArray0, byteOrder0, (byte) (-113));
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-453), tiffField0.getOffset());
      assertEquals(404, tiffField0.getTag());
      assertEquals((-113), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2852, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(558, (byte)6, fieldTypeFloat0, 2773L, 268L, byteArray0, byteOrder0, (-1766));
      tiffField0.getFieldTypeName();
      assertEquals(558, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1766), tiffField0.getSortHint());
      assertEquals(268, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(11, "");
      TiffField tiffField0 = new TiffField(559, (-3476), fieldTypeRational0, 1688, (-3476), byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(559, tiffField0.getTag());
      assertEquals((-3476), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3476), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1366, (byte) (-72), (FieldType) null, (byte)38, 30, byteArray0, byteOrder0, (byte)18);
      tiffField0.getFieldType();
      assertEquals((-72), tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getOffset());
      assertEquals(1366, tiffField0.getTag());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Clt47-vUh^%wnR");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1949), "GPSAltitude");
      TiffField tiffField0 = new TiffField((-964), 122, fieldTypeLong0, 299024L, 1871, byteArray0, byteOrder0, 122);
      tiffField0.getFieldType();
      assertEquals(122, tiffField0.getSortHint());
      assertEquals((-964), tiffField0.getTag());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(1871, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 7, fieldTypeShort0, 1, 7, byteArray0, byteOrder0, (-4922));
      tiffField0.getDoubleValue();
      assertEquals((-4922), tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField((byte) (-97), (byte)43, fieldTypeShort0.LONG, (byte)1, 1871, byteArray0, byteOrder0, 1176);
      tiffField0.getDoubleValue();
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(1176, tiffField0.getSortHint());
      assertEquals(1871, tiffField0.getOffset());
      assertEquals((-97), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-113);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(404, 65535, fieldTypeByte0, 1L, (-453L), byteArray0, byteOrder0, (byte) (-113));
      tiffField0.getDoubleValue();
      assertEquals(404, tiffField0.getTag());
      assertEquals((-113), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-453), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-267), 11, fieldTypeByte0, (byte)4, 11, byteArray0, byteOrder0, 712);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(11, tiffField0.getOffset());
      assertEquals((-267), tiffField0.getTag());
      assertEquals(11, int0);
      assertEquals(712, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1369), (-1369), fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte)23);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals((-1369), int0);
      assertEquals((-1369), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1197), (-1949), fieldTypeShort0, 0L, 1, byteArray0, byteOrder0, (-343));
      tiffField0.getCount();
      assertEquals((-343), tiffField0.getSortHint());
      assertEquals((-1949), tiffField0.getDirectoryType());
      assertEquals((-1197), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1945, fieldTypeRational0, 0L, 2909L, (byte[]) null, byteOrder0, 1945);
      tiffField0.getBytesLength();
      assertEquals(2909, tiffField0.getOffset());
      assertEquals(1945, tiffField0.getDirectoryType());
      assertEquals(1945, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4837, 4837, fieldTypeByte0, (-1000L), 14004L, byteArray0, byteOrder0, 4837);
      tiffField0.getBytesLength();
      assertEquals(14004, tiffField0.getOffset());
      assertEquals(4837, tiffField0.getTag());
      assertEquals(4837, tiffField0.getSortHint());
      assertEquals(4837, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1115, 1, fieldTypeShort0, 1, (-2L), byteArray0, (ByteOrder) null, 65535);
      tiffField0.getByteOrder();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(1115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2412), (-721), fieldTypeByte0, 1328L, (-1L), byteArray0, byteOrder0, (byte)90);
      tiffField0.getByteArrayValue();
      assertEquals(90, tiffField0.getSortHint());
      assertEquals((-2412), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-721), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2635, (-471), fieldType0, 1844L, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 20, fieldTypeShort0, (-809L), 0L, byteArray0, byteOrder0, 1533);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-388), 5, fieldTypeByte0, (-572L), (byte)12, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-78), 50, fieldTypeDouble0.LONG, (-2940L), (-810L), byteArray0, byteOrder0, (-305));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-2017), fieldTypeRational0, (-1804L), (-1804L), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, 3973, fieldTypeAscii0, (-7L), (byte)23, byteArray0, byteOrder0, (-635));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2112278996, 39, fieldTypeDouble0.SHORT, 2112278996, 54L, byteArray0, byteOrder0, 2112278996);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3604), (-2957), fieldTypeByte0, (-2957), 2112278997, byteArray0, byteOrder0, (-2957));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-689), "c=uS_(M|Gq38(CON(KM");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(759, 759, fieldTypeAscii0, (-1L), 2904L, byteArray0, byteOrder0, (-689));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-87), "mI\"R~4_M");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, (-774L), (-774L), byteArray0, byteOrder0, 2327);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1884), 586, fieldTypeShort0.RATIONAL, (byte)126, (byte)126, byteArray0, (ByteOrder) null, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, (-2386L), (-1394L), byteArray0, byteOrder0, (byte)48);
      tiffField0.getByteOrder();
      assertEquals((-1394), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 0L, 1, byteArray0, byteOrder0, (-2736));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2736), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(213, (-1016), fieldTypeLong0, 213, (-1094L), byteArray0, byteOrder0, 254);
      tiffField0.getFieldType();
      assertEquals((-1094), tiffField0.getOffset());
      assertEquals(213, tiffField0.getTag());
      assertEquals(254, tiffField0.getSortHint());
      assertEquals((-1016), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, (ByteOrder) null, (-870));
      MockFile mockFile0 = new MockFile("@'r-.P9('^9`U`\"*Fm", "@'r-.P9('^9`U`\"*Fm");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(37L, mockFile0.length());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-870), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-1417), (FieldType) null, (-408L), (-1417), (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals((-1417), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1417), tiffField0.getDirectoryType());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)85, (-850), fieldTypeByte0, (byte) (-127), (byte) (-127), byteArray0, byteOrder0, (-850));
      tiffField0.getCount();
      assertEquals(85, tiffField0.getTag());
      assertEquals((-127), tiffField0.getOffset());
      assertEquals((-850), tiffField0.getDirectoryType());
      assertEquals((-850), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getBytesLength();
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-992), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, 48, fieldTypeByte0.DOUBLE, 48, 48, byteArray0, byteOrder0, (byte) (-125));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (byte)15, fieldTypeByte0, (byte)15, 48256, byteArray0, byteOrder0, (byte)15);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7c2edf6f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-107), (byte) (-107), fieldTypeAscii0.SSHORT, 3347, (-1918L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-1918), tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-107), tiffField0.getTag());
      assertEquals((-107), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 7, fieldTypeShort0, 1, 7, byteArray0, byteOrder0, (-4922));
      tiffField0.getIntValueOrArraySum();
      assertEquals(7, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-4922), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, (-2147483648L), 1, byteArray0, byteOrder0, 0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, 26, fieldTypeByte0.FLOAT, (byte)12, (-572L), byteArray0, byteOrder0, (byte)12);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-572), tiffField0.getOffset());
      assertEquals(9, doubleArray0.length);
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(13, 2142657842, fieldTypeShort0.SLONG, 13, (-676L), byteArray0, byteOrder0, 251);
      tiffField0.getDoubleArrayValue();
      assertEquals((-676), tiffField0.getOffset());
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals(251, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals(2142657842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1600), 8, fieldTypeByte0, 3346L, 8, byteArray0, byteOrder0, (byte)114);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@49ca79e8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 725, fieldTypeAscii0.SHORT, 33421, 33421, byteArray0, byteOrder0, 62);
      tiffField0.getDoubleArrayValue();
      assertEquals(725, tiffField0.getDirectoryType());
      assertEquals(33421, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(66842, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-891), 251, fieldTypeLong0, 1L, 8581387392L, byteArray0, byteOrder0, (-2146890910));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2146890910), tiffField0.getSortHint());
      assertEquals(251, tiffField0.getDirectoryType());
      assertEquals((-891), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-8547200), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(7, (-1717986917), fieldTypeRational0, 48256, 48256, byteArray0, byteOrder0, (-1717986917));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(386048, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(48256, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 4L, 4L, byteArray0, byteOrder0, (byte)108);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4d600744 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-838), (-838), fieldTypeShort0, 200L, 108L, byteArray0, byteOrder0, (-1309));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-838), tiffField0.getTag());
      assertEquals((-1309), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-838), tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(330, (-2145191775), fieldTypeShort0, 1533, (-3936L), byteArray0, (ByteOrder) null, (byte)58);
      tiffField0.getIntArrayValue();
      assertEquals((-2145191775), tiffField0.getDirectoryType());
      assertEquals((-3936), tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
      assertEquals(3066, tiffField0.getBytesLength());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(529, 1753, fieldTypeRational0, 1320, 579L, byteArray0, byteOrder0, (byte)114);
      tiffField0.getIntArrayValue();
      assertEquals(1753, tiffField0.getDirectoryType());
      assertEquals(10560, tiffField0.getBytesLength());
      assertEquals(114, tiffField0.getSortHint());
      assertEquals(529, tiffField0.getTag());
      assertEquals(579, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1530, 4, fieldTypeByte0.SRATIONAL, 4, 1530, byteArray0, byteOrder0, 1385);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-891), 251, fieldTypeLong0, 1L, 8581387392L, byteArray0, byteOrder0, (-2146890910));
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-891), tiffField0.getTag());
      assertEquals((-8547200), tiffField0.getOffset());
      assertEquals((-2146890910), tiffField0.getSortHint());
      assertEquals(251, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34850, (-2537), fieldTypeLong0, 1460L, 4L, byteArray0, byteOrder0, 873);
      tiffField0.getIntArrayValue();
      assertEquals(34850, tiffField0.getTag());
      assertEquals((-2537), tiffField0.getDirectoryType());
      assertEquals(5840, tiffField0.getBytesLength());
      assertEquals(873, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@6fb10d30
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1183, (-2100), fieldTypeAscii0, 448L, 448L, byteArray0, byteOrder0, 33421);
      String string0 = tiffField0.getStringValue();
      assertEquals(33421, tiffField0.getSortHint());
      assertEquals(448, tiffField0.getOffset());
      assertEquals(1183, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(448, tiffField0.getBytesLength());
      assertEquals((-2100), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 725, fieldTypeAscii0.SHORT, 33421, 33421, byteArray0, byteOrder0, 62);
      String string0 = tiffField0.getTagName();
      assertEquals(725, tiffField0.getDirectoryType());
      assertEquals(33421, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(62, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(519, "wO");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(305, 1, fieldTypeShort0, 5028L, (-5631L), byteArray0, byteOrder0, 2311);
      String string0 = tiffField0.getTagName();
      assertEquals(305, tiffField0.getTag());
      assertEquals((-5631), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("Software", string0);
      assertEquals(2311, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 0L, 1, byteArray0, byteOrder0, (-2736));
      MockFile mockFile0 = new MockFile("'java.lang.String@0000000003'", "'java.lang.String@0000000003'");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "'java.lang.String@0000000003'");
      assertEquals((-2736), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(93L, mockFile0.length());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1252), (-1252), fieldTypeDouble0.FLOAT, 759L, 408L, byteArray0, byteOrder0, (-1252));
      String string0 = tiffField0.getValueDescription();
      assertEquals(408, tiffField0.getOffset());
      assertEquals(3036, tiffField0.getBytesLength());
      assertEquals((-1252), tiffField0.getTag());
      assertEquals((-1252), tiffField0.getSortHint());
      assertEquals((-1252), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2112279005, 5, fieldTypeByte0, 255L, (-435L), byteArray0, byteOrder0, 5);
      tiffField0.dump();
      assertEquals(2112279005, tiffField0.getTag());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-435), tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2112278998, (byte)0, fieldTypeByte0.DOUBLE, 3162L, 3162L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(25296, tiffField0.getBytesLength());
      assertEquals(3162, tiffField0.getOffset());
      assertEquals(2112278998, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, 48, fieldTypeByte0.DOUBLE, 48, 48, byteArray0, byteOrder0, (byte) (-125));
      String string0 = tiffField0.toString();
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals("33445 (0x82a5: MD FileTag): 0.0 (48 Double)", string0);
      assertEquals(48, tiffField0.getOffset());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(251, 251, fieldTypeDouble0.IFD, 1218L, 251, byteArray0, byteOrder0, 251);
      String string0 = tiffField0.toString();
      assertEquals(251, tiffField0.getOffset());
      assertEquals("251 (0xfb: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (1218 IFD)", string0);
      assertEquals(251, tiffField0.getSortHint());
      assertEquals(251, tiffField0.getDirectoryType());
      assertEquals(4872, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-108), (-274), fieldTypeLong0, 1779L, (-1), byteArray0, byteOrder0, (byte)34);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7116, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-108), tiffField0.getTag());
      assertEquals(34, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-274), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2112279006, 7, fieldTypeDouble0.SHORT, 117, 76L, byteArray0, byteOrder0, 2112279006);
      String string0 = tiffField0.toString();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(2112279006, tiffField0.getSortHint());
      assertEquals("2112279006 (0x7de6d1de: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (117 Short)", string0);
      assertEquals(234, tiffField0.getBytesLength());
      assertEquals(76, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-838), (-838), fieldTypeShort0, 200L, 108L, byteArray0, byteOrder0, (-1309));
      String string0 = tiffField0.getValueDescription();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-1309), tiffField0.getSortHint());
      assertEquals(108, tiffField0.getOffset());
      assertEquals((-838), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-838), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50973, 50, fieldTypeAscii0, 209L, 3424L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3424, tiffField0.getOffset());
      assertEquals(50973, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(209, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-891), 251, fieldTypeLong0, 1L, 8581387392L, byteArray0, byteOrder0, (-2146890910));
      try { 
        fieldTypeLong0.SHORT.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: -891 (0xfffffc85: Unknown Tag): java.lang.Integer@0000000003 (1 Long) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2265, (-3184), fieldTypeByte0, 0L, 2265, byteArray0, byteOrder0, 1201);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1201, tiffField0.getSortHint());
      assertEquals(2265, tiffField0.getOffset());
      assertEquals((-3184), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(2265, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(3101);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-125), 1858, fieldTypeByte0, 579L, (-480L), byteArray0, byteOrder0, 3101);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3101, tiffField0.getSortHint());
      assertEquals(1858, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals((-125), tiffField0.getTag());
      assertEquals((-480L), tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeFloat0, 112L, 112L, byteArray0, (ByteOrder) null, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1610612735), (-259));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(112, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 725, fieldTypeAscii0.SSHORT, 33421, 33421, byteArray0, byteOrder0, 62);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(62, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(725, tiffField0.getDirectoryType());
      assertEquals(33421, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 0L, 1, byteArray0, byteOrder0, (-2736));
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2736), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-992), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 932L, (-693L), byteArray0, byteOrder0, (-992));
      int int0 = tiffField0.getSortHint();
      assertEquals((-992), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-693), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)85, (-850), fieldTypeByte0, (byte) (-127), (byte) (-127), byteArray0, byteOrder0, (-850));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("85 (0x55: Unknown Tag): ", string0);
      assertEquals((-850), tiffField0.getSortHint());
      assertEquals((-127), tiffField0.getOffset());
      assertEquals((-850), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeByte0, 1840, 1840, byteArray0, byteOrder0, (byte) (-11));
      tiffField0.dump();
      assertEquals(1840, tiffField0.getDirectoryType());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1840, tiffField0.getOffset());
      assertEquals(1840, tiffField0.getBytesLength());
      assertEquals(1840, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-891), 251, fieldTypeLong0, 1L, 8581387392L, byteArray0, byteOrder0, (-2146890910));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals((-2146890910), tiffField0.getSortHint());
      assertEquals((-8547200), tiffField0.getOffset());
      assertEquals((-891), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(251, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(313, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(313, 245, fieldTypeAscii0, 0L, 245, byteArray0, byteOrder0, (-1178));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1297, (byte)78);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(245, tiffField0.getDirectoryType());
      assertEquals((-1178), tiffField0.getSortHint());
      assertEquals(313, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(245, tiffField0.getOffset());
  }
}
