/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:07:19 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.DataInputStream;
import java.io.InputStreamReader;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("I':Xyp", (-1), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UTF-8");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 73);
      String string0 = IOUtils.readAll(bufferedReader0);
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(6, 191, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 190
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      int int0 = IOUtils.encodeUTF8(iOUtils0.replaceChars, 4, 4, iOUtils0.specicalFlags_singleQuotes);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils.getStringProperty("hlX4li");
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (byte)54, (int) (byte)54, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 53
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1621L), 30, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("*");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("&Em9?8");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("a1[G4'8 Oe'yb8o_b");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.reset();
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.DIGITS, 2, 4);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertFalse(byteBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 18, 18);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOUtils.getStringProperty("read string from reader error");
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, (-1908), (-1908), iOUtils0.CA);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 244, 244, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 244
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.stringSize(2147483647L);
      int int1 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 10, 10, iOUtils0.CA);
      assertTrue(int1 == int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("M~d3oz");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-9), (byte)119, (byte) (-93)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (-1889), 2056, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1889
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.isIdent('U');
      char[] charArray0 = new char[4];
      charArray0[0] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 114, 75, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.decodeBase64("read s1ring from reader error");
      char[] charArray0 = new char[9];
      charArray0[3] = '\u00CA';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-4), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = (-3210);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-3210), (-3210), iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3211
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize(2147483647L);
      byte[] byteArray1 = IOUtils.decodeBase64(iOUtils0.replaceChars, 10, 10);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray1, 10, 10, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("UTF-8");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOUtils.getStringProperty("*.kl2<9ipPh<");
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      IOUtils.close((Closeable) null);
      IOUtils.isValidJsonpQueryParam((String) null);
      char[] charArray0 = new char[0];
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char char0 = 'T';
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((-1497));
      // Undeclared exception!
      try { 
        IOUtils.getChars(111, 1, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.compatibleWithFieldName");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = iOUtils0.UTF8.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOUtils.stringSize((long) '\u00B5');
      byte[] byteArray0 = IOUtils.decodeBase64("read string from reader eror");
      char[] charArray0 = new char[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[3] = '\u00B5';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 3, 3, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOUtils.stringSize((long) '\u00CA');
      byte[] byteArray0 = IOUtils.decodeBase64("read s1ring from reader error");
      char[] charArray0 = new char[9];
      charArray0[3] = '\u00CA';
      IOUtils.encodeUTF8(charArray0, 3, 3, byteArray0);
      boolean boolean0 = IOUtils.isIdent('\u00CA');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, iOUtils0.specicalFlags_doubleQuotes);
      byte[] byteArray0 = IOUtils.decodeBase64("&Em|?=");
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 2, (-2444), byteArray0);
      byte[] byteArray1 = IOUtils.decodeBase64(iOUtils0.DIGITS, (-1637), 0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.firstIdentifier('x');
      assertTrue(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("&Em|?=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = IOUtils.decodeUTF8(byteArray0, 1, 2, iOUtils0.DIGITS);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1)}, byteArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      char char0 = 'N';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1073741823), 244, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 243
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      IOUtils.close(charArrayWriter0);
      byte[] byteArray0 = IOUtils.decodeBase64("{p1s\"", 0, 3);
      assertArrayEquals(new byte[] {(byte) (-89)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(":l", 1986, (-643));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.firstIdentifier('x');
      byte[] byteArray0 = IOUtils.decodeBase64("&E|?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, 2, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("UTFOA");
      IOUtils.getStringProperty("UTFOA");
      String string0 = IOUtils.getStringProperty("UTFOA");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize(2147483647L);
      Closeable closeable0 = null;
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, (-1353), iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1354
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-675L), 10, iOUtils0.DIGITS);
      boolean boolean0 = IOUtils.isIdent('/');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.reset();
      IOUtils.close(charArrayWriter0);
      IOUtils.getChars((byte)58, (int) (byte)58, iOUtils0.ASCII_CHARS);
      IOUtils.getChars((long) (byte)58, (int) (byte)58, iOUtils0.replaceChars);
      IOUtils iOUtils1 = new IOUtils();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(iOUtils0.specicalFlags_singleQuotes, (byte)58, (byte)58);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("fastjson.properties");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(1436L);
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      IOUtils.decodeUTF8(byteArray0, 4, 4, iOUtils0.CA);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      StringReader stringReader0 = new StringReader("fastjson.compatibleWithJavaBean");
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.CA, 4, 4);
      charArrayReader0.read();
      charArrayReader0.read();
      charArrayReader0.ready();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("Ng<0d)}");
      charset0.decode(byteBuffer0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getChars((-1), 70, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOUtils.getStringProperty("\u0003re/32ZA(*%");
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(4407952433006003257L, 1774, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1773
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.stringSize(2147483670L);
      assertEquals(10, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      int int1 = IOUtils.decodeUTF8(byteArray0, 10, 10, iOUtils0.CA);
      assertEquals((-1), int1);
      
      int int2 = IOUtils.encodeUTF8(iOUtils0.DIGITS, 10, (-1565), byteArray0);
      assertEquals(0, int2);
      
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray1 = IOUtils.decodeBase64("fastjson.properties", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int2 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean", 2, 19);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("O%'8Y3.bHm[kRo.");
      iOUtils0.UTF8.decode(byteBuffer0);
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      assertEquals(0, charBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.baseWireHandle;
      PipedWriter pipedWriter0 = new PipedWriter();
      IOUtils.firstIdentifier('=');
      IOUtils.decodeBase64("bdJw>biKh5q@v^9].");
      IOUtils.stringSize(62);
      IOUtils.firstIdentifier('=');
      char[] charArray0 = new char[8];
      charArray0[1] = ':';
      charArray0[2] = '=';
      charArray0[3] = ':';
      charArray0[6] = '=';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 79);
      IOUtils iOUtils1 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("u?}d'X");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-35), (byte) (-3)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.baseWireHandle;
      IOUtils.stringSize((long) '');
      PipedWriter pipedWriter0 = new PipedWriter();
      IOUtils.loadPropertiesFromFile();
      IOUtils.isIdent('');
      IOUtils.decodeBase64("bdJw>biKh5q@v^9].");
      IOUtils.stringSize(62);
      IOUtils.firstIdentifier('=');
      char[] charArray0 = new char[8];
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '';
      charArray0[5] = '';
      charArray0[1] = '=';
      charArray0[7] = ':';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = 79;
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 79);
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.ASCII_CHARS, 2, 79);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeUTF8(byteArray0, 2, 2, iOUtils0.CA);
      // Undeclared exception!
      try { 
        Charset.forName("fastjson.compatibleWithJavaBean");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // fastjson.compatibleWithJavaBean
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("gP^Xoh^T2");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[21];
      charArray0[4] = '\u0000';
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      IOUtils.decodeUTF8(byteArray0, 2, 2, charArray0);
      String string0 = IOUtils.getStringProperty("gP^Xoh^T2");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.firstIdentifier('`');
      IOUtils.isIdent('`');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/23_fastjson/read string from reader eror");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "fastjson.compatibleWithFieldName");
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("=,1b,$D9y<Do|!2m]v-");
      byteBuffer0.getLong();
      charset0.decode(byteBuffer0);
      IOUtils.stringSize(4407952433006003257L);
      // Undeclared exception!
      try { 
        IOUtils.getChars(4407952433006003257L, 5, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IOUtils.stringSize((long) 'B');
      byte[] byteArray0 = IOUtils.decodeBase64("read string from reader error");
      char[] charArray0 = new char[5];
      IOUtils.encodeUTF8(charArray0, 2, 2, byteArray0);
      byte[] byteArray1 = IOUtils.decodeBase64(".z~(3<3E{nF");
      char[] charArray1 = new char[14];
      charArray1[3] = 'B';
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(byteArray1, 2, 2, charArray1);
      PipedReader pipedReader0 = new PipedReader(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertFalse(int1 == int2);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      IOUtils.decodeBase64("_&A^[34)^L", 2, 2);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = 34;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 2, 34, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("(@qj_wg`mPF^D^");
      IOUtils.isIdent('\u00D1');
      byte byte0 = (byte)81;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      char[] charArray0 = new char[3];
      charArray0[2] = '\u00D1';
      uTF8Decoder0.reset();
      IOUtils.decodeUTF8(byteArray0, 2, (byte)81, charArray0);
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2452L), 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.replaceChars, 2, 85);
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.replaceChars, 2, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Charset.defaultCharset();
      Charset.defaultCharset();
      IOUtils.decodeUTF8(byteArray0, 2, 85, iOUtils0.replaceChars);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils.isIdent('d');
  }
}
