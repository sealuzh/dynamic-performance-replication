/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 18:20:56 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "f", "java/lang/Object", (String) null, "java/lang/Object");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "kU", "kU", "kU", "kU");
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("kU");
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      classWriter0.toByteArray();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "kU", "kU", "kU", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "", "The size must be non-negative", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "The size must be non-negative", "", "%@F#&", "The size must be non-negative");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "kU", "kU", "kU", "kU");
      fieldWriter0.visitAnnotation("kU", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2263);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2263, "kU", "kU", "kU", "kU");
      fieldWriter0.visitAnnotation("kU", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "kU", "kU", "kU", "kU");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2263);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2263, "kU", "kU", "kU", "kU");
      Attribute attribute0 = new Attribute("^PG@W");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1683));
      classWriter0.version = (-1683);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1683), "kU", "kU", "kU", "kU");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1658));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1658), "kU", "kU", "kU", "kU");
      Attribute attribute0 = new Attribute("/pVg{4rA~=5H9.:(#");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-4);
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      byte[] byteArray1 = classWriter0.toByteArray();
      assertNotSame(byteArray1, byteArray0);
  }
}
