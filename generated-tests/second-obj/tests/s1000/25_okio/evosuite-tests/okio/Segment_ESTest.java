/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:09:54 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8194);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.writeTo(segment0, 8164);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment((byte[]) null, 0, 2842, true, false);
      // Undeclared exception!
      try { 
        segment0.split(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      Segment segment2 = new Segment(byteArray0, (byte)0, (-1), false, false);
      segment0.next = segment2;
      segment2.prev = segment1;
      // Undeclared exception!
      try { 
        segment0.next.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      assertNotSame(segment0, segment1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-46);
      boolean boolean0 = false;
      Segment segment0 = new Segment(byteArray0, (byte) (-46), (byte) (-46), true, false);
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, 1024);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 3451;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)79;
      Segment segment0 = new Segment(byteArray0, (byte)1, 3451, false, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)79);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.writeTo(segment1, 3996);
      // Undeclared exception!
      try { 
        segment1.split(3996);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)0;
      Segment segment1 = new Segment(byteArray0, (byte)0, (-1), false, false);
      segment0.next = segment1;
      segment0.next.owner = false;
      segment0.push(segment0);
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      boolean boolean0 = false;
      Segment segment0 = new Segment(byteArray0, (byte)0, (byte)0, false, false);
      boolean boolean1 = false;
      Segment segment1 = new Segment(byteArray0, (byte)0, (byte)0, false, false);
      segment0.prev = segment1;
      segment0.compact();
      Segment segment2 = new Segment();
      int int0 = 0;
      segment2.next = segment0;
      // Undeclared exception!
      try { 
        segment2.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      Segment segment1 = new Segment(byteArray0, (byte)0, (-1), false, false);
      segment0.next = segment1;
      segment0.push(segment0);
      segment0.owner = false;
      Segment segment2 = new Segment(byteArray0, (-324), 0, false, false);
      segment2.owner = false;
      Segment segment3 = new Segment();
      segment0.pop();
      Segment segment4 = new Segment();
      Segment segment5 = new Segment();
      // Undeclared exception!
      try { 
        segment0.push(segment3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment1.pos = 1644;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8194);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-26);
      Segment segment0 = new Segment(byteArray0, (byte) (-26), (byte) (-26), true, true);
      segment0.pos = (int) (byte) (-26);
      SegmentPool.byteCount = (long) (-26);
      int int0 = 1329;
      Segment segment1 = new Segment((byte[]) null, 1329, (-1), true, true);
      segment0.prev = segment1;
      segment1.pos = 1945;
      segment0.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment1.pos = 1;
      segment1.shared = true;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8194);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      byte[] byteArray0 = new byte[4];
      segment1.prev = segment0;
      byteArray0[0] = (byte)63;
      segment0.writeTo(segment1, (byte)63);
      segment1.owner = false;
      segment1.prev.sharedCopy();
      segment0.limit = 175;
      byteArray0[3] = (byte)63;
      segment0.next = segment1;
      Segment segment2 = segment1.sharedCopy();
      segment0.next.limit = (int) (byte)63;
      segment2.prev = segment1;
      Segment segment3 = segment0.next.split((byte)63);
      SegmentPool.byteCount = (-11L);
      SegmentPool.byteCount = (long) (byte)18;
      segment0.writeTo(segment1.prev, (byte)63);
      Segment segment4 = new Segment();
      Segment segment5 = new Segment();
      Segment segment6 = new Segment();
      segment1.shared = false;
      segment5.writeTo(segment0, 3044);
      segment4.writeTo(segment1.prev, 3219);
      // Undeclared exception!
      try { 
        segment2.prev.writeTo(segment3, 6690);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
