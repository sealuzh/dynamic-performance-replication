/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 22:03:15 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-1);
      byteArray0[4] = (byte) (-63);
      TiffField tiffField0 = new TiffField(3461, (-2182), fieldTypeRational0, 2664L, 3461, byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3461, tiffField0.getTag());
      assertEquals(338, int0);
      assertEquals((-2182), tiffField0.getDirectoryType());
      assertEquals(3461, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-63);
      TiffField tiffField0 = new TiffField(3461, (-2182), fieldTypeRational0, 2664L, 3461, byteArray0, (ByteOrder) null, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(3461, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2182), tiffField0.getDirectoryType());
      assertEquals(3461, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "RMgU*F");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1091), 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, 44);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1091), tiffField0.getTag());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-581), 50, fieldTypeAscii0, 3971L, (-1004), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals((-581), int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1004), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-581), 50, fieldTypeAscii0, 3971L, (-1004), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-581), tiffField0.getTag());
      assertEquals((-1004), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(292, 3547, fieldTypeRational0, 3547, (-3947L), byteArray0, byteOrder0, (-1295));
      int int0 = tiffField0.getSortHint();
      assertEquals(3547, tiffField0.getDirectoryType());
      assertEquals((-3947), tiffField0.getOffset());
      assertEquals((-1295), int0);
      assertEquals(292, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeShort0, (-1717986917), (-5452L), byteArray0, byteOrder0, (byte) (-91));
      assertEquals(858993462, tiffField0.getBytesLength());
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-91), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-5452), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1348, 1348, fieldTypeLong0, 1077L, 8567388828L, byteArray0, byteOrder0, 1180);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1180, tiffField0.getSortHint());
      assertEquals(1348, tiffField0.getDirectoryType());
      assertEquals(4308, tiffField0.getBytesLength());
      assertEquals(1348, tiffField0.getTag());
      assertEquals((-22545764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-581), 50, fieldTypeAscii0, 3971L, (-1004), byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals((-581), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1004), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(69, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3860, 0, fieldTypeShort0, 255L, 0, byteArray0, byteOrder0, 12);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3860, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 47);
      tiffField0.getCount();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, (-326L), byteArray0, byteOrder0, 1151);
      tiffField0.getByteOrder();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(1151, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals((-326), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-563), 1, fieldTypeByte0, 1, (-1L), byteArray0, byteOrder0, (-1540));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, byteArray1.length);
      assertEquals((-563), tiffField0.getTag());
      assertEquals((-1540), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 47);
      tiffField0.getByteArrayValue();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, (FieldType) null, 255L, 510L, byteArray0, byteOrder0, (byte) (-5));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1351), 3685, fieldTypeShort0, (-1351), 3053L, byteArray0, byteOrder0, 272);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2750, "AE9A6NK&Y4\"a|Dz V,=");
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4, 2147475455, fieldTypeLong0, 2750, 2750, byteArray0, byteOrder0, (byte)50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2750, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(700, "EXIF_DIRECTORY_MAKER_NOTES");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeShort0, 700, 1446L, byteArray0, byteOrder0, (byte)37);
      tiffField0.getFieldType();
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals(1446, tiffField0.getOffset());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(700, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1348, 1348, fieldTypeLong0, 1077L, 8567388828L, byteArray0, byteOrder0, 1180);
      tiffField0.getTagInfo();
      assertEquals(1348, tiffField0.getDirectoryType());
      assertEquals(1348, tiffField0.getTag());
      assertEquals((-22545764), tiffField0.getOffset());
      assertEquals(1180, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 47);
      int int0 = tiffField0.getTag();
      assertEquals(50, int0);
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, (-326L), byteArray0, byteOrder0, 1151);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1151, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals((-326), tiffField0.getOffset());
      assertEquals(144, int0);
      assertEquals(18, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "ApplicationNotes");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 255L, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeAscii0, 7, 2115L, byteArray0, byteOrder0, 289);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1539, fieldTypeFloat0, 1539, 1, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@45ee6a2b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "NoiseProfile");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146938323), (-2146938323), fieldTypeLong0, 1, (-1185L), byteArray0, byteOrder0, (byte)47);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1185), tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals((-2146938323), tiffField0.getDirectoryType());
      assertEquals((-2146938323), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2L, 0, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3a6a0799 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(7, "UleV%V{!,3qs5>#1");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1947, 1947, fieldTypeDouble0, 1947, 1947, byteArray0, byteOrder0, 1947);
      tiffField0.getDoubleArrayValue();
      assertEquals(15576, tiffField0.getBytesLength());
      assertEquals(1947, tiffField0.getDirectoryType());
      assertEquals(1947, tiffField0.getOffset());
      assertEquals(1947, tiffField0.getTag());
      assertEquals(1947, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 4L, (-17179869184L), byteArray0, (ByteOrder) null, (-3048));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3048), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1539, fieldTypeFloat0, 1539, 1, byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(6156, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1539, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33448, 33448, fieldTypeRational0, 33448, 33448, byteArray0, byteOrder0, (byte)6);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(33448, tiffField0.getDirectoryType());
      assertEquals(33448, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(267584, tiffField0.getBytesLength());
      assertEquals(33448, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-563), 1, fieldTypeByte0, 1, (-1L), byteArray0, byteOrder0, (-1540));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1540), tiffField0.getSortHint());
      assertEquals((-563), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(700, "EXIF_DIRECTORY_MAKER_NOTES");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeShort0, 700, 1446L, byteArray0, byteOrder0, (byte)37);
      tiffField0.getDoubleArrayValue();
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals(700, tiffField0.getTag());
      assertEquals(1446, tiffField0.getOffset());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(1400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 722, fieldTypeByte0, 0L, 722, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@9a91373 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1348, 1348, fieldTypeLong0, 1077L, 8567388828L, byteArray0, byteOrder0, 1180);
      tiffField0.getIntArrayValue();
      assertEquals(1348, tiffField0.getDirectoryType());
      assertEquals(1348, tiffField0.getTag());
      assertEquals(4308, tiffField0.getBytesLength());
      assertEquals(1180, tiffField0.getSortHint());
      assertEquals((-22545764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33448, 33448, fieldTypeRational0, 33448, 33448, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, (-326L), byteArray0, byteOrder0, 1151);
      tiffField0.getIntArrayValue();
      assertEquals(1151, tiffField0.getSortHint());
      assertEquals(144, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getTag());
      assertEquals((-326), tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1734), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-3492L), byteArray0, byteOrder0, (byte)2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-3492), tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(700, "EXIF_DIRECTORY_MAKER_NOTES");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeShort0, 700, 1446L, byteArray0, byteOrder0, (byte)37);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(1400, tiffField0.getBytesLength());
      assertEquals(700, tiffField0.getDirectoryType());
      assertEquals(1446, tiffField0.getOffset());
      assertEquals(700, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(700L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1004), "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-581), 50, fieldTypeAscii0, 3971L, (-1004), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1004), tiffField0.getOffset());
      assertEquals((-581), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3971, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 373L, 373L, byteArray0, byteOrder0, (byte) (-59));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@190b4628
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1539, fieldTypeFloat0, 1539, 1, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1539, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (-1098), fieldTypeShort0, 0L, (-1098), byteArray0, byteOrder0, (-1132));
      String string0 = tiffField0.getTagName();
      assertEquals("GPSLongitude", string0);
      assertEquals((-1132), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-1098), tiffField0.getOffset());
      assertEquals((-1098), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2141632193, 2141632193, fieldTypeLong0, 4354L, (-865L), byteArray0, byteOrder0, (byte) (-63));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Expected String value(");
      assertEquals(17416, tiffField0.getBytesLength());
      assertEquals(2141632193, tiffField0.getDirectoryType());
      assertEquals(4354L, tiffField0.getCount());
      assertEquals((-865), tiffField0.getOffset());
      assertEquals(2141632193, tiffField0.getTag());
      assertEquals((-63), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50967, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 50967, fieldTypeFloat0, 65535, 50967, byteArray0, byteOrder0, (byte)17);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(50967, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(50967, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, 373L, 373L, byteArray0, byteOrder0, (byte) (-59));
      String string0 = tiffField0.toString();
      assertEquals(373, tiffField0.getBytesLength());
      assertEquals("-1717986917 (0x9999999b: Unknown Tag): 0, 0, 0, 0 (373 Byte)", string0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-59), tiffField0.getSortHint());
      assertEquals(373, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1840700268), (String) null);
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1190, 1190, fieldTypeDouble0, 1190, (-1830L), byteArray0, byteOrder0, (byte) (-101));
      String string0 = tiffField0.toString();
      assertEquals("1190 (0x4a6: Unknown Tag): 0.0, 0.0, 0.0 (1190 null)", string0);
      assertEquals(1190, tiffField0.getDirectoryType());
      assertEquals(9520, tiffField0.getBytesLength());
      assertEquals((-1830), tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "RMgU*F");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1091), 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, 44);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1091), tiffField0.getTag());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(700, "EXIF_DIRECTORY_MAKER_NOTES");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(700, 700, fieldTypeShort0, 700, 1446L, byteArray0, byteOrder0, (byte)37);
      String string0 = tiffField0.toString();
      assertEquals(1446, tiffField0.getOffset());
      assertEquals(1400, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals("700 (0x2bc: XMP): 0, 0, 0, 0 (700 EXIF_DIRECTORY_MAKER_NOTES)", string0);
      assertEquals(700, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeAscii0, 7, 2115L, byteArray0, byteOrder0, 289);
      String string0 = tiffField0.getValueDescription();
      assertEquals(289, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(2115, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3461, (-2182), fieldTypeRational0, 2664L, 3461, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.dump();
      assertEquals(3461, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2182), tiffField0.getDirectoryType());
      assertEquals(2664L, tiffField0.getCount());
      assertEquals(3461, tiffField0.getOffset());
      assertEquals(21312, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, (-326L), byteArray0, byteOrder0, 1151);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 47);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-563), 1, fieldTypeByte0, 1, (-1L), byteArray0, byteOrder0, (-1540));
      tiffField0.toString();
      assertEquals((-563), tiffField0.getTag());
      assertEquals((-1540), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2750, "AE9A6NK&Y4\"a|Dz V,=");
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4, 2147475455, fieldTypeLong0, 2750, 2750, byteArray0, byteOrder0, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2147475455, (byte)20);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2750, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(11000, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, (byte) (-55));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50708, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "RMgU*F");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1091), 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, 44);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-1091), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(259, " (");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-696), (-696), fieldTypeLong0, 1863L, 4L, byteArray0, byteOrder0, 88);
      tiffField0.getFieldTypeName();
      assertEquals((-696), tiffField0.getDirectoryType());
      assertEquals(1863L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals((-696), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, 632, fieldTypeByte0.SRATIONAL, (byte)0, (byte)50, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(632, int0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(259, " (");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-696), (-696), fieldTypeLong0, 1863L, 4L, byteArray0, byteOrder0, 88);
      int int0 = tiffField0.getSortHint();
      assertEquals(88, int0);
      assertEquals((-696), tiffField0.getDirectoryType());
      assertEquals(1863L, tiffField0.getCount());
      assertEquals((-696), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 2, fieldTypeLong0, 65535, 96L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(96, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 47);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(50L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }
}
