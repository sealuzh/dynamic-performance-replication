/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 03:41:03 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)100;
      byteArray0[4] = (byte)2;
      TiffField tiffField0 = new TiffField((byte)2, 665, fieldTypeRational0, 9352L, 1025L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, int0);
      assertEquals(665, tiffField0.getDirectoryType());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(74816, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getTag());
      assertEquals(1025, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)2;
      TiffField tiffField0 = new TiffField((byte)2, 665, fieldTypeRational0, 9352L, 1025L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(665, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1025, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(74816, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(82, "16bz~25_A:hJpv");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147434624, 10, fieldTypeLong0, 1L, 1467L, byteArray0, byteOrder0, (-2147351061));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147434624, tiffField0.getTag());
      assertEquals(1467, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2147351061), tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (byte) (-89), fieldTypeRational0, 1038L, (-1140L), byteArray0, byteOrder0, 118);
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (1038 SRational)", string0);
      assertEquals(118, tiffField0.getSortHint());
      assertEquals((-1140), tiffField0.getOffset());
      assertEquals((-89), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1036), fieldTypeRational0, (-2147483648L), 50, byteArray0, byteOrder0, (byte) (-23));
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals((-1036), tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50218, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3453), (-3453), fieldTypeFloat0, (-3453), 238L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(238, tiffField0.getOffset());
      assertEquals((-3453), int0);
      assertEquals((-3453), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "OzU8F/{Z");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)85;
      TiffField tiffField0 = new TiffField(34310, (-295), fieldTypeAscii0, 1L, (byte)0, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getStringValue();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34310, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-295), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3428), (-3428), fieldTypeLong0, (-1233L), 110L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-3428), tiffField0.getDirectoryType());
      assertEquals((-3428), tiffField0.getTag());
      assertEquals(110, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-51), (-1004), fieldTypeByte0, (-3018L), (byte)0, byteArray0, byteOrder0, (-1004));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1004), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1004), int0);
      assertEquals((-51), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 1200L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 2302, (FieldType) null, (-4953L), (-2191L), byteArray0, byteOrder0, (byte) (-117));
      int int0 = tiffField0.getOffset();
      assertEquals(2302, tiffField0.getDirectoryType());
      assertEquals((-117), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals((-2191), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)85;
      TiffField tiffField0 = new TiffField((byte)85, 2147253946, fieldTypeShort0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147253946, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-111);
      TiffField tiffField0 = new TiffField(2183, 1, fieldTypeShort0, 743L, 0, byteArray0, byteOrder0, (byte) (-111));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2183, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1486, tiffField0.getBytesLength());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals((-28416), int0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)67;
      TiffField tiffField0 = new TiffField(221, 65535, fieldTypeFloat0, 1L, 65535, byteArray0, byteOrder0, 41996);
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(41996, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(221, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-8);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1692), fieldTypeShort0, 1L, 1, byteArray0, byteOrder0, (byte)73);
      tiffField0.getIntValue();
      assertEquals((-1692), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      TiffField tiffField0 = new TiffField((-1), 55, fieldTypeByte0, 4L, (-1), byteArray0, byteOrder0, 55);
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(55, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)85, 2147253946, fieldTypeShort0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getFieldTypeName();
      assertEquals(2147253946, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "16bz~25_A:hJpv");
      TiffField tiffField0 = new TiffField((-875), (-1917), fieldTypeDouble0, 1454L, 1454L, byteArray0, byteOrder0, (-875));
      tiffField0.getFieldType();
      assertEquals((-1917), tiffField0.getDirectoryType());
      assertEquals((-875), tiffField0.getTag());
      assertEquals(1454, tiffField0.getOffset());
      assertEquals((-875), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1453, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1453, 1453, byteArray0, byteOrder0, 50973);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1453, tiffField0.getOffset());
      assertEquals(50973, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "Oz8F/{#Z");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1104), (byte)0, fieldTypeAscii0, (byte)0, (-1568), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals((-1568), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1104), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)85;
      TiffField tiffField0 = new TiffField((byte)85, 2147253946, fieldTypeShort0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getDoubleValue();
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(85, tiffField0.getTag());
      assertEquals(2147253946, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-23);
      TiffField tiffField0 = new TiffField(7, 0, fieldTypeRational0.LONG, 1, 7, byteArray0, byteOrder0, 2147235928);
      tiffField0.getDoubleValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals(2147235928, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3303, 0, fieldTypeRational0, 264, (-2592), byteArray0, byteOrder0, (-1382));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-2592), tiffField0.getOffset());
      assertEquals((-1382), tiffField0.getSortHint());
      assertEquals(3303, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 9, fieldTypeByte0, 345L, (-1004), byteArray0, byteOrder0, 6);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(9, int0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1004), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "><yg");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 1931L, byteArray0, (ByteOrder) null, 65112);
      tiffField0.getCount();
      assertEquals(1931, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65112, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, (-4130), 2355L, byteArray0, byteOrder0, (-1660));
      tiffField0.getCount();
      assertEquals(2355, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1660), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, 473);
      int int0 = tiffField0.getBytesLength();
      assertEquals(473, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50218, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3453), (-3453), fieldTypeFloat0, (-3453), 238L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-3453), tiffField0.getDirectoryType());
      assertEquals((-13812), int0);
      assertEquals(238, tiffField0.getOffset());
      assertEquals((-3453), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeByte0, 2147483647L, (byte) (-51), byteArray0, byteOrder0, (byte) (-51));
      tiffField0.getByteOrder();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-51), tiffField0.getOffset());
      assertEquals(19, tiffField0.getTag());
      assertEquals((-51), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (-644));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-644), tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(7, 0, fieldTypeShort0, 3479L, 1608L, byteArray0, byteOrder0, 37399);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E2\"_bPhfmv");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1608, tiffField0.getOffset());
      assertEquals(6958, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getTag());
      assertEquals(37399, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(82, "16bz~25_A:hJpv");
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147278989, 65535, fieldTypeLong0, (-1L), 0, byteArray0, byteOrder0, 2021161080);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 50, fieldTypeRational0, (-1L), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-2157L), (-2157L), byteArray0, (ByteOrder) null, (byte) (-116));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-300), (-300), fieldTypeRational0, (-251L), (-251L), byteArray0, byteOrder0, (byte)2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(402, 402, fieldTypeLong0, 402, 0L, byteArray0, byteOrder0, (-146));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(154, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2147483646), 73, fieldTypeShort0, (-686L), 154, byteArray0, byteOrder0, (byte)96);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-8), (-783), fieldTypeDouble0.SHORT, 39, (-1L), (byte[]) null, byteOrder0, 2298);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-832), fieldTypeByte0, (-432L), (-832), byteArray0, byteOrder0, (byte) (-72));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1089), (byte) (-22), fieldTypeAscii0, 1053L, (-1089), byteArray0, byteOrder0, (byte) (-22));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(10, 1, fieldTypeShort0, 1, 10, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147328717), (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1280), 2147378239, fieldTypeRational0, 2834L, 2834L, byteArray0, byteOrder0, (-2146966056));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, (-4130), 2355L, byteArray0, byteOrder0, (-1660));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50218, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3453), (-3453), fieldTypeFloat0, (-3453), 238L, byteArray0, byteOrder0, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33432, 0, fieldTypeRational0, (-2147483648L), (byte) (-23), byteArray0, byteOrder0, 2147075148);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-23), tiffField0.getOffset());
      assertEquals(2147075148, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(33432, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "OzU8F/{Z");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), 34310, fieldTypeAscii0, 0L, (-277L), byteArray0, (ByteOrder) null, (byte)85);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(34310, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals((-277), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34908, 50, fieldTypeByte0, 50, 389L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getByteArrayValue();
      assertEquals(389, tiffField0.getOffset());
      assertEquals(34908, tiffField0.getTag());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-573), (-1), (FieldType) null, 1L, (-1), byteArray0, byteOrder0, 474);
      tiffField0.getFieldType();
      assertEquals(474, tiffField0.getSortHint());
      assertEquals((-573), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(82, "16bz~25_A:hJpv");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2998), 50940, fieldTypeLong0, 50L, (-2066L), byteArray0, byteOrder0, (-2998));
      MockPrintStream mockPrintStream0 = new MockPrintStream("16bz~25_A:hJpv");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2066), tiffField0.getOffset());
      assertEquals(50940, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-2998), tiffField0.getTag());
      assertEquals((-2998), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2183, 1, fieldTypeShort0, 743L, 0, byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2183, tiffField0.getTag());
      assertEquals(1486, tiffField0.getBytesLength());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-338), (-338), fieldTypeByte0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 130);
      tiffField0.getTagInfo();
      assertEquals((-338), tiffField0.getDirectoryType());
      assertEquals((-338), tiffField0.getTag());
      assertEquals(130, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4172), fieldTypeFloat0, 2028L, (-4172), byteArray0, byteOrder0, (-1502));
      int int0 = tiffField0.getTag();
      assertEquals((-4172), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-4172), tiffField0.getOffset());
      assertEquals((-1502), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)89, (-2147483646), fieldTypeShort0, 1371L, 0, byteArray0, byteOrder0, (byte)89);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals(89, tiffField0.getTag());
      assertEquals(89, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4172), fieldTypeFloat0, 2028L, (-4172), byteArray0, byteOrder0, (-1502));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-4172), tiffField0.getOffset());
      assertEquals((-4172), tiffField0.getDirectoryType());
      assertEquals(8112, int0);
      assertEquals((-1502), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)85, 2147253946, fieldTypeShort0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(2147253946, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2521), 0, fieldTypeDouble0, 1L, 0L, byteArray0, byteOrder0, 732);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2521), tiffField0.getTag());
      assertEquals(732, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeLong0, 81, 81, byteArray0, byteOrder0, 81);
      tiffField0.getIntValueOrArraySum();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getBytesLength());
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1116), "O>UaF/{Z");
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50940, 818, fieldTypeAscii0, 801, 0L, byteArray0, byteOrder0, 818);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@29c298e3 for: 50940 (0xc6fc: ProfileToneCurve): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)2, 665, fieldTypeRational0, 9352L, 1025L, byteArray0, byteOrder0, (byte) (-31));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(82, "16bz~25_A:hJpv");
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-875), (-1918), fieldTypeLong0.DOUBLE, 1454L, 1454L, byteArray0, byteOrder0, 20);
      tiffField0.getDoubleArrayValue();
      assertEquals(1454, tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals((-875), tiffField0.getTag());
      assertEquals(11632, tiffField0.getBytesLength());
      assertEquals((-1918), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1675, 7, fieldTypeFloat0, 1315L, (-432L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(5260, tiffField0.getBytesLength());
      assertEquals(1675, tiffField0.getTag());
      assertEquals((-432), tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(63, (byte)0, fieldTypeFloat0.SLONG, 1675, 1608L, byteArray0, byteOrder0, 2121294823);
      tiffField0.getDoubleArrayValue();
      assertEquals(1608, tiffField0.getOffset());
      assertEquals(63, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2121294823, tiffField0.getSortHint());
      assertEquals(6700, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2183, 1, fieldTypeShort0, 743L, 0, byteArray0, byteOrder0, (byte) (-111));
      tiffField0.getDoubleArrayValue();
      assertEquals(1486, tiffField0.getBytesLength());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2183, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65, "O>UaF/{Z");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1577), 658, fieldTypeAscii0, 0L, 1563L, byteArray0, byteOrder0, (-1359));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)2, 665, fieldTypeRational0, 9352L, 1025L, byteArray0, byteOrder0, (byte) (-31));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(665, tiffField0.getDirectoryType());
      assertEquals(1025, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-31), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(74816, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeFloat0, 1L, 255L, byteArray0, byteOrder0, 86);
      tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(7, tiffField0.getTag());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(73, 9, fieldTypeShort0, 1608L, 3316L, byteArray0, byteOrder0, 8);
      tiffField0.getDoubleArrayValue();
      assertEquals(3316, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(3216, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(402, 402, fieldTypeLong0, 402, 0L, byteArray0, byteOrder0, (-146));
      tiffField0.getIntArrayValue();
      assertEquals(402, tiffField0.getDirectoryType());
      assertEquals(402, tiffField0.getTag());
      assertEquals((-146), tiffField0.getSortHint());
      assertEquals(1608, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate(50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.SSHORT, 1341, 1633L, byteArray0, byteOrder0, 1341);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1341, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1633, tiffField0.getOffset());
      assertEquals(2682, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "Oz8F/{#Z");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1104), (byte)0, fieldTypeAscii0, (byte)0, (-1568), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1964), (-1964), fieldTypeRational0, 1608L, 2183, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1036), 609, fieldTypeRational0, 375L, (-1L), byteArray0, byteOrder0, (byte) (-23));
      tiffField0.getIntArrayValue();
      assertEquals((-1036), tiffField0.getTag());
      assertEquals(609, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3000, tiffField0.getBytesLength());
      assertEquals((-23), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37399, 1, fieldTypeByte0, 1, (byte)0, byteArray0, byteOrder0, 37399);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(37399, tiffField0.getTag());
      assertEquals(37399, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4172), fieldTypeFloat0, 2028L, 311L, byteArray0, byteOrder0, 88);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(0 (0x0: GPSVersionID): ): [F@52a495e6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "Oz8F/{#Z");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1104), (byte)0, fieldTypeAscii0, (byte)0, (-1568), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1104), tiffField0.getTag());
      assertEquals((-1568), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(69, "");
      TiffField tiffField0 = new TiffField(65535, (byte)7, fieldTypeByte0, 69, 69, (byte[]) null, byteOrder0, (byte)7);
      String string0 = tiffField0.getTagName();
      assertEquals(69, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(402, 402, fieldTypeLong0, 402, 0L, byteArray0, byteOrder0, (-146));
      String string0 = tiffField0.getTagName();
      assertEquals("FaxProfile", string0);
      assertEquals((-146), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(402, tiffField0.getDirectoryType());
      assertEquals(402, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(73, 9, fieldTypeShort0, 1608L, 3316L, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "BX5FG;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1365, 0, fieldTypeLong0.FLOAT, 1365, 0, byteArray0, byteOrder0, 1365);
      String string0 = tiffField0.toString();
      assertEquals("1365 (0x555: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1365 Float)", string0);
      assertEquals(5460, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1365, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(81, "r: ");
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Integer integer0 = new Integer(81);
      TiffField tiffField0 = new TiffField((int) integer0, (int) integer0, fieldTypeLong0.SBYTE, 8351L, 81, byteArray0, byteOrder0, 2021161080);
      String string0 = tiffField0.getValueDescription();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(8351, tiffField0.getBytesLength());
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getOffset());
      assertEquals(8351L, tiffField0.getCount());
      assertEquals(2021161080, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4172), fieldTypeFloat0, 2028L, (-4172), byteArray0, byteOrder0, (-1502));
      String string0 = tiffField0.toString();
      assertEquals((-1502), tiffField0.getSortHint());
      assertEquals(8112, tiffField0.getBytesLength());
      assertEquals((-4172), tiffField0.getDirectoryType());
      assertEquals("0 (0x0: GPSVersionID): 0.0 (2028 Float)", string0);
      assertEquals((-4172), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(82, "16bz~25_A:hJpv");
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-875), (-1918), fieldTypeLong0.DOUBLE, 1454L, 1454L, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.toString();
      assertEquals(1454, tiffField0.getOffset());
      assertEquals("-875 (0xfffffc95: Unknown Tag): 0.0, 0.0, 0.0 (1454 Double)", string0);
      assertEquals((-1918), tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(11632, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (-644));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-644), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1365, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(5460, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1365L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-112), (byte) (-112), fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, (byte)97);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-112), tiffField0.getTag());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-112), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3169), (-2772), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).DOUBLE).SHORT, 596L, 1L, byteArray0, byteOrder0, 30);
      String string0 = tiffField0.toString();
      assertEquals(1192, tiffField0.getBytesLength());
      assertEquals("-3169 (0xfffff39f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (596 Short)", string0);
      assertEquals((-2772), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(30, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2197), 345, fieldTypeByte0, 345, 0L, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(345, tiffField0.getDirectoryType());
      assertEquals(345, tiffField0.getBytesLength());
      assertEquals((-2197), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(345L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1116), "O>UaF/{Z");
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50940, 818, fieldTypeAscii0, 801, 0L, byteArray0, byteOrder0, 818);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(818, tiffField0.getSortHint());
      assertEquals(818, tiffField0.getDirectoryType());
      assertEquals(801, tiffField0.getBytesLength());
      assertEquals(50940, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1089), (byte) (-22), fieldTypeAscii0, 1053L, (-1089), byteArray0, byteOrder0, (byte) (-22));
      tiffField0.toString();
      assertEquals(1053, tiffField0.getBytesLength());
      assertEquals((-1089), tiffField0.getTag());
      assertEquals((-22), tiffField0.getDirectoryType());
      assertEquals((-22), tiffField0.getSortHint());
      assertEquals((-1089), tiffField0.getOffset());
      assertEquals(1053L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65, "OzU8F/{Z");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)85, (byte)85, fieldTypeAscii0, (byte)85, (byte)0, byteArray0, byteOrder0, 9);
      tiffField0.toString();
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(85L, tiffField0.getCount());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(7, 0, fieldTypeRational0.SLONG, 1, 7, byteArray0, byteOrder0, 2147235928);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2147235928, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65, "OzU8F/{Z");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)20, fieldTypeAscii0.BYTE, (byte)85, 65, byteArray0, byteOrder0, (-223));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-223), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(65L, tiffElement0.offset);
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(85L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-112), (byte) (-112), fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, (byte)97);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3, (byte) (-112));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-112), tiffField0.getTag());
      assertNull(string0);
      assertEquals(97, tiffField0.getSortHint());
      assertEquals((-112), tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1675, 7, fieldTypeFloat0, 1315L, (-432L), byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-432), tiffField0.getOffset());
      assertEquals(1675, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(154, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2147483646), 73, fieldTypeShort0, (-686L), 154, byteArray0, byteOrder0, (byte)96);
      tiffField0.getFieldTypeName();
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(154, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1568), "OzU8F/{Z");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34021, 2108, fieldTypeAscii0, 0L, 2108, byteArray0, byteOrder0, 2108);
      int int0 = tiffField0.getOffset();
      assertEquals(2108, tiffField0.getDirectoryType());
      assertEquals(2108, tiffField0.getSortHint());
      assertEquals(2108, int0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals(34021, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-51), (-1004), fieldTypeByte0, (-3018L), (byte)0, byteArray0, byteOrder0, (-1004));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-51), tiffField0.getTag());
      assertEquals((-1004), int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1004), tiffField0.getSortHint());
      assertEquals((-3018), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 1212);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1212, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(154, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2147483646), 73, fieldTypeShort0, (-686L), 154, byteArray0, byteOrder0, (byte)96);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(154, tiffField0.getOffset());
      assertEquals("-2147483646 (0x80000002: Unknown Tag): ", string0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2197), 345, fieldTypeByte0, 345, 0L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-1152));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-2197), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(345, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertFalse(tiffField0.isLocalValue());
  }
}
