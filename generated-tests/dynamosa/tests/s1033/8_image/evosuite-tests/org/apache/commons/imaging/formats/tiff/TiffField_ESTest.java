/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 05:41:47 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)73;
      byteArray0[4] = (byte)58;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 3298L, 4L, byteArray0, byteOrder0, (-2147435845));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-2147435845), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(26384, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)58;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 3298L, 4L, byteArray0, byteOrder0, (-2147435845));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-2147435845), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(26384, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-878), fieldTypeRational0.SHORT, 1L, (-1L), byteArray0, byteOrder0, 69);
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (1 Short)", string0);
      assertEquals((-878), tiffField0.getDirectoryType());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      tiffField0.dump();
      assertEquals(46, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeLong0, 255L, (-6638L), byteArray0, (ByteOrder) null, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-6638), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1020, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1571), 1642, fieldTypeFloat0, 1642, 1642, byteArray0, byteOrder0, (-1571));
      tiffField0.getValue();
      assertEquals(6568, tiffField0.getBytesLength());
      assertEquals((-1571), tiffField0.getTag());
      assertEquals((-1571), tiffField0.getSortHint());
      assertEquals(1642, tiffField0.getDirectoryType());
      assertEquals(1642, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(28, (-844), fieldTypeByte0, 462L, 1412, byteArray0, byteOrder0, 2930);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals(2930, tiffField0.getSortHint());
      assertEquals((-844), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(1412, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 131, 131, byteArray0, byteOrder0, 131);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(131, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(131, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1395), "i#'=-PfSwLpx|3sCY<z");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-342), (-342), fieldTypeByte0, (-342), 1098L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals(1098, tiffField0.getOffset());
      assertEquals((-342), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-342), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(8, "uL6yD");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)6;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeAscii0, 308L, 1950L, byteArray0, byteOrder0, (byte)6);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(308, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1950, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(333, 732, fieldTypeRational0, 0L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(333, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(732, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(112, 112, fieldTypeRational0, 2743L, 1L, byteArray0, byteOrder0, (-1214));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1214), int0);
      assertEquals(112, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(112, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(23L, tiffElement0.offset);
      assertEquals(23, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)118, (-1341), fieldTypeByte0, (-1573), 1218L, byteArray0, byteOrder0, (byte) (-19));
      int int0 = tiffField0.getOffset();
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(1218, int0);
      assertEquals(118, tiffField0.getTag());
      assertEquals((-1341), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(333, 732, fieldTypeRational0, 0L, (-1L), byteArray0, byteOrder0, (byte) (-113));
      int int0 = tiffField0.getOffset();
      assertEquals((-113), tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(732, tiffField0.getDirectoryType());
      assertEquals(333, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-51);
      TiffField tiffField0 = new TiffField(1, (-3950), fieldTypeDouble0.SSHORT, 1, 1, byteArray0, byteOrder0, (byte)6);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3950), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-50);
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeShort0, 406664L, (byte)0, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(813328, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-12800), int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long((byte)1);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, 2120971504);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2120971504, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long(1L);
      byte[] byteArray0 = fieldTypeRational0.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField(2137677786, 50216, fieldTypeRational0, 1L, 2137677786, byteArray0, byteOrder0, 50216);
      tiffField0.getIntValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2137677786, tiffField0.getTag());
      assertEquals(2137677786, tiffField0.getOffset());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(50216, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-2367), 813, fieldTypeByte0, 1L, (-3796L), byteArray0, byteOrder0, 650);
      tiffField0.getIntValue();
      assertEquals((-3796), tiffField0.getOffset());
      assertEquals((-2367), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(650, tiffField0.getSortHint());
      assertEquals(813, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(199, (String) null);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-883), 2270, fieldTypeAscii0, 4736L, (-18L), byteArray0, byteOrder0, 74);
      tiffField0.getFieldTypeName();
      assertEquals(2270, tiffField0.getDirectoryType());
      assertEquals((-18), tiffField0.getOffset());
      assertEquals((-883), tiffField0.getTag());
      assertEquals(74, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1562, "");
      TiffField tiffField0 = new TiffField(862, 1562, fieldTypeRational0, 862, 2628L, byteArray0, byteOrder0, (byte) (-20));
      tiffField0.getFieldTypeName();
      assertEquals(2628, tiffField0.getOffset());
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals(862, tiffField0.getTag());
      assertEquals(1562, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2020, (byte)50, (FieldType) null, 28192L, (-4472), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(2020, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-4472), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2085), (-2085), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)58);
      tiffField0.getFieldType();
      assertEquals(58, tiffField0.getSortHint());
      assertEquals((-2085), tiffField0.getDirectoryType());
      assertEquals((-2085), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      tiffField0.getFieldType();
      assertEquals((-1054), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2599), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long((byte)1);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, 2120971504);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2120971504, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-51);
      TiffField tiffField0 = new TiffField(1, (-3950), fieldTypeDouble0.SHORT, 1, 1, byteArray0, byteOrder0, (byte)6);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-3950), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long((-1L));
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField(2317, 2125344641, fieldTypeByte0, (byte)1, 2120971504, byteArray0, byteOrder0, 2197);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2125344641, tiffField0.getDirectoryType());
      assertEquals(2317, tiffField0.getTag());
      assertEquals(2120971504, tiffField0.getOffset());
      assertEquals(2197, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147219537, (-1002), fieldTypeShort0, (-1002), 50, byteArray0, byteOrder0, 6);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2147219537, tiffField0.getTag());
      assertEquals((-1002), int0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(333, 732, fieldTypeRational0, 0L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(732, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(333, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1431), 50, fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals(4L, long0);
      assertEquals((-1431), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(112, 112, fieldTypeRational0, 2765L, 1L, byteArray0, byteOrder0, (-1214));
      int int0 = tiffField0.getBytesLength();
      assertEquals(112, tiffField0.getTag());
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals(22120, int0);
      assertEquals((-1214), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1173, 1173, fieldTypeRational0, (byte) (-13), (byte) (-13), byteArray0, byteOrder0, (byte) (-13));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(1173, tiffField0.getDirectoryType());
      assertEquals(1173, tiffField0.getTag());
      assertEquals((-13), tiffField0.getOffset());
      assertEquals((-104), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, (-1865L), byteArray0, byteOrder0, 32932);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1865), tiffField0.getOffset());
      assertEquals(32932, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long(1L);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField(131, 131, fieldTypeByte0, 1, 1506L, byteArray0, byteOrder0, (-1));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(131, tiffField0.getDirectoryType());
      assertEquals(131, tiffField0.getTag());
      assertEquals(1, byteArray1.length);
      assertEquals(1506, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-2599), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1054), tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long(1L);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)1, 1, fieldTypeByte0, 4L, (byte)1, byteArray0, byteOrder0, 131);
      MockFile mockFile0 = new MockFile("w9SN<P|^QR");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(42L, mockFile0.length());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(131, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, (byte[]) null, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeFloat0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1951), 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-1951));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3305, 3305, (FieldType) null, 3305, 3305, byteArray0, byteOrder0, 3305);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-65), (-65), fieldTypeRational0, (-65), (-65), (byte[]) null, byteOrder0, (-65));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1853), (-1853), fieldTypeAscii0, (-1853), (-1853), byteArray0, byteOrder0, (-1853));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3305, 3305, (FieldType) null, 3305, 3305, byteArray0, byteOrder0, 3305);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2242), (-2242), fieldTypeRational0, (-2242), (-2242), byteArray0, byteOrder0, (-2242));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2208, fieldTypeDouble0, 1, (-3192L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, (-7), (-7), (byte[]) null, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeRational0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(266, 266, fieldTypeShort0, 1L, 266, byteArray0, byteOrder0, 266);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(580, 580, fieldTypeRational0, 580, 580, (byte[]) null, byteOrder0, 580);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1371), (-1371), fieldTypeShort0, (-1371), (-1371), byteArray0, byteOrder0, (-1371));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 6, 6, (byte[]) null, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147256473, 2147256473, fieldTypeShort0, 2147256473, 2147256473, byteArray0, byteOrder0, 2147256473);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, (FieldType) null, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-1228), (-1228), fieldTypeRational0, (-1228), (-1228), byteArray0, byteOrder0, (-1228));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, (-307), (FieldType) null, (-739), (-739), byteArray0, byteOrder0, (-739));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeRational0, 28, (-1), (byte[]) null, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, (byte[]) null, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((-18), (-18), fieldTypeRational0, (-18), (-18), byteArray0, byteOrder0, (-18));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[268];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(588, 588, (FieldType) null, 588, 588, byteArray0, byteOrder0, 588);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147483634, 2147483634, fieldTypeShort0, 2147483634, 2147483634, byteArray0, byteOrder0, 2147483634);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, (FieldType) null, 701L, 701L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "'9xdm");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, (-1241));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("GPSLongitudeRef");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "GPSLongitudeRef");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-239), 50, fieldTypeFloat0.BYTE, (-239), 50, byteArray0, byteOrder0, 979);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147483639, 2147483639, fieldTypeShort0, 2147483639, 2147483639, byteArray0, byteOrder0, 2147483639);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1490, 1674, fieldTypeShort0, 1L, 1674, byteArray0, byteOrder0, 1490);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(607, (-3919), fieldTypeShort0, (-3919), (-3919), byteArray0, byteOrder0, 607);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3484, 2830, fieldTypeByte0, 4L, (-1922L), byteArray0, byteOrder0, (-786));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3484, tiffField0.getTag());
      assertEquals((-786), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(2830, tiffField0.getDirectoryType());
      assertEquals((-1922), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 50, fieldTypeShort0, 50, 28192L, byteArray0, byteOrder0, (-1214));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-1214), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(28192, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1317, "wJ6TC$T6+#LVA3z");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3430, 3430, fieldTypeAscii0, (-1375L), 0L, byteArray0, (ByteOrder) null, (byte)95);
      tiffField0.getByteOrder();
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3430, tiffField0.getTag());
      assertEquals(3430, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(181, 181, fieldTypeByte0, 286L, 181, (byte[]) null, (ByteOrder) null, 181);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Unknown GPS text encoding prefix.");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(112, 112, fieldTypeRational0, 2743L, 1L, byteArray0, byteOrder0, (-1214));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1214), tiffField0.getSortHint());
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(41993);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(41993, 41993, fieldTypeByte0, 41993, 41993, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(41993, tiffField0.getOffset());
      assertEquals(41993, tiffField0.getTag());
      assertEquals(41993, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(5, (-1123), fieldTypeRational0, 5, (-3200L), byteArray0, (ByteOrder) null, (-1123));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-235), (FieldType) null, 28, 959L, byteArray0, byteOrder0, 48259);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-1), fieldTypeFloat0, 187L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeLong0, 400, 400, byteArray0, byteOrder0, 400);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getOffset());
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long(1L);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField(131, 131, fieldTypeByte0, 1, 1506L, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1506, tiffField0.getOffset());
      assertEquals(131, int0);
      assertEquals(131, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      Long long0 = new Long(29L);
      byte[] byteArray0 = fieldTypeByte0.RATIONAL.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((-2147386865), 2127, fieldTypeByte0, (-1L), (-2147386865), byteArray0, byteOrder0, 2149);
      long long1 = tiffField0.getCount();
      assertEquals((-2147386865), tiffField0.getTag());
      assertEquals((-1L), long1);
      assertEquals(2149, tiffField0.getSortHint());
      assertEquals(2127, tiffField0.getDirectoryType());
      assertEquals((-2147386865), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-2), fieldTypeAscii0, (byte)0, (byte) (-2), byteArray0, byteOrder0, (-690));
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2), tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-690), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0, 37, 37, byteArray0, byteOrder0, 37);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals("37 (0x25: Unknown Tag): ", string0);
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 5, fieldTypeRational0, 1, 1831L, byteArray0, byteOrder0, (-2378));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeLong0, 3, 3, byteArray0, byteOrder0, 3);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(3L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeDouble0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@3f8b2a56 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeDouble0, 50879, 50879, byteArray0, byteOrder0, 50879);
      tiffField0.getDoubleArrayValue();
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(50879, tiffField0.getTag());
      assertEquals(407032, tiffField0.getBytesLength());
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(50879L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(485, 485, fieldTypeFloat0, 485, 485, byteArray0, byteOrder0, 485);
      tiffField0.getDoubleArrayValue();
      assertEquals(485L, tiffField0.getCount());
      assertEquals(485, tiffField0.getDirectoryType());
      assertEquals(485, tiffField0.getOffset());
      assertEquals(1940, tiffField0.getBytesLength());
      assertEquals(485, tiffField0.getSortHint());
      assertEquals(485, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeLong0, 14, 14, byteArray0, byteOrder0, 14);
      tiffField0.getDoubleArrayValue();
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getTag());
      assertEquals(14L, tiffField0.getCount());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      tiffField0.getDoubleArrayValue();
      assertEquals(46, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23L, tiffField0.getCount());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, 5);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, 5);
      tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1853), 65531, fieldTypeAscii0, 65531, (-1853), byteArray0, byteOrder0, (-1853));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@2829e170 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeLong0, 50879, 50879, byteArray0, byteOrder0, 50879);
      tiffField0.getIntArrayValue();
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(50879, tiffField0.getTag());
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(203516, tiffField0.getBytesLength());
      assertEquals(50879L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeDouble0, 50879, 50879, byteArray0, byteOrder0, 50879);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5a139c8b for: 50879 (0xc6bf: ColorimetricReference): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, 5);
      tiffField0.getIntArrayValue();
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23L, tiffField0.getCount());
      assertEquals(23, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(46, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeShort0, 1L, 50879, byteArray0, byteOrder0, 50879);
      tiffField0.getIntArrayValue();
      assertEquals(50879, tiffField0.getTag());
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(50879, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@5c532a12
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(37389, 37389, fieldTypeAscii0, 149L, 37389, byteArray0, byteOrder0, 37389);
      String string0 = tiffField0.getStringValue();
      assertEquals(37389, tiffField0.getTag());
      assertEquals(37389, tiffField0.getOffset());
      assertEquals(149, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(37389, tiffField0.getSortHint());
      assertEquals(37389, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1808, 1808, fieldTypeRational0.DOUBLE, 1808, 1808, byteArray0, byteOrder0, 1808);
      String string0 = tiffField0.getTagName();
      assertEquals(1808, tiffField0.getSortHint());
      assertEquals(1808, tiffField0.getDirectoryType());
      assertEquals(1808, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x710)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeShort0, 50879, 50879, byteArray0, byteOrder0, 50879);
      String string0 = tiffField0.getTagName();
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(50879, tiffField0.getTag());
      assertEquals("ColorimetricReference", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 6, 6, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[237];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1611, 1611, fieldTypeFloat0, 1611, 1611, byteArray0, byteOrder0, 1611);
      String string0 = tiffField0.toString();
      assertEquals(1611, tiffField0.getOffset());
      assertEquals(1611, tiffField0.getSortHint());
      assertEquals(6444, tiffField0.getBytesLength());
      assertEquals("1611 (0x64b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (59) (1611 Float)", string0);
      assertEquals(1611, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeByte0, 57, 57, byteArray0, byteOrder0, 57);
      String string0 = tiffField0.toString();
      assertEquals("57 (0x39: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (57 SByte)", string0);
      assertEquals(57, tiffField0.getOffset());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[431];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1392, 1392, fieldTypeDouble0, 1392, 1392, byteArray0, byteOrder0, 1392);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1392, tiffField0.getDirectoryType());
      assertEquals(1392L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1392, tiffField0.getTag());
      assertEquals(1392, tiffField0.getSortHint());
      assertEquals(11136, tiffField0.getBytesLength());
      assertEquals(1392, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1609, 1609, fieldTypeFloat0, 1609, 1609, byteArray0, byteOrder0, 1609);
      String string0 = tiffField0.toString();
      assertEquals(1609, tiffField0.getSortHint());
      assertEquals(1609, tiffField0.getDirectoryType());
      assertEquals("1609 (0x649: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1609 Float)", string0);
      assertEquals(6436, tiffField0.getBytesLength());
      assertEquals(1609, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-1231), (-1231), fieldTypeLong0, 65, (-4380L), byteArray0, byteOrder0, (-3313));
      String string0 = tiffField0.toString();
      assertEquals((-1231), tiffField0.getDirectoryType());
      assertEquals((-3313), tiffField0.getSortHint());
      assertEquals((-4380), tiffField0.getOffset());
      assertEquals("-1231 (0xfffffb31: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (65 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeDouble0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      String string0 = tiffField0.toString();
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getOffset());
      assertEquals("17 (0x11: Unknown Tag): 0.0 (17 Double)", string0);
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2419), 3, fieldTypeShort0, 1185L, (-2419), byteArray0, byteOrder0, (-2419));
      String string0 = tiffField0.toString();
      assertEquals(2370, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-2419), tiffField0.getSortHint());
      assertEquals((-2419), tiffField0.getOffset());
      assertEquals("-2419 (0xfffff68d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (1185 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[194];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(102, 461, fieldTypeAscii0, 102, 40, byteArray0, byteOrder0, 40);
      tiffField0.toString();
      assertEquals(102, tiffField0.getTag());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(102L, tiffField0.getCount());
      assertEquals(461, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(102, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[237];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(37389, 37389, fieldTypeAscii0, 149L, 37389, byteArray0, byteOrder0, 1194);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37389, tiffField0.getTag());
      assertEquals(37389, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals(37389, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(149, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(471, 471, fieldTypeRational0, 471, 471, byteArray0, byteOrder0, 471);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(471, 471);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(471, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(471, tiffField0.getSortHint());
      assertEquals(471, tiffField0.getTag());
      assertEquals(471, tiffField0.getDirectoryType());
      assertEquals(471L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50833, 50833, fieldTypeDouble0, 50833, 50833, byteArray0, byteOrder0, (-1395));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (byte) (-28));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: CurrentICCProfile, fieldType: Double", string0);
      assertEquals(50833, tiffField0.getOffset());
      assertEquals((-1395), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50833, tiffField0.getDirectoryType());
      assertEquals(50833, tiffField0.getTag());
      assertEquals(50833L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147483647), (-2147483647), fieldTypeShort0, (-2147483647), (-2147483647), byteArray0, byteOrder0, (-2147483647));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2147483647), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2147483647), tiffField0.getSortHint());
      assertEquals((-2147483647), tiffField0.getTag());
      assertEquals((-2147483647), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(266, 266, fieldTypeDouble0, 266, 266, byteArray0, byteOrder0, 266);
      tiffField0.getFieldTypeName();
      assertEquals(266, tiffField0.getOffset());
      assertEquals(266L, tiffField0.getCount());
      assertEquals(266, tiffField0.getSortHint());
      assertEquals(266, tiffField0.getTag());
      assertEquals(266, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2125344641, 2125344641, fieldTypeShort0, 2125344641, 2125344641, (byte[]) null, byteOrder0, 1802);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(543, 543, fieldTypeShort0, 543, 543, byteArray0, byteOrder0, 543);
      int int0 = tiffField0.getSortHint();
      assertEquals(543, int0);
      assertEquals(543, tiffField0.getOffset());
      assertEquals(543, tiffField0.getDirectoryType());
      assertEquals(543, tiffField0.getTag());
      assertEquals(543L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1091), fieldTypeRational0, 28, 28, (byte[]) null, byteOrder0, (-1091));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(181, 181, fieldTypeByte0, 252L, 181, (byte[]) null, (ByteOrder) null, 181);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
}
