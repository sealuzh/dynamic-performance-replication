/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 14:19:16 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oBG^,kA");
      StringReader stringReader1 = new StringReader("<r7-s,c7");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReadByte();
      javaCharStream0.backup((byte) (-69));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('}');
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReadByte();
      javaCharStream0.backup((-2479));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      JavaCharStream.hexval('4');
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReadByte();
      javaCharStream0.backup((-2479));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      JavaCharStream.hexval('4');
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      StringReader stringReader1 = new StringReader("p!)9o[k!7z?VL_Ew");
      int int0 = 117;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 95, 117, 87);
      javaCharStream0.GetImage();
      javaCharStream0.backup(117);
      JavaCharStream.hexval('2');
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("}2OYv7v]OClGH^kWp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 54, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      String string0 = javaCharStream0.GetImage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("^0:xEo{&Z}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, 4070, 255, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(1);
      int int0 = 64;
      javaCharStream0.column = 64;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.UpdateLineColumn('#');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iFsqE*!*pW,,o|");
      javaCharStream0.bufsize = 84;
      javaCharStream0.adjustBeginLineColumn(102, 102);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) null, 102, 102, 102);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.FillBuff();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.UpdateLineColumn('A');
      assertEquals(86, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      stringReader0.skip(86);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-90);
      byteArray0[4] = (byte)14;
      byte byte0 = (byte) (-94);
      byteArray0[5] = (byte) (-94);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      int int0 = 1;
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('h');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-341), (-2733));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-341), (-2733), 28);
      javaCharStream1.GetImage();
      javaCharStream1.backup(1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-53);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-2899), (-1596), (-151));
      javaCharStream2.readChar();
      javaCharStream2.BeginToken();
      javaCharStream2.AdjustBuffSize();
      int int0 = javaCharStream2.getEndLine();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-2899), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReadByte();
      javaCharStream0.backup((-2479));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      JavaCharStream.hexval('4');
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals('\\', char0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.skip((-165L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(86);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(true);
      assertEquals(85, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?V_w");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 86);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (-1389), (-4966));
      javaCharStream0.backup((-4966));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('w');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
      
      StringReader stringReader0 = new StringReader("+$aJpm2OG5");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-69);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      javaCharStream0.backup((byte) (-69));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('k');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(69);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaCharStream.hexval('F');
      StringReader stringReader0 = new StringReader("+$aJpm2OG5");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-69);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 1747, (byte)0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      stringReader0.skip(1L);
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(2048, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3306), (-3306));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-3306));
      javaCharStream1.available = (-3306);
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.FillBuff();
      javaCharStream1.getBeginColumn();
      javaCharStream0.backup(81);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(69);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1588), (-1588));
      assertEquals(4028, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaCharStream.hexval('F');
      StringReader stringReader0 = new StringReader("+$aJpm2OG5");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-69);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.skip((byte) (-69));
      byteArrayInputStream0.skip((byte)0);
      javaCharStream0.readChar();
      JavaCharStream.hexval('e');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 55, (byte)92, (byte)92);
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(797);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-2382L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 73;
      stringReader0.ready();
      javaCharStream0.tokenBegin = (-195);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "uZ(ddM%Uk");
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1789), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -49
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 100);
      javaCharStream0.backup(3);
      stringReader0.reset();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      assertEquals(4093, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^[1'`!F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.adjustBeginLineColumn(1, 557);
      javaCharStream1.readChar();
      javaCharStream1.ReInit((Reader) stringReader0, 0, (-1728));
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(2, javaCharStream1.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3335), (-3335));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-3335));
      javaCharStream1.available = (-3335);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.adjustBeginLineColumn((-1), 30);
      assertEquals(30, javaCharStream1.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("zpM.jy`I\":i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1095, (-1), 417);
      javaCharStream0.adjustBeginLineColumn(10, 60);
      javaCharStream0.adjustBeginLineColumn(1, 708);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('0');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("^[1'`!F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)0, '3');
      javaCharStream1.backup(6110);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 12);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
      javaCharStream0.line = 95;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7, 7);
      javaCharStream0.bufpos = 7;
      javaCharStream0.adjustBeginLineColumn(7, 7);
      javaCharStream0.adjustBeginLineColumn((-787), 1);
      javaCharStream0.AdjustBuffSize();
      assertEquals(7, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      StringReader stringReader1 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1730, 80);
      javaCharStream0.backup(3339);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('_');
      assertEquals(80, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 83, 3953);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(861);
      assertEquals(3234, javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7, 7);
      javaCharStream0.bufpos = 7;
      javaCharStream0.adjustBeginLineColumn(7, 7);
      javaCharStream0.AdjustBuffSize();
      assertEquals(7, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3331), (-3331));
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.skip(1);
      javaCharStream0.bufsize = 1;
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.ReadByte();
      assertEquals('5', char0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" C@w+c&>?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 94);
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(94, 94);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^B|g%tbzQp7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-66), (-66));
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('B', char0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("zpM.jy`I\":i");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 69, 100);
      javaCharStream0.GetImage();
      javaCharStream0.backup(6);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      try { 
        JavaCharStream.hexval('\"');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
      
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      StringReader stringReader1 = new StringReader("p!)9o[k!7z?VL_Ew");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, (-1334));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, (-1334), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream.hexval('D');
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('D');
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('!', char0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(3);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 100);
      javaCharStream0.backup(3);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(4093, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^B|g%tbzQp7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-66), (-66));
      javaCharStream0.BeginToken();
      javaCharStream0.nextCharInd = (-66);
      javaCharStream0.adjustBeginLineColumn((-66), 76);
      javaCharStream0.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream.hexval('7');
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1334), (-511));
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.inBuf = (-1334);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(1252, 7);
      assertEquals(1252, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(13);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader("+$aJpm2OG5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 1, 43);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 43, (-2072));
      javaCharStream1.prevCharIsCR = true;
      javaCharStream1.readChar();
      assertEquals(1, javaCharStream1.getBeginColumn());
      
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, 2);
      javaCharStream0.BeginToken();
      javaCharStream0.bufpos = 90;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 91
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 755, (-2072), 2);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReInit((Reader) stringReader1, 15, (-2072), 77);
      assertFalse(JavaCharStream.staticFlag);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 755, (-2072), 2);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('m', char0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-521), (-521), 12);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^B|g%tbzQp7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-66), (-66));
      javaCharStream0.backup((-66));
      javaCharStream0.BeginToken();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.adjustBeginLineColumn((-66), 76);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3331), (-3331));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-3331));
      javaCharStream1.available = (-1);
      // Undeclared exception!
      try { 
        javaCharStream1.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, 86);
      javaCharStream0.tokenBegin = 52;
      javaCharStream0.adjustBeginLineColumn(86, 86);
      javaCharStream0.GetImage();
      assertEquals(86, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m_&yV{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 0, 0, (-2896));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaCharStream.hexval('a');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 10, 10, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&8B|c@bRq9vUu-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5tSZi.d4@~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3331), (-3331));
      javaCharStream0.bufline = null;
      javaCharStream0.backup(84);
      javaCharStream0.line = (-3331);
      javaCharStream0.BeginToken();
      assertEquals(4012, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m_&yV{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(4081, 4060);
      boolean boolean0 = true;
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 4060, 4173);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader(".A{*TKp^$B^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (byte) (-1));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
      
      javaCharStream0.getColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 527, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 527);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-4675), 51);
      javaCharStream1.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m_&yV{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaCharStream.hexval('7');
      StringReader stringReader0 = new StringReader("d9F1)#G");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 1455;
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('c');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 62, 62);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1953), 62, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 7, (byte)3);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2293);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.nextCharInd = (-1);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 2293, (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader(".A{*TKp^$B^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (byte) (-1));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T-~oBs:Q>~f}xnE6O%");
      stringReader0.skip((-3929L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 3;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      javaCharStream0.Done();
      int int1 = (-989);
      javaCharStream0.ReInit((Reader) stringReader0, 3, (-989), 2600);
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.maxNextCharInd = 231;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('}');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.close();
      JavaCharStream.hexval('6');
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 6, 6);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, (-4351), 8);
      String string0 = javaCharStream0.GetImage();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
      
      javaCharStream0.ReInit((Reader) stringReader0, 1, 2582, 8);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rSYU;tAGHRY)yU#uNMK");
      int int0 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)56;
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
      
      StringReader stringReader0 = new StringReader("jQ~M?r:Nx/2?Z~pz$");
      int int1 = JavaCharStream.hexval('A');
      assertEquals(10, int1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PpO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(117);
      javaCharStream0.GetSuffix(8);
      javaCharStream0.getBeginLine();
      assertEquals(3978, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L\"\"B;*N<");
      StringReader stringReader0 = new StringReader("L\"\"B;*N<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(8);
      assertEquals(8, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
      
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1267, 11);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1267, 1267, 11);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(1267, 1267);
      assertEquals(1267, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-50), 2552);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)98, 2048, (byte)98);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
      
      StringReader stringReader0 = new StringReader(".o%@8<$kov7+2?]8E");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 793, 83);
      javaCharStream0.ReInit((Reader) stringReader0, 793, 91, 83);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JavaCharStream.hexval('9');
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      char char0 = ';';
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_p4ETojqjG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-80), 5, (byte)20);
      javaCharStream0.ReInit((Reader) stringReader0, 5, (int) (byte)20, 1699);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.adjustBeginLineColumn((-1308), (-1100));
      assertEquals((-1100), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i~LcMb95hwe};!w");
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      JavaCharStream.hexval('3');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3, 540);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = new StringReader("jQ~M?r:Nx/2?Z~pz$");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-3466), 3225);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('B');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = "&|hFJ6l+F{@!Qp5H";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4096, 597, 3220);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1954);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pipedInputStream0, sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)68;
      pipedOutputStream0.write(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1282, 89, 89);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 2750);
      javaCharStream0.ReInit((Reader) null);
      javaCharStream0.ReInit((Reader) null, 2750, 1);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)3;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sg[gR VIdu8\"{");
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (byte)47);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('`');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+W-Fb/k");
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(85);
      StringReader stringReader1 = new StringReader("_6;+W-Fb/k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 2750);
      javaCharStream0.ReInit((Reader) null, 2750, 1);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char char0 = 'd';
      JavaCharStream.hexval('d');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2zq");
      StringReader stringReader1 = new StringReader("]F`ILyu");
      stringReader1.reset();
      stringReader0.close();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
      
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 0, 53);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(']', char0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2675), 15);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2897));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.reset();
      stringReader0.close();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-38), (-38), (-38));
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = (-410);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-410), (-410));
      pipedInputStream0.mark((-1));
      StringReader stringReader0 = new StringReader("");
      int int1 = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-410), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2zq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      CharBuffer.wrap((CharSequence) "2zq");
      stringReader0.close();
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.reset();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P4OhX:]#w");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      stringReader0.skip((-1962L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('P', char0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.reset();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = (-2613);
      javaCharStream0.backup((-2613));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)15;
      byte byte0 = (byte)86;
      byteArray0[3] = (byte)86;
      byte byte1 = (byte)43;
      byteArray0[4] = (byte)43;
      char[] charArray0 = new char[7];
      charArray0[0] = '|';
      charArray0[1] = 'z';
      charArray0[2] = 'z';
      charArray0[3] = '|';
      charArray0[4] = 'z';
      charArray0[5] = 'N';
      charArray0[6] = '|';
      stringReader0.read(charArray0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0uQ.\"]_L.9veZ5W_)%");
      int int0 = 0;
      stringReader0.mark(0);
      stringReader0.ready();
      stringReader0.mark(0);
      int int1 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn(0, 5254);
      javaCharStream0.AdjustBuffSize();
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 0, 2586, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      int int0 = 2372;
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2372, 2372, 2372);
      stringReader0.reset();
      javaCharStream0.ReadByte();
      stringReader0.close();
      javaCharStream0.ExpandBuff(false);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2372, 2372, 2372);
      stringReader0.reset();
      javaCharStream0.ReadByte();
      stringReader0.close();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(92);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, (-38), 2372);
      char char0 = '>';
      // Undeclared exception!
      try { 
        stringReader0.mark((-1079));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("WYvy)UU8m4");
      int int0 = 0;
      stringReader0.mark(0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      stringReader0.mark(71);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 71, 0);
      stringReader1.close();
      javaCharStream0.adjustBeginLineColumn((-75), 0);
      char[] charArray0 = new char[2];
      charArray0[0] = '-';
      charArray0[1] = '-';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 71, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P4OhX:]#w");
      char[] charArray0 = new char[0];
      stringReader0.skip((-1358L));
      stringReader0.read(charArray0);
      stringReader0.skip((-1952L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 2677, 0, (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<2zq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetImage();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "<2zq");
      // Undeclared exception!
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-103);
      byteArray0[1] = (byte)79;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('7');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2372, 2372, 2372);
      stringReader0.reset();
      javaCharStream0.ReadByte();
      stringReader0.close();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 274, 274);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-2613));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)119;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-86);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-428), (-3419));
      byteArrayInputStream0.mark((byte)108);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.line = 15;
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-40);
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1313), 205, (-1313));
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 0, (int) (byte) (-48));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("m_&yV{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 832, 832);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-1), 832);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_6;+WFb/k");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2372, 2372, 2372);
      stringReader0.reset();
      javaCharStream0.ReadByte();
      stringReader0.close();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(2372);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, 2372, (-38));
      char char0 = '>';
      try { 
        stringReader0.mark(2372);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 1457);
      javaCharStream0.backup((-1));
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<2zq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "<2zq");
      // Undeclared exception!
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      int int0 = (-2534);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-2534), (-2534));
      javaCharStream0.getBeginLine();
      String string0 = "Je$T$J3+)cZ%>?c8";
      StringReader stringReader0 = new StringReader("Je$T$J3+)cZ%>?c8");
      javaCharStream0.ReInit((InputStream) dataInputStream0, 0, 0);
      stringReader0.mark(708);
      // Undeclared exception!
      try { 
        stringReader0.mark((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readFully(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 7, (byte) (-15));
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*Y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, 1401, (-539), (-2458));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0uQ.\"]_L.9veZ5W_)%");
      stringReader0.mark(0);
      stringReader0.ready();
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      int int0 = 5254;
      javaCharStream0.adjustBeginLineColumn(0, 5254);
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = 'B';
      charArray0[2] = '(';
      charArray0[3] = 'r';
      charArray0[4] = '-';
      stringReader0.read(charArray0, 0, 0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1384), (-1384));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+ljd$KN<1)!\"k,R\"1g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(0);
      stringReader0.skip(0);
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4095);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 4095);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 0, (-1), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("WYvy)UU8m4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0Ya[VoAf?e0\u0007k!9d");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.inBuf = (-3202);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3202), (-2339), 3);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p!)9o[k!7z?VL_Ew");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 86, (-949));
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-949), int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 409, 409);
      javaCharStream0.available = 1;
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 14);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int int0 = 1;
      javaCharStream0.maxNextCharInd = 1;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte) (-1));
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      int int0 = 1;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("P4OhX:]#w");
      char[] charArray0 = new char[0];
      stringReader0.skip((-1358L));
      stringReader0.read(charArray0);
      stringReader0.skip((-1952L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
