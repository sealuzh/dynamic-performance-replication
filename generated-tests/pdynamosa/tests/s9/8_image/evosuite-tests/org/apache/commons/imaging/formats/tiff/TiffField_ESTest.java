/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 18:31:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField(2243, 321, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SHORT).SRATIONAL, 2243, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2243, tiffField0.getTag());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(5, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-11);
      TiffField tiffField0 = new TiffField(20, 321, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SHORT).RATIONAL, 2243, 0L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-89), fieldTypeFloat0, 4904L, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-89), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)67);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 2147450877, fieldTypeFloat0.SRATIONAL, 7, 0L, byteArray0, byteOrder0, (-2025));
      tiffField0.getTagInfo();
      assertEquals(2147450877, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2025), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(133, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)102, 0, fieldTypeShort0, 1115L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(102, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-89), fieldTypeFloat0, 4904L, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-89), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2119, "FileSource");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)70;
      TiffField tiffField0 = new TiffField((byte)1, (byte)70, fieldTypeAscii0, (byte)70, 2119, byteArray0, byteOrder0, 1206);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2119, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1206, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2142245882), "px?N}!Tl");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)119);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-385), (-385), fieldTypeRational0, 0L, (-385), byteArray0, byteOrder0, 85);
      int int0 = tiffField0.getSortHint();
      assertEquals((-385), tiffField0.getDirectoryType());
      assertEquals(85, int0);
      assertEquals((-385), tiffField0.getOffset());
      assertEquals((-385), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, (-1684L), byteArray0, byteOrder0, (-1406));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1406), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1684), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 3932, fieldTypeLong0, 3932, 3058L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(3932, tiffField0.getDirectoryType());
      assertEquals(3058, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (-400), fieldTypeLong0, (byte)46, (-1L), byteArray0, byteOrder0, (-655));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals((-655), tiffField0.getSortHint());
      assertEquals((-400), tiffField0.getDirectoryType());
      assertEquals((-58), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(133, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)99;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)102, 0, fieldTypeShort0, 1115L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(102, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(99, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-36), (byte)46, fieldTypeLong0, (byte)46, (-1L), byteArray0, byteOrder0, 1002);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1002, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals((-36), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-36), (byte)50, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, 65101);
      tiffField0.getIntValue();
      assertEquals(65101, tiffField0.getSortHint());
      assertEquals((-36), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-46);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte) (-1), 334, fieldTypeLong0, 1L, 2146787543, byteArray0, byteOrder0, 37382);
      tiffField0.getIntValue();
      assertEquals(37382, tiffField0.getSortHint());
      assertEquals(2146787543, tiffField0.getOffset());
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-46);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-1826), fieldTypeLong0, 1L, 811L, byteArray0, byteOrder0, (-619));
      tiffField0.getIntValue();
      assertEquals((-619), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1826), tiffField0.getDirectoryType());
      assertEquals(811, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, (String) null);
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField(16, (byte)127, fieldTypeByte0, (byte)35, 4L, byteArray0, byteOrder0, 23);
      tiffField0.getFieldTypeName();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-22), 0, fieldTypeShort0, (byte)102, 2167L, byteArray0, byteOrder0, 37377);
      tiffField0.getFieldTypeName();
      assertEquals((-22), tiffField0.getTag());
      assertEquals(37377, tiffField0.getSortHint());
      assertEquals(2167, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-795), 9, (FieldType) null, (-795), 9, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
      assertEquals((-795), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "ImageByteCount");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(973, (-1697), fieldTypeFloat0, (byte)25, 4466L, byteArray0, (ByteOrder) null, (-1717986917));
      tiffField0.getFieldType();
      assertEquals((-1697), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(4466, tiffField0.getOffset());
      assertEquals(973, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2935), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2935), 1042, fieldTypeFloat0, 6196L, (-2935), byteArray0, byteOrder0, 3);
      tiffField0.getFieldType();
      assertEquals((-2935), tiffField0.getTag());
      assertEquals(1042, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-2935), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[37];
      byteArray0[3] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)127, (-2028), fieldTypeFloat0, 1L, 2765L, byteArray0, byteOrder0, (-2028));
      tiffField0.getDoubleValue();
      assertEquals(2765, tiffField0.getOffset());
      assertEquals((-2028), tiffField0.getSortHint());
      assertEquals((-2028), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-2380));
      tiffField0.getDoubleValue();
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals((-2380), tiffField0.getSortHint());
      assertEquals(53, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, (-1684L), byteArray0, byteOrder0, (-1406));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1684), tiffField0.getOffset());
      assertEquals((-1406), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41485, 41485, fieldTypeFloat0, 2480L, 389L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(41485, tiffField0.getTag());
      assertEquals(41485, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(389, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)67);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-276), fieldTypeLong0, (-276), 0, byteArray0, byteOrder0, 3);
      tiffField0.getCount();
      assertEquals((-276), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 4, fieldTypeShort0, (-474), 0, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, (-1684L), byteArray0, byteOrder0, (-1406));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1684), tiffField0.getOffset());
      assertEquals((-1406), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(285, ">");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(285, 285, fieldTypeByte0, 763L, 763L, byteArray0, byteOrder0, (byte)12);
      tiffField0.getByteArrayValue();
      assertEquals(285, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(285, tiffField0.getDirectoryType());
      assertEquals(763, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-1815L), byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals((-1815), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1982292598, 41730, fieldTypeLong0, 33L, 2167L, byteArray0, byteOrder0, (-3418));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ImageDepth");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "<K@*Z9CcL");
      assertEquals((-3418), tiffField0.getSortHint());
      assertEquals(41730, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getTag());
      assertEquals(2167, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(94, 94, (FieldType) null, 94, 94, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2980, fieldTypeFloat0, (-948L), 40L, (byte[]) null, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1104, (-2649), fieldTypeFloat0.SSHORT, (-1L), 3, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "yG8");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3646, 0, fieldTypeShort0, 0, 3646, (byte[]) null, byteOrder0, 3646);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)9, 579, (FieldType) null, 579, 2167L, byteArray0, byteOrder0, (-605));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte)9, fieldTypeShort0, 2834L, (-2575L), byteArray0, byteOrder0, (byte)102);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-605), 1, (FieldType) null, (-61L), (-605), byteArray0, (ByteOrder) null, (-605));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(321, 837, fieldTypeLong0, (-102L), 5097L, byteArray0, byteOrder0, 2199);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)56);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 2147450877, fieldTypeShort0, 2147450877, (-1), byteArray0, byteOrder0, (-1717986917));
      MockFile mockFile0 = new MockFile("pYY7q8Yldxo");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(772, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte) (-62), fieldTypeFloat0, (byte) (-32), (byte)0, byteArray0, byteOrder0, 1603);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-474), fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 34735);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)99, (-1450), fieldTypeShort0, 1240L, (-1860L), byteArray0, byteOrder0, (-588));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(99, tiffField0.getTag());
      assertEquals((-1860), tiffField0.getOffset());
      assertEquals((-588), tiffField0.getSortHint());
      assertEquals((-1450), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 2147450877, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SSHORT).SRATIONAL, 4904L, 0L, byteArray0, byteOrder0, (-2025));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeFloat0, (byte) (-1), 2147483647L, byteArray0, byteOrder0, (byte)1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-938L), byteArray0, byteOrder0, (-318));
      int int0 = tiffField0.getTag();
      assertEquals((-318), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-938), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(612, (byte)23, (FieldType) null, 1505L, (byte)23, byteArray0, (ByteOrder) null, 3313);
      tiffField0.getCount();
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(612, tiffField0.getTag());
      assertEquals(3313, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-474), fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 34735);
      tiffField0.getBytesLength();
      assertEquals((-474), tiffField0.getDirectoryType());
      assertEquals(34735, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(321, 1104, fieldTypeLong0, 9352L, 9352L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("321 (0x141: HalftoneHints): ", string0);
      assertEquals(9352, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)127, (-2028), fieldTypeFloat0, 1L, 2765L, byteArray0, byteOrder0, (-2028));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-2028), tiffField0.getSortHint());
      assertEquals((-2028), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
      assertEquals(2765, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1982292598, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeAscii0, 1982292598, 0L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6c22a1e7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[42];
      TiffField tiffField0 = new TiffField(20, (-2025), fieldTypeFloat0.RATIONAL, 20, 20, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)99, (byte)99, fieldTypeLong0.SRATIONAL, 1L, (-3630L), byteArray0, byteOrder0, 32766);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2119, "FileSource");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1050), 50, fieldTypeAscii0, (byte)70, (-1050), byteArray0, byteOrder0, (byte)1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@229fe3fd for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-58), (-400), fieldTypeLong0, (byte)46, (-1L), byteArray0, byteOrder0, (-655));
      tiffField0.getDoubleArrayValue();
      assertEquals(46L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-655), tiffField0.getSortHint());
      assertEquals((-400), tiffField0.getDirectoryType());
      assertEquals((-58), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte)9, fieldTypeShort0, 2834L, (-2575L), byteArray0, byteOrder0, (byte)102);
      tiffField0.getDoubleArrayValue();
      assertEquals(2834L, tiffField0.getCount());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals((-2575), tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(20, 321, fieldTypeFloat0.RATIONAL, 2243, 0L, byteArray0, byteOrder0, 1);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2243L, tiffField0.getCount());
      assertEquals(20, tiffField0.getTag());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(772, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)14, fieldTypeFloat0, 4L, 255L, byteArray0, (ByteOrder) null, 255);
      tiffField0.getDoubleArrayValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeFloat0.IFD, 118, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(118L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50721, tiffField0.getDirectoryType());
      assertEquals(50721, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)99, fieldTypeShort0, 2167L, (-1130L), byteArray0, byteOrder0, 97);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals((-1130), tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(2167L, tiffField0.getCount());
      assertEquals(99, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(9, "k?:.TEu");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-448), 9, fieldTypeRational0, 3580L, 1L, byteArray0, byteOrder0, (-2423));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(32895);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-661), 768, fieldTypeRational0, 0, (-128L), byteArray0, byteOrder0, 32895);
      tiffField0.getIntArrayValue();
      assertEquals((-661), tiffField0.getTag());
      assertEquals(768, tiffField0.getDirectoryType());
      assertEquals(32895, tiffField0.getSortHint());
      assertEquals((-128), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "8:k1S7[ jtL6g8");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (-1826), fieldTypeLong0, 1L, 811L, byteArray0, byteOrder0, (-619));
      tiffField0.getIntArrayValue();
      assertEquals((-619), tiffField0.getSortHint());
      assertEquals(811, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1826), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1226, 50721, fieldTypeFloat0, 50721, 50721, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2d7d3d62 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1226, 905, fieldTypeAscii0, 1L, 1226, byteArray0, byteOrder0, 32);
      String string0 = tiffField0.getStringValue();
      assertEquals(1226, tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1226, tiffField0.getTag());
      assertEquals(905, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 1226, fieldTypeAscii0, 8L, 1226, byteArray0, byteOrder0, 105);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@7ab292c7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(122, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(264, 122, fieldTypeFloat0, 264, (-741L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals("CellWidth", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(264, tiffField0.getTag());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals((-741), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "ImageByteCount");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(973, (-1697), fieldTypeFloat0, (byte)25, 4466L, byteArray0, (ByteOrder) null, (-1717986917));
      MockFile mockFile0 = new MockFile("ImageByteCount");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(49L, mockFile0.length());
      assertEquals(973, tiffField0.getTag());
      assertEquals(4466, tiffField0.getOffset());
      assertEquals((-1697), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1022, (-1), fieldTypeFloat0, 184L, 262140L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1195, 41491, fieldTypeFloat0.BYTE, 412L, 1195, byteArray0, byteOrder0, 1195);
      tiffField0.dump();
      assertEquals(1195, tiffField0.getSortHint());
      assertEquals(1195, tiffField0.getTag());
      assertEquals(1195, tiffField0.getOffset());
      assertEquals(412L, tiffField0.getCount());
      assertEquals(41491, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1108, 1108, fieldTypeFloat0, 1108, 1108, byteArray0, byteOrder0, 1108);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1108, tiffField0.getTag());
      assertEquals(1108, tiffField0.getSortHint());
      assertEquals(1108L, tiffField0.getCount());
      assertEquals(1108, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1108, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2936, (byte)113, fieldTypeByte0, 762L, 4L, byteArray0, (ByteOrder) null, (byte)111);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2936, tiffField0.getTag());
      assertEquals(762L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(321, 1104, fieldTypeLong0, 9352L, 9352L, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(1104, tiffField0.getDirectoryType());
      assertEquals(9352L, tiffField0.getCount());
      assertEquals(9352, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(321, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(85, 85, fieldTypeLong0, 1632L, 85, byteArray0, byteOrder0, 85);
      String string0 = tiffField0.getValueDescription();
      assertEquals(85, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(1632L, tiffField0.getCount());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 1104, fieldTypeLong0.SHORT, 321, 328L, byteArray0, byteOrder0, 41995);
      String string0 = tiffField0.toString();
      assertEquals("321 (0x141: HalftoneHints): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (67) (321 Short)", string0);
      assertEquals(328, tiffField0.getOffset());
      assertEquals(41995, tiffField0.getSortHint());
      assertEquals(1104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)99, fieldTypeShort0, 2167L, (-1130L), byteArray0, byteOrder0, 97);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1130), tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(2167L, tiffField0.getCount());
      assertEquals(99, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2119, "FileSource");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1050), 519, fieldTypeAscii0, 953L, 4904L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(4904, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1050), tiffField0.getTag());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals(953L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeAscii0, 2147483647L, 32, byteArray0, byteOrder0, 1719);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(1719, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2119, "FileSource");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)70;
      TiffField tiffField0 = new TiffField((-1050), 50, fieldTypeAscii0, (byte)70, (-1050), byteArray0, byteOrder0, (byte)1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getBytesLength());
      assertEquals(70L, tiffField0.getCount());
      assertEquals((-1050), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1050), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)127, (-2028), fieldTypeFloat0, 1L, 2765L, byteArray0, byteOrder0, (-2028));
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2028), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(127, tiffField0.getTag());
      assertEquals(2765, tiffField0.getOffset());
      assertEquals((-2028), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[127];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50935, 72, fieldTypeDouble0, 72, 50935, byteArray0, byteOrder0, 72);
      String string0 = tiffField0.getValueDescription();
      assertEquals(72L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50935, tiffField0.getTag());
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(50935, tiffField0.getOffset());
      assertEquals(72, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, (-1684L), byteArray0, byteOrder0, (-1406));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1684), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1406), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 14, fieldTypeShort0, (byte)8, (byte)110, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(110L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2980, fieldTypeFloat0, (-948L), 40L, (byte[]) null, byteOrder0, (-1717986917));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-5862));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(string0);
      assertEquals(2980, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, (byte)70, fieldTypeFloat0.ASCII, (-1197L), (byte)34, byteArray0, byteOrder0, (byte)4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, (-393));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-393), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField(16, (byte)127, fieldTypeFloat0.SBYTE, (byte)35, 4L, byteArray0, byteOrder0, 23);
      tiffField0.getFieldTypeName();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(127, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-474), fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, (-474));
      tiffField0.getOffset();
      assertEquals((-474), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-474), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 607, fieldTypeFloat0, 1090L, (-474), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-474), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(607, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeFloat0, (byte) (-1), 2147483647L, byteArray0, byteOrder0, (byte)1);
      tiffField0.dump();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(97, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(97, 1, fieldTypeShort0, 1, (-634L), byteArray0, (ByteOrder) null, 97);
      tiffField0.getDoubleArrayValue();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getTag());
      assertEquals((-634), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 4, fieldTypeShort0, (-474), 0, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 2134);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-474L), tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }
}
