/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 18:35:28 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      classWriter0.index = (-1295);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-559));
      classWriter0.index = (-559);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "V92(n:6>5&", "|'M?IF>ZNdz5NHPzE)", "|'M?IF>ZNdz5NHPzE)", "|'M?IF>ZNdz5NHPzE)");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-60));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-60), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "e", "e", "e", "e");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.length = 2;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1294));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1294), (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1305));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "^92(4>5&", "^92(4>5&", "^92(4>5&", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-60));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-60), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-526));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "", "ConstantValue", "RuntimeInvisibleAnnotations", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("void", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter");
      classWriter0.version = (-1295);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6153, "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-343));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-343), "e&z", "e&z", "e&z", "e&z");
      Attribute attribute0 = new Attribute("e&z");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 12, "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&", "V92(n:6>5&");
      fieldWriter0.visitAnnotation("V92(n:6>5&", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-526));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "Signature", (String) null, "3'M?IF>ZNdz5NHPzE)");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1295));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.io.filefilter.AbstractFileFilter";
      stringArray0[1] = "";
      stringArray0[2] = "org.apache.commons.io.filefilter.AbstractFileFilter";
      stringArray0[3] = "";
      stringArray0[4] = "%&%|Bv:'\"";
      stringArray0[5] = "org.apache.commons.io.filefilter.AbstractFileFilter";
      stringArray0[6] = "org.apache.commons.io.filefilter.AbstractFileFilter";
      stringArray0[7] = "org.apache.commons.io.filefilter.AbstractFileFilter";
      classWriter0.visit((-1295), (-1295), "org.apache.commons.io.filefilter.AbstractFileFilter", "", "org.apache.commons.io.filefilter.AbstractFileFilter", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1295), "org.apache.commons.io.filefilter.AbstractFileFilter", "org.apache.commons.io.filefilter.AbstractFileFilter", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 7, "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(7);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-559));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "V92(n:6>5&", "|'M?IF>ZNdz5NHPzE)", "|'M?IF>ZNdz5NHPzE)", "|'M?IF>ZNdz5NHPzE)");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 64241, "|'M?IF>ZNdz5NHPzE)", "|'M?IF>ZNdz5NHPzE)", "RuntimeVisibleAnnotations", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-526));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "Signature", (String) null, "3'M?IF>ZNdz5NHPzE)");
      fieldWriter0.visitEnd();
  }
}
