/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 11:47:25 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 2871, "", "", "The prefix must not be null", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "The array of names must not be null", "The array of names must not be null", "l]c|U0]gX2Jo8*_g", "l]c|U0]gX2Jo8*_g");
      ByteVector byteVector0 = new ByteVector(1);
      Attribute attribute0 = new Attribute("l]c|U0]gX2Jo8*_g");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1104);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2195), "]wil!3V8I=)=e7\"cl", "", "^FL", "^FL");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector(197);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2563));
      ByteVector byteVector0 = new ByteVector(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2563), "/wPkSY(bpX'I){e~Fh ", "t(0rXA(x*.{gA ", (String) null, "/wPkSY(bpX'I){e~Fh ");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.version = (-1066);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1066), ";S2QpH%q-S", ";S2QpH%q-S", ";S2QpH%q-S", ";S2QpH%q-S");
      ByteVector byteVector0 = new ByteVector(8);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(675);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 675, "Synthetic", "Synthetic", "Synthetic", "Synthetic");
      Attribute attribute0 = new Attribute("/;p\"Q$@0+Od");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2563));
      String[] stringArray0 = new String[0];
      classWriter0.visit((-2563), 5, "/wPkSY(bpX'I){e~Fh ", "/wPkSY(bpX'I){e~Fh ", "^Ox\"Bm+|DzMAdc\"", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2563), "/wPkSY(bpX'I){e~Fh ", "t(0rXA(x*.{gA ", (String) null, "/wPkSY(bpX'I){e~Fh ");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "Deprecated", "n;7_,E4", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1104);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2195), "]wil!3V8I=)=e7\"cl", "", "^FL", "^FL");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3), "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "ConstantValue", "wheel.asm.FieldWriter", "u?", (Object) null);
      ByteVector byteVector0 = new ByteVector(49);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(6, "The array of names must not be null", "yxFgkimA@", "=\"*8jLe!)", "RuntimeInvisibleParameterAnnotations");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "The array of names must not be null", "The array of names must not be null", "l]c|U0]gX2Jo8*_g", "l]c|U0]gX2Jo8*_g");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2563));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2563), "/wPkSY(bpX'I){e~Fh ", "t(0rXA(x*.{gA ", (String) null, "/wPkSY(bpX'I){e~Fh ");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "`-6iH1x)TX%a%^H", "mS", "`-6iH1x)TX%a%^H", "`-6iH1x)TX%a%^H");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
