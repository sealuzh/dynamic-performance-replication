/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 07:31:02 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[0];
      int int0 = (-739);
      boolean boolean0 = true;
      Segment segment1 = new Segment(byteArray0, (-739), (-739), false, false);
      segment1.pos = 1594;
      Segment segment2 = new Segment(byteArray0, (-739), (-739), true, true);
      SegmentPool.next = segment2;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, (-739));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.shared = true;
      Segment segment1 = segment0.unsharedCopy();
      segment1.writeTo(segment0, 1);
      assertFalse(segment0.equals((Object)segment1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.unsharedCopy();
      SegmentPool.byteCount = 3688L;
      int int0 = 0;
      Segment segment1 = new Segment((byte[]) null, 0, 0, true, true);
      segment0.next = segment1;
      segment0.shared = true;
      SegmentPool.byteCount = (-163L);
      // Undeclared exception!
      try { 
        segment1.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(410);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-46);
      byteArray0[7] = (byte) (-100);
      byteArray0[8] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-1388), (byte) (-100), false, false);
      SegmentPool.next = segment0;
      Segment segment1 = segment0.unsharedCopy();
      segment1.shared = false;
      // Undeclared exception!
      try { 
        SegmentPool.next.push(segment1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      int int0 = (-1239);
      SegmentPool.byteCount = (-2890L);
      // Undeclared exception!
      try { 
        segment0.split((-1239));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-28);
      Segment segment1 = new Segment(byteArray0, (-847), 175, true, true);
      segment0.prev = segment1;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.owner = false;
      segment0.prev = segment1;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment((byte[]) null, 1, 354, false, false);
      segment0.prev = segment1;
      segment0.compact();
      // Undeclared exception!
      try { 
        segment0.prev.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[1];
      Segment segment1 = new Segment();
      segment0.writeTo(segment1, 8192);
      byteArray0[0] = (byte)0;
      boolean boolean0 = false;
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte)0;
      byteArray1[1] = (byte)0;
      // Undeclared exception!
      try { 
        segment1.split(8192);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte) (-73);
      Segment segment0 = new Segment(byteArray0, (-1556), (byte)80, false, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.writeTo(segment1, 8192);
      byte[] byteArray0 = new byte[0];
      Segment segment2 = new Segment(byteArray0, 8192, 8192, false, false);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[1];
      segment0.writeTo(segment0, 8192);
      Segment segment1 = new Segment(byteArray0, 8192, 8192, true, true);
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[1];
      Segment segment1 = new Segment();
      segment0.writeTo(segment1, 8192);
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        segment1.split(354);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte) (-53);
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)6;
      byte byte0 = (byte) (-30);
      byteArray0[6] = (byte) (-30);
      Segment segment0 = new Segment(byteArray0, (byte)100, 0, false, false);
      SegmentPool.next = segment0;
      segment0.next = SegmentPool.next;
      segment0.sharedCopy();
      segment0.next = SegmentPool.next;
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }
}
