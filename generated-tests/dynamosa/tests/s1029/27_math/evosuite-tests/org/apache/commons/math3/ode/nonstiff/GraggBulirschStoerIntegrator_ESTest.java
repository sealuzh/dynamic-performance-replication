/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 20:27:56 GMT 2019
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Asinh;
import org.apache.commons.math3.analysis.function.Cosh;
import org.apache.commons.math3.analysis.function.Logit;
import org.apache.commons.math3.analysis.solvers.AllowedSolution;
import org.apache.commons.math3.analysis.solvers.BisectionSolver;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1635.17), (-1635.17), (-2.1468725851149E9), (-1635.17));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(435, (-1635.17), (-1635.17));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1635.17, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 2279.4128856132;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 2279.4128856132;
      doubleArray0[5] = 1379.1181503;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setOrderControl((-801), 0.0, 757.82);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      Collection<EventHandler> collection0 = graggBulirschStoerIntegrator0.getEventHandlers();
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(collection0);
      assertEquals(6, doubleArray0.length);
      
      Collection<EventHandler> collection1 = graggBulirschStoerIntegrator0.getEventHandlers();
      assertFalse(collection1.equals((Object)collection0));
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(collection1);
      assertNotSame(collection1, collection0);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2075);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2279.4128856132, 2075, 2279.4128856132, 2075);
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals(2075.0, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(2174.8061379459527, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator1);
      
      graggBulirschStoerIntegrator0.setOrderControl(4174, 1.7976931348623157E308, 85.1326005);
      assertFalse(graggBulirschStoerIntegrator0.equals((Object)graggBulirschStoerIntegrator1));
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotSame(graggBulirschStoerIntegrator0, graggBulirschStoerIntegrator1);
      assertEquals(6, doubleArray0.length);
      
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      assertFalse(filterType1.equals((Object)filterType0));
      assertFalse(eventFilter1.equals((Object)eventFilter0));
      assertFalse(filterType0.equals((Object)filterType1));
      assertNotNull(eventFilter1);
      
      RiddersSolver riddersSolver0 = new RiddersSolver(0.0);
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
      assertEquals(0.0, riddersSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, riddersSolver0.getEvaluations());
      assertEquals(0.0, riddersSolver0.getMin(), 0.01);
      assertEquals(0, riddersSolver0.getMaxEvaluations());
      assertEquals(0.0, riddersSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
      assertNotNull(riddersSolver0);
      
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter0, 1.0E-15, (-6.461509354879894E29), (-801), (UnivariateSolver) riddersSolver0);
      assertFalse(eventFilter0.equals((Object)eventFilter1));
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertFalse(filterType0.equals((Object)filterType1));
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
      assertEquals(0.0, riddersSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, riddersSolver0.getEvaluations());
      assertEquals(0.0, riddersSolver0.getMin(), 0.01);
      assertEquals(0, riddersSolver0.getMaxEvaluations());
      assertEquals(0.0, riddersSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals(2075.0, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(2174.8061379459527, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertNotSame(eventFilter0, eventFilter1);
      assertNotSame(graggBulirschStoerIntegrator1, graggBulirschStoerIntegrator0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(186.592903, 186.592903, 1.0E15, 0.9999);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors(1.0E15, (-265.2531), (-265.2531), 1.0E15);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setStepSizeControl((-265.2531), 1453.8744189098, (-265.2531), 1453.8744189098);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(265.2531, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1453.8744189098, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 0.0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(265.2531, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1453.8744189098, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl(0, (-327.025730844242), (-0.5));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(265.2531, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1453.8744189098, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      RiddersSolver riddersSolver0 = new RiddersSolver((-2583.4332));
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-2583.4332), riddersSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, riddersSolver0.getEvaluations());
      assertEquals(0.0, riddersSolver0.getMin(), 0.01);
      assertEquals(0.0, riddersSolver0.getStartValue(), 0.01);
      assertEquals(0, riddersSolver0.getMaxEvaluations());
      assertNotNull(riddersSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-327.025730844242), 563.1198329164, 0, (UnivariateSolver) riddersSolver0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(265.2531, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1453.8744189098, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(186.592903, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals((-2583.4332), riddersSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, riddersSolver0.getEvaluations());
      assertEquals(0.0, riddersSolver0.getMin(), 0.01);
      assertEquals(0.0, riddersSolver0.getStartValue(), 0.01);
      assertEquals(0, riddersSolver0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(257.1217977777759, 257.1217977777759, (-160.13439743173424), 257.1217977777759);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors((-160.13439743173424), 0.0, 257.1217977777759, 2098.3);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6075552701950073, 0.0, 0.0, 0.0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.6075552701950073, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      double double1 = (-1152.69243211851);
      int int0 = 5612;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 5612, 5612, 1.0E-4);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.6075552701950073, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-1152.69243211851), (-736.957244119639), 0.0, (-3409.5801236595444));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.6075552701950073, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1152.69243211851);
      doubleArray0[1] = 0.6075552701950073;
      doubleArray0[2] = 1.0E-4;
      doubleArray0[3] = (-736.957244119639);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1689.792;
      doubleArray0[6] = (-736.957244119639);
      doubleArray0[7] = (-736.957244119639);
      expandableStatefulODE0.computeDerivatives(1689.792, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-1152.69243211851), 0.6075552701950073, 1.0E-4, (-736.957244119639), 0.0, 1689.792, (-736.957244119639), (-736.957244119639)}, doubleArray0, 0.01);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertEquals(8, doubleArray0.length);
      
      expandableStatefulODE0.setTime(0.0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(0.0, expandableStatefulODE0.getTime(), 0.01);
      
      // Undeclared exception!
      try { 
        expandableStatefulODE0.getSecondaryStateDot(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1706.971041102, 1706.971041102, 1706.971041102, 1706.971041102);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(276, 542.8, 276);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      expandableStatefulODE0.setTime((-2547.85841727989));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      Collection<StepHandler> collection0 = graggBulirschStoerIntegrator0.getStepHandlers();
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(collection0);
      
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 2.107844991E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), 2.107844991E9, 2.107844991E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), (-3.344806129021162E-131), (-1229.9616998908));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2097.2614201387137);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-5378.257299128992));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-5378.257299128992), expandableStatefulODE0.getTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(258.93231682077834, 258.93231682077834, (-158.3739036915585), 258.93231682077834);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.307749759934266E-8, 4.307749759934266E-8, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(0, doubleArray0.length);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      SecantSolver secantSolver0 = new SecantSolver(4.307749759934266E-8);
      assertEquals(0.0, secantSolver0.getMax(), 0.01);
      assertEquals(0.0, secantSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, secantSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, secantSolver0.getEvaluations());
      assertEquals(0.0, secantSolver0.getMin(), 0.01);
      assertEquals(0, secantSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, secantSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(4.307749759934266E-8, secantSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(secantSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 4.307749759934266E-8, 4.307749759934266E-8, (-184), (UnivariateSolver) secantSolver0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(4.307749759934266E-8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.0, secantSolver0.getMax(), 0.01);
      assertEquals(0.0, secantSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, secantSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, secantSolver0.getEvaluations());
      assertEquals(0.0, secantSolver0.getMin(), 0.01);
      assertEquals(0, secantSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, secantSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(4.307749759934266E-8, secantSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.92768847), 1.2728325127120823, 1.2728325127120823, (-662.911982688));
      assertEquals(1.2728325127120823, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(986.92768847, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(35.44282225755163, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(6, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(6, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      double double0 = 0.07250232994556427;
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 18);
      assertEquals(1.2728325127120823, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(986.92768847, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(35.44282225755163, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-986.92768847));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 4.0E-15;
      double double0 = 0.24554696679115295;
      doubleArray0[1] = 0.24554696679115295;
      doubleArray0[2] = 4.0E-15;
      doubleArray0[3] = 4.0E-15;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0E-15, 4.0E-15, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {4.0E-15, 0.24554696679115295, 4.0E-15, 4.0E-15}, doubleArray0, 0.01);
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(4, doubleArray0.length);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2097.2614201387137);
      assertEquals(2097.2614201387137, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, regulaFalsiSolver0.getEvaluations());
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(0, regulaFalsiSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertNotNull(regulaFalsiSolver0);
      
      Asinh asinh0 = new Asinh();
      assertNotNull(asinh0);
      
      eventFilter0.eventOccurred(7.243157658226935E-258, doubleArray0, false);
      assertArrayEquals(new double[] {4.0E-15, 0.24554696679115295, 4.0E-15, 4.0E-15}, doubleArray0, 0.01);
      assertEquals(4, doubleArray0.length);
      
      AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
      double double1 = regulaFalsiSolver0.solve(21, (UnivariateFunction) asinh0, 0.0, (double) 21, (-1029.0), allowedSolution0);
      assertNotEquals(double1, double0, 0.01);
      assertEquals(2097.2614201387137, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(21, regulaFalsiSolver0.getMaxEvaluations());
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals((-1029.0), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2, regulaFalsiSolver0.getEvaluations());
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(21.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, double1, 0.01);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 4.0E-15, 7.243157658226935E-258, 2145335949, (UnivariateSolver) regulaFalsiSolver0);
      assertArrayEquals(new double[] {4.0E-15, 0.24554696679115295, 4.0E-15, 4.0E-15}, doubleArray0, 0.01);
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(4.0E-15, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2097.2614201387137, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(21, regulaFalsiSolver0.getMaxEvaluations());
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals((-1029.0), regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(2, regulaFalsiSolver0.getEvaluations());
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(21.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(4, doubleArray0.length);
      
      ExpandableStatefulODE expandableStatefulODE0 = null;
      try {
        expandableStatefulODE0 = new ExpandableStatefulODE((FirstOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 2.8524232604238555E-96, 2570.98, 1.0001);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.0E15, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(5.34080823511185E-41, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2.8524232604238555E-96, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4356, 4356, 2570.98);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.0E15, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(5.34080823511185E-41, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2.8524232604238555E-96, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2322.88649), (-2322.88649), doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(4, doubleArray0.length);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2322.88649));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 4
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(6, (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(811.3206235178, 0.3423627457344136, (-307.8792), 0.3423627457344136);
      assertEquals(16.666312019715413, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.3423627457344136, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors(1.0, 2098.0, 1.0, 69.0);
      assertEquals(16.666312019715413, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.3423627457344136, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl((-1216), 69.0, 0.3423627457344136);
      assertEquals(16.666312019715413, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.3423627457344136, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setControlFactors(0.3423627457344136, (-1216), 1.0, 1.0);
      assertEquals(16.666312019715413, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.3423627457344136, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1111.663237590312;
      doubleArray0[1] = 1111.663237590312;
      doubleArray0[2] = 1111.663237590312;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1111.663237590312, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3693, (-2288), 1111.663237590312);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3693);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setOrderControl((-197), 1.0398354530334473, 1111.663237590312);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.5, (-2288));
      assertEquals(0.0, brentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals((-2288.0), brentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, brentSolver0.getMaxEvaluations());
      assertEquals(0.5, brentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getMax(), 0.01);
      assertEquals(0, brentSolver0.getEvaluations());
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
      assertEquals(0.0, brentSolver0.getStartValue(), 0.01);
      assertNotNull(brentSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1111.663237590312, 1744.2668496759056, 3693, (UnivariateSolver) brentSolver0);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, brentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals((-2288.0), brentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, brentSolver0.getMaxEvaluations());
      assertEquals(0.5, brentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getMax(), 0.01);
      assertEquals(0, brentSolver0.getEvaluations());
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
      assertEquals(0.0, brentSolver0.getStartValue(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.5, (double) (-197), 0, (UnivariateSolver) brentSolver0);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, brentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals((-2288.0), brentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, brentSolver0.getMaxEvaluations());
      assertEquals(0.5, brentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getMax(), 0.01);
      assertEquals(0, brentSolver0.getEvaluations());
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
      assertEquals(0.0, brentSolver0.getStartValue(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(expandableStatefulODE0);
      
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-660.8621729950394), 0.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(660.8621729950394, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(257.1217977777759, 257.1217977777759, (-160.13439743173424), 257.1217977777759);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1200, 1558, 557.81492);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(0, (-2.146876275E9), (-2.146876275E9));
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors(257.1217977777759, 0.6080870628356934, 1445.419874, 1609.6761911368963);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(257.1217977777759, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.010684899985790253, 0.010684899985790253);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      int int0 = 0;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 0, 0.010684899985790253);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 256.2507829129308, (-160.1344), 256.2507829129308);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(1, (-160.1344), 1);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setControlFactors((-4168.78757), 369, 1, 256.2507829129308);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.1881638467311859;
      doubleArray0[1] = (-1221.2);
      doubleArray0[2] = 0.1881638467311859;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1221.2), 0.1881638467311859, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {0.1881638467311859, (-1221.2), 0.1881638467311859}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1221.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(15.158683637708265, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(3, doubleArray0.length);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.1881638467311859, (-159.9175887), (-1221.2), (-2128.6869));
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(5.485499854139787, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertNotNull(graggBulirschStoerIntegrator1);
      
      graggBulirschStoerIntegrator1.setStabilityCheck(false, 1, 1, (-6.680679913078676E139));
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(5.485499854139787, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertNotSame(graggBulirschStoerIntegrator1, graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 34);
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(5.485499854139787, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertNotSame(graggBulirschStoerIntegrator1, graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator1.setInterpolationControl(false, (-206));
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(5.485499854139787, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertNotSame(graggBulirschStoerIntegrator1, graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-206), 30, 0.9999);
      assertFalse(graggBulirschStoerIntegrator0.equals((Object)graggBulirschStoerIntegrator1));
      assertArrayEquals(new double[] {0.1881638467311859, (-1221.2), 0.1881638467311859}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1221.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(15.158683637708265, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotSame(graggBulirschStoerIntegrator0, graggBulirschStoerIntegrator1);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors((-6.680679913078676E139), (-1078), (-1221.2), (-206));
      assertFalse(graggBulirschStoerIntegrator0.equals((Object)graggBulirschStoerIntegrator1));
      assertArrayEquals(new double[] {0.1881638467311859, (-1221.2), 0.1881638467311859}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1221.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(15.158683637708265, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotSame(graggBulirschStoerIntegrator0, graggBulirschStoerIntegrator1);
      assertEquals(3, doubleArray0.length);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (double) (-1949));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2279.4128856132, 0.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(0, doubleArray0.length);
      
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setOrderControl(6, 4068.3736547, (-903.503114));
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2272), 1.0E-4, 1.0E-4);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, doubleArray0.length);
      
      double double0 = 3820.9620108014;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 338.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.92768847), 0.0, 0.0, (-662.911982688));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(986.92768847, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1006).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(2012, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(2012, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.07250232994556427);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2322.88649), (-2322.88649), doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2322.88649, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(0, doubleArray0.length);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2322.88649));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 256.2507829129308, 256.2507829129308, 256.2507829129308);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1111.663237590312;
      doubleArray0[1] = 1111.663237590312;
      doubleArray0[2] = 1111.663237590312;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1111.663237590312, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors(1111.663237590312, 1111.663237590312, 0.0, 1111.663237590312);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3693);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 7);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1915, 7, 1111.663237590312);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 245);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors(0.0, (-1543), 1.0001, 1.0001);
      assertArrayEquals(new double[] {1111.663237590312, 1111.663237590312, 1111.663237590312}, doubleArray0, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1111.663237590312, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(3, doubleArray0.length);
      
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 258.93231682077834;
      doubleArray0[1] = 1111.663237590312;
      doubleArray0[2] = 258.93231682077834;
      doubleArray0[3] = 258.93231682077834;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3856.2), 0.01, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {258.93231682077834, 1111.663237590312, 258.93231682077834, 258.93231682077834, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.209830915572501, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3856.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors(0.6080870628356934, 0.01, 1.0, 2.1273622512817383);
      assertArrayEquals(new double[] {258.93231682077834, 1111.663237590312, 258.93231682077834, 258.93231682077834, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.209830915572501, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3856.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-2288), 2, 1609.6761911368963);
      assertArrayEquals(new double[] {258.93231682077834, 1111.663237590312, 258.93231682077834, 258.93231682077834, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.209830915572501, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3856.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors(1111.663237590312, 2204.15001788, 1059.8676771536, 999.9);
      assertArrayEquals(new double[] {258.93231682077834, 1111.663237590312, 258.93231682077834, 258.93231682077834, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.209830915572501, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3856.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      assertNotNull(eventFilter0);
      
      PegasusSolver pegasusSolver0 = new PegasusSolver((-2506.5812), (-2506.5812));
      assertEquals((-2506.5812), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, pegasusSolver0.getMaxEvaluations());
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0, pegasusSolver0.getEvaluations());
      assertEquals((-2506.5812), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertNotNull(pegasusSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 999.9, (double) 2, (-2288), (UnivariateSolver) pegasusSolver0);
      assertArrayEquals(new double[] {258.93231682077834, 1111.663237590312, 258.93231682077834, 258.93231682077834, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.01, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.209830915572501, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3856.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals((-2506.5812), pegasusSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, pegasusSolver0.getMaxEvaluations());
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
      assertEquals(0, pegasusSolver0.getEvaluations());
      assertEquals((-2506.5812), pegasusSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, pegasusSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, pegasusSolver0.getMax(), 0.01);
      assertEquals(6, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = 2619.0;
      doubleArray0[2] = (-3776.2122);
      doubleArray0[3] = 2887.30966238922;
      doubleArray0[4] = 2887.30966238922;
      doubleArray0[5] = 2887.30966238922;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3776.2122), 2887.30966238922, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-1.0), 2619.0, (-3776.2122), 2887.30966238922, 2887.30966238922, 2887.30966238922}, doubleArray0, 0.01);
      assertEquals(3301.983339190562, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2887.30966238922, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(3776.2122, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(6, doubleArray0.length);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-3776.2122));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2279.4128856132;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      double[] doubleArray1 = new double[2];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 8.711129287069315E-8;
      doubleArray1[1] = 8.711129287069315E-8;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1431679625), 0.0, doubleArray0, doubleArray1);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertArrayEquals(new double[] {2279.4128856132, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {8.711129287069315E-8, 8.711129287069315E-8}, doubleArray1, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.431679625E9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(4, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-3600), (-3256), (-1431679625));
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertArrayEquals(new double[] {2279.4128856132, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {8.711129287069315E-8, 8.711129287069315E-8}, doubleArray1, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.431679625E9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1, 2146460549, (-3256));
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertArrayEquals(new double[] {2279.4128856132, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {8.711129287069315E-8, 8.711129287069315E-8}, doubleArray1, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.431679625E9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      
      graggBulirschStoerIntegrator0.setOrderControl((-670), 0.4568560719490051, 0.9999);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertArrayEquals(new double[] {2279.4128856132, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {8.711129287069315E-8, 8.711129287069315E-8}, doubleArray1, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.431679625E9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(4, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 1708.6252330136144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 2279.4128856132;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 2279.4128856132;
      doubleArray0[5] = 1379.1181503;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setOrderControl((-801), 0.0, 757.82);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 328, (-801), (-265.0775684178));
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors((-801), 1.0E-4, 3282.0, 2279.4128856132);
      assertArrayEquals(new double[] {1.0, 2279.4128856132, 0.0, 0.0, 2279.4128856132, 1379.1181503}, doubleArray0, 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(6, doubleArray0.length);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      double[] doubleArray0 = expandableStatefulODE0.getCompleteState();
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(doubleArray0);
      assertEquals(358, doubleArray0.length);
      
      expandableStatefulODE0.setTime((-2547.85841727989));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      Collection<StepHandler> collection0 = graggBulirschStoerIntegrator0.getStepHandlers();
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(collection0);
      
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 6.666544384808297E-279);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3.344806129021162E-131), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2098.0);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 358);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(358.0, expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 6, 925.0);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-1229.9616998908), (-3.344806129021162E-131), (-1229.9616998908), 1444.93999657056);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (double) (-2146876275);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      assertFalse(expandableStatefulODE1.equals((Object)expandableStatefulODE0));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE1.getTime(), 0.01);
      assertNotNull(expandableStatefulODE1);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, (double) (-1545));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.9299691540987203E36, 0.0, 1.9299691540987203E36, 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1.9299691540987203E36, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      int int0 = (-642);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-642), (-2053), (-2526.488443591));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1.9299691540987203E36, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      int int1 = 0;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(0, regulaFalsiSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0, regulaFalsiSolver0.getEvaluations());
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-6, regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(regulaFalsiSolver0);
      
      Cosh cosh0 = new Cosh();
      assertNotNull(cosh0);
      
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve((-642), (UnivariateFunction) cosh0, 792.2631423633363, 0.0, 792.2631423633363);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-642) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double double0 = 0.8;
      double double1 = 1.8861808782043154E64;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.8, 1.8861808782043154E64, 0.8, 1.8861808782043154E64);
      assertEquals(1.8861808782043154E64, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.2283911032580188E32, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      EventHandler eventHandler0 = null;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver();
      assertEquals(0, bracketingNthOrderBrentSolver0.getMaxEvaluations());
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0, bracketingNthOrderBrentSolver0.getEvaluations());
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      assertNotNull(bracketingNthOrderBrentSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 1.8861808782043154E64, 0.8, (-3975), (UnivariateSolver) bracketingNthOrderBrentSolver0);
      assertEquals(1.8861808782043154E64, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.2283911032580188E32, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, bracketingNthOrderBrentSolver0.getMaxEvaluations());
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getStartValue(), 0.01);
      assertEquals(1.0E-14, bracketingNthOrderBrentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, bracketingNthOrderBrentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMax(), 0.01);
      assertEquals(0.0, bracketingNthOrderBrentSolver0.getMin(), 0.01);
      assertEquals(5, bracketingNthOrderBrentSolver0.getMaximalOrder());
      assertEquals(0, bracketingNthOrderBrentSolver0.getEvaluations());
      assertEquals(1.0E-6, bracketingNthOrderBrentSolver0.getAbsoluteAccuracy(), 0.01);
      
      int int0 = 197;
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 197);
      assertEquals(1.8861808782043154E64, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.2283911032580188E32, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.8477759656842807E-8, fixedStepHandler0, stepNormalizerBounds0);
      assertNotNull(stepNormalizer0);
      
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(1.8861808782043154E64, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1.2283911032580188E32, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.8, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      BisectionSolver bisectionSolver0 = new BisectionSolver(197, 1903.0570858282138);
      assertEquals(1.0E-15, bisectionSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(1903.0570858282138, bisectionSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, bisectionSolver0.getEvaluations());
      assertEquals(0.0, bisectionSolver0.getMax(), 0.01);
      assertEquals(0.0, bisectionSolver0.getMin(), 0.01);
      assertEquals(0.0, bisectionSolver0.getStartValue(), 0.01);
      assertEquals(197.0, bisectionSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, bisectionSolver0.getMaxEvaluations());
      assertNotNull(bisectionSolver0);
      
      int int1 = 0;
      Logit logit0 = new Logit((-362.2162), (-3975));
      assertNotNull(logit0);
      
      Asinh asinh0 = new Asinh();
      assertNotNull(asinh0);
      
      int int2 = 0;
      try { 
        logit0.value(1.8477759656842807E-8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 out of [-362.216, -3,975] range
         //
         verifyException("org.apache.commons.math3.analysis.function.Logit", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      expandableStatefulODE0.setTime((-2547.85841727989));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      Collection<StepHandler> collection0 = graggBulirschStoerIntegrator0.getStepHandlers();
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(collection0);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(20, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-1229.9616998908), expandableStatefulODE0.getTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-75.993), 256.2507829129308, 256.2507829129308, 1221.7749066765145);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(75.993, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(139.5466436210572, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(276, 0.46055978536605835, (-75.993));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(75.993, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(139.5466436210572, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1706.97104110169, (-951.41461801815), (-951.41461801815), 2195.39);
      assertEquals(1706.97104110169, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1274.3771816215983, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(951.41461801815, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors((-243.0), (-951.41461801815), (-951.41461801815), 1706.97104110169);
      assertEquals(1706.97104110169, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1274.3771816215983, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(951.41461801815, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-159.9175887);
      doubleArray0[1] = (-159.9175887);
      doubleArray0[2] = (-159.9175887);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.43812888860702515, (-6.680679913078676E139), doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(9, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 3.530656968851287E-8;
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1031), (-1031), (-1752.4336876693));
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 91);
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 91);
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1949), (-1078), 0.43812888860702515);
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setControlFactors((-6.680679913078676E139), 4.0E-15, (-1949), (-6.680679913078676E139));
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1744).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-4, (-1949.0), 1744, 1.0E15);
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(3488, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(3488, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.setOrderControl((-1078), (-865.52721267136), (-849.0533796008));
      assertArrayEquals(new double[] {(-159.9175887), (-159.9175887), (-159.9175887), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0.43812888860702515, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(5.410174549362005E69, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(6.680679913078676E139, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(9, doubleArray0.length);
      
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1752.4336876693));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3,488 != 9
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      double[] doubleArray0 = expandableStatefulODE0.getCompleteState();
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(doubleArray0);
      assertEquals(358, doubleArray0.length);
      
      expandableStatefulODE0.setTime((-2547.85841727989));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      Collection<StepHandler> collection0 = graggBulirschStoerIntegrator0.getStepHandlers();
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(collection0);
      
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 6.666544384808297E-279);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), (-1229.9616998908), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3.344806129021162E-131), (-1229.9616998908));
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2098.0);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 358);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(358.0, expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 6, 925.0);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-1229.9616998908), (-3.344806129021162E-131), (-1229.9616998908), 1444.93999657056);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (double) (-2146876275);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, (-1400.521445), doubleArray0, doubleArray0);
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
      assertEquals(0.0, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
      assertEquals(1400.521445, graggBulirschStoerIntegrator1.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator1.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(358.0, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator1);
      assertEquals(358, doubleArray0.length);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (-5378.257299128992));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.8415988645650441), (-3281.616492289), (-72.3), 1391.63342151);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(52.55287540989879, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3281.616492289, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors(69.0, 0.8, 0.9999, 2098.0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(52.55287540989879, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3281.616492289, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(0, (-1.0524451040704701E-7), (-590.0));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(52.55287540989879, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3281.616492289, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors(1121.01, (-307.8792), 1121.01, (-2308.386012));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(52.55287540989879, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(3281.616492289, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1706.971041102, 1706.971041102, 1706.971041102, 1706.971041102);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setOrderControl(276, (-2.9134931730784303E-8), (-2.9134931730784303E-8));
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1706.971041102, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = 286.6;
      double double1 = 0.65;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(286.6, 286.6, 286.6, 0.65);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(286.6, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      int int0 = 4;
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 4);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(286.6, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      assertNotNull(dummyStepHandler0);
      
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(286.6, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(286.6, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 4);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1682.746079), 18.639, 18.639, (-1868.2482909));
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      double double0 = graggBulirschStoerIntegrator0.filterStep((-1682.746079), false, false);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals((-18.639), double0, 0.01);
      
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl(7, (-1682.746079), (-4.391824838015402E-9));
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      Collection<EventHandler> collection0 = graggBulirschStoerIntegrator0.getEventHandlers();
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(collection0);
      
      Collection<EventHandler> collection1 = graggBulirschStoerIntegrator0.getEventHandlers();
      assertFalse(collection1.equals((Object)collection0));
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(collection1);
      assertNotSame(collection1, collection0);
      
      graggBulirschStoerIntegrator0.setControlFactors(7, 1834.80220365, 0.5, 7);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl(0, (-211.86), 7);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-4.391824838015402E-9), fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      assertNotNull(stepNormalizer0);
      
      double[] doubleArray0 = new double[0];
      stepNormalizer0.init((-1682.746079), doubleArray0, 0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 1592, 2930.901);
      assertEquals(1682.746079, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(177.10083050759812, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      assertEquals(18.639, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2279.4128856132, 0.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      assertEquals(0, doubleArray0.length);
      
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(3143.57542937279, fixedStepHandler0);
      assertNotNull(stepNormalizer0);
      
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1132, 0, 0.0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, doubleArray0.length);
      
      graggBulirschStoerIntegrator0.setOrderControl(0, (-571.1890862573), 0.0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2279.4128856132, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      int int0 = (-2146876275);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      expandableStatefulODE0.setTime((-2547.85841727989));
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      Collection<StepHandler> collection0 = graggBulirschStoerIntegrator0.getStepHandlers();
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(collection0);
      
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(358, firstOrderConverter0.getDimension());
      assertEquals((-2547.85841727989), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 2.107844991E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), 2.107844991E9, 2.107844991E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      int int1 = 6;
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3.344806129021162E-131), (-1229.9616998908));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      int int2 = (-1545);
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2098.0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1229.9616998908, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3820.9620108014);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 256.2507829129308, (-160.13439743173424), 256.2507829129308);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(256.2507829129308, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-160.13439743173424));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(258.93231682077834, 258.93231682077834, (-158.3739036915585), 258.93231682077834);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType1);
      assertNotNull(eventFilter0);
      
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      assertFalse(eventFilter1.equals((Object)eventFilter0));
      assertNotNull(eventFilter1);
      
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-158.3739036915585), (-158.3739036915585));
      assertEquals((-158.3739036915585), regulaFalsiSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(1.0E-15, regulaFalsiSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMax(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getMin(), 0.01);
      assertEquals(0.0, regulaFalsiSolver0.getStartValue(), 0.01);
      assertEquals((-158.3739036915585), regulaFalsiSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, regulaFalsiSolver0.getEvaluations());
      assertEquals(0, regulaFalsiSolver0.getMaxEvaluations());
      assertNotNull(regulaFalsiSolver0);
      
      int int0 = (-2780);
      BrentSolver brentSolver0 = new BrentSolver();
      assertEquals(0, brentSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, brentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, brentSolver0.getEvaluations());
      assertEquals(1.0E-15, brentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
      assertEquals(0.0, brentSolver0.getMax(), 0.01);
      assertEquals(1.0E-6, brentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getStartValue(), 0.01);
      assertNotNull(brentSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-158.3739036915585), (double) (-1073795508), (-2780), (UnivariateSolver) brentSolver0);
      assertFalse(eventFilter0.equals((Object)eventFilter1));
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, brentSolver0.getMaxEvaluations());
      assertEquals(1.0E-14, brentSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0, brentSolver0.getEvaluations());
      assertEquals(1.0E-15, brentSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
      assertEquals(0.0, brentSolver0.getMax(), 0.01);
      assertEquals(1.0E-6, brentSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, brentSolver0.getStartValue(), 0.01);
      assertSame(filterType1, filterType0);
      assertNotSame(eventFilter0, eventFilter1);
      
      graggBulirschStoerIntegrator0.setControlFactors(258.93231682077834, (-2882.816981), 1.0E-4, 258.93231682077834);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 4, 1379.1181503);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(258.93231682077834, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.3, 256.3, 256.3, 256.3);
      assertEquals(256.3, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(256.3, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(256.3, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 11.313088903735578);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(811.3206235178, (-0.8415988645650441), (-307.8792), (-0.8415988645650441));
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(26.130566690196062, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 4);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(26.130566690196062, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setControlFactors(1.0, 2098.0, 1.0, 69.0);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(26.130566690196062, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl((-1216), 69.0, (-0.8415988645650441));
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(26.130566690196062, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      
      graggBulirschStoerIntegrator0.setControlFactors((-0.8415988645650441), (-1216), 1.0, 1.0);
      assertEquals(811.3206235178, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.8415988645650441, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(26.130566690196062, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-159.9175887), (-159.9175887), (-159.9175887), (-159.9175887));
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, (-846.722));
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 7);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1078), (-1078), (-159.9175887));
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setControlFactors((-159.9175887), 10.0, (-159.9175887), 0.0);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(7, 0.0, 0.0);
      assertEquals(7.0, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, illinoisSolver0.getEvaluations());
      assertEquals(0.0, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(0, illinoisSolver0.getMaxEvaluations());
      assertNotNull(illinoisSolver0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-159.9175887), 0.0, 7, (UnivariateSolver) illinoisSolver0);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(7.0, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, illinoisSolver0.getEvaluations());
      assertEquals(0.0, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(0, illinoisSolver0.getMaxEvaluations());
      
      graggBulirschStoerIntegrator0.setOrderControl(7, (-1078), (-141.17));
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setOrderControl(2990, 0.22626367211341858, (-1040.737110237346));
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(159.9175887, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.010684899985790253, 0.010684899985790253);
      graggBulirschStoerIntegrator0.setOrderControl(0, 3282.0, 0.010684899985790253);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 383);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 383);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-1185));
      graggBulirschStoerIntegrator0.setControlFactors(1.2897084285532175E95, 0.010684899985790253, (-1228.77427926703), 2038.46602);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1618.4819109565576));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1111.663237590312;
      doubleArray0[1] = 1111.663237590312;
      doubleArray0[2] = 1111.663237590312;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1111.663237590312, 1111.663237590312, 1111.663237590312, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 3693, (-2288), 1111.663237590312);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3693);
      graggBulirschStoerIntegrator0.setOrderControl((-197), 1.0398354530334473, 1111.663237590312);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver(0.0, 0.5, (-2288));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1111.663237590312, 1744.2668496759056, 3693, (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.5, (double) (-197), 0, (UnivariateSolver) brentSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2279.4128856132, 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(3143.57542937279, fixedStepHandler0);
      graggBulirschStoerIntegrator0.setControlFactors(2279.4128856132, (-2.23668185816307E-7), 757.82, (-1.0));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 5443);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-986.92768847), 2279.4128856132, (-571.1890862573), (-71.166));
      graggBulirschStoerIntegrator2.setOrderControl(115, 999.9, 999.9);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(2279.4128856132, 37.13369327614399, 1978.47542447, 5443);
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter0, (double) 5443, (-71.166), 115, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 3.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-2754.8095009163585);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2754.8095009163585), (-2754.8095009163585), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      SecantSolver secantSolver0 = new SecantSolver(4.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 0.0, 396, (UnivariateSolver) secantSolver0);
      assertEquals(0.0, secantSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-2321.97);
      doubleArray0[1] = (-2321.97);
      doubleArray0[2] = (-2321.97);
      doubleArray0[3] = (-2321.97);
      doubleArray0[4] = (-2321.97);
      doubleArray0[5] = (-2321.97);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2321.97), (-2321.97), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.mainSetDimension = (-419);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      int int0 = 3;
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver((-2321.97), (-2321.97), 3);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1398.8719967, 0.0, 3, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      int int1 = 6;
      graggBulirschStoerIntegrator0.setOrderControl(6, 6, (-2321.97));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 2662.8088709442, 2662.8088709442, 6, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      graggBulirschStoerIntegrator0.setControlFactors(6, 3, 0.763118563437, (-2321.97));
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver1 = new BracketingNthOrderBrentSolver(0.0, 6, 3);
      // Undeclared exception!
      try { 
        bracketingNthOrderBrentSolver1.solve(1, (UnivariateFunction) null, (-2321.97));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 256.2507829129308, (-160.1344), 256.2507829129308);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 201, 201, 201);
      graggBulirschStoerIntegrator0.setOrderControl(1, (-160.1344), 1);
      graggBulirschStoerIntegrator0.setOrderControl(369, 1, 1475);
      graggBulirschStoerIntegrator0.setControlFactors((-4168.78757), 369, 1, 256.2507829129308);
      graggBulirschStoerIntegrator0.setOrderControl((-1), 0.9999, 1987.0704);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.1881638467311859;
      doubleArray0[1] = (-1221.2);
      doubleArray0[2] = 0.1881638467311859;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1221.2), 0.1881638467311859, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setControlFactors(0.1881638467311859, 4553.94456158, 0.1881638467311859, 0.1881638467311859);
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 115);
      graggBulirschStoerIntegrator0.setOrderControl(0, 2.0, 0.1881638467311859);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(5.4445606140746644E-8, fixedStepHandler0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.92768847), 0.0, 0.0, (-662.911982688));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.07250232994556427);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.5, 0.0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-2765.05), (-4201.24175665543), (-696), (UnivariateSolver) null);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 0.1332872211933136, 0.1332872211933136, 2455.5);
      graggBulirschStoerIntegrator0.setOrderControl(276, (-97.7), 0.1332872211933136);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.25, 256.25, 256.25, 256.25);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 298);
      graggBulirschStoerIntegrator0.setOrderControl(298, 11.313088903735578, 298);
      assertEquals(256.25, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.92768847), (-986.92768847), (-986.92768847), (-986.92768847));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-986.92768847));
      graggBulirschStoerIntegrator0.getStepHandlers();
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 6);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1609.6761911368963, 335.73496766555, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 672, (-2937), (-2937));
      graggBulirschStoerIntegrator0.setOrderControl(1558, 258.93231682077834, 0.6080870628356934);
      graggBulirschStoerIntegrator0.setOrderControl(1, 2.864122672853628E-291, 0.6080870628356934);
      graggBulirschStoerIntegrator0.setControlFactors(0.9999, 365, 1.0859222881334994E-7, (-1926.30401589267));
      assertEquals(335.73496766555, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.1881638467311859;
      doubleArray0[1] = (-1221.2);
      doubleArray0[2] = 0.1881638467311859;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1221.2), 0.1881638467311859, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setControlFactors(0.1881638467311859, 4553.94456158, 0.1881638467311859, (-1.5685449228299222E-7));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 115);
      graggBulirschStoerIntegrator0.setOrderControl(0, 2.0, 0.1881638467311859);
      assertEquals(0.1881638467311859, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-2321.97);
      doubleArray0[1] = (-2321.97);
      doubleArray0[2] = (-2321.97);
      doubleArray0[3] = (-2321.97);
      doubleArray0[4] = (-2321.97);
      doubleArray0[5] = (-2321.97);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2321.97), (-2321.97), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.mainSetDimension = (-419);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.setStepSizeControl((-2321.97), (-44.2275164), 1.7270287031459572E-134, (-737.0));
      graggBulirschStoerIntegrator0.setOrderControl((-419), 1.7270287031459572E-134, (-737.0));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-419), 0.0, (-1.730424167425052E-8), 85.1326005);
      graggBulirschStoerIntegrator1.setOrderControl(400, (-419), 0.0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      RiddersSolver riddersSolver0 = new RiddersSolver((-1.730424167425052E-8));
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter1, 0.0, (double) (-419), (-822), (UnivariateSolver) riddersSolver0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator1.getName());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.167390528799477E-9, 2.0, 2.0, 1.0E15);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E15, 1.0E15, 1.0E15, 5033.80002206364);
      assertEquals(5.167390528799477E-9, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2279.4128856132, 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(3143.57542937279, fixedStepHandler0);
      graggBulirschStoerIntegrator0.setControlFactors(2279.4128856132, (-2.23668185816307E-7), 757.82, (-1.0));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer1 = new StepNormalizer(0.9, fixedStepHandler1, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator1.addStepHandler(stepNormalizer1);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 82467361, (-2178), 0.9);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(0, 0.0, 0.0, 0);
      graggBulirschStoerIntegrator1.setOrderControl((-2178), 0.6902132034301758, (-2.23668185816307E-7));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator1.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 397.38;
      doubleArray0[1] = 2084.7;
      doubleArray0[2] = 397.38;
      doubleArray0[3] = 397.38;
      doubleArray0[4] = 397.38;
      doubleArray0[5] = 397.38;
      doubleArray0[6] = 397.38;
      doubleArray0[7] = 397.38;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(397.38, 397.38, doubleArray0, doubleArray0);
      int int0 = 1224;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1224, 2322, 3.0374839443564585E-159);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1224, 1224, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1224, 1224, 127.8480845830204);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2((-1163.687043903), (-1163.687043903));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 2084.7, 2084.7, (-2032), (UnivariateSolver) mullerSolver2_0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, (-1), 3313.91087656);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2848.33091455028);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 8
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      double double0 = 0.0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = (-2547.85841727989);
      expandableStatefulODE0.setTime(0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1459.0316768, 10.0, 2279.4128856132, 1459.0316768);
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, (-3777.82011717069));
      int int0 = 29;
      graggBulirschStoerIntegrator0.setOrderControl(29, 1.0E-4, 119.9628819758);
      graggBulirschStoerIntegrator0.setControlFactors(1459.0316768, 1459.0316768, 0.0, (-1.1474026049124666E-17));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 22, 22, 848.287923422723);
      graggBulirschStoerIntegrator0.setOrderControl(29, 29, 2.175685405731201);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2547.85841727989));
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(257.1217977777759, 257.1217977777759, (-160.13439743173424), 257.1217977777759);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1432, 1432, 0.5110208988189697);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 265, 310, 2751.4298330339234);
      graggBulirschStoerIntegrator0.setOrderControl(265, 737.522024939, 1432);
      graggBulirschStoerIntegrator0.setControlFactors((-1317.89671738909), 0.9999, (-93.26630652293), 999.9);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1111.663237590312, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1.0001, 1.3012807963586057E-8, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 1111.663237590312, 0.0, 313.7812701535095);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3693, 3693, 1.0E-4);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-2119190055), 16, (-7.8));
      graggBulirschStoerIntegrator0.setOrderControl(7, 16, 1.0E-4);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(339.6403, 339.6403, 6.0, 339.6403);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4198, (-1487), (-159.9175887));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 488);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 7);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 488, (-1487), 488);
      graggBulirschStoerIntegrator0.setControlFactors((-1078), 0.0, 1309.3797590566826, (-1064.5858068));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(3615.19454, 820.0, 4198, 820.0);
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter0, (-1770.5866483), 1388.0, (-1), (UnivariateSolver) null);
      assertFalse(graggBulirschStoerIntegrator1.equals((Object)graggBulirschStoerIntegrator0));
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      double double0 = (-1229.9616998908);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      int int0 = (-2146876275);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = (-2547.85841727989);
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      expandableStatefulODE0.setTime((-2547.85841727989));
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 2.107844991E9);
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), 2.107844991E9, 2.107844991E9);
      int int1 = 6;
      graggBulirschStoerIntegrator0.scalRelativeTolerance = (-1229.9616998908);
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3.344806129021162E-131), (-1229.9616998908));
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2098.0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3820.9620108014);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(256.2507829129308, 256.2507829129308, (-160.13439743173424), 256.2507829129308);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1465, 1465, 1);
      graggBulirschStoerIntegrator0.setOrderControl(1, (-160.13439743173424), 1);
      graggBulirschStoerIntegrator0.setOrderControl(339, 1, 557.81492);
      graggBulirschStoerIntegrator0.setControlFactors((-4168.78757012116), 339, 0.05694137513637543, 256.2507829129308);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-160.13439743173424));
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.92768847), (-986.92768847), (-986.92768847), (-660.8621729950394));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-660.8621729950394));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizer stepNormalizer0 = new StepNormalizer(908.6842542869193, fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setOrderControl(6, (-1229.9616998908), (-1229.9616998908));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      double double0 = (-1314.0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 4737.5503296;
      doubleArray0[1] = 4737.5503296;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1314.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1314.0), 4737.5503296, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(1925.17, 4737.5503296, 4737.5503296, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 4
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-986.4495873184975), (-986.4495873184975), (-986.4495873184975), (-660.8621729950394));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 6);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-95.471249), (-95.471249), 0.9, 1.0);
      graggBulirschStoerIntegrator0.setControlFactors((-95.471249), 21.675460269036, 0.02, (-931.5789));
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-95.471249));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.010684899985790253, 0.010684899985790253);
      graggBulirschStoerIntegrator0.setOrderControl(0, 3282.0, 0.010684899985790253);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 383);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 555);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-1185));
      graggBulirschStoerIntegrator0.setControlFactors(1.2897084285532175E95, 0.010684899985790253, (-1228.77427926703), 2038.46602);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1618.4819109565576));
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-159.9175887);
      doubleArray0[1] = (-159.9175887);
      doubleArray0[2] = (-159.9175887);
      doubleArray0[3] = (-159.9175887);
      doubleArray0[4] = (-159.9175887);
      doubleArray0[5] = (-159.9175887);
      doubleArray0[6] = (-159.9175887);
      doubleArray0[7] = (-159.9175887);
      doubleArray0[8] = (-159.9175887);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-159.9175887), (-159.9175887), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 7, (-846.722));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 7);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1078), (-1078), (-159.9175887));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 10.0, (-159.9175887), 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-159.9175887), 0.0, 7, (UnivariateSolver) illinoisSolver0);
      assertEquals(0, illinoisSolver0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      double double0 = (-986.92768847);
      double double1 = (-3777.1);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = null;
      try {
        graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3777.1), (-986.92768847), (double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1229.9616998908), (-1229.9616998908), (-1229.9616998908), (-1229.9616998908));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(179).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.mainSetDimension = (-2146876275);
      expandableStatefulODE0.setTime((-2547.85841727989));
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 6.666544384808297E-279);
      graggBulirschStoerIntegrator0.setOrderControl((-2146876275), 0.0, 2.107844991E9);
      graggBulirschStoerIntegrator0.setControlFactors((-3.344806129021162E-131), (-3.344806129021162E-131), 2.107844991E9, 2.107844991E9);
      graggBulirschStoerIntegrator0.setOrderControl(6, (-3.344806129021162E-131), (-1229.9616998908));
      graggBulirschStoerIntegrator0.setOrderControl((-1545), (-5378.257299128992), 2098.0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-5378.257299128992));
      assertEquals(29, graggBulirschStoerIntegrator0.getEvaluations());
  }
}
