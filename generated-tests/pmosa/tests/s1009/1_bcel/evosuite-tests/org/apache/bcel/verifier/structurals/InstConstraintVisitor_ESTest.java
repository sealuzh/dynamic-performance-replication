/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 14:16:23 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInput;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInterfaceMethodref;
import org.apache.bcel.classfile.ConstantInvokeDynamic;
import org.apache.bcel.classfile.ConstantLong;
import org.apache.bcel.classfile.ConstantMethodref;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantUtf8;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.InvokeInstruction;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWITCH;
import org.apache.bcel.generic.StackInstruction;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      POP pOP0 = (POP)InstructionConstants.POP;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(pOP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitILOAD((ILOAD) null);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      assertEquals((short)1, aCONST_NULL0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DRETURN dRETURN0 = new DRETURN();
      PUTFIELD pUTFIELD0 = new PUTFIELD(2416);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(pUTFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte) (-31);
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte)126;
      byteArray0[8] = (byte) (-33);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(155);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      assertEquals((short)54, iSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Constant[] constantArray0 = new Constant[0];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLALOAD((LALOAD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DMUL dMUL0 = new DMUL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(0);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      assertEquals("lstore_0", lSTORE0.getName());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GETSTATIC gETSTATIC0 = new GETSTATIC(0);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals(3, gETSTATIC0.getLength());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitJSR_W((JSR_W) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)124;
      byteArray0[4] = (byte) (-124);
      byteArray0[5] = (byte) (-41);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InstructionList instructionList0 = new InstructionList();
      // Undeclared exception!
      try { 
        instructionList0.insert((Instruction) null, (CompoundInstruction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.InstructionList", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LDC_W lDC_W0 = new LDC_W(0);
      byte[] byteArray0 = new byte[2];
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 5;
      DLOAD dLOAD0 = new DLOAD(5);
      dLOAD0.setIndex(2416);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      GETSTATIC gETSTATIC0 = new GETSTATIC(5);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFieldInstruction(gETSTATIC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(2, 189);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[9];
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(50);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Constant[] constantArray0 = new Constant[0];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(112);
      instConstraintVisitor1.visitALOAD(aLOAD0);
      assertEquals(2, aLOAD0.getLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ICONST iCONST0 = new ICONST(3);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte) (-17);
      byteArray0[6] = (byte)74;
      byteArray0[7] = (byte)95;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      instConstraintVisitor0.visitICONST(iCONST0);
      assertEquals((short)6, iCONST0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte) (-67));
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      // Undeclared exception!
      try { 
        constantPool0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LCONST lCONST0 = new LCONST(0L);
      lCONST0.copy();
      lCONST0.toString(false);
      instConstraintVisitor0.visitLCONST(lCONST0);
      DALOAD dALOAD0 = new DALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDALOAD(dALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      JSR jSR0 = new JSR((InstructionHandle) null);
      jSR0.setTarget((InstructionHandle) null);
      instConstraintVisitor0.visitJSR(jSR0);
      assertEquals(0, jSR0.getIndex());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      Constant[] constantArray0 = new Constant[8];
      LLOAD lLOAD0 = new LLOAD(1119);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      ConstantInvokeDynamic constantInvokeDynamic0 = null;
      try {
        constantInvokeDynamic0 = new ConstantInvokeDynamic((ConstantInvokeDynamic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.ConstantInvokeDynamic", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      IF_ACMPNE iF_ACMPNE0 = new IF_ACMPNE((InstructionHandle) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitGOTO((GOTO) null);
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ((InstructionHandle) null);
      iF_ACMPEQ0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ(iF_ACMPEQ0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DCONST dCONST0 = new DCONST(0.0);
      instConstraintVisitor0.visitDCONST(dCONST0);
      assertEquals(1, dCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int[] intArray0 = new int[9];
      intArray0[0] = 2416;
      intArray0[1] = 3694;
      intArray0[2] = (-551);
      intArray0[3] = 542;
      intArray0[4] = 923;
      intArray0[5] = (-591);
      intArray0[6] = 1119;
      intArray0[7] = 3;
      intArray0[8] = (-2322);
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[9];
      IASTORE iASTORE0 = (IASTORE)InstructionConstants.IASTORE;
      InstructionList instructionList0 = new InstructionList(iASTORE0);
      InstructionList instructionList1 = instructionList0.copy();
      InstructionHandle instructionHandle0 = instructionList1.insert((Instruction) iASTORE0);
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0, 3526);
      InstructionHandle instructionHandle1 = instructionList1.append((CompoundInstruction) sWITCH0);
      instructionHandleArray0[0] = instructionHandle1;
      InstructionList instructionList2 = new InstructionList(sWITCH0);
      InstructionHandle instructionHandle2 = instructionList1.append(instructionList2);
      instructionHandleArray0[1] = instructionHandle2;
      InstructionHandle instructionHandle3 = instructionList0.insert((CompoundInstruction) sWITCH0);
      instructionHandleArray0[2] = instructionHandle3;
      InstructionHandle instructionHandle4 = instructionList0.append((CompoundInstruction) sWITCH0);
      instructionHandleArray0[3] = instructionHandle4;
      SIPUSH sIPUSH0 = new SIPUSH((short)2353);
      InstructionHandle instructionHandle5 = instructionList1.append((Instruction) sIPUSH0);
      instructionHandleArray0[4] = instructionHandle5;
      InstructionHandle instructionHandle6 = instructionList1.insert((Instruction) iASTORE0, instructionList0);
      instructionHandleArray0[5] = instructionHandle6;
      InstructionHandle instructionHandle7 = instructionList2.append((CompoundInstruction) sWITCH0);
      instructionHandleArray0[6] = instructionHandle7;
      InstructionHandle instructionHandle8 = instructionList2.append(instructionHandle0, (CompoundInstruction) sWITCH0);
      instructionHandleArray0[7] = instructionHandle8;
      InstructionHandle instructionHandle9 = instructionList2.insert(instructionList1);
      instructionHandleArray0[8] = instructionHandle9;
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[0]);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH(tABLESWITCH0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-?L<");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SIPUSH sIPUSH0 = new SIPUSH((short) (-1294));
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-10);
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte)58;
      byte byte1 = (byte)53;
      byteArray0[2] = (byte)53;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte)95;
      InstructionList instructionList0 = null;
      try {
        instructionList0 = new InstructionList(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal opcode detected: 246
         //
         verifyException("org.apache.bcel.generic.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(2123);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEDYNAMIC0);
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND((IAND) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      InstructionList instructionList0 = new InstructionList();
      instructionList0.getEnd();
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      assertEquals("goto_w", gOTO_W0.getName());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FLOAD fLOAD0 = new FLOAD(75);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      assertEquals(75, fLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      assertEquals(1, nOP0.getLength());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(772);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals("dstore", dSTORE0.getName());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      IINC iINC0 = new IINC(243, 243);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(0.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      assertEquals(1, fCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(225);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(225, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSHR lSHR0 = new LSHR();
      Frame frame0 = new Frame(74, 74);
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(74, 74);
      iINC0.setIndex(74);
      int int0 = 0;
      IINC iINC1 = new IINC(0, 526);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      LAND lAND0 = new LAND();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setMethodGen((MethodGen) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDALOAD((DALOAD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(3);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(208, 208);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(148, 148);
      iINC0.setIndex(2154);
      IINC iINC1 = new IINC(0, 0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("&?}6&YhVYeQl5oZ`s:");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type '&?}6&YhVYeQl5oZ`s:'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      FileSystemHandling.shouldAllThrowIOExceptions();
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(3069, 3069);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(1397, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(3);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      UninitializedObjectType uninitializedObjectType1 = Frame.getThis();
      operandStack0.initializeObject(uninitializedObjectType1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(148, 148);
      instConstraintVisitor0.visitARETURN((ARETURN) null);
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 but stack top is '");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type 'Stack top size should be 1 but stack top is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(3, 3);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(148, 148);
      I2L i2L0 = new I2L();
      int int0 = 7;
      ASTORE aSTORE0 = new ASTORE(1439);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(aSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ASTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(3);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      int int0 = 208;
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(471, 3);
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(208, 3);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR((ISHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(3);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      UninitializedObjectType uninitializedObjectType1 = Frame.getThis();
      operandStack0.initializeObject(uninitializedObjectType1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(148, 148);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      ISHR iSHR0 = new ISHR();
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'ldc_w' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("X");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "X");
      int int0 = 208;
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(208, 208);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      IINC iINC0 = new IINC(148, 208);
      int int1 = 212;
      int int2 = 1434;
      DSTORE dSTORE0 = new DSTORE(1434);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLocalVariableInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 bt sacx top s{'");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      I2D i2D0 = new I2D();
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackConsumer(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: Cannot consume 4 stack slots: only 1 slot(s) left on stack!
         // Stack:
         // Slots used: 1 MaxStack: 208.
         // Stack top size should be 1 bt sacx top s{' (Size: 1)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      ObjectType objectType0 = new ObjectType("");
      Frame frame0 = new Frame(3, 3);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(148, 148);
      LALOAD lALOAD0 = new LALOAD();
      ILOAD iLOAD0 = new ILOAD(148);
      ILOAD iLOAD1 = new ILOAD(1);
      // Undeclared exception!
      try { 
        iLOAD1.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ILOAD constraint violated: Read-Access on local variable 1 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN((FRETURN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(208, 3);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND((LAND) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame.getThis();
      localVariables0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      F2I f2I0 = new F2I();
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      D2F d2F0 = new D2F();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      UninitializedObjectType uninitializedObjectType1 = Frame.getThis();
      operandStack0.initializeObject(uninitializedObjectType1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ISHL iSHL0 = new ISHL();
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("org.apache.bcel.util.BCELFactory");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      instructionList0.getEnd();
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE(iFLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLE constraint violated: The value at the stack top is not of type 'int', but of type 'org.apache.bcel.util.BCELFactory'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      POP2 pOP2_0 = new POP2();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      Frame.getThis();
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      ISHR iSHR0 = new ISHR();
      DUP2 dUP2_0 = new DUP2();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, (-1));
      instConstraintVisitor0.visitARETURN((ARETURN) null);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISHR iSHR0 = new ISHR();
      LDC_W lDC_W0 = new LDC_W(208);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC(lDC_W0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDC_W constraint violated: Referenced constant should be a CONSTANT_Integer, a CONSTANT_Float, a CONSTANT_String or a CONSTANT_Class, but is 'null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, (-1));
      IFNONNULL iFNONNULL0 = new IFNONNULL((InstructionHandle) null);
      LAND lAND0 = null;
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, (-1));
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP(dUP0);
      IADD iADD0 = new IADD();
      IADD iADD1 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LSUB lSUB0 = new LSUB();
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR((LOR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 but stack top is '");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      F2I f2I0 = new F2I();
      ASTORE aSTORE0 = new ASTORE(2669);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      ICONST iCONST0 = null;
      try {
        iCONST0 = new ICONST((-1114));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ICONST can be used only for value between -1 and 5: -1114
         //
         verifyException("org.apache.bcel.generic.ICONST", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 but stack top is '");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      F2I f2I0 = new F2I();
      ASTORE aSTORE0 = new ASTORE(2669);
      instConstraintVisitor1.visitStoreInstruction(aSTORE0);
      ICONST iCONST0 = null;
      try {
        iCONST0 = new ICONST((-1114));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ICONST can be used only for value between -1 and 5: -1114
         //
         verifyException("org.apache.bcel.generic.ICONST", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(3069);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type 'ldc_w'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(4);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(4, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      ASTORE aSTORE0 = new ASTORE(4);
      aSTORE0.toString(false);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR((IXOR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      FNEG fNEG0 = new FNEG();
      ISHL iSHL0 = new ISHL();
      IXOR iXOR0 = new IXOR();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      assertEquals((short)194, mONITORENTER0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, 50);
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 74;
      intArray0[2] = 50;
      intArray0[3] = 3;
      InstructionList instructionList0 = new InstructionList(iINC0);
      DCMPL dCMPL0 = (DCMPL)InstructionConstants.DCMPL;
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      DSUB dSUB0 = (DSUB)InstructionConstants.DSUB;
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      assertEquals("monitorexit", mONITOREXIT0.getName());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Class<BIPUSH> class0 = BIPUSH.class;
      Type.getType(class0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(208, 3);
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(3, 90);
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      MONITOREXIT mONITOREXIT1 = new MONITOREXIT();
      assertTrue(mONITOREXIT1.equals((Object)mONITOREXIT0));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, (-1));
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      assertEquals("monitorexit", mONITOREXIT0.getName());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LRETURN lRETURN0 = new LRETURN();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance(",G");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(3, 3);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type ',G'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type 'ldc_w'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2L constraint violated: The value at the stack top is not of type 'int', but of type 'ldc_w'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LSUB lSUB0 = new LSUB();
      CHECKCAST cHECKCAST0 = new CHECKCAST(97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, (-1));
      IFNONNULL iFNONNULL0 = new IFNONNULL((InstructionHandle) null);
      IMUL iMUL0 = new IMUL();
      LRETURN lRETURN0 = new LRETURN();
      LUSHR lUSHR0 = new LUSHR();
      CHECKCAST cHECKCAST0 = new CHECKCAST(3);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(3, 3);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(208, 3);
      InstructionList instructionList0 = new InstructionList();
      instructionList0.getEnd();
      IFNONNULL iFNONNULL0 = new IFNONNULL((InstructionHandle) null);
      instConstraintVisitor0.visitIFNONNULL(iFNONNULL0);
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(148, (short)46);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '46' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type 'ldc_w'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables1 = new LocalVariables(1531);
      OperandStack operandStack1 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FNEG fNEG0 = new FNEG();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ((IF_ICMPEQ) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      frame1.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables1 = new LocalVariables(3);
      Frame frame2 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      IFNULL iFNULL0 = new IFNULL((InstructionHandle) null);
      instConstraintVisitor0.visitIFNULL(iFNULL0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV((FDIV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Cannot consume ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LMUL lMUL0 = new LMUL();
      lMUL0.consumeStack((ConstantPoolGen) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type 'Cannot consume '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 3069;
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ATHROW constraint violated: The 'objectref' is not of class Throwable or of a subclass of Throwable, but of 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 3069;
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ATHROW constraint violated: The 'objectref' is not of class Throwable or of a subclass of Throwable, but of 'java.lang.Class'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, 50);
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 74;
      intArray0[2] = 50;
      intArray0[3] = 3;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[4];
      InstructionList instructionList0 = new InstructionList(iINC0);
      DCMPL dCMPL0 = (DCMPL)InstructionConstants.DCMPL;
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) iINC0, (Instruction) dCMPL0);
      instructionHandleArray0[0] = instructionHandle0;
      InstructionHandle instructionHandle1 = instructionList0.getEnd();
      instructionHandleArray0[1] = instructionHandle1;
      instructionHandleArray0[2] = null;
      instructionHandleArray0[3] = null;
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH(lOOKUPSWITCH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOOKUPSWITCH constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("&?}6&YhVYeQl5oZ`s:");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      D2F d2F0 = new D2F();
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type '&?}6&YhVYeQl5oZ`s:'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, 50);
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 74;
      intArray0[2] = 50;
      intArray0[3] = 3;
      InstructionList instructionList0 = new InstructionList(iINC0);
      DCMPL dCMPL0 = (DCMPL)InstructionConstants.DCMPL;
      instructionList0.append((Instruction) iINC0, (Instruction) dCMPL0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      IFLT iFLT0 = new IFLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT(iFLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLT constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D((F2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 225;
      LocalVariables localVariables0 = new LocalVariables(225);
      String string0 = "";
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(225, objectType0);
      operandStack0.pop((-1892));
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-121);
      byteArray0[4] = (byte) (-121);
      byteArray0[5] = (byte) (-121);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NEWARRAY nEWARRAY0 = new NEWARRAY(objectType0.VOID);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 but stack top is '");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      ConstantFloat constantFloat0 = new ConstantFloat(208);
      frame0.toString();
      frame0.equals(constantFloat0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      FLOAD fLOAD0 = new FLOAD(5);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN((DRETURN) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IINC iINC0 = new IINC(74, 50);
      int[] intArray0 = new int[4];
      intArray0[0] = 3;
      intArray0[1] = 74;
      intArray0[2] = 50;
      intArray0[3] = 3;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[4];
      InstructionList instructionList0 = new InstructionList(iINC0);
      DCMPL dCMPL0 = (DCMPL)InstructionConstants.DCMPL;
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) iINC0, (Instruction) dCMPL0);
      instructionHandleArray0[0] = instructionHandle0;
      InstructionHandle instructionHandle1 = instructionList0.getEnd();
      instructionHandleArray0[1] = instructionHandle1;
      instructionHandleArray0[2] = null;
      instructionHandleArray0[3] = null;
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      ISHR iSHR0 = new ISHR();
      DUP2 dUP2_0 = new DUP2();
      FSTORE fSTORE0 = new FSTORE(1);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Stack top size should be 1 but stack top is '");
      OperandStack operandStack0 = new OperandStack(208, objectType0);
      LocalVariables localVariables0 = new LocalVariables(208);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      I2D i2D0 = new I2D();
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type 'Stack top size should be 1 but stack top is ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      D2F d2F0 = new D2F();
      IADD iADD0 = new IADD();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = new ObjectType("ldc_w");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = null;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ((IF_ACMPEQ) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(3069, 3069);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      LocalVariables localVariables0 = new LocalVariables(3069);
      OperandStack operandStack0 = new OperandStack(3069, uninitializedObjectType0.CLASS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT((IFGT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
