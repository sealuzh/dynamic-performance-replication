/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 09:05:26 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.CharArrayReader;
import java.io.Reader;
import java.io.StringReader;
import java.util.Calendar;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey ?!x");
      jSONReaderScanner0.lexError("ey ?!x", (Object[]) null);
      jSONReaderScanner0.subString(90, 90);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = 'a';
      charArray0[2] = 'y';
      int int0 = 734;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 734, 734);
      jSONReaderScanner0.indexOf('w', 734);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, 1545);
      char char0 = jSONReaderScanner0.charAt(1545);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W");
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u .Yv_");
      jSONReaderScanner0.charAt(895);
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.close();
      int int0 = jSONReaderScanner0.indexOf('^', 16383);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u .Yv_", (-1476));
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.bytesValue();
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo((-2267), (-2267), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey ?!x");
      jSONReaderScanner0.lexError("ey ?!x", (Object[]) null);
      jSONReaderScanner0.scanBoolean('H');
      jSONReaderScanner0.subString(90, 90);
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey ?!x");
      jSONReaderScanner0.lexError("ey ?!x", (Object[]) null);
      jSONReaderScanner0.scanBoolean('H');
      jSONReaderScanner0.close();
      assertEquals('e', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = null;
      try {
        jSONReaderScanner0 = new JSONReaderScanner((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u .Yv_", (-1476));
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(775, (-1476));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1476
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      char char0 = 'c';
      charArray0[1] = 'c';
      charArray0[2] = 'O';
      charArray0[3] = 'd';
      charArray0[4] = '%';
      charArray0[5] = '9';
      int int0 = 0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3441, 0);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.arrayCopy(76, charArray0, 0, 0);
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(0, charArray0, 2094, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W");
      char[] charArray0 = new char[1];
      charArray0[0] = '|';
      jSONReaderScanner0.scanFieldString(charArray0);
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertEquals((-2), jSONReaderScanner0.matchStat);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero");
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = '4';
      charArray0[2] = 'j';
      charArray0[3] = '[';
      charArray0[4] = '|';
      charArray0[5] = 'Q';
      charArray0[6] = 'X';
      charArray0[7] = 'o';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.charAt(16384);
      jSONReaderScanner0.charAt(4837);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("?", 2141);
      String string0 = jSONReaderScanner0.subString(2141, 23);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
      
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertFalse(boolean0);
      
      jSONReaderScanner0.stringVal();
      assertEquals('?', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 55);
      char[] charArray0 = new char[0];
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertTrue(boolean0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("K%Mp>:RauH%*w");
      jSONReaderScanner0.scanIdent();
      char char0 = jSONReaderScanner0.charAt(895);
      assertEquals('%', jSONReaderScanner0.getCurrent());
      assertTrue(jSONReaderScanner0.isEOF());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u .Yv_", (-1476));
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.bytesValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-1476), (-1476));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1476
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey ?!x");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.bytesValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(182, 16383);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(>Qib]M");
      char[] charArray0 = new char[2];
      charArray0[0] = ']';
      charArray0[1] = 'B';
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.sub_chars(1448, 1448);
      Feature feature0 = Feature.UseBigDecimal;
      boolean boolean0 = true;
      int int0 = 37;
      jSONReaderScanner0.matchStat = 37;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero");
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[8];
      charArray0[0] = 'n';
      charArray0[1] = '4';
      charArray0[2] = 'j';
      jSONReaderScanner0.scanNumber();
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" stat, \"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("xm41RBG\"i|T{#W");
      jSONReaderScanner0.sp = 532;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey ?!x");
      char[] charArray0 = new char[3];
      charArray0[0] = '[';
      charArray0[1] = 'j';
      charArray0[2] = '|';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 90, 40);
      jSONReaderScanner1.scanFieldString(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.charAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W", 482);
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = '-';
      charArray0[2] = 'H';
      charArray0[3] = '{';
      JSON.DEFAULT_PARSER_FEATURE = (-3703);
      charArray0[4] = '{';
      charArray0[5] = '#';
      jSONReaderScanner0.putChar('F');
      charArray0[6] = '1';
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-3703), "W");
      jSONReaderScanner0.timeZone = (TimeZone) simpleTimeZone0;
      jSONReaderScanner0.scanFieldDouble(charArray0);
      MockDate mockDate0 = new MockDate();
      simpleTimeZone0.inDaylightTime(mockDate0);
      jSONReaderScanner0.charAt(482);
      jSONReaderScanner0.subString(2080, 0);
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W");
      assertEquals('W', jSONReaderScanner0.getCurrent());
      
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.bytesValue();
      assertTrue(jSONReaderScanner0.isEOF());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[9];
      charArray0[0] = '5';
      charArray0[1] = '^';
      charArray0[2] = '#';
      charArray0[3] = ',';
      charArray0[4] = 'W';
      charArray0[5] = 'B';
      charArray0[6] = 'J';
      charArray0[7] = '`';
      charArray0[8] = '2';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 4837, (-678));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.time.ZoneOffset");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(45, 45, 0, 649, 5, 0);
      jSONReaderScanner0.calendar = (Calendar) mockGregorianCalendar0;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol((-3091), (-3091), (-3091), (SymbolTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("?", 2141);
      char[] charArray0 = new char[7];
      charArray0[0] = 's';
      charArray0[1] = '-';
      charArray0[2] = 's';
      int int0 = 68;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 68, 1916);
      jSONReaderScanner1.resetStringPosition();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 's';
      charArray0[1] = 'F';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("B", 2135);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W");
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[10];
      charArray0[0] = 'n';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 2433, 7);
      jSONReaderScanner1.bp = 895;
      // Undeclared exception!
      try { 
        jSONReaderScanner1.charAt(895);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      charArray0[1] = '<';
      charArray0[2] = 'l';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)76;
      byteArray0[4] = (byte)81;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[3] = '\'';
      charArray0[4] = '=';
      charArray0[5] = '4';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 70);
      jSONReaderScanner0.eofPos = 70;
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      assertEquals('<', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", pos ");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.charAt(768);
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertEquals(18, jSONReaderScanner0.token());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("XLtL9cS .gRid%");
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[5];
      charArray0[0] = '|';
      charArray0[1] = '>';
      charArray0[2] = '|';
      charArray0[3] = 'l';
      charArray0[4] = 'y';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.numberString();
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals((-2), jSONReaderScanner0.matchStat);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("F^!9Q/{DPj^}Unz<K");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      int int0 = 2120;
      int int1 = 32;
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("XLtL9cS .gRid%");
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0L[}x$");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.decimalValue();
      assertEquals('[', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.charAt(895);
      jSONReaderScanner0.close();
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.isBlankInput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("L");
      jSONReaderScanner0.ch = '\"';
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.scanIdent();
      char char0 = jSONReaderScanner0.charAt(16377);
      assertEquals('\u001A', jSONReaderScanner0.getCurrent());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[9];
      charArray0[0] = '\u001A';
      charArray0[1] = '\u001A';
      charArray0[2] = '\u001A';
      charArray0[3] = '\u001A';
      charArray0[4] = '\u001A';
      charArray0[5] = '\u001A';
      charArray0[6] = '\u001A';
      charArray0[7] = '[';
      charArray0[8] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 0);
      jSONReaderScanner1.isEOF();
      jSONReaderScanner1.next();
      jSONReaderScanner0.next();
      jSONReaderScanner1.isEOF();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("", (-306));
      // Undeclared exception!
      try { 
        jSONReaderScanner2.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }
}
