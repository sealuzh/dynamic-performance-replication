/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 22:51:55 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 1699);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.readUnsignedShort(9);
      assertEquals(821, classReader0.header);
      assertEquals(13834, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      char[] charArray0 = new char[26];
      String string0 = classReader0.readUTF8(24, charArray0);
      assertEquals("\u00003\f\u0000\u000E\u0000\u000F\u0001\u0000\u001FThe File", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      short short0 = classReader0.readShort(1);
      assertEquals((short) (-326), short0);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      long long0 = classReader0.readLong(263);
      assertEquals(821, classReader0.header);
      assertEquals(7379548647188950132L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      Label[] labelArray0 = new Label[4];
      classReader0.readLabel(2, labelArray0);
      assertEquals(609, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.readInt(1);
      assertEquals((-21316096), int0);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.copyPool(classWriter0);
      Type type0 = (Type)classReader0.readConst(2, (char[]) null);
      assertEquals(10, Type.OBJECT);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      char[] charArray0 = new char[0];
      String string0 = classReader0.readClass(54, charArray0);
      assertEquals("putShort", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-708));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-732), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      short short0 = classReader0.readShort(31);
      assertEquals((short)2048, short0);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      long long0 = classReader0.readLong(0);
      assertEquals((-3819410108757049297L), long0);
      assertEquals(609, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readLong((-931));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-2392), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2392
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst((-5979), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5979
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.readClass((-3744), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readClass((-2392), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readByte((-1000));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1000
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      // Undeclared exception!
      try { 
        classReader0.getItem((-736));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -736
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(311);
      Attribute[] attributeArray0 = new Attribute[1];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 74);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      assertEquals(1903, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(54, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readLabel(675, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(6, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readInt((-562));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readByte(1885);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1885
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassReader classReader1 = new ClassReader(classReader0.b, 64, 1561);
      // Undeclared exception!
      try { 
        classReader1.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16722
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.getItem(64);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 843, 701);
      // Undeclared exception!
      try { 
        classReader1.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 31, 1990);
      // Undeclared exception!
      try { 
        classReader1.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(1903);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 707);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 132);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-686));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 31, 31);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, 609);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 701);
      ClassReader classReader1 = new ClassReader(classReader0.b, 843, 701);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, (-24), (-24));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 1903, (-1374));
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[9];
      Object object0 = classReader0.readConst(45, charArray0);
      assertEquals(8, object0);
      assertEquals(1903, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 46);
      ClassReader classReader1 = new ClassReader("wheel.asm.Label");
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-3744));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-3744));
      ClassReader classReader1 = new ClassReader("wheel.asm.Label");
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 12);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 4);
      assertEquals(609, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-732));
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-708));
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b, 31, 31);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, (-991));
      assertNotSame(classReader1, classReader0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.readInt(422);
      assertEquals(821, classReader0.header);
      assertEquals(1684632065, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readShort((-4672));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readConst(8, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[15];
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        classReader0.readConst(91, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      char[] charArray0 = new char[15];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 609, 609);
      byteArrayInputStream0.read(classReader0.b);
      String string0 = classReader0.getSuperName();
      assertEquals(609, classReader0.header);
      assertEquals("\u0000\u0003\u0000\t\u0000\u0000\u0000\u0002\u0000\u0019\u0000\n\u0000\u000B\u0000\u0000\u0000\u0019\u0000\f\u0000\u000B\u0000\u0000\u0000\u0003\u0000\u0004\u0000\r\u0000\u000E\u0000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, (-562));
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("bG8Cj92+#");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 609, 609);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Label");
      ClassReader classReader1 = new ClassReader(classReader0.b, 1903, 8);
      // Undeclared exception!
      try { 
        classReader1.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      assertEquals(609, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 609, 609);
      assertEquals(240, byteArrayInputStream0.available());
      
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      classReader1.getSuperName();
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      int int0 = classReader0.readByte(2130);
      assertEquals(109, int0);
      assertEquals(8070, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 2, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1038
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org/apache/commons/io/filefilter/NotFileFilter");
      assertEquals(701, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("org/apache/commons/io/filefilter/NotFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readByte(8);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.getItem(15);
      assertEquals(83, int0);
      assertEquals(821, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
  }
}
