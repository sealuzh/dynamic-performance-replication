/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 00:45:33 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;
import org.xmlpull.v1.XmlPullParser;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value((String) null);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(mockJapaneseDate0);
      dynamicSelectModel1.collection("D*H^,P ");
      dynamicSelectModel1.collection((String) null);
      dynamicSelectModel2.reset();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression null evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("W:4");
      dynamicSelectModel1.translator("W:4");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("W:4");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      String string0 = null;
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator((String) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.enumeration((String) null);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.value("QbmG+cJ@:I DvsB");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.label("QbmG+cJ@:I DvsB");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel5.validate();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("D^%_[uS`");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("D^%_[uS`");
      dynamicSelectModel0.label("G @.%80K");
      dynamicSelectModel2.enumeration((String) null);
      dynamicSelectModel0.label("D^%_[uS`");
      dynamicSelectModel0.getComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(1316);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.PropertyAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.value("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty((Object) null);
      String string0 = "J7wKw8";
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("J7wKw8");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection("J7wKw8");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.empty("");
      // Undeclared exception!
      try { 
        dynamicSelectModel5.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression J7wKw8 to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("6hY~6g`");
      dynamicSelectModel1.reset();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("6hY~6g`");
      dynamicSelectModel2.validate();
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel1.setTopLevelComponent(errorPage0);
      dynamicSelectModel2.label("i*VE4O%?QFr");
      dynamicSelectModel2.validate();
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression 6hY~6g` to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = XmlPullParser.FEATURE_VALIDATION;
      Any any0 = new Any(errorPage0, "http://xmlpull.org/v1/doc/features.html#validation");
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("http://xmlpull.org/v1/doc/features.html#validation");
      dynamicSelectModel2.setComponent(any0);
      assertTrue(any0._isGeneratedId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("Integer");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("<init>");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.collection("Integer");
      dynamicSelectModel2.translator("Integer");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getValue((-386));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression Integer evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("wheel.components.Form$Method");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("wheel.components.Form$Method");
      dynamicSelectModel2.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty("wheel.components.Form$Method");
      Collection collection0 = dynamicSelectModel3.getObjects();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("org.mvel.ast.LiteralDeepPropertyNode");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("org.mvel.ast.LiteralDeepPropertyNode");
      Collection collection0 = dynamicSelectModel1.getObjects();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      dynamicSelectModel0.getObjects();
      dynamicSelectModel1.label("");
      Object object0 = dynamicSelectModel0.translateValue("");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("[] from ");
      dynamicSelectModel1.reset();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[] from ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty("lrS!vK@%!\"jI}p#h`_2I");
      dynamicSelectModel3.label("lrS!vK@%!\"jI}p#h`_2I");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel0.empty("lrS!vK@%!\"jI}p#h`_2I");
      dynamicSelectModel4.getObjects();
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.value("[] from ");
      dynamicSelectModel0.translateValue("org.mvel.util.FastList@0000000029");
      dynamicSelectModel5.translateValue("lrS!vK@%!\"jI}p#h`_2I");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
