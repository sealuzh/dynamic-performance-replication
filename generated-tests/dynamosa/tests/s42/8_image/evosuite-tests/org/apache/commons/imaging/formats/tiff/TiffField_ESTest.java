/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:05:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)34;
      byteArray0[4] = (byte)34;
      TiffField tiffField0 = new TiffField((byte)34, 1507, fieldTypeAscii0.SRATIONAL, 1838L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65536, int0);
      assertEquals(1507, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(14704, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)34;
      TiffField tiffField0 = new TiffField((byte)34, 1507, fieldTypeAscii0.RATIONAL, 1838L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1507, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(14704, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-440), tiffField0.getDirectoryType());
      assertEquals((-440), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeShort0.IFD, 1528, (-1148L), byteArray0, byteOrder0, 1528);
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (1528 IFD)", string0);
      assertEquals(1528, tiffField0.getSortHint());
      assertEquals((-1148), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2276, 1243, fieldTypeShort0, 1243, 4L, byteArray0, byteOrder0, 1486);
      tiffField0.dump();
      assertEquals(1486, tiffField0.getSortHint());
      assertEquals(2276, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2486, tiffField0.getBytesLength());
      assertEquals(1243, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1532), (-1532), fieldTypeShort0, 2218L, (-1758), byteArray0, byteOrder0, (-1758));
      tiffField0.getValue();
      assertEquals((-1532), tiffField0.getDirectoryType());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals((-1758), tiffField0.getSortHint());
      assertEquals((-1532), tiffField0.getTag());
      assertEquals(4436, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeShort0.LONG, 1528, (-1148L), byteArray0, byteOrder0, 1528);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1148), tiffField0.getOffset());
      assertEquals(1528, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.SRATIONAL, 4960L, (-839L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-839), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4613, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2259), (-871), fieldTypeShort0, 4613, (-2259), byteArray0, byteOrder0, 1634);
      int int0 = tiffField0.getTag();
      assertEquals(1634, tiffField0.getSortHint());
      assertEquals((-2259), tiffField0.getOffset());
      assertEquals((-871), tiffField0.getDirectoryType());
      assertEquals((-2259), int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte)34;
      TiffField tiffField0 = new TiffField((byte)34, (-2095105997), fieldTypeAscii0, 2534L, (-2147483648L), byteArray0, byteOrder0, (byte)34);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2095105997), tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(2534, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(34, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.SRATIONAL, 4960L, (-839L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-839), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146821865, 4, fieldTypeShort0, 1486, 2146821865, byteArray0, byteOrder0, (-3204));
      int int0 = tiffField0.getSortHint();
      assertEquals(2146821865, tiffField0.getTag());
      assertEquals(2146821865, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-3204), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2412), 1486, fieldTypeShort0, 0L, 224L, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2412), tiffField0.getTag());
      assertEquals(1486, tiffField0.getDirectoryType());
      assertEquals(224, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2077, 4613, fieldTypeShort0, (-1L), (-1150L), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals(2077, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4613, tiffField0.getDirectoryType());
      assertEquals((-1150), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33437, 0, fieldTypeLong0, (byte)2, (byte)2, byteArray0, byteOrder0, 33437);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(33437, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(33437, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-73);
      TiffField tiffField0 = new TiffField(2276, 1243, fieldTypeShort0, 1243, 4L, byteArray0, byteOrder0, 1486);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2486, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2276, tiffField0.getTag());
      assertEquals((-18688), int0);
      assertEquals(1243, tiffField0.getDirectoryType());
      assertEquals(1486, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1840700268), 2146760345, fieldTypeByte0, 1L, 3248L, byteArray0, byteOrder0, (-1840700268));
      tiffField0.getIntValue();
      assertEquals(2146760345, tiffField0.getDirectoryType());
      assertEquals((-1840700268), tiffField0.getSortHint());
      assertEquals(3248, tiffField0.getOffset());
      assertEquals((-1840700268), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-123);
      TiffField tiffField0 = new TiffField(1528, 1528, fieldTypeByte0.SSHORT, 1L, 1L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1528, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-7);
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeByte0.SHORT, 1, 2668L, byteArray0, byteOrder0, (byte)48);
      tiffField0.getIntValue();
      assertEquals(2668, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1758), (String) null);
      TiffField tiffField0 = new TiffField((-1532), (-1532), fieldTypeShort0, 2218L, (-1758), byteArray0, byteOrder0, (-1758));
      tiffField0.getFieldTypeName();
      assertEquals((-1758), tiffField0.getSortHint());
      assertEquals((-1758), tiffField0.getOffset());
      assertEquals((-1532), tiffField0.getTag());
      assertEquals((-1532), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1553, 1553, fieldTypeShort0, 1553, 1553, byteArray0, byteOrder0, 1553);
      tiffField0.getFieldTypeName();
      assertEquals(1553, tiffField0.getDirectoryType());
      assertEquals(1553, tiffField0.getSortHint());
      assertEquals(1553, tiffField0.getTag());
      assertEquals(1553, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4613, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (byte)45, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 371L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(371, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "yJiN}mVm u");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-2056L), 0L, byteArray0, byteOrder0, 1178);
      tiffField0.getFieldType();
      assertEquals(1178, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1607), ": ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-91), (-91), fieldTypeShort0, (-2147483648L), (byte) (-128), byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getFieldType();
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-91), tiffField0.getDirectoryType());
      assertEquals((-91), tiffField0.getTag());
      assertEquals((-128), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[75];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(0, 443, fieldTypeByte0, 1, 69, byteArray0, byteOrder0, 443);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(443, tiffField0.getDirectoryType());
      assertEquals(443, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)115;
      TiffField tiffField0 = new TiffField((-1389), (byte)115, fieldTypeByte0, 1L, 2147483647L, byteArray0, byteOrder0, (byte)115);
      tiffField0.getDoubleValue();
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-1389), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(14, "#'P[xb4&zjX(toL1");
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(77, 17, fieldTypeDouble0, 1L, 2147483647L, byteArray0, byteOrder0, (-2162));
      tiffField0.getDoubleValue();
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(77, tiffField0.getTag());
      assertEquals((-2162), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4613, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4613, (byte)0, fieldTypeShort0, 5096L, (byte)0, byteArray0, byteOrder0, 4613);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(4613, tiffField0.getTag());
      assertEquals(4613, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1256, (-71), fieldTypeRational0, 1256, (-620L), byteArray0, (ByteOrder) null, (-128));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1256, tiffField0.getTag());
      assertEquals((-71), int0);
      assertEquals((-620), tiffField0.getOffset());
      assertEquals((-128), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4613, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 28, fieldTypeShort0, 28, 28, byteArray0, byteOrder0, (-1530));
      tiffField0.getCount();
      assertEquals((-1530), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2854, 2854, fieldTypeShort0, (-5258L), 2854, byteArray0, byteOrder0, (-1477));
      tiffField0.getCount();
      assertEquals(2854, tiffField0.getOffset());
      assertEquals(2854, tiffField0.getDirectoryType());
      assertEquals((-1477), tiffField0.getSortHint());
      assertEquals(2854, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2190, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2190, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1499, 1499, fieldTypeLong0, 1499, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1499, tiffField0.getTag());
      assertEquals(5996, int0);
      assertEquals(1499, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-73), (-1130), fieldTypeShort0.FLOAT, (-354L), (-1L), byteArray0, byteOrder0, 2146760345);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1130), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2146760345, tiffField0.getSortHint());
      assertEquals((-1416), int0);
      assertEquals((-73), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-899), "kyi09z+t KLTcFd");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-899), 215, fieldTypeByte0, 2924L, 0L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-899), tiffField0.getTag());
      assertEquals(215, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1119, fieldTypeByte0, 1119, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1119, tiffField0.getBytesLength());
      assertEquals(1119, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      TiffField tiffField0 = new TiffField(2533, 2344, fieldTypeByte0, 4L, 1278L, byteArray0, (ByteOrder) null, 37397);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(54, charArrayWriter0.size());
      assertEquals(": 2533 (0x9e5: Unknown Tag): 0, 0, 0, 0 (4 Undefined)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(122, "_A4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1324), 122, fieldTypeShort0, (-1324), (-1324), byteArray0, byteOrder0, (-167));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2362), 288, fieldTypeShort0, 1L, 288, byteArray0, byteOrder0, (-2362));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1413), (-1413), (FieldType) null, (-1413), (-1413), byteArray0, byteOrder0, (-1413));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-8), (byte) (-8), fieldTypeByte0.RATIONAL, (byte) (-8), (byte) (-8), byteArray0, byteOrder0, (byte) (-8));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(40094, 36, fieldTypeDouble0, (-2597L), 138L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-925), (-925), fieldTypeRational0, (-925), (-925), byteArray0, byteOrder0, (-925));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 99);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1413), (-1413), (FieldType) null, (-1413), (-1413), byteArray0, byteOrder0, (-1413));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-2), (byte) (-2), fieldTypeByte0.RATIONAL, (byte) (-2), (byte) (-2), byteArray0, byteOrder0, (byte) (-2));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, (FieldType) null, (byte)95, (byte)95, byteArray0, byteOrder0, (byte)95);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[341];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, (FieldType) null, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-735), (-735), fieldTypeShort0, (-735), (-735), byteArray0, byteOrder0, (-735));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeShort0, 40093, 4L, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeByte0, (byte)92, (byte)92, (byte[]) null, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0.RATIONAL, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1528, 1528, fieldTypeShort0, 1528, 1528, byteArray0, byteOrder0, 1528);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)39);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)91, (byte)91, (FieldType) null, (byte)91, (byte)91, byteArray0, byteOrder0, (byte)91);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-62), (byte) (-62), fieldTypeByte0.RATIONAL, (byte) (-62), (byte) (-62), byteArray0, byteOrder0, (byte) (-62));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeShort0.LONG, 1528, (-1157L), byteArray0, byteOrder0, 1528);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)34, (byte)34, fieldTypeAscii0, (byte)34, (byte)34, (byte[]) null, byteOrder0, (byte)34);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-3), (byte) (-3), fieldTypeByte0.RATIONAL, (byte) (-3), (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-100), (byte) (-100), fieldTypeByte0.RATIONAL, (byte) (-100), (byte) (-100), byteArray0, byteOrder0, (byte) (-100));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2546), (-2546), fieldTypeFloat0, (-2546), (-2546), byteArray0, byteOrder0, (-2546));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3386, (-1746), fieldTypeByte0, (-1746), 3386, byteArray0, (ByteOrder) null, (-1702));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Invalid value: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Invalid value: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, (-1L), (byte)6, byteArray0, byteOrder0, (byte)6);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("GGe}3:=");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2264, "cq4'j~/JETz&Jn");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(915, 1765, fieldTypeLong0, 1L, 400L, byteArray0, byteOrder0, (-2055));
      MockFile mockFile0 = new MockFile(", fieldType: ", ", fieldType: ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2238), (-2238), fieldTypeLong0, (-2238), (-33872L), byteArray0, byteOrder0, (-2238));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeDouble0, 1L, (-299L), byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-1962), fieldTypeByte0, (byte)115, (-1962), byteArray0, byteOrder0, (-1078));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1L), 4L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(4171, 50, fieldTypeShort0, 1486, (byte)24, byteArray0, byteOrder0, 2);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(4171, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1486, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1998), 50, fieldTypeShort0, (byte)0, (-1998), byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals((-1998), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1998), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1536, 1536, (FieldType) null, 1536, (-196L), byteArray0, byteOrder0, 1536);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, 4960L, (-839L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-839), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2091), (byte)86, fieldTypeAscii0, 0L, (-1L), byteArray0, byteOrder0, 34);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(86, int0);
      assertEquals((-2091), tiffField0.getTag());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1553, 1553, fieldTypeShort0, 1553, 1553, byteArray0, byteOrder0, 1553);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1482, 1482, fieldTypeShort0, 1482, 1482, (byte[]) null, byteOrder0, 1482);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-440), (-440), fieldTypeFloat0, (byte)1, (byte)0, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getOffset();
      assertEquals((-440), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-440), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeByte0, 50, 0, byteArray0, byteOrder0, 117);
      tiffField0.getTagInfo();
      assertEquals(50, tiffField0.getTag());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-795), fieldTypeFloat0, (-38L), 0L, (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-795), tiffField0.getDirectoryType());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4662, 2332, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals(2332, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4662, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 873L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, (byte)29, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (byte)29);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@12ea27fa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)22, (byte)22, fieldTypeByte0.RATIONAL, (byte)22, (byte)22, byteArray0, byteOrder0, (byte)22);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeDouble0, (byte)39, (byte)39, byteArray0, byteOrder0, (byte)39);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(39, tiffField0.getTag());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getOffset());
      assertEquals(10, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeFloat0, (byte)29, (byte)29, byteArray0, byteOrder0, (byte)29);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(29, tiffField0.getOffset());
      assertEquals(29, doubleArray0.length);
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeLong0, (byte)9, (byte)9, byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1528, 1528, fieldTypeShort0, 1528, 1528, byteArray0, byteOrder0, 1528);
      tiffField0.getDoubleArrayValue();
      assertEquals(3056, tiffField0.getBytesLength());
      assertEquals(1528, tiffField0.getDirectoryType());
      assertEquals(1528, tiffField0.getTag());
      assertEquals(1528, tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeByte0.RATIONAL, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.RATIONAL, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@61cf1468 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeLong0, 33, 33, byteArray0, byteOrder0, 33);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(21, intArray0.length);
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1528, 1528, fieldTypeShort0, 1528, 1528, byteArray0, byteOrder0, 1528);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1528, tiffField0.getOffset());
      assertEquals(3056, tiffField0.getBytesLength());
      assertEquals(1528, tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getTag());
      assertEquals(1528, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@efa5837 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeByte0.RATIONAL, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1528, 1528, fieldTypeShort0, 1528, 1528, byteArray0, byteOrder0, 1528);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@47b60bfb
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[83];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4291, 4291, fieldTypeShort0, 4291, 4291, byteArray0, byteOrder0, 4291);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x10c3)", string0);
      assertEquals(4291, tiffField0.getOffset());
      assertEquals(4291, tiffField0.getDirectoryType());
      assertEquals(4291, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(18249, 18249, fieldTypeDouble0, 18249, 18249, byteArray0, byteOrder0, 18249);
      String string0 = tiffField0.getTagName();
      assertEquals(18249, tiffField0.getOffset());
      assertEquals("RatingPercent", string0);
      assertEquals(18249, tiffField0.getSortHint());
      assertEquals(18249, tiffField0.getDirectoryType());
      assertEquals(18249, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[369];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(934, 2617, fieldTypeFloat0, 2617, 2617, byteArray0, byteOrder0, 2617);
      String string0 = tiffField0.toString();
      assertEquals(2617, tiffField0.getOffset());
      assertEquals(2617, tiffField0.getSortHint());
      assertEquals("934 (0x3a6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (92) (2617 Float)", string0);
      assertEquals(2617, tiffField0.getDirectoryType());
      assertEquals(10468, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(915, 915, fieldTypeByte0, 915, 915, byteArray0, byteOrder0, 121);
      String string0 = tiffField0.toString();
      assertEquals("915 (0x393: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (224) (915 Undefined)", string0);
      assertEquals(915, tiffField0.getBytesLength());
      assertEquals(915, tiffField0.getDirectoryType());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(915, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[151];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeFloat0, 38, 38, byteArray0, byteOrder0, 38);
      String string0 = tiffField0.getValueDescription();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(38, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(38, tiffField0.getOffset());
      assertEquals(38L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeDouble0, (byte)39, (byte)39, byteArray0, byteOrder0, (byte)39);
      String string0 = tiffField0.getValueDescription();
      assertEquals(39L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(39, tiffField0.getOffset());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(39, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1477, 2314, fieldTypeDouble0, 1477, 2314, byteArray0, byteOrder0, 1477);
      String string0 = tiffField0.toString();
      assertEquals(2314, tiffField0.getOffset());
      assertEquals("1477 (0x5c5: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1477 Double)", string0);
      assertEquals(2314, tiffField0.getDirectoryType());
      assertEquals(11816, tiffField0.getBytesLength());
      assertEquals(1477, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1259, 1259, fieldTypeLong0, 1259, 1259, byteArray0, byteOrder0, 1259);
      String string0 = tiffField0.toString();
      assertEquals(1259, tiffField0.getSortHint());
      assertEquals(1259, tiffField0.getDirectoryType());
      assertEquals("1259 (0x4eb: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (1259 SLong)", string0);
      assertEquals(5036, tiffField0.getBytesLength());
      assertEquals(1259, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeLong0, 33, 33, byteArray0, byteOrder0, 33);
      String string0 = tiffField0.toString();
      assertEquals(33, tiffField0.getOffset());
      assertEquals("33 (0x21: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (33 SLong)", string0);
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[337];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1489, 1489, fieldTypeShort0, 1489, 1489, byteArray0, byteOrder0, 1489);
      String string0 = tiffField0.toString();
      assertEquals("1489 (0x5d1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (168) (1489 SShort)", string0);
      assertEquals(1489, tiffField0.getOffset());
      assertEquals(1489, tiffField0.getSortHint());
      assertEquals(1489, tiffField0.getDirectoryType());
      assertEquals(2978, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[369];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeAscii0, (byte)90, (-3878L), byteArray0, byteOrder0, (byte)90);
      tiffField0.toString();
      assertEquals((-3878), tiffField0.getOffset());
      assertEquals(90, tiffField0.getBytesLength());
      assertEquals(90, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(90L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeByte0.RATIONAL, (byte)39, (byte)39, byteArray0, byteOrder0, (byte)39);
      tiffField0.toString();
      assertEquals(39, tiffField0.getOffset());
      assertEquals(39, tiffField0.getTag());
      assertEquals(312, tiffField0.getBytesLength());
      assertEquals(39L, tiffField0.getCount());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34856, 1207, fieldTypeAscii0, 1433L, 34856, byteArray0, byteOrder0, 1207);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1207, tiffField0.getDirectoryType());
      assertEquals(1207, tiffField0.getSortHint());
      assertEquals(34856, tiffField0.getTag());
      assertEquals(1433, tiffField0.getBytesLength());
      assertEquals(34856, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[354];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 402, (byte)0, byteArray0, byteOrder0, 1832);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1832, 1832);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3216, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0.SRATIONAL, 4960L, (byte)1, byteArray0, byteOrder0, (byte)1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, (byte)1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4960L, tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1413), (-1413), (FieldType) null, (-1413), (-1413), byteArray0, byteOrder0, (-1413));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4613, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, 4613);
      int int0 = tiffField0.getSortHint();
      assertEquals(4613, tiffField0.getTag());
      assertEquals(4613, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0.RATIONAL, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5328, 5328, (FieldType) null, 493L, 5328, (byte[]) null, byteOrder0, 5328);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 41, fieldTypeFloat0, 1, 1L, byteArray0, (ByteOrder) null, 41);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeByte0.RATIONAL, (byte)92, (byte)92, byteArray0, byteOrder0, (byte)92);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(92, tiffField0.getTag());
      assertEquals(92L, tiffElement0.offset);
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getDirectoryType());
  }
}
