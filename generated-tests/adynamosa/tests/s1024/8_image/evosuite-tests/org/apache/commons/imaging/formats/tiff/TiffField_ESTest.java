/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 14:48:38 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-55);
      TiffField tiffField0 = new TiffField(2101792506, (-2153), fieldTypeShort0, 1301L, 3325L, byteArray0, (ByteOrder) null, (-4387));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3325, tiffField0.getOffset());
      assertEquals(201, int0);
      assertEquals((-4387), tiffField0.getSortHint());
      assertEquals(2101792506, tiffField0.getTag());
      assertEquals((-2153), tiffField0.getDirectoryType());
      assertEquals(2602, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)50;
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-61), fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals((-61), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(286, (-1611), fieldTypeByte0, 0L, 3792L, byteArray0, byteOrder0, (byte)33);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(286, tiffField0.getTag());
      assertEquals((-1611), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(3792, tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1298), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146808762), 2140772761, fieldTypeDouble0, 4L, 439L, byteArray0, byteOrder0, 4134);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(439L, tiffElement0.offset);
      assertEquals(2140772761, tiffField0.getDirectoryType());
      assertEquals(4134, tiffField0.getSortHint());
      assertEquals((-2146808762), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (byte) (-30), fieldTypeLong0, 363L, 363L, byteArray0, byteOrder0, 3715);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3715, tiffField0.getSortHint());
      assertEquals((-30), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(363, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1768, 0, fieldTypeRational0, 1768, 1768, byteArray0, byteOrder0, (-103));
      tiffField0.getTagInfo();
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals(1768, tiffField0.getOffset());
      assertEquals(1768, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-167), 2863, fieldTypeShort0, (byte)50, 50939L, byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-167), int0);
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(50939, tiffField0.getOffset());
      assertEquals(2863, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2960), "gqzp/Xu,LW,h");
      TiffField tiffField0 = new TiffField((-2960), 2144899431, fieldTypeAscii0, 2816, (-2960), byteArray0, byteOrder0, (-2960));
      String string0 = tiffField0.getStringValue();
      assertEquals((-2960), tiffField0.getOffset());
      assertEquals((-2960), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2816, tiffField0.getBytesLength());
      assertEquals(2144899431, tiffField0.getDirectoryType());
      assertEquals((-2960), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[18];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 2146995916, fieldTypeLong0, (byte)0, 1618L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1618, tiffField0.getOffset());
      assertEquals(2146995916, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeLong0, 278, 278, byteArray0, byteOrder0, 1972);
      int int0 = tiffField0.getSortHint();
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(278, tiffField0.getOffset());
      assertEquals(278, tiffField0.getTag());
      assertEquals(1972, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(395, 133, fieldTypeDouble0, (-920L), 395, byteArray0, byteOrder0, (byte) (-116));
      int int0 = tiffField0.getOffset();
      assertEquals(395, int0);
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(395, tiffField0.getTag());
      assertEquals(133, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2101792506, "Vty");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34152, 34152, fieldTypeFloat0, 533L, (-500L), byteArray0, byteOrder0, (-2229));
      int int0 = tiffField0.getOffset();
      assertEquals(34152, tiffField0.getTag());
      assertEquals((-500), int0);
      assertEquals(34152, tiffField0.getDirectoryType());
      assertEquals((-2229), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(479, tiffField0.getSortHint());
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 2090L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2090, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SSHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      tiffField0.getIntValue();
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(479, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 2090L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2090, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(4, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(337, 337, fieldTypeFloat0, 4L, 4, byteArray0, byteOrder0, 24);
      tiffField0.getFieldTypeName();
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(337, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(337, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50935, (-1611), fieldTypeByte0, (-2365L), 50935, byteArray0, byteOrder0, 2881);
      tiffField0.getFieldTypeName();
      assertEquals((-1611), tiffField0.getDirectoryType());
      assertEquals(50935, tiffField0.getOffset());
      assertEquals(50935, tiffField0.getTag());
      assertEquals(2881, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)50, 2147097756, (FieldType) null, (byte) (-61), (byte) (-61), byteArray0, byteOrder0, 259);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-61), tiffField0.getOffset());
      assertEquals(259, tiffField0.getSortHint());
      assertEquals(2147097756, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1887, fieldTypeFloat0, (byte)95, (-4596L), byteArray0, byteOrder0, 1094);
      tiffField0.getFieldType();
      assertEquals(1887, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4596), tiffField0.getOffset());
      assertEquals(1094, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1298), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146808762), 2140772761, fieldTypeDouble0, 4L, 439L, byteArray0, byteOrder0, 4134);
      tiffField0.getFieldType();
      assertEquals(439, tiffField0.getOffset());
      assertEquals(2140772761, tiffField0.getDirectoryType());
      assertEquals(4134, tiffField0.getSortHint());
      assertEquals((-2146808762), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField(65535, (-2147365815), fieldTypeRational0, 1L, 4L, byteArray0, byteOrder0, 206);
      tiffField0.getDoubleValue();
      assertEquals((-2147365815), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(206, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldType0, 1L, 8L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getDoubleValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 0, fieldTypeRational0, 286L, 4L, byteArray0, byteOrder0, 3947);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3947, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-167), 2863, fieldTypeShort0, (byte)50, 50939L, byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-167), tiffField0.getTag());
      assertEquals(50939, tiffField0.getOffset());
      assertEquals(2863, int0);
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-124), 3588, fieldTypeByte0, (byte)0, (-6354L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getCount();
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-124), tiffField0.getTag());
      assertEquals(3588, tiffField0.getDirectoryType());
      assertEquals((-6354), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-1), (-2130303777), fieldTypeByte0.DOUBLE, 286, 1145L, byteArray0, byteOrder0, 1598);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1598, tiffField0.getSortHint());
      assertEquals((-2130303777), tiffField0.getDirectoryType());
      assertEquals(1145, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2316, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2532, 2316, fieldTypeDouble0, (-187L), (-1154L), byteArray0, byteOrder0, (byte) (-49));
      tiffField0.getCount();
      assertEquals(2532, tiffField0.getTag());
      assertEquals((-1154), tiffField0.getOffset());
      assertEquals(2316, tiffField0.getDirectoryType());
      assertEquals((-49), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(286, (-1611), fieldTypeByte0, 0L, 3792L, byteArray0, byteOrder0, (byte)33);
      int int0 = tiffField0.getBytesLength();
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(286, tiffField0.getTag());
      assertEquals(3792, tiffField0.getOffset());
      assertEquals((-1611), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2135), ")");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2135), 2144899431, fieldTypeFloat0, (-2135), (-2135), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-8540), int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2144899431, tiffField0.getDirectoryType());
      assertEquals((-2135), tiffField0.getTag());
      assertEquals((-2135), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "gEr");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 973L, (-1L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1611), 286, fieldTypeByte0, 286, 1452L, byteArray0, byteOrder0, 286);
      tiffField0.getByteArrayValue();
      assertEquals(286, tiffField0.getSortHint());
      assertEquals(286, tiffField0.getDirectoryType());
      assertEquals((-1611), tiffField0.getTag());
      assertEquals(1452, tiffField0.getOffset());
      assertEquals(286, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeLong0, 278, 278, byteArray0, byteOrder0, 1972);
      tiffField0.getByteArrayValue();
      assertEquals(278, tiffField0.getOffset());
      assertEquals(1972, tiffField0.getSortHint());
      assertEquals(1112, tiffField0.getBytesLength());
      assertEquals(278, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1224), (-1224), fieldTypeRational0, (-1454L), (-1454L), byteArray0, byteOrder0, (byte) (-4));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(211, 2146001602, fieldTypeByte0, (-3177L), 3730, byteArray0, byteOrder0, 211);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-329), (-329), fieldTypeFloat0, (-329), 1L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1530, 0, fieldTypeByte0, 1530, 1L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146543830, 2146543830, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, 2146543830);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeByte0, (-2147483648L), (byte)106, byteArray0, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)50, 2147097756, (FieldType) null, (byte) (-61), (byte) (-61), byteArray0, byteOrder0, 259);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, fieldTypeAscii0.SSHORT, 479, 4096, byteArray0, byteOrder0, 4096);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)7, (byte)127, fieldTypeByte0.FLOAT, 1L, 0L, byteArray0, byteOrder0, (-2179));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[18];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 33451, fieldTypeLong0.SSHORT, (-1), 255L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1611), 2138961887, fieldTypeByte0, 0L, 407512L, byteArray0, byteOrder0, 2138961887);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50939, 50939, fieldTypeAscii0, (-1681L), (-1681L), byteArray0, byteOrder0, 201);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 292, fieldTypeRational0, 1159L, (-2838), byteArray0, byteOrder0, 3958);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50939, 0, fieldTypeAscii0, 50939, 2969L, byteArray0, byteOrder0, 0);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(2969, tiffField0.getOffset());
      assertEquals(50939, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50939, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeByte0, 4L, 278, byteArray0, byteOrder0, (byte)70);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(278, tiffField0.getTag());
      assertEquals(278, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1611), 286, fieldTypeByte0, 286, 1452L, byteArray0, byteOrder0, 286);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1452, tiffField0.getOffset());
      assertEquals(286, tiffField0.getSortHint());
      assertEquals(286, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-1611), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(117, 117, fieldTypeAscii0, 1600L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(117, tiffField0.getTag());
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeByte0, 4L, 278, byteArray0, byteOrder0, (byte)70);
      tiffField0.getFieldType();
      assertEquals(278, tiffField0.getTag());
      assertEquals(278, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(117, 117, fieldTypeAscii0, 1600L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1600, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(117, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3401), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2142743065, 0, fieldTypeAscii0, (-3401), 0L, byteArray0, byteOrder0, (-3401));
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2142743065, tiffField0.getTag());
      assertEquals((-3401), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (byte) (-30), fieldTypeLong0, 363L, 363L, byteArray0, byteOrder0, 3715);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-30), tiffField0.getDirectoryType());
      assertEquals(363, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals(3715, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1530, 0, fieldTypeByte0, 1530, 1L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1530, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1530, 0, fieldTypeByte0, 1530, 1L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1530, tiffField0.getTag());
      assertEquals(1530, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SSHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(479, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      tiffField0.getIntValue();
      assertEquals(479, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-30), 1972, fieldTypeLong0, 1972, (-3177L), byteArray0, byteOrder0, 7);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-30), tiffField0.getTag());
      assertEquals(7888, tiffField0.getBytesLength());
      assertEquals((-3177), tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(1972, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-61), fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "h*yI$Qww3?Z`d");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2960), (-2132), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-1323));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@2298e7b1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(286, 286, fieldTypeByte0, 286, 393L, byteArray0, byteOrder0, (-1611));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6ba5dd4b for: 286 (0x11e: XPosition): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, 2816, 1797L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(11264, tiffField0.getBytesLength());
      assertEquals(1797, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1725L, 0, byteArray0, byteOrder0, (byte) (-30));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(6900, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2535, 3, fieldTypeLong0.SHORT, 1872, (-1509L), byteArray0, (ByteOrder) null, (byte)35);
      tiffField0.getDoubleArrayValue();
      assertEquals(3744, tiffField0.getBytesLength());
      assertEquals((-1509), tiffField0.getOffset());
      assertEquals(2535, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-61), fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-61), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SSHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(479, tiffField0.getSortHint());
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2101792506, "Vty");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 34152);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@173a2e92 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeLong0, 278, 278, byteArray0, byteOrder0, 1972);
      tiffField0.getIntArrayValue();
      assertEquals(278, tiffField0.getOffset());
      assertEquals(1972, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(278, tiffField0.getTag());
      assertEquals(1112, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-61), fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-61), tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-61), fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldType0, 1L, 8L, byteArray0, (ByteOrder) null, (byte) (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2535, 3, fieldTypeLong0.SHORT, 1872, (-1509L), byteArray0, (ByteOrder) null, (byte)35);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2535, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(3744, tiffField0.getBytesLength());
      assertEquals(1872L, tiffField0.getCount());
      assertEquals((-1509), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-102);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(533, 533, fieldTypeAscii0, 470L, 470L, byteArray0, byteOrder0, 5604);
      String string0 = tiffField0.getStringValue();
      assertEquals(533, tiffField0.getDirectoryType());
      assertEquals(533, tiffField0.getTag());
      assertEquals(470, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(5604, tiffField0.getSortHint());
      assertEquals(470, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50939, 0, fieldTypeAscii0, 50939, 2969L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(50939 (0xc6fb: ProfileHueSatMapData2): ): [Ljava.lang.String;@522e4846
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(211, 2146001602, fieldTypeByte0, (-3177L), 3730, byteArray0, byteOrder0, 211);
      String string0 = tiffField0.getTagName();
      assertEquals(3730, tiffField0.getOffset());
      assertEquals(2146001602, tiffField0.getDirectoryType());
      assertEquals(211, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xd3)", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50939, 0, fieldTypeAscii0, 50939, 2969L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2969, tiffField0.getOffset());
      assertEquals("ProfileHueSatMapData2", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50939, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)14, 1835, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).SHORT).FLOAT, 53, 53, byteArray0, byteOrder0, 53);
      String string0 = tiffField0.toString();
      assertEquals(1835, tiffField0.getDirectoryType());
      assertEquals("14 (0xe: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (53 Float)", string0);
      assertEquals(53, tiffField0.getSortHint());
      assertEquals(53, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2306, 60, fieldTypeLong0.UNDEFINED, 3057L, 4071L, byteArray0, byteOrder0, 58);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2306, tiffField0.getTag());
      assertEquals(3057, tiffField0.getBytesLength());
      assertEquals(4071, tiffField0.getOffset());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(3057L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1887, fieldTypeFloat0, (byte)95, (-4596L), byteArray0, byteOrder0, 1094);
      tiffField0.dump();
      assertEquals(1094, tiffField0.getSortHint());
      assertEquals(380, tiffField0.getBytesLength());
      assertEquals(95L, tiffField0.getCount());
      assertEquals(1887, tiffField0.getDirectoryType());
      assertEquals((-4596), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((byte)50, (-435), fieldTypeRational0.DOUBLE, 3290, (byte)50, byteArray0, (ByteOrder) null, 1251);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(3290L, tiffField0.getCount());
      assertEquals(26320, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-435), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1251, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, (-1), fieldTypeDouble0, 9, 9, byteArray0, byteOrder0, 13);
      String string0 = tiffField0.getValueDescription();
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(72, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeLong0, 53, (byte)14, byteArray0, byteOrder0, (byte)14);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(14, tiffField0.getOffset());
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(53L, tiffField0.getCount());
      assertEquals(53, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53)", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2306, 2306, fieldTypeLong0, 2306, 2306, byteArray0, byteOrder0, 58);
      String string0 = tiffField0.toString();
      assertEquals(2306, tiffField0.getDirectoryType());
      assertEquals(9224, tiffField0.getBytesLength());
      assertEquals("2306 (0x902: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (2306 Long)", string0);
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(2306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeLong0, 278, 278, byteArray0, byteOrder0, 1972);
      MockPrintStream mockPrintStream0 = new MockPrintStream("OversizeValueElement, tag: ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "<abjf]accaOcg?ao");
      assertEquals(278, tiffField0.getOffset());
      assertEquals(278L, tiffField0.getCount());
      assertEquals(278, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(1112, tiffField0.getBytesLength());
      assertEquals(1972, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2355, 38, fieldTypeLong0.SSHORT, 2355, 2355, byteArray0, byteOrder0, 38);
      tiffField0.dump();
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(4710, tiffField0.getBytesLength());
      assertEquals(2355, tiffField0.getOffset());
      assertEquals(2355L, tiffField0.getCount());
      assertEquals(2355, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, fieldTypeAscii0.SHORT, 479, 4096, byteArray0, byteOrder0, 4096);
      String string0 = tiffField0.toString();
      assertEquals(958, tiffField0.getBytesLength());
      assertEquals(4096, tiffField0.getOffset());
      assertEquals(4096, tiffField0.getSortHint());
      assertEquals("16 (0x10: Unknown Tag): 0, 0, 0, 0 (479 Short)", string0);
      assertEquals(16, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2258), (-3395), fieldTypeAscii0, 1051L, (-968L), byteArray0, byteOrder0, 3279);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-3395), tiffField0.getDirectoryType());
      assertEquals((-968), tiffField0.getOffset());
      assertEquals((-2258), tiffField0.getTag());
      assertEquals(3279, tiffField0.getSortHint());
      assertEquals(1051, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(117, 117, fieldTypeAscii0, 1600L, 1L, byteArray0, byteOrder0, 0);
      MockFile mockFile0 = new MockFile("I[@ZMU,spu");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(68L, mockFile0.length());
      assertEquals(117, tiffField0.getTag());
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1600, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, 1L, (-3349L), byteArray0, byteOrder0, 479);
      String string0 = tiffField0.getValueDescription();
      assertEquals(479, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1611), (-1527), fieldTypeLong0, (byte) (-30), 383L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-1611));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(383, tiffField0.getOffset());
      assertEquals((-1611), tiffField0.getTag());
      assertEquals((-30L), tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-1527), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(211, 2146001602, fieldTypeByte0, (-3177L), 3730, byteArray0, byteOrder0, 211);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2146001602, (-2106));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(211, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(211, tiffField0.getSortHint());
      assertEquals(3730, tiffField0.getOffset());
      assertEquals(2146001602, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-3177), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeByte0, 4L, 278, byteArray0, byteOrder0, (byte)70);
      tiffField0.getFieldTypeName();
      assertEquals(278, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(278, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (-1611), fieldTypeByte0, 50, (-1611), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1611), tiffField0.getOffset());
      assertEquals((-1611), int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146001602, 1, fieldType0, 114, (-1L), byteArray0, (ByteOrder) null, (-2130303777));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2130303777), int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(114L, tiffField0.getCount());
      assertEquals(2146001602, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146001602, 1, fieldType0, 114, (-1L), byteArray0, (ByteOrder) null, (-2130303777));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2146001602 (0x7fe962c2: Unknown Tag): ", string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(114, tiffField0.getBytesLength());
      assertEquals((-2130303777), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(278, 68, fieldTypeByte0, 4L, 278, byteArray0, byteOrder0, (byte)70);
      tiffField0.dump();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(278, tiffField0.getTag());
      assertEquals(278, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "h*yI$Qww3?Z`d");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2960), (-2132), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-1323));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2132), tiffField0.getDirectoryType());
      assertEquals((-2960), tiffField0.getTag());
      assertEquals((-1323), tiffField0.getSortHint());
  }
}
