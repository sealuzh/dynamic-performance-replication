/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 15:00:20 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter0 = new ClassWriter(1477);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 98);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter0 = new ClassWriter(1503);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 98);
      // Undeclared exception!
      try { 
        classReader0.readLabel(131072, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getSuperName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 189);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.copyPool(classWriter0);
      Label[] labelArray0 = new Label[1];
      classReader0.accept((ClassVisitor) classWriter0, 170);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-164), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.readInt(168);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      int int0 = classReader0.getItem(29);
      assertEquals(350, int0);
      
      classReader0.getAccess();
      long long0 = classReader0.readLong(350);
      assertEquals(33, classReader0.getAccess());
      assertEquals(10414737363841391L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      Attribute attribute0 = new Attribute("LocalVariableTypeTable");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter(17);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute3 = new Attribute(".:WJ2sBI>");
      attributeArray0[0] = attribute3;
      attributeArray0[2] = null;
      attributeArray0[3] = null;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 4333);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      Attribute attribute0 = new Attribute("LocalVariableTypeTable");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = attribute0.next;
      ClassWriter classWriter0 = new ClassWriter(17);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute attribute3 = new Attribute("ykG`#{");
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = null;
      attributeArray0[1] = null;
      attributeArray0[2] = attribute3;
      attributeArray0[3] = null;
      attributeArray0[4] = null;
      attributeArray0[5] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 17);
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = '?';
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, (-1148));
      charArray0[2] = '8';
      charArray0[3] = 'C';
      charArray0[4] = ';';
      charArray0[5] = 'W';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-830));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassReader");
      ClassWriter classWriter1 = new ClassWriter((-480));
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      Attribute attribute0 = new Attribute(".:WJ2sBI>");
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2172);
      char[] charArray0 = null;
      classReader0.readConst(classWriter0.COMPUTE_FRAMES, charArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classReader0.readUnsignedShort(154);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3187);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      Attribute attribute0 = new Attribute("LocalVariableTable");
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      // Undeclared exception!
      try { 
        classReader0.readConst(154, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 154
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.getClassName();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 609);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 1);
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = 'j';
      charArray0[2] = '~';
      charArray0[3] = 'b';
      // Undeclared exception!
      try { 
        classReader0.readConst(189, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 189
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 15);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, 697);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45977
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 333);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 1);
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(6892);
      classReader0.accept((ClassVisitor) classWriter0, 1161);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-830));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(2761);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute attribute0 = new Attribute("wheel.asm.ClassReader");
      Attribute[] attributeArray0 = new Attribute[4];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute0;
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 2900);
      classReader0.readConst(2172, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(589);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute attribute0 = new Attribute("contentEquals");
      Attribute attribute1 = new Attribute("startsWith");
      Attribute[] attributeArray0 = new Attribute[2];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 94);
      classReader0.readConst(3489, (char[]) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, 24);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classReader0.readUnsignedShort(24);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      Label[] labelArray0 = new Label[3];
      classReader0.readLabel(2, labelArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-830));
      Attribute attribute0 = new Attribute("FrfyIj0/F+7B&6+");
      Attribute attribute1 = new Attribute("FrfyIj0/F+7B&6+");
      Attribute attribute2 = new Attribute("aH=]uVg2@!CI>0ugyL");
      Attribute[] attributeArray0 = new Attribute[6];
      attributeArray0[0] = attribute1;
      attributeArray0[1] = attribute1;
      attributeArray0[2] = attribute0;
      Attribute attribute3 = attribute0.next;
      attributeArray0[3] = null;
      attributeArray0[4] = attribute0;
      attributeArray0[5] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, (-1254));
      char[] charArray0 = null;
      int int0 = 2542;
      classReader0.readConst(int0, charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-830));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassReader");
      ClassWriter classWriter1 = new ClassWriter(33);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      Attribute attribute0 = new Attribute(".:WJ2sBI>");
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 1);
      // Undeclared exception!
      try { 
        classReader0.readConst(12, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1895);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 46791
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.HiddenFileFilter");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(609);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter1 = new ClassWriter(32);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.HiddenFileFilter");
      classWriter1.addUninitializedType("org.apache.commons.io.filefilter.HiddenFileFilter", 8);
      classReader0.accept((ClassVisitor) classWriter1, (Attribute[]) null, 2172);
      Object object0 = new Object();
      int int0 = classReader0.readByte(2);
      assertEquals(186, int0);
  }
}
