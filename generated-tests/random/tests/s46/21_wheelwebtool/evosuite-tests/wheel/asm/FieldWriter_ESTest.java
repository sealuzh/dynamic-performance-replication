/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 08:06:14 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3525));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "]xFU:b1,\"R?", "Synthetic", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2387));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "short", "short", "short", "short");
      Attribute attribute0 = new Attribute("short");
      fieldWriter0.next = fieldWriter0;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.next.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.WildcardFileFilter", "p#dh(.O+~nBX+yh]%|", "p#dh(.O+~nBX+yh]%|", "9a1k;");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2387));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "short", "short", "short", "short");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1228), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "org.apache.commons.io.filefilter.FalseFileFilter", "JSR/RET are not supported with computeFrames option");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1228), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "org.apache.commons.io.filefilter.FalseFileFilter", "JSR/RET are not supported with computeFrames option");
      Attribute attribute0 = new Attribute("elx\u0003J^u)P]{");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1271);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "L0,1E[ ", "q/*%t!^ttlu^|", "K+>-!b5@^xCubhd#", "q/*%t!^ttlu^|");
      fieldWriter0.visitAnnotation("q/*%t!^ttlu^|", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1228), "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "org.apache.commons.io.filefilter.FalseFileFilter", "JSR/RET are not supported with computeFrames option");
      fieldWriter0.visitAnnotation("elx\u0003J^u)P]{", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3525));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "]xFU:b1,\"R?", "Synthetic", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2723);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2723, "", "", "", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2387));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "short", "short", "short", "short");
      fieldWriter0.visitEnd();
  }
}
