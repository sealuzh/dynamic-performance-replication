/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 15:59:08 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1230), (-3118), "Signature", "", "Signature", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3118), "", "5e", "Signature", (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1685));
      classWriter0.index = (-1685);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.Frame", "long", "wheel.asm.Frame", "long");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1230), (-3118), "Signature", "", "Signature", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3118), "", "5e", "Signature", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1685));
      classWriter0.index = (-1685);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.Frame", "long", "wheel.asm.Frame", "long");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212681);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", "org.apache.commons.io.filefilter.FileFileFilter", "5e", "=Y[)$z\"Dmg/JJvGV@:T");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "java/lang/Class", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1148);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3156, "c", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "A", "tSigKtYre", "tSigKtYre", "A");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      ByteVector byteVector0 = new ByteVector(1066);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      ByteVector byteVector1 = byteVector0.putByte(8);
      byteVector1.length = 3412;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 0, "ml", "ml", "eWi", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1148);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "^%V~rbTbJ{,[T^uFq", "org.apache.commons.io.filefilter.AgeFileFilter", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5086879d
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1148);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1148, "c", "Signature", "5e", "c");
      ByteVector byteVector0 = new ByteVector(1148);
      Attribute attribute0 = new Attribute("c");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "", "%ig;Gnature", "5e", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation(")/68>", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1148);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1148, "c", "Signature", "5e", "c");
      ByteVector byteVector0 = new ByteVector(1148);
      fieldWriter0.visitAnnotation("5e", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1148);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3156, "c", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1014);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "A", "tSi KtYrd", "tSi KtYrd", "A");
      ByteVector byteVector0 = new ByteVector(4207);
      classWriter0.version = 49;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "", "Signature", "5e", "");
      Attribute attribute0 = new Attribute("Signature");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1164);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1164, "", "Signature", "5e", "");
      fieldWriter0.visitAnnotation("Deprecated", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "A", "tSi KtYrd", "tSi KtYrd", "A");
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "", "%ig;Gnature", "5e", "");
      fieldWriter0.visitAnnotation(")/68>", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1155);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "SourceFile", "", (String) null, "5e");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "A", "tSi KtYrd", "tSi KtYrd", "A");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 49, "tSi KtYrd", "A", "tSi KtYrd", "tSi KtYrd");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4207);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4207, "A", "tSi KtYrd", "tSi KtYrd", "A");
      fieldWriter0.visitEnd();
  }
}
