/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:00:21 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      String string0 = regexp0.toString();
      assertEquals("\\A", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("^", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("(?s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.reinit();
      Object object0 = new Object();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      boolean boolean0 = regexp_Op0.isPseudo();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("(?-s:.)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp2;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      Regexp.Op regexp_Op2 = Regexp.Op.CHAR_CLASS;
      Regexp regexp3 = new Regexp(regexp_Op2);
      Regexp regexp4 = new Regexp(regexp_Op2);
      regexpArray0[4] = regexp4;
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      regexp1.reinit();
      regexp2.reinit();
      regexp1.max = 0;
      regexp1.equals(regexp2);
      regexp1.maxCap();
      regexp2.max = 0;
      regexp0.min = 1243;
      int[] intArray0 = new int[1];
      intArray0[0] = 1243;
      regexp2.min = 17;
      regexp2.runes = intArray0;
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      regexp0.reinit();
      int[] intArray0 = new int[8];
      intArray0[3] = 11361;
      Object object1 = new Object();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 972;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexp0.equals(regexp_Op0);
      regexp0.equals(regexp0);
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.reinit();
      regexp0.equals(regexp0);
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertNotNull(regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp0);
      Regexp.Op.values();
      String string0 = regexp0.name;
      Regexp regexp1 = null;
      try {
        regexp1 = new Regexp((Regexp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-2338);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp0.equals(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals(regexp_Op0);
      regexp0.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      regexp1.name = null;
      regexp2.cap = 28;
      regexp1.equals(regexp2);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(d7}&@UW*Z^?B]tAu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(d7}&@UW*Z^?B]tAu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp0.toString();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      Regexp.Op.values();
      String string0 = regexp0.name;
      Regexp regexp2 = null;
      Regexp regexp3 = null;
      try {
        regexp3 = new Regexp((Regexp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp1.reinit();
      regexp0.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp1.toString();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.equals(regexp0);
      regexp1.reinit();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-2354);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      regexp0.equals(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp1.subs = regexpArray0;
      Regexp.Op.values();
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp_Op1.isPseudo();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp1;
      regexpArray0[0].cap = (-1065);
      Object object0 = new Object();
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      regexp0.reinit();
      int[] intArray0 = new int[8];
      intArray0[3] = 11361;
      regexp0.runes = intArray0;
      int int0 = regexp0.flags;
      regexp0.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("[x00x00-\u2C61x00x00]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.[x00x00-\u2C61x00x00]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = (-1648);
      regexp0.equals(regexp1);
      Object object0 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp1);
      boolean boolean0 = regexp2.equals(regexp3);
      boolean boolean1 = regexp2.equals(regexp_Op1);
      assertTrue(boolean1 == boolean0);
      
      Regexp.Op.values();
      regexp2.reinit();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1648);
      intArray0[1] = (-1648);
      intArray0[2] = (-1648);
      intArray0[3] = 11361;
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp3;
      Regexp regexp4 = new Regexp(regexp_Op0);
      regexpArray0[1] = regexp4;
      regexpArray0[2] = regexp0;
      Regexp regexp5 = new Regexp(regexp3);
      regexpArray0[3] = regexp5;
      regexpArray0[4] = regexp2;
      regexpArray0[5] = regexp2;
      regexp1.subs = regexpArray0;
      intArray0[4] = (-1648);
      intArray0[5] = (-1648);
      intArray0[6] = (-1648);
      intArray0[7] = (-1648);
      regexp2.runes = intArray0;
      String string0 = regexp2.toString();
      assertEquals("[\\xfffff990\\xfffff990-\u2C61\\xfffff990\\xfffff990]", string0);
      
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op.values();
      regexp0.reinit();
      int[] intArray0 = new int[8];
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00", string0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp1;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      Regexp.Op.values();
      regexp0.reinit();
      int[] intArray0 = new int[9];
      intArray0[3] = 11361;
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexp0.runes = intArray0;
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.name = "k-BQ<Z*+_|fM.z^XHc";
      regexp2.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp.Op.values();
      Object object1 = new Object();
      regexp0.equals(object1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.maxCap();
      regexp1.flags = (-1621);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[2] = 0;
      regexp0.runes = intArray0;
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
      
      Regexp.Op.values();
      int int0 = regexp0.flags;
      String string0 = regexp0.name;
      int int1 = regexp0.maxCap();
      assertEquals(0, int1);
      
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      Object object0 = new Object();
      Regexp regexp2 = new Regexp(regexp0);
      assertTrue(regexp2.equals((Object)regexp0));
      
      String string1 = regexp1.toString();
      assertEquals("(?:\\x00\\x00\\x00)*", string1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 2386;
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp1.op = regexp_Op1;
      regexp0.equals(regexp2);
      regexp1.toString();
      regexp1.reinit();
      assertNotSame(regexp1, regexp2);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[2] = (-745);
      regexp0.runes = intArray0;
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.toString();
      Regexp.Op.values();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[3].flags = (-745);
      regexpArray0[4] = regexp1;
      regexp0.toString();
      String string0 = regexp1.name;
      regexp1.equals("x01x00xfffffd17");
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      regexp0.min = 11361;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Object object1 = new Object();
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.toString();
      Regexp regexp3 = new Regexp(regexp2);
      regexp2.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      regexp_Op1.isPseudo();
      regexp3.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Y-Zhxf/.di-[U}K)TX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Y-Zhxf/.di-[U}K)TX
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 2386;
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp1.op = regexp_Op1;
      regexp0.equals(regexp2);
      regexp1.toString();
      regexp1.reinit();
      assertNotSame(regexp1, regexp2);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp0);
      Object object0 = new Object();
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_LINE;
      Regexp regexp3 = new Regexp(regexp_Op2);
      boolean boolean0 = regexp1.equals(regexp3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexp1.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp0);
      Regexp.Op.values();
      Regexp regexp3 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      int[] intArray0 = new int[3];
      regexp0.runes = intArray0;
      Regexp.Op.values();
      int int0 = regexp0.flags;
      regexp0.toString();
      regexp0.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[10];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      regexp1.toString();
      // Undeclared exception!
      try { 
        regexp1.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp1.max = 1051;
      regexp1.equals(regexp0);
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      int[] intArray0 = new int[3];
      intArray0[2] = 0;
      regexp0.runes = intArray0;
      regexp_Op0.isPseudo();
      int int0 = regexp0.flags;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      Object object1 = new Object();
      Regexp regexp2 = new Regexp(regexp0);
      regexp1.toString();
      regexp2.toString();
      Regexp regexp3 = new Regexp(regexp1);
      regexpArray0[4].subs = regexp1.subs;
      Regexp regexp4 = new Regexp(regexp2);
      regexp0.toString();
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertNotNull(regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp0);
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp1;
      Regexp[] regexpArray1 = new Regexp[4];
      regexpArray1[0] = regexp1;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      regexpArray1[3] = regexp0;
      regexp0.subs = regexpArray1;
      regexpArray1[1].subs = regexp0.subs;
      Regexp.Op.values();
      Object object0 = new Object();
      Regexp regexp2 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }
}
