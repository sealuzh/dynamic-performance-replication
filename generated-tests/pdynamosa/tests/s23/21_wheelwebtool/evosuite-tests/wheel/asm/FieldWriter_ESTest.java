/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 09:41:44 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3075);
      classWriter0.index = (-1725);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "g^'gDu(", "", "Deprecated", "");
      ByteVector byteVector0 = new ByteVector(49);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3075);
      classWriter0.index = (-1725);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-712), "", "", "97miv\"1.Qk+KZH[", "g^'gDu(");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-77));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "hV[Wd> w,P", "1i6V]+Q*ia6}JO;&k", "1i6V]+Q*ia6}JO;&k");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-437));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1353), "", "EnclosingMethod", "WwR", "EnclosingMethod");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1269, "pI<0@", ".class", "^&6OmLy3N?3", "EnclosingMethod");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-406));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "WwR", "EnclosingMethod", "uHKD;y/iw'$4tW6kS4I", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2539375
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3083);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3083, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("'clI8_AD^lP8sECsD#d");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1452, "", "r z}uSxRdE", "", (Object) null);
      fieldWriter0.visitAnnotation("ConstantValue", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3083);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3083, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 504, "'~6Ta+PLU^.b V*", "r z}uSxRdE", (String) null, "'~6Ta+PLU^.b V*");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 268435455, "java/lang/Object", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^");
      classWriter0.version = 79;
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 268435455, "java/lang/Object", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3075);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3075, "De+precated", "De+precated", "De+precated", "De+precated");
      Attribute attribute0 = new Attribute("De+precated");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1452, "", "r z}uSxRdE", "", (Object) null);
      fieldWriter0.visitAnnotation("ConstantValue", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3083);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3083, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 268435455, "java/lang/Object", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^", "vTRi#;^RTyzy!\"\"^");
      classWriter0.version = 79;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 504, "'~6Ta+PLU^.b V*", "r z}uSxRdE", (String) null, "'~6Ta+PLU^.b V*");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3075);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3075, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "g^'gDu(", "", "Deprecated", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "Z)EL]H)dbfLt&.", "Z)EL]H)dbfLt&.", "Z)EL]H)dbfLt&.", "java/lang/Object");
      fieldWriter0.visitEnd();
  }
}
