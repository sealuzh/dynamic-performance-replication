/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:31:20 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.io.filefilter.AndFileFilter;
import org.apache.commons.io.filefilter.MagicNumberFileFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1790, 1790, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 1790);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1145), (-1145), fieldTypeByte0, (-1145), (-1145), (byte[]) null, byteOrder0, (-1145));
      tiffField0.getOversizeValueElement();
      tiffField0.getTag();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1268, 1268, fieldTypeShort0, 1268, 4L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1268, tiffField0.getDirectoryType());
      assertEquals(1268, int0);
      assertEquals(1268L, tiffField0.getCount());
      assertEquals(2536, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeAscii0, 9, 9, byteArray0, byteOrder0, (-1735));
      String string0 = tiffField0.getStringValue();
      assertEquals(9, tiffField0.getBytesLength());
      assertEquals((-1735), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[403];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@3d4f70ba
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-768), (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)14;
      TiffField tiffField0 = new TiffField(12, 2426, fieldTypeRational0, 2426, 391L, byteArray0, (ByteOrder) null, (byte)14);
      tiffField0.getIntArrayValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(2426L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertEquals(2426, tiffField0.getDirectoryType());
      assertEquals(19408, tiffField0.getBytesLength());
      assertEquals(391, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0", string0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis(78L);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), " (0x");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1458);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField((-2361), (-2361), fieldTypeAscii0, (-1), 78L, (byte[]) null, byteOrder0, (-1638));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " (0x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeDouble0, (-2431L), (-2431L), byteArray0, byteOrder0, (-1272));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(38, 526);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals((-2431), tiffField0.getOffset());
      assertEquals((-1272), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(38, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(568, 568, fieldTypeByte0, 568, 568, byteArray0, byteOrder0, 568);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(568, 3361);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(568, tiffField0.getDirectoryType());
      assertEquals(568, tiffField0.getOffset());
      assertEquals(568, tiffField0.getSortHint());
      assertEquals(568, tiffField0.getTag());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(12, "@@J,G`");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 240, fieldTypeRational0, 0L, 240, byteArray0, byteOrder0, 12);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(240, tiffField0.getOffset());
      assertEquals(240, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)29;
      byteArray0[3] = (byte)31;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, (-2618), fieldTypeRational0, (-2618), 0L, byteArray0, byteOrder0, (byte)60);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2618), tiffField0.getDirectoryType());
      assertEquals("GPSTrack", string0);
      assertEquals((-20944), tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getTag());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 40, fieldTypeAscii0, 9, 9, byteArray0, byteOrder0, (-1735));
      String string0 = tiffField0.getValueDescription();
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals((-1735), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldType fieldType0 = FieldType.getFieldType((byte)9);
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldType0, 1L, (byte)9, byteArray0, byteOrder0, (-1897));
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-1897), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)51;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeShort0, 7, 88L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(7L, tiffField0.getCount());
      assertEquals(14, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      fieldTypeAscii0.writeData(byteArray0, byteOrder0);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 7280L, 7280L, byteArray0, byteOrder0, (byte)16);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: \u0010 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2918, 3491, fieldTypeDouble0, 3491, 2918, (byte[]) null, byteOrder0, 2918);
      tiffField0.getFieldTypeName();
      int int0 = tiffField0.getSortHint();
      assertEquals(27928, tiffField0.getBytesLength());
      assertEquals(2918, tiffField0.getOffset());
      assertEquals(2918, int0);
      assertEquals(3491, tiffField0.getDirectoryType());
      assertEquals(2918, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-127);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeByte0, 513L, 10412L, byteArray0, byteOrder0, 2593);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@28479b17 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(1133L);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)42;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 21, fieldTypeLong0, 0L, 1133L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      tiffField0.getOversizeValueElement();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("Q", "l");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // l
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)1;
      byteArray0[3] = (byte)124;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 4, 4, byteArray0, (ByteOrder) null, 41728);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(32000, int0);
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(41728, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)50;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " for: ");
      byteArray0[6] = (byte)50;
      TiffField tiffField0 = new TiffField(42, 2136904910, fieldTypeByte0, 1L, 2136904910, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      tiffField0.getFieldType();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(42, tiffField0.getTag());
      assertEquals(2136904910, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2136904910, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)24;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(44, 40, fieldTypeLong0, 40, 2147483647L, byteArray0, byteOrder0, (byte)24);
      String string0 = tiffField0.getValueDescription();
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(160, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[255];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65537, "@@J,G`");
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65537, 20, fieldTypeRational0, 20, (-340L), byteArray0, byteOrder2, 29);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2083, fieldTypeRational0, 70L, (-1950L), byteArray0, byteOrder0, 2083);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      FieldTypeRational fieldTypeRational1 = FieldType.RATIONAL;
      int int0 = Long.BYTES;
      tiffField0.getCount();
      assertEquals(560, tiffField0.getBytesLength());
      assertEquals(2083, tiffField0.getDirectoryType());
      assertEquals(2083, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1950), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Hq9[B'}n8wS{~U^");
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)50;
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte)97;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-41);
      byteArray0[7] = (byte) (-128);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 44, fieldTypeShort0, 44, 1374L, byteArray0, byteOrder0, 3396);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {50, 219, 24834, 55168}, intArray0);
      assertEquals(3396, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getTag());
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(1374, tiffField0.getOffset());
      assertEquals(44, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2147164698, fieldTypeByte0, 22L, (-1L), byteArray0, byteOrder0, (byte)12);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@32f1ef7a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-106), fieldTypeLong0, (-1717986917), (-2147483648L), byteArray0, byteOrder0, (byte) (-106));
      assertEquals(1717986924, tiffField0.getBytesLength());
      
      tiffField0.getIntValueOrArraySum();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1717986917 (0x9999999b: Unknown Tag): ", string0);
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals((-106), tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1851), (-1851), fieldTypeFloat0, (-1851), (-1851), (byte[]) null, byteOrder0, (-1851));
      int int0 = Pattern.LITERAL;
      int int1 = tiffField0.getDirectoryType();
      assertEquals((-1851), tiffField0.getOffset());
      assertEquals((-1851), tiffField0.getSortHint());
      assertEquals((-1851), tiffField0.getTag());
      assertEquals((-1851), int1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(22, (String) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte) (-30);
      byteArray0[5] = (byte)103;
      byteArray0[6] = (byte)5;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0, 22, (-1L), byteArray0, byteOrder0, (byte)103);
      tiffField0.getDoubleArrayValue();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[241];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(25, 2538, fieldTypeDouble0, (byte)72, 65554, byteArray0, byteOrder0, (byte) (-123));
      String string0 = tiffField0.getValueDescription();
      assertEquals(65554, tiffField0.getOffset());
      assertEquals(25, tiffField0.getTag());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(2538, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeFloat0, 50721, 50721, byteArray0, byteOrder0, 50721);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50721, tiffField0.getOffset());
      assertEquals(50721, tiffField0.getSortHint());
      assertEquals(50721, tiffField0.getTag());
      assertEquals(50721, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-123);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E/M:VZOGr&)K2ztp");
      byteArray0[1] = (byte) (-67);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(770, 770, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(770, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(770, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-67);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(801, 801, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (byte) (-67));
      tiffField0.getDoubleArrayValue();
      assertEquals(801, tiffField0.getTag());
      assertEquals((-67), tiffField0.getSortHint());
      assertEquals(801, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1683), 261, fieldTypeRational0, 261, (-3450L), byteArray0, byteOrder0, 261);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[28];
      ByteOrder.nativeOrder();
      Object object0 = new Object();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2580), 10, fieldTypeRational0, 10, 10, byteArray0, byteOrder0, 10);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      
      FieldTypeRational fieldTypeRational1 = FieldType.RATIONAL;
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2580), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "r-?");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)49;
      TiffField tiffField0 = new TiffField(1, 2689, fieldTypeDouble0, 36, (-1L), byteArray0, byteOrder1, (-142));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2689, tiffField0.getDirectoryType());
      assertEquals((-142), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte) (-111);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.put(charArray0);
      ByteOrder byteOrder0 = charBuffer1.order();
      TiffField tiffField0 = new TiffField(50, 2829, fieldTypeFloat0, 2829, (-3500L), byteArray0, byteOrder0, (byte) (-5));
      tiffField0.getDoubleArrayValue();
      assertEquals(2829, tiffField0.getDirectoryType());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-3500), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-929), (String) null);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1395, (-929), byteArray0, byteOrder1, 1342);
      tiffField0.dump();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      tiffField0.getCount();
      tiffField0.getTagInfo();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1342, tiffField0.getSortHint());
      assertEquals((-929), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[151];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(35, 3251, fieldTypeByte0, 65531, (-1899L), byteArray0, byteOrder0, (-2810));
      tiffField0.dump();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = 65535;
      TiffField tiffField0 = new TiffField(46, 1395, fieldTypeFloat0.SHORT, 1395, 1395, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.getTagName();
      ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown Tag (0x2e)");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("46 (0x2e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (1395 Short)");
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("Unknown Tag (0x2e)");
      mockFileOutputStream1.getFD();
      ObjectOutputStream objectOutputStream0 = null;
      try {
        objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[255];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65537, "\t");
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65537, 65537, fieldTypeFloat0, 65537, 1206L, byteArray0, byteOrder0, 65537);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(65537, tiffField0.getTag());
      assertEquals(1206, tiffField0.getOffset());
      assertEquals(65537, tiffField0.getDirectoryType());
      assertEquals(65537, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"(yt-.22e|53G0fAtc");
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(18259, "\"(yt-.22e|53G0fAtc");
      Object object0 = new Object();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-365), 1426, fieldTypeLong0, 1070L, 1L, byteArray0, byteOrder0, 31);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals((-365), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1426, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[426];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34850, 772, fieldTypeDouble0, 2631L, 34850, byteArray0, byteOrder0, (-375));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
