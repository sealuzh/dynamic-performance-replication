/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 16:53:12 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4126);
      classWriter0.version = 4126;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4126, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1428));
      classWriter0.index = (-2905);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1428), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2008);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2008, "", "", "", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-786));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1439), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285, "", "r*", "K%`(S6~^6k", "");
      Attribute attribute0 = new Attribute("K%`(S6~^6k");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1429));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1429), "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 4096;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("wheel.asm.ClassWriter");
      byteVector1.length = 3979;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, ">[dKswr7y", (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.a`m.ClassW}iter", "wheel.a`m.ClassW}iter", "E){{/I}{Ue", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx", "p%JW9Ta0k$)mfx");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.OrFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1434));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1434), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1434));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1434), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1143), "C_D-{9YU4D<EVW+W3DP", "~Ze=2c,", (String) null, "p%JW9Ta0k$)mfx");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4126);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4126, "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "G:btglm+oN1bk8ty>`.", "G:btglm+oN1bk8ty>`.", "p%JW9Ta0k$)mfx", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2008);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2008, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1143), "C_D-{9YU4D<EVW+W3DP", "~Ze=2c,", (String) null, "p%JW9Ta0k$)mfx");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1428));
      classWriter0.version = (-1428);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1428), "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "G:btglm+oN1bk8ty>`.", "G:btglm+oN1bk8ty>`.", "p%JW9Ta0k$)mfx", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1434));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1434), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1434));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1434), "Deprecated", "Deprecated", "Deprecated", "Deprecated");
      fieldWriter0.visitAnnotation("Deprecated", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "G:btglm+oN1bk8ty>`.", "G:btglm+oN1bk8ty>`.", "p%JW9Ta0k$)mfx", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-556), "mb[n3^^", "mb[n3^^", "G:btglm+oN1bk8ty>`.", "gRoacOdg[i||#Nb?");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "", (String) null, "wheel.asm.ClassWriter");
      fieldWriter0.visitEnd();
  }
}
