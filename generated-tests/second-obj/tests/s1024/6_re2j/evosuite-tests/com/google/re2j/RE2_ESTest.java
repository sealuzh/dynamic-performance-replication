/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 10:09:47 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Deprecated");
      int[] intArray0 = rE2_0.findIndex("Deprecated");
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 10}, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = new RE2("}o~]>%%5*D");
      List<int[]> list0 = rE2_0.findAllIndex("}o~]>%%5*D", (byte)0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX(",3ulL/");
      List<String[]> list0 = rE2_0.findAllSubmatch("!XIZCb'mLE?[mf4", (byte) (-23));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("T2!drFT%vY]$O");
      rE2_0.find("T2!drFT%vY]$O");
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.reset();
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("So");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = new RE2("}o~]>%%5*D");
      List<int[]> list0 = rE2_0.findAllIndex("}o~]>%%5*D", (byte) (-34));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      List<String[]> list0 = rE2_0.findAllSubmatch("", 7);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = new RE2("0r!tWXpg");
      rE2_0.reset();
      assertEquals("0r!tWXpg", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("iX_'");
      int[] intArray0 = rE2_0.findSubmatchIndex("iX_'");
      assertArrayEquals(new int[] {0, 4}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<String> list0 = rE2_0.findAll("", (-1));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("O@I]v", 1932, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-82);
      List<int[]> list0 = rE2_0.findAllUTF8Index(byteArray0, (byte) (-82));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2.quoteMeta("");
      boolean boolean0 = RE2.match("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("CsaV<I/", 961, false);
      byte[] byteArray0 = new byte[0];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, 961);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      List<int[]> list0 = rE2_0.findAllIndex("", 43712);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("F'C");
      rE2_0.findAllSubmatch("F'C", (byte)106);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("UTF-8");
      rE2_0.findSubmatch("UTF-8");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = new RE2("SFHchNC");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 969);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 1954, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-49);
      rE2_0.findAllUTF8Index(byteArray0, (byte) (-49));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Noncharacter_Code_Point");
      rE2_0.findAllSubmatchIndex("Qm1StjKH72", 43712);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Nj>*4");
      rE2_0.findIndex("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("<*");
      rE2_0.replaceFirst("<*", "<*");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("9sTq");
      rE2_0.replaceAll("9sTq", "9sTq");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("Greek", 6, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-66);
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("ALT");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 409);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX(";hl7BtAM3]*fgl");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8SubmatchIndex(byteArray0);
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("T2!drFT%vPuY]$O");
      rE2_0.findSubmatchIndex("|");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("F]mTL");
      Machine machine0 = new Machine(rE2_0);
      rE2_0.findAllSubmatchIndex("F]mTL", 1270);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceFirst("gxT02g", "gxT02g");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = new int[1];
      intArray0[0] = 649;
      RE2 rE2_0 = RE2.compilePOSIX("^");
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 649);
      rE2_0.get();
      rE2_0.match("I'gS=;O@]l,Ehc-BD~", 6005, 649, 6005, intArray0, 649);
      RE2.compile("%{");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 597, true);
      rE2_0.findAll("N", 597);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllUTF8Submatch(byteArray0, 3844);
      // Undeclared exception!
      try { 
        rE2_0.replaceFirst((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Tai_Viet");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("UYF-8");
      rE2_0.findSubmatch("xG&.GJ:I=!NQ");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2.match("Oriya", "oTir!");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Noncharacter_Xode_Poit");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = new RE2("missing argument to repetition operator");
      int[] intArray0 = new int[1];
      intArray0[0] = (-1680);
      rE2_0.match("missing argument to repetition operator", 316, (-1680), 1527, intArray0, 1527);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Old_Soush_ArVbian");
      rE2_0.findAll("F", 88);
      Machine machine0 = new Machine(rE2_0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[1];
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)19;
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2.quoteMeta("ebb)<O4S'ut<");
      try { 
        RE2.match("ebb)<O4S'ut<", "ebb)<O4S'ut<");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: regexp/syntax: internal error: `stack underflow`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.find("");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("&o/");
      rE2_0.findAllIndex("9Eee0[WQE", 3392);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 3392;
      intArray0[5] = 12;
      rE2_0.match("9Eee0[WQE", 1, 3392, 3392, intArray0, 3392);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.reset();
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte)15;
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      rE2_0.findAllUTF8(byteArray1, 972);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("<*");
      rE2_0.replaceAll("<*", "<*");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "";
      RE2 rE2_0 = RE2.compile("");
      byte byte0 = (byte)0;
      RE2 rE2_1 = RE2.compileImpl("", (byte)0, true);
      rE2_1.match("");
      rE2_0.get();
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        rE2_0.match("", (byte)0, (byte)0, 3844, intArray0, 3844);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[6];
      rE2_0.findUTF8Submatch(byteArray0);
      boolean boolean0 = rE2_0.longest;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      RE2.compilePOSIX("");
      RE2.compile("");
      RE2.quoteMeta("");
      rE2_0.prefixComplete = true;
      rE2_0.findAllUTF8Submatch(byteArray1, (byte)0);
      rE2_0.findSubmatch("\u0005>");
      rE2_0.reset();
      RE2 rE2_1 = RE2.compile("");
      rE2_1.prefixComplete = true;
      rE2_0.findSubmatch("");
      rE2_0.match("\u0005>", (byte)0, 553, 12334, (int[]) null, (byte)0);
      rE2_0.findAllSubmatchIndex("", (byte)0);
      boolean boolean1 = rE2_0.longest;
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("|Cr");
      RE2 rE2_1 = RE2.compile("|Cr");
      RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllIndex("|Cr", 1762);
      rE2_1.findAllUTF8Submatch(byteArray0, 553);
      rE2_0.findSubmatchIndex("|Cr");
  }
}
